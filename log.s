warning: the feature `specialization` is incomplete and may not be safe to use and/or cause compiler crashes
 --> examples/simple_rtic.rs:3:35
  |
3 | #![feature(type_alias_impl_trait, specialization)]
  |                                   ^^^^^^^^^^^^^^
  |
  = note: see issue #31844 <https://github.com/rust-lang/rust/issues/31844> for more information
  = help: consider using `min_specialization` instead, which is more stable and complete
  = note: `#[warn(incomplete_features)]` on by default

warning: unused import: `embedded_hal::digital::InputPin`
   --> examples/simple_rtic.rs:100:9
    |
100 |     use embedded_hal::digital::InputPin;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Gpio22`, `Gpio25`, and `SioInput`
   --> examples/simple_rtic.rs:114:52
    |
114 |             bank0::{Gpio11, Gpio12, Gpio13, Gpio2, Gpio22, Gpio25, Gpio3},
    |                                                    ^^^^^^  ^^^^^^
115 |             FunctionSio, Pins, PullDown, SioInput, SioOutput,
    |                                          ^^^^^^^^

warning: unused import: `symex_lib::symbolic`
   --> examples/simple_rtic.rs:120:9
    |
120 |     use symex_lib::symbolic;
    |         ^^^^^^^^^^^^^^^^^^^

warning: unused import: `rp_pico::hal::fugit::ExtU32`
   --> examples/simple_rtic.rs:104:9
    |
104 |     use rp_pico::hal::fugit::ExtU32;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `clocks`
   --> examples/simple_rtic.rs:168:13
    |
168 |         let clocks = clocks::init_clocks_and_plls(
    |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_clocks`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: type alias `Led1` is never used
   --> examples/simple_rtic.rs:136:10
    |
136 |     type Led1 = gpio::Pin<Gpio13, FunctionSio<SioOutput>, PullDown>;
    |          ^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: type alias `Led2` is never used
   --> examples/simple_rtic.rs:137:10
    |
137 |     type Led2 = gpio::Pin<Gpio12, FunctionSio<SioOutput>, PullDown>;
    |          ^^^^

warning: type alias `Led3` is never used
   --> examples/simple_rtic.rs:138:10
    |
138 |     type Led3 = gpio::Pin<Gpio11, FunctionSio<SioOutput>, PullDown>;
    |          ^^^^


simple_rtic:	file format elf32-littlearm

Disassembly of section .text:

100001c0 <__stext>:
100001c0: f00b ff7e    	bl	0x1000c0c0 <__pre_init> @ imm = #0xbefc
100001c4: 4808         	ldr	r0, [pc, #0x20]         @ 0x100001e8 <__stext+0x28>
100001c6: 4909         	ldr	r1, [pc, #0x24]         @ 0x100001ec <__stext+0x2c>
100001c8: 2200         	movs	r2, #0x0
100001ca: 4281         	cmp	r1, r0
100001cc: d001         	beq	0x100001d2 <__stext+0x12> @ imm = #0x2
100001ce: c004         	stm	r0!, {r2}
100001d0: e7fb         	b	0x100001ca <__stext+0xa> @ imm = #-0xa
100001d2: 4807         	ldr	r0, [pc, #0x1c]         @ 0x100001f0 <__stext+0x30>
100001d4: 4907         	ldr	r1, [pc, #0x1c]         @ 0x100001f4 <__stext+0x34>
100001d6: 4a08         	ldr	r2, [pc, #0x20]         @ 0x100001f8 <__stext+0x38>
100001d8: 4281         	cmp	r1, r0
100001da: d002         	beq	0x100001e2 <__stext+0x22> @ imm = #0x4
100001dc: ca08         	ldm	r2!, {r3}
100001de: c008         	stm	r0!, {r3}
100001e0: e7fa         	b	0x100001d8 <__stext+0x18> @ imm = #-0xc
100001e2: f004 f9c1    	bl	0x10004568 <main>       @ imm = #0x4382
100001e6: de00         	udf	#0x0
100001e8: f0 fb 03 20  	.word	0x2003fbf0
100001ec: fc fb 03 20  	.word	0x2003fbfc
100001f0: b0 fb 03 20  	.word	0x2003fbb0
100001f4: f0 fb 03 20  	.word	0x2003fbf0
100001f8: 50 29 01 10  	.word	0x10012950

100001fc <<rp2040_hal::gpio::func::FunctionNull as rp2040_hal::gpio::func::func_sealed::Function>::as_dyn::h23e12c99a2650681>:
100001fc: b580         	push	{r7, lr}
100001fe: af00         	add	r7, sp, #0x0
10000200: b082         	sub	sp, #0x8
10000202: 9001         	str	r0, [sp, #0x4]
10000204: 4669         	mov	r1, sp
10000206: 200c         	movs	r0, #0xc
10000208: 7008         	strb	r0, [r1]
1000020a: 9800         	ldr	r0, [sp]
1000020c: b002         	add	sp, #0x8
1000020e: bd80         	pop	{r7, pc}

10000210 <<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check::h58d65beb6583d8af>:
10000210: b580         	push	{r7, lr}
10000212: af00         	add	r7, sp, #0x0
10000214: b086         	sub	sp, #0x18
10000216: 9201         	str	r2, [sp, #0x4]
10000218: 9102         	str	r1, [sp, #0x8]
1000021a: 9003         	str	r0, [sp, #0xc]
1000021c: 9104         	str	r1, [sp, #0x10]
1000021e: 9205         	str	r2, [sp, #0x14]
10000220: 4281         	cmp	r1, r0
10000222: d204         	bhs	0x1000022e <<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check::h58d65beb6583d8af+0x1e> @ imm = #0x8
10000224: e7ff         	b	0x10000226 <<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check::h58d65beb6583d8af+0x16> @ imm = #-0x2
10000226: 4805         	ldr	r0, [pc, #0x14]         @ 0x1000023c <<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check::h58d65beb6583d8af+0x2c>
10000228: 21da         	movs	r1, #0xda
1000022a: f00c f8d9    	bl	0x1000c3e0 <core::panicking::panic_nounwind::h6901392fec1083b6> @ imm = #0xc1b2
1000022e: 9802         	ldr	r0, [sp, #0x8]
10000230: 9901         	ldr	r1, [sp, #0x4]
10000232: 4288         	cmp	r0, r1
10000234: d8f7         	bhi	0x10000226 <<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check::h58d65beb6583d8af+0x16> @ imm = #-0x12
10000236: e7ff         	b	0x10000238 <<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check::h58d65beb6583d8af+0x28> @ imm = #-0x2
10000238: b006         	add	sp, #0x18
1000023a: bd80         	pop	{r7, pc}
1000023c: b8 db 00 10  	.word	0x1000dbb8

10000240 <rp2040_hal::atomic_register_access::write_bitmask_set::ha8a2bf848d842ee6>:
10000240: b580         	push	{r7, lr}
10000242: af00         	add	r7, sp, #0x0
10000244: b086         	sub	sp, #0x18
10000246: 9101         	str	r1, [sp, #0x4]
10000248: 4601         	mov	r1, r0
1000024a: 9801         	ldr	r0, [sp, #0x4]
1000024c: 9103         	str	r1, [sp, #0xc]
1000024e: 9004         	str	r0, [sp, #0x10]
10000250: 2001         	movs	r0, #0x1
10000252: 0340         	lsls	r0, r0, #0xd
10000254: 1808         	adds	r0, r1, r0
10000256: 9002         	str	r0, [sp, #0x8]
10000258: 4288         	cmp	r0, r1
1000025a: d307         	blo	0x1000026c <rp2040_hal::atomic_register_access::write_bitmask_set::ha8a2bf848d842ee6+0x2c> @ imm = #0xe
1000025c: e7ff         	b	0x1000025e <rp2040_hal::atomic_register_access::write_bitmask_set::ha8a2bf848d842ee6+0x1e> @ imm = #-0x2
1000025e: 9901         	ldr	r1, [sp, #0x4]
10000260: 9802         	ldr	r0, [sp, #0x8]
10000262: 9005         	str	r0, [sp, #0x14]
10000264: f00b ff9a    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0xbf34
10000268: b006         	add	sp, #0x18
1000026a: bd80         	pop	{r7, pc}
1000026c: 4801         	ldr	r0, [pc, #0x4]          @ 0x10000274 <rp2040_hal::atomic_register_access::write_bitmask_set::ha8a2bf848d842ee6+0x34>
1000026e: f00d f8df    	bl	0x1000d430 <core::panicking::panic_const::panic_const_add_overflow::h73b6e802431fc142> @ imm = #0xd1be
10000272: 46c0         	mov	r8, r8
10000274: 04 dd 00 10  	.word	0x1000dd04

10000278 <rp2040_hal::atomic_register_access::write_bitmask_clear::h5025f393d230555a>:
10000278: b580         	push	{r7, lr}
1000027a: af00         	add	r7, sp, #0x0
1000027c: b086         	sub	sp, #0x18
1000027e: 9101         	str	r1, [sp, #0x4]
10000280: 4601         	mov	r1, r0
10000282: 9801         	ldr	r0, [sp, #0x4]
10000284: 9103         	str	r1, [sp, #0xc]
10000286: 9004         	str	r0, [sp, #0x10]
10000288: 2003         	movs	r0, #0x3
1000028a: 0300         	lsls	r0, r0, #0xc
1000028c: 1808         	adds	r0, r1, r0
1000028e: 9002         	str	r0, [sp, #0x8]
10000290: 4288         	cmp	r0, r1
10000292: d307         	blo	0x100002a4 <rp2040_hal::atomic_register_access::write_bitmask_clear::h5025f393d230555a+0x2c> @ imm = #0xe
10000294: e7ff         	b	0x10000296 <rp2040_hal::atomic_register_access::write_bitmask_clear::h5025f393d230555a+0x1e> @ imm = #-0x2
10000296: 9901         	ldr	r1, [sp, #0x4]
10000298: 9802         	ldr	r0, [sp, #0x8]
1000029a: 9005         	str	r0, [sp, #0x14]
1000029c: f00b ff7e    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0xbefc
100002a0: b006         	add	sp, #0x18
100002a2: bd80         	pop	{r7, pc}
100002a4: 4801         	ldr	r0, [pc, #0x4]          @ 0x100002ac <rp2040_hal::atomic_register_access::write_bitmask_clear::h5025f393d230555a+0x34>
100002a6: f00d f8c3    	bl	0x1000d430 <core::panicking::panic_const::panic_const_add_overflow::h73b6e802431fc142> @ imm = #0xd186
100002aa: 46c0         	mov	r8, r8
100002ac: 14 dd 00 10  	.word	0x1000dd14

100002b0 <rp2040_hal::gpio::Pin<I,F,P>::into_function::h3158c20af0845642>:
100002b0: b580         	push	{r7, lr}
100002b2: af00         	add	r7, sp, #0x0
100002b4: b086         	sub	sp, #0x18
100002b6: a802         	add	r0, sp, #0x8
100002b8: f7ff ffa0    	bl	0x100001fc <<rp2040_hal::gpio::func::FunctionNull as rp2040_hal::gpio::func::func_sealed::Function>::as_dyn::h23e12c99a2650681> @ imm = #-0xc0
100002bc: a903         	add	r1, sp, #0xc
100002be: 9101         	str	r1, [sp, #0x4]
100002c0: 7008         	strb	r0, [r1]
100002c2: 9803         	ldr	r0, [sp, #0xc]
100002c4: f000 fda3    	bl	0x10000e0e <<rp2040_hal::gpio::func::FunctionSio<C> as rp2040_hal::gpio::func::func_sealed::Function>::from::ha81f40c7a944c9a5> @ imm = #0xb46
100002c8: a804         	add	r0, sp, #0x10
100002ca: f000 fdb1    	bl	0x10000e30 <<rp2040_hal::gpio::func::FunctionSio<C> as rp2040_hal::gpio::func::func_sealed::Function>::as_dyn::haa6b5a42bf8230a2> @ imm = #0xb62
100002ce: 4602         	mov	r2, r0
100002d0: 9801         	ldr	r0, [sp, #0x4]
100002d2: a905         	add	r1, sp, #0x14
100002d4: 700a         	strb	r2, [r1]
100002d6: f000 ff8a    	bl	0x100011ee <core::cmp::PartialEq::ne::h666d04005e67d501> @ imm = #0xf14
100002da: 2800         	cmp	r0, #0x0
100002dc: d102         	bne	0x100002e4 <rp2040_hal::gpio::Pin<I,F,P>::into_function::h3158c20af0845642+0x34> @ imm = #0x4
100002de: e7ff         	b	0x100002e0 <rp2040_hal::gpio::Pin<I,F,P>::into_function::h3158c20af0845642+0x30> @ imm = #-0x2
100002e0: b006         	add	sp, #0x18
100002e2: bd80         	pop	{r7, pc}
100002e4: 9905         	ldr	r1, [sp, #0x14]
100002e6: a802         	add	r0, sp, #0x8
100002e8: f000 f900    	bl	0x100004ec <rp2040_hal::gpio::pin::set_function::h9a295c6329488bdd> @ imm = #0x200
100002ec: e7f8         	b	0x100002e0 <rp2040_hal::gpio::Pin<I,F,P>::into_function::h3158c20af0845642+0x30> @ imm = #-0x10

100002ee <rp2040_hal::gpio::Pin<I,F,P>::into_function::h792157d334cc1d3b>:
100002ee: b580         	push	{r7, lr}
100002f0: af00         	add	r7, sp, #0x0
100002f2: b086         	sub	sp, #0x18
100002f4: a802         	add	r0, sp, #0x8
100002f6: f7ff ff81    	bl	0x100001fc <<rp2040_hal::gpio::func::FunctionNull as rp2040_hal::gpio::func::func_sealed::Function>::as_dyn::h23e12c99a2650681> @ imm = #-0xfe
100002fa: a903         	add	r1, sp, #0xc
100002fc: 9101         	str	r1, [sp, #0x4]
100002fe: 7008         	strb	r0, [r1]
10000300: 9803         	ldr	r0, [sp, #0xc]
10000302: f000 fd7d    	bl	0x10000e00 <<rp2040_hal::gpio::func::FunctionSio<C> as rp2040_hal::gpio::func::func_sealed::Function>::from::h535dbebc6a567b08> @ imm = #0xafa
10000306: a804         	add	r0, sp, #0x10
10000308: f000 fd88    	bl	0x10000e1c <<rp2040_hal::gpio::func::FunctionSio<C> as rp2040_hal::gpio::func::func_sealed::Function>::as_dyn::h23edb71aeec5e55d> @ imm = #0xb10
1000030c: 4602         	mov	r2, r0
1000030e: 9801         	ldr	r0, [sp, #0x4]
10000310: a905         	add	r1, sp, #0x14
10000312: 700a         	strb	r2, [r1]
10000314: f000 ff6b    	bl	0x100011ee <core::cmp::PartialEq::ne::h666d04005e67d501> @ imm = #0xed6
10000318: 2800         	cmp	r0, #0x0
1000031a: d102         	bne	0x10000322 <rp2040_hal::gpio::Pin<I,F,P>::into_function::h792157d334cc1d3b+0x34> @ imm = #0x4
1000031c: e7ff         	b	0x1000031e <rp2040_hal::gpio::Pin<I,F,P>::into_function::h792157d334cc1d3b+0x30> @ imm = #-0x2
1000031e: b006         	add	sp, #0x18
10000320: bd80         	pop	{r7, pc}
10000322: 9905         	ldr	r1, [sp, #0x14]
10000324: a802         	add	r0, sp, #0x8
10000326: f000 fa0d    	bl	0x10000744 <rp2040_hal::gpio::pin::set_function::ha309f482a26cf8c1> @ imm = #0x41a
1000032a: e7f8         	b	0x1000031e <rp2040_hal::gpio::Pin<I,F,P>::into_function::h792157d334cc1d3b+0x30> @ imm = #-0x10

1000032c <rp2040_hal::gpio::Pin<I,F,P>::into_pull_type::hb3a0b590e79d7e1e>:
1000032c: b580         	push	{r7, lr}
1000032e: af00         	add	r7, sp, #0x0
10000330: b086         	sub	sp, #0x18
10000332: a802         	add	r0, sp, #0x8
10000334: f00b f917    	bl	0x1000b566 <<rp2040_hal::gpio::pull::PullDown as rp2040_hal::gpio::pull::pull_sealed::PullType>::as_dyn::h1158ba87f242af5b> @ imm = #0xb22e
10000338: a903         	add	r1, sp, #0xc
1000033a: 9101         	str	r1, [sp, #0x4]
1000033c: 7008         	strb	r0, [r1]
1000033e: 9803         	ldr	r0, [sp, #0xc]
10000340: f00b f90a    	bl	0x1000b558 <<rp2040_hal::gpio::pull::PullDown as rp2040_hal::gpio::pull::pull_sealed::PullType>::from::h504018fbb4edbe1d> @ imm = #0xb214
10000344: a804         	add	r0, sp, #0x10
10000346: f00b f90e    	bl	0x1000b566 <<rp2040_hal::gpio::pull::PullDown as rp2040_hal::gpio::pull::pull_sealed::PullType>::as_dyn::h1158ba87f242af5b> @ imm = #0xb21c
1000034a: 4602         	mov	r2, r0
1000034c: 9801         	ldr	r0, [sp, #0x4]
1000034e: a905         	add	r1, sp, #0x14
10000350: 700a         	strb	r2, [r1]
10000352: f000 ff57    	bl	0x10001204 <core::cmp::PartialEq::ne::h67a65f5fb613986a> @ imm = #0xeae
10000356: 2800         	cmp	r0, #0x0
10000358: d102         	bne	0x10000360 <rp2040_hal::gpio::Pin<I,F,P>::into_pull_type::hb3a0b590e79d7e1e+0x34> @ imm = #0x4
1000035a: e7ff         	b	0x1000035c <rp2040_hal::gpio::Pin<I,F,P>::into_pull_type::hb3a0b590e79d7e1e+0x30> @ imm = #-0x2
1000035c: b006         	add	sp, #0x18
1000035e: bd80         	pop	{r7, pc}
10000360: 9905         	ldr	r1, [sp, #0x14]
10000362: a802         	add	r0, sp, #0x8
10000364: f000 fc54    	bl	0x10000c10 <rp2040_hal::gpio::pin::set_pull_type::he23fa2ea393e99e4> @ imm = #0x8a8
10000368: e7f8         	b	0x1000035c <rp2040_hal::gpio::Pin<I,F,P>::into_pull_type::hb3a0b590e79d7e1e+0x30> @ imm = #-0x10

1000036a <rp2040_hal::gpio::Pin<I,F,P>::into_pull_down_input::h2b79fb9ac69004a8>:
1000036a: b580         	push	{r7, lr}
1000036c: af00         	add	r7, sp, #0x0
1000036e: b082         	sub	sp, #0x8
10000370: f7ff ffbd    	bl	0x100002ee <rp2040_hal::gpio::Pin<I,F,P>::into_function::h792157d334cc1d3b> @ imm = #-0x86
10000374: f7ff ffda    	bl	0x1000032c <rp2040_hal::gpio::Pin<I,F,P>::into_pull_type::hb3a0b590e79d7e1e> @ imm = #-0x4c
10000378: b002         	add	sp, #0x8
1000037a: bd80         	pop	{r7, pc}

1000037c <rp2040_hal::gpio::Pin<I,F,P>::into_push_pull_output::hf3b3ab3a05ab57a6>:
1000037c: b580         	push	{r7, lr}
1000037e: af00         	add	r7, sp, #0x0
10000380: b082         	sub	sp, #0x8
10000382: f7ff ff95    	bl	0x100002b0 <rp2040_hal::gpio::Pin<I,F,P>::into_function::h3158c20af0845642> @ imm = #-0xd6
10000386: b002         	add	sp, #0x8
10000388: bd80         	pop	{r7, pc}
1000038a: d4d4         	bmi	0x10000336 <rp2040_hal::gpio::Pin<I,F,P>::into_pull_type::hb3a0b590e79d7e1e+0xa> @ imm = #-0x58

1000038c <rp2040_hal::gpio::Pin<I,F,P>::set_interrupt_enabled::hbade4e9bf7925c69>:
1000038c: b580         	push	{r7, lr}
1000038e: af00         	add	r7, sp, #0x0
10000390: b092         	sub	sp, #0x48
10000392: 9204         	str	r2, [sp, #0x10]
10000394: 9000         	str	r0, [sp]
10000396: ab06         	add	r3, sp, #0x18
10000398: 9301         	str	r3, [sp, #0x4]
1000039a: 7019         	strb	r1, [r3]
1000039c: 9007         	str	r0, [sp, #0x1c]
1000039e: a808         	add	r0, sp, #0x20
100003a0: 7002         	strb	r2, [r0]
100003a2: f008 fc97    	bl	0x10008cd4 <rp2040_hal::sio::Sio::core::h96af296b85c54a41> @ imm = #0x892e
100003a6: 4601         	mov	r1, r0
100003a8: 9800         	ldr	r0, [sp]
100003aa: f001 ff21    	bl	0x100021f0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::proc_inte::h2c567fd7275313d9> @ imm = #0x1e42
100003ae: 4602         	mov	r2, r0
100003b0: 9801         	ldr	r0, [sp, #0x4]
100003b2: 4613         	mov	r3, r2
100003b4: 9302         	str	r3, [sp, #0x8]
100003b6: 460b         	mov	r3, r1
100003b8: 9303         	str	r3, [sp, #0xc]
100003ba: 9209         	str	r2, [sp, #0x24]
100003bc: 910a         	str	r1, [sp, #0x28]
100003be: f007 fbf1    	bl	0x10007ba4 <rp2040_hal::gpio::Interrupt::mask::hb23e29b796f550a4> @ imm = #0x77e2
100003c2: 9a04         	ldr	r2, [sp, #0x10]
100003c4: 4601         	mov	r1, r0
100003c6: 9105         	str	r1, [sp, #0x14]
100003c8: 900b         	str	r0, [sp, #0x2c]
100003ca: 2a00         	cmp	r2, #0x0
100003cc: d108         	bne	0x100003e0 <rp2040_hal::gpio::Pin<I,F,P>::set_interrupt_enabled::hbade4e9bf7925c69+0x54> @ imm = #0x10
100003ce: e7ff         	b	0x100003d0 <rp2040_hal::gpio::Pin<I,F,P>::set_interrupt_enabled::hbade4e9bf7925c69+0x44> @ imm = #-0x2
100003d0: 9803         	ldr	r0, [sp, #0xc]
100003d2: 9902         	ldr	r1, [sp, #0x8]
100003d4: 910d         	str	r1, [sp, #0x34]
100003d6: 910e         	str	r1, [sp, #0x38]
100003d8: 910f         	str	r1, [sp, #0x3c]
100003da: 2820         	cmp	r0, #0x20
100003dc: d308         	blo	0x100003f0 <rp2040_hal::gpio::Pin<I,F,P>::set_interrupt_enabled::hbade4e9bf7925c69+0x64> @ imm = #0x10
100003de: e010         	b	0x10000402 <rp2040_hal::gpio::Pin<I,F,P>::set_interrupt_enabled::hbade4e9bf7925c69+0x76> @ imm = #0x20
100003e0: 9803         	ldr	r0, [sp, #0xc]
100003e2: 9902         	ldr	r1, [sp, #0x8]
100003e4: 910c         	str	r1, [sp, #0x30]
100003e6: 9110         	str	r1, [sp, #0x40]
100003e8: 9111         	str	r1, [sp, #0x44]
100003ea: 2820         	cmp	r0, #0x20
100003ec: d30e         	blo	0x1000040c <rp2040_hal::gpio::Pin<I,F,P>::set_interrupt_enabled::hbade4e9bf7925c69+0x80> @ imm = #0x1c
100003ee: e016         	b	0x1000041e <rp2040_hal::gpio::Pin<I,F,P>::set_interrupt_enabled::hbade4e9bf7925c69+0x92> @ imm = #0x2c
100003f0: 9802         	ldr	r0, [sp, #0x8]
100003f2: 9905         	ldr	r1, [sp, #0x14]
100003f4: 9a03         	ldr	r2, [sp, #0xc]
100003f6: 231f         	movs	r3, #0x1f
100003f8: 401a         	ands	r2, r3
100003fa: 4091         	lsls	r1, r2
100003fc: f7ff ff3c    	bl	0x10000278 <rp2040_hal::atomic_register_access::write_bitmask_clear::h5025f393d230555a> @ imm = #-0x188
10000400: e002         	b	0x10000408 <rp2040_hal::gpio::Pin<I,F,P>::set_interrupt_enabled::hbade4e9bf7925c69+0x7c> @ imm = #0x4
10000402: 4808         	ldr	r0, [pc, #0x20]         @ 0x10000424 <rp2040_hal::gpio::Pin<I,F,P>::set_interrupt_enabled::hbade4e9bf7925c69+0x98>
10000404: f00d f84a    	bl	0x1000d49c <core::panicking::panic_const::panic_const_shl_overflow::h42afea46a5d11e4a> @ imm = #0xd094
10000408: b012         	add	sp, #0x48
1000040a: bd80         	pop	{r7, pc}
1000040c: 9802         	ldr	r0, [sp, #0x8]
1000040e: 9905         	ldr	r1, [sp, #0x14]
10000410: 9a03         	ldr	r2, [sp, #0xc]
10000412: 231f         	movs	r3, #0x1f
10000414: 401a         	ands	r2, r3
10000416: 4091         	lsls	r1, r2
10000418: f7ff ff12    	bl	0x10000240 <rp2040_hal::atomic_register_access::write_bitmask_set::ha8a2bf848d842ee6> @ imm = #-0x1dc
1000041c: e7f4         	b	0x10000408 <rp2040_hal::gpio::Pin<I,F,P>::set_interrupt_enabled::hbade4e9bf7925c69+0x7c> @ imm = #-0x18
1000041e: 4802         	ldr	r0, [pc, #0x8]          @ 0x10000428 <rp2040_hal::gpio::Pin<I,F,P>::set_interrupt_enabled::hbade4e9bf7925c69+0x9c>
10000420: f00d f83c    	bl	0x1000d49c <core::panicking::panic_const::panic_const_shl_overflow::h42afea46a5d11e4a> @ imm = #0xd078
10000424: 88 dd 00 10  	.word	0x1000dd88
10000428: 98 dd 00 10  	.word	0x1000dd98

1000042c <rp2040_hal::gpio::Pin<I,F,P>::_set_low::hcce8f4909c816b8d>:
1000042c: b580         	push	{r7, lr}
1000042e: af00         	add	r7, sp, #0x0
10000430: b08c         	sub	sp, #0x30
10000432: 9000         	str	r0, [sp]
10000434: 9005         	str	r0, [sp, #0x14]
10000436: f001 fd17    	bl	0x10001e68 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::mask::h254d74b02b0cae54> @ imm = #0x1a2e
1000043a: 4601         	mov	r1, r0
1000043c: 9800         	ldr	r0, [sp]
1000043e: 9104         	str	r1, [sp, #0x10]
10000440: f001 fcd2    	bl	0x10001de8 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_out_clr::h6563b5b48f38d2c8> @ imm = #0x19a4
10000444: 9003         	str	r0, [sp, #0xc]
10000446: 9007         	str	r0, [sp, #0x1c]
10000448: a804         	add	r0, sp, #0x10
1000044a: 9002         	str	r0, [sp, #0x8]
1000044c: 9008         	str	r0, [sp, #0x20]
1000044e: 2000         	movs	r0, #0x0
10000450: 9001         	str	r0, [sp, #0x4]
10000452: f000 fd1a    	bl	0x10000e8a <<u32 as core::ops::bit::Not>::not::h922d2d19093bc4d3> @ imm = #0xa34
10000456: 4601         	mov	r1, r0
10000458: 9801         	ldr	r0, [sp, #0x4]
1000045a: f000 fe4b    	bl	0x100010f4 <<u32 as core::ops::bit::BitAnd>::bitand::ha5903953a49e11fb> @ imm = #0xc96
1000045e: 9901         	ldr	r1, [sp, #0x4]
10000460: f000 fe40    	bl	0x100010e4 <<u32 as core::ops::bit::BitOr>::bitor::hc19b6201bc9ccf34> @ imm = #0xc80
10000464: 4601         	mov	r1, r0
10000466: 9802         	ldr	r0, [sp, #0x8]
10000468: 9106         	str	r1, [sp, #0x18]
1000046a: a906         	add	r1, sp, #0x18
1000046c: f000 f80a    	bl	0x10000484 <rp2040_hal::gpio::Pin<I,F,P>::_set_low::{{closure}}::h0fe4b6631e982a2a> @ imm = #0x14
10000470: 4601         	mov	r1, r0
10000472: 9803         	ldr	r0, [sp, #0xc]
10000474: 6809         	ldr	r1, [r1]
10000476: 9009         	str	r0, [sp, #0x24]
10000478: 910a         	str	r1, [sp, #0x28]
1000047a: 900b         	str	r0, [sp, #0x2c]
1000047c: f00b fe8e    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0xbd1c
10000480: b00c         	add	sp, #0x30
10000482: bd80         	pop	{r7, pc}

10000484 <rp2040_hal::gpio::Pin<I,F,P>::_set_low::{{closure}}::h0fe4b6631e982a2a>:
10000484: b580         	push	{r7, lr}
10000486: af00         	add	r7, sp, #0x0
10000488: b08c         	sub	sp, #0x30
1000048a: 460a         	mov	r2, r1
1000048c: 9003         	str	r0, [sp, #0xc]
1000048e: 9204         	str	r2, [sp, #0x10]
10000490: 9205         	str	r2, [sp, #0x14]
10000492: 9206         	str	r2, [sp, #0x18]
10000494: a807         	add	r0, sp, #0x1c
10000496: 2100         	movs	r1, #0x0
10000498: 7001         	strb	r1, [r0]
1000049a: 9803         	ldr	r0, [sp, #0xc]
1000049c: 6800         	ldr	r0, [r0]
1000049e: 9001         	str	r0, [sp, #0x4]
100004a0: 9208         	str	r2, [sp, #0x20]
100004a2: aa08         	add	r2, sp, #0x20
100004a4: 7111         	strb	r1, [r2, #0x4]
100004a6: 900a         	str	r0, [sp, #0x28]
100004a8: 9808         	ldr	r0, [sp, #0x20]
100004aa: 9000         	str	r0, [sp]
100004ac: f000 fc7a    	bl	0x10000da4 <rp2040_pac::generic::mask_u32::h52497df11b8509d6> @ imm = #0x8f4
100004b0: 9909         	ldr	r1, [sp, #0x24]
100004b2: f001 fb43    	bl	0x10001b3c <<u32 as core::ops::bit::Shl<u8>>::shl::h812542cec0b8c163> @ imm = #0x1686
100004b6: f000 fce8    	bl	0x10000e8a <<u32 as core::ops::bit::Not>::not::h922d2d19093bc4d3> @ imm = #0x9d0
100004ba: 4601         	mov	r1, r0
100004bc: 9800         	ldr	r0, [sp]
100004be: f001 fb31    	bl	0x10001b24 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h3e991570dd1d70a7> @ imm = #0x1662
100004c2: 9801         	ldr	r0, [sp, #0x4]
100004c4: 9908         	ldr	r1, [sp, #0x20]
100004c6: 9102         	str	r1, [sp, #0x8]
100004c8: 900b         	str	r0, [sp, #0x2c]
100004ca: f000 fc6b    	bl	0x10000da4 <rp2040_pac::generic::mask_u32::h52497df11b8509d6> @ imm = #0x8d6
100004ce: 4601         	mov	r1, r0
100004d0: 9801         	ldr	r0, [sp, #0x4]
100004d2: f000 fe0f    	bl	0x100010f4 <<u32 as core::ops::bit::BitAnd>::bitand::ha5903953a49e11fb> @ imm = #0xc1e
100004d6: 9909         	ldr	r1, [sp, #0x24]
100004d8: f001 fb30    	bl	0x10001b3c <<u32 as core::ops::bit::Shl<u8>>::shl::h812542cec0b8c163> @ imm = #0x1660
100004dc: 4601         	mov	r1, r0
100004de: 9802         	ldr	r0, [sp, #0x8]
100004e0: f001 fb14    	bl	0x10001b0c <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::h780b01b4b3989778> @ imm = #0x1628
100004e4: 9808         	ldr	r0, [sp, #0x20]
100004e6: b00c         	add	sp, #0x30
100004e8: bd80         	pop	{r7, pc}
100004ea: d4d4         	bmi	0x10000496 <rp2040_hal::gpio::Pin<I,F,P>::_set_low::{{closure}}::h0fe4b6631e982a2a+0x12> @ imm = #-0x58

100004ec <rp2040_hal::gpio::pin::set_function::h9a295c6329488bdd>:
100004ec: b580         	push	{r7, lr}
100004ee: af00         	add	r7, sp, #0x0
100004f0: b0c2         	sub	sp, #0x108
100004f2: 9012         	str	r0, [sp, #0x48]
100004f4: aa15         	add	r2, sp, #0x54
100004f6: 7011         	strb	r1, [r2]
100004f8: 9019         	str	r0, [sp, #0x64]
100004fa: 9815         	ldr	r0, [sp, #0x54]
100004fc: 1e80         	subs	r0, r0, #0x2
100004fe: b2c0         	uxtb	r0, r0
10000500: 2105         	movs	r1, #0x5
10000502: 9113         	str	r1, [sp, #0x4c]
10000504: 280b         	cmp	r0, #0xb
10000506: 9014         	str	r0, [sp, #0x50]
10000508: d301         	blo	0x1000050e <rp2040_hal::gpio::pin::set_function::h9a295c6329488bdd+0x22> @ imm = #0x2
1000050a: 9813         	ldr	r0, [sp, #0x4c]
1000050c: 9014         	str	r0, [sp, #0x50]
1000050e: 9814         	ldr	r0, [sp, #0x50]
10000510: 9011         	str	r0, [sp, #0x44]
10000512: 9811         	ldr	r0, [sp, #0x44]
10000514: 0081         	lsls	r1, r0, #0x2
10000516: a001         	adr	r0, #4 <rp2040_hal::gpio::pin::set_function::h9a295c6329488bdd+0x2f>
10000518: 5840         	ldr	r0, [r0, r1]
1000051a: 4687         	mov	pc, r0
1000051c: 4b 05 00 10  	.word	0x1000054b
10000520: 53 05 00 10  	.word	0x10000553
10000524: 5b 05 00 10  	.word	0x1000055b
10000528: 63 05 00 10  	.word	0x10000563
1000052c: 6b 05 00 10  	.word	0x1000056b
10000530: 73 05 00 10  	.word	0x10000573
10000534: 91 05 00 10  	.word	0x10000591
10000538: 99 05 00 10  	.word	0x10000599
1000053c: a1 05 00 10  	.word	0x100005a1
10000540: a9 05 00 10  	.word	0x100005a9
10000544: b1 05 00 10  	.word	0x100005b1
10000548: defe         	trap
1000054a: a916         	add	r1, sp, #0x58
1000054c: 2000         	movs	r0, #0x0
1000054e: 7008         	strb	r0, [r1]
10000550: e032         	b	0x100005b8 <rp2040_hal::gpio::pin::set_function::h9a295c6329488bdd+0xcc> @ imm = #0x64
10000552: a916         	add	r1, sp, #0x58
10000554: 2001         	movs	r0, #0x1
10000556: 7008         	strb	r0, [r1]
10000558: e02e         	b	0x100005b8 <rp2040_hal::gpio::pin::set_function::h9a295c6329488bdd+0xcc> @ imm = #0x5c
1000055a: a916         	add	r1, sp, #0x58
1000055c: 2002         	movs	r0, #0x2
1000055e: 7008         	strb	r0, [r1]
10000560: e02a         	b	0x100005b8 <rp2040_hal::gpio::pin::set_function::h9a295c6329488bdd+0xcc> @ imm = #0x54
10000562: a916         	add	r1, sp, #0x58
10000564: 2003         	movs	r0, #0x3
10000566: 7008         	strb	r0, [r1]
10000568: e026         	b	0x100005b8 <rp2040_hal::gpio::pin::set_function::h9a295c6329488bdd+0xcc> @ imm = #0x4c
1000056a: a916         	add	r1, sp, #0x58
1000056c: 2004         	movs	r0, #0x4
1000056e: 7008         	strb	r0, [r1]
10000570: e022         	b	0x100005b8 <rp2040_hal::gpio::pin::set_function::h9a295c6329488bdd+0xcc> @ imm = #0x44
10000572: 9812         	ldr	r0, [sp, #0x48]
10000574: 9915         	ldr	r1, [sp, #0x54]
10000576: aa17         	add	r2, sp, #0x5c
10000578: 9210         	str	r2, [sp, #0x40]
1000057a: 7011         	strb	r1, [r2]
1000057c: f001 fc74    	bl	0x10001e68 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::mask::h254d74b02b0cae54> @ imm = #0x18e8
10000580: 4601         	mov	r1, r0
10000582: 9810         	ldr	r0, [sp, #0x40]
10000584: 9118         	str	r1, [sp, #0x60]
10000586: 7800         	ldrb	r0, [r0]
10000588: 07c0         	lsls	r0, r0, #0x1f
1000058a: 2800         	cmp	r0, #0x0
1000058c: d01b         	beq	0x100005c6 <rp2040_hal::gpio::pin::set_function::h9a295c6329488bdd+0xda> @ imm = #0x36
1000058e: e03c         	b	0x1000060a <rp2040_hal::gpio::pin::set_function::h9a295c6329488bdd+0x11e> @ imm = #0x78
10000590: a916         	add	r1, sp, #0x58
10000592: 2006         	movs	r0, #0x6
10000594: 7008         	strb	r0, [r1]
10000596: e00f         	b	0x100005b8 <rp2040_hal::gpio::pin::set_function::h9a295c6329488bdd+0xcc> @ imm = #0x1e
10000598: a916         	add	r1, sp, #0x58
1000059a: 2007         	movs	r0, #0x7
1000059c: 7008         	strb	r0, [r1]
1000059e: e00b         	b	0x100005b8 <rp2040_hal::gpio::pin::set_function::h9a295c6329488bdd+0xcc> @ imm = #0x16
100005a0: a916         	add	r1, sp, #0x58
100005a2: 2008         	movs	r0, #0x8
100005a4: 7008         	strb	r0, [r1]
100005a6: e007         	b	0x100005b8 <rp2040_hal::gpio::pin::set_function::h9a295c6329488bdd+0xcc> @ imm = #0xe
100005a8: a916         	add	r1, sp, #0x58
100005aa: 2009         	movs	r0, #0x9
100005ac: 7008         	strb	r0, [r1]
100005ae: e003         	b	0x100005b8 <rp2040_hal::gpio::pin::set_function::h9a295c6329488bdd+0xcc> @ imm = #0x6
100005b0: a916         	add	r1, sp, #0x58
100005b2: 201f         	movs	r0, #0x1f
100005b4: 7008         	strb	r0, [r1]
100005b6: e7ff         	b	0x100005b8 <rp2040_hal::gpio::pin::set_function::h9a295c6329488bdd+0xcc> @ imm = #-0x2
100005b8: 4961         	ldr	r1, [pc, #0x184]        @ 0x10000740 <rp2040_hal::gpio::pin::set_function::h9a295c6329488bdd+0x254>
100005ba: a816         	add	r0, sp, #0x58
100005bc: f000 fe2d    	bl	0x1000121a <core::cmp::PartialEq::ne::hea4d3e7e978441a8> @ imm = #0xc5a
100005c0: 2800         	cmp	r0, #0x0
100005c2: d16d         	bne	0x100006a0 <rp2040_hal::gpio::pin::set_function::h9a295c6329488bdd+0x1b4> @ imm = #0xda
100005c4: e047         	b	0x10000656 <rp2040_hal::gpio::pin::set_function::h9a295c6329488bdd+0x16a> @ imm = #0x8e
100005c6: 9812         	ldr	r0, [sp, #0x48]
100005c8: f001 fb6e    	bl	0x10001ca8 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_oe_clr::h2ce0619782b658d6> @ imm = #0x16dc
100005cc: 900f         	str	r0, [sp, #0x3c]
100005ce: 901e         	str	r0, [sp, #0x78]
100005d0: a818         	add	r0, sp, #0x60
100005d2: 900e         	str	r0, [sp, #0x38]
100005d4: 901f         	str	r0, [sp, #0x7c]
100005d6: 2000         	movs	r0, #0x0
100005d8: 900d         	str	r0, [sp, #0x34]
100005da: f000 fc56    	bl	0x10000e8a <<u32 as core::ops::bit::Not>::not::h922d2d19093bc4d3> @ imm = #0x8ac
100005de: 4601         	mov	r1, r0
100005e0: 980d         	ldr	r0, [sp, #0x34]
100005e2: f000 fd87    	bl	0x100010f4 <<u32 as core::ops::bit::BitAnd>::bitand::ha5903953a49e11fb> @ imm = #0xb0e
100005e6: 990d         	ldr	r1, [sp, #0x34]
100005e8: f000 fd7c    	bl	0x100010e4 <<u32 as core::ops::bit::BitOr>::bitor::hc19b6201bc9ccf34> @ imm = #0xaf8
100005ec: 4601         	mov	r1, r0
100005ee: 980e         	ldr	r0, [sp, #0x38]
100005f0: 911d         	str	r1, [sp, #0x74]
100005f2: a91d         	add	r1, sp, #0x74
100005f4: f000 fa34    	bl	0x10000a60 <rp2040_hal::gpio::pin::set_function::{{closure}}::h92672be701dab917> @ imm = #0x468
100005f8: 4601         	mov	r1, r0
100005fa: 980f         	ldr	r0, [sp, #0x3c]
100005fc: 6809         	ldr	r1, [r1]
100005fe: 903c         	str	r0, [sp, #0xf0]
10000600: 913d         	str	r1, [sp, #0xf4]
10000602: 903e         	str	r0, [sp, #0xf8]
10000604: f00b fdca    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0xbb94
10000608: e021         	b	0x1000064e <rp2040_hal::gpio::pin::set_function::h9a295c6329488bdd+0x162> @ imm = #0x42
1000060a: 9812         	ldr	r0, [sp, #0x48]
1000060c: f001 fb9c    	bl	0x10001d48 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_oe_set::h76759ac06de69ca2> @ imm = #0x1738
10000610: 900c         	str	r0, [sp, #0x30]
10000612: 901b         	str	r0, [sp, #0x6c]
10000614: a818         	add	r0, sp, #0x60
10000616: 900b         	str	r0, [sp, #0x2c]
10000618: 901c         	str	r0, [sp, #0x70]
1000061a: 2000         	movs	r0, #0x0
1000061c: 900a         	str	r0, [sp, #0x28]
1000061e: f000 fc34    	bl	0x10000e8a <<u32 as core::ops::bit::Not>::not::h922d2d19093bc4d3> @ imm = #0x868
10000622: 4601         	mov	r1, r0
10000624: 980a         	ldr	r0, [sp, #0x28]
10000626: f000 fd65    	bl	0x100010f4 <<u32 as core::ops::bit::BitAnd>::bitand::ha5903953a49e11fb> @ imm = #0xaca
1000062a: 990a         	ldr	r1, [sp, #0x28]
1000062c: f000 fd5a    	bl	0x100010e4 <<u32 as core::ops::bit::BitOr>::bitor::hc19b6201bc9ccf34> @ imm = #0xab4
10000630: 4601         	mov	r1, r0
10000632: 980b         	ldr	r0, [sp, #0x2c]
10000634: 911a         	str	r1, [sp, #0x68]
10000636: a91a         	add	r1, sp, #0x68
10000638: f000 fadb    	bl	0x10000bf2 <rp2040_hal::gpio::pin::set_function::{{closure}}::hfc0a3ea6c7a09877> @ imm = #0x5b6
1000063c: 4601         	mov	r1, r0
1000063e: 980c         	ldr	r0, [sp, #0x30]
10000640: 6809         	ldr	r1, [r1]
10000642: 903f         	str	r0, [sp, #0xfc]
10000644: 9140         	str	r1, [sp, #0x100]
10000646: 9041         	str	r0, [sp, #0x104]
10000648: f00b fda8    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0xbb50
1000064c: e7ff         	b	0x1000064e <rp2040_hal::gpio::pin::set_function::h9a295c6329488bdd+0x162> @ imm = #-0x2
1000064e: a916         	add	r1, sp, #0x58
10000650: 2005         	movs	r0, #0x5
10000652: 7008         	strb	r0, [r1]
10000654: e7b0         	b	0x100005b8 <rp2040_hal::gpio::pin::set_function::h9a295c6329488bdd+0xcc> @ imm = #-0xa0
10000656: 9812         	ldr	r0, [sp, #0x48]
10000658: f001 fcba    	bl	0x10001fd0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48> @ imm = #0x1974
1000065c: 9009         	str	r0, [sp, #0x24]
1000065e: 9022         	str	r0, [sp, #0x88]
10000660: 9031         	str	r0, [sp, #0xc4]
10000662: 9032         	str	r0, [sp, #0xc8]
10000664: f00b fd2f    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0xba5e
10000668: 9007         	str	r0, [sp, #0x1c]
1000066a: 9023         	str	r0, [sp, #0x8c]
1000066c: 9020         	str	r0, [sp, #0x80]
1000066e: 2000         	movs	r0, #0x0
10000670: 9008         	str	r0, [sp, #0x20]
10000672: f000 fc0a    	bl	0x10000e8a <<u32 as core::ops::bit::Not>::not::h922d2d19093bc4d3> @ imm = #0x814
10000676: 4601         	mov	r1, r0
10000678: 9807         	ldr	r0, [sp, #0x1c]
1000067a: f000 fd3b    	bl	0x100010f4 <<u32 as core::ops::bit::BitAnd>::bitand::ha5903953a49e11fb> @ imm = #0xa76
1000067e: 9908         	ldr	r1, [sp, #0x20]
10000680: f000 fd30    	bl	0x100010e4 <<u32 as core::ops::bit::BitOr>::bitor::hc19b6201bc9ccf34> @ imm = #0xa60
10000684: 9021         	str	r0, [sp, #0x84]
10000686: a820         	add	r0, sp, #0x80
10000688: a921         	add	r1, sp, #0x84
1000068a: f000 f9c7    	bl	0x10000a1c <rp2040_hal::gpio::pin::set_function::{{closure}}::h8bd9a9ab9c04bb70> @ imm = #0x38e
1000068e: 4601         	mov	r1, r0
10000690: 9809         	ldr	r0, [sp, #0x24]
10000692: 6809         	ldr	r1, [r1]
10000694: 9039         	str	r0, [sp, #0xe4]
10000696: 913a         	str	r1, [sp, #0xe8]
10000698: 903b         	str	r0, [sp, #0xec]
1000069a: f00b fd7f    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0xbafe
1000069e: e024         	b	0x100006ea <rp2040_hal::gpio::pin::set_function::h9a295c6329488bdd+0x1fe> @ imm = #0x48
100006a0: 9812         	ldr	r0, [sp, #0x48]
100006a2: f001 fc95    	bl	0x10001fd0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48> @ imm = #0x192a
100006a6: 9006         	str	r0, [sp, #0x18]
100006a8: 9026         	str	r0, [sp, #0x98]
100006aa: 902f         	str	r0, [sp, #0xbc]
100006ac: 9030         	str	r0, [sp, #0xc0]
100006ae: f00b fd0a    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0xba14
100006b2: 9004         	str	r0, [sp, #0x10]
100006b4: 9027         	str	r0, [sp, #0x9c]
100006b6: 9024         	str	r0, [sp, #0x90]
100006b8: 2000         	movs	r0, #0x0
100006ba: 9005         	str	r0, [sp, #0x14]
100006bc: f000 fbe5    	bl	0x10000e8a <<u32 as core::ops::bit::Not>::not::h922d2d19093bc4d3> @ imm = #0x7ca
100006c0: 4601         	mov	r1, r0
100006c2: 9804         	ldr	r0, [sp, #0x10]
100006c4: f000 fd16    	bl	0x100010f4 <<u32 as core::ops::bit::BitAnd>::bitand::ha5903953a49e11fb> @ imm = #0xa2c
100006c8: 9905         	ldr	r1, [sp, #0x14]
100006ca: f000 fd0b    	bl	0x100010e4 <<u32 as core::ops::bit::BitOr>::bitor::hc19b6201bc9ccf34> @ imm = #0xa16
100006ce: 9025         	str	r0, [sp, #0x94]
100006d0: a824         	add	r0, sp, #0x90
100006d2: a925         	add	r1, sp, #0x94
100006d4: f000 fa4d    	bl	0x10000b72 <rp2040_hal::gpio::pin::set_function::{{closure}}::he0add1a8070974a2> @ imm = #0x49a
100006d8: 4601         	mov	r1, r0
100006da: 9806         	ldr	r0, [sp, #0x18]
100006dc: 6809         	ldr	r1, [r1]
100006de: 9036         	str	r0, [sp, #0xd8]
100006e0: 9137         	str	r1, [sp, #0xdc]
100006e2: 9038         	str	r0, [sp, #0xe0]
100006e4: f00b fd5a    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0xbab4
100006e8: e7ff         	b	0x100006ea <rp2040_hal::gpio::pin::set_function::h9a295c6329488bdd+0x1fe> @ imm = #-0x2
100006ea: 9812         	ldr	r0, [sp, #0x48]
100006ec: f001 fc22    	bl	0x10001f34 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::io_ctrl::h6e52738b7f3db4ba> @ imm = #0x1844
100006f0: 9003         	str	r0, [sp, #0xc]
100006f2: 902a         	str	r0, [sp, #0xa8]
100006f4: a916         	add	r1, sp, #0x58
100006f6: 9102         	str	r1, [sp, #0x8]
100006f8: 912b         	str	r1, [sp, #0xac]
100006fa: 902d         	str	r0, [sp, #0xb4]
100006fc: 902e         	str	r0, [sp, #0xb8]
100006fe: f00b fce2    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0xb9c4
10000702: 9000         	str	r0, [sp]
10000704: 902c         	str	r0, [sp, #0xb0]
10000706: 9028         	str	r0, [sp, #0xa0]
10000708: 2000         	movs	r0, #0x0
1000070a: 9001         	str	r0, [sp, #0x4]
1000070c: f000 fbbd    	bl	0x10000e8a <<u32 as core::ops::bit::Not>::not::h922d2d19093bc4d3> @ imm = #0x77a
10000710: 4601         	mov	r1, r0
10000712: 9800         	ldr	r0, [sp]
10000714: f000 fcee    	bl	0x100010f4 <<u32 as core::ops::bit::BitAnd>::bitand::ha5903953a49e11fb> @ imm = #0x9dc
10000718: 9901         	ldr	r1, [sp, #0x4]
1000071a: f000 fce3    	bl	0x100010e4 <<u32 as core::ops::bit::BitOr>::bitor::hc19b6201bc9ccf34> @ imm = #0x9c6
1000071e: 4601         	mov	r1, r0
10000720: 9802         	ldr	r0, [sp, #0x8]
10000722: 9129         	str	r1, [sp, #0xa4]
10000724: a928         	add	r1, sp, #0xa0
10000726: aa29         	add	r2, sp, #0xa4
10000728: f000 f9e6    	bl	0x10000af8 <rp2040_hal::gpio::pin::set_function::{{closure}}::hd736d089d71a78df> @ imm = #0x3cc
1000072c: 4601         	mov	r1, r0
1000072e: 9803         	ldr	r0, [sp, #0xc]
10000730: 6809         	ldr	r1, [r1]
10000732: 9033         	str	r0, [sp, #0xcc]
10000734: 9134         	str	r1, [sp, #0xd0]
10000736: 9035         	str	r0, [sp, #0xd4]
10000738: f00b fd30    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0xba60
1000073c: b042         	add	sp, #0x108
1000073e: bd80         	pop	{r7, pc}
10000740: a8 dd 00 10  	.word	0x1000dda8

10000744 <rp2040_hal::gpio::pin::set_function::ha309f482a26cf8c1>:
10000744: b580         	push	{r7, lr}
10000746: af00         	add	r7, sp, #0x0
10000748: b0c2         	sub	sp, #0x108
1000074a: 9012         	str	r0, [sp, #0x48]
1000074c: aa15         	add	r2, sp, #0x54
1000074e: 7011         	strb	r1, [r2]
10000750: 9019         	str	r0, [sp, #0x64]
10000752: 9815         	ldr	r0, [sp, #0x54]
10000754: 1e80         	subs	r0, r0, #0x2
10000756: b2c0         	uxtb	r0, r0
10000758: 2105         	movs	r1, #0x5
1000075a: 9113         	str	r1, [sp, #0x4c]
1000075c: 280b         	cmp	r0, #0xb
1000075e: 9014         	str	r0, [sp, #0x50]
10000760: d301         	blo	0x10000766 <rp2040_hal::gpio::pin::set_function::ha309f482a26cf8c1+0x22> @ imm = #0x2
10000762: 9813         	ldr	r0, [sp, #0x4c]
10000764: 9014         	str	r0, [sp, #0x50]
10000766: 9814         	ldr	r0, [sp, #0x50]
10000768: 9011         	str	r0, [sp, #0x44]
1000076a: 9811         	ldr	r0, [sp, #0x44]
1000076c: 0081         	lsls	r1, r0, #0x2
1000076e: a001         	adr	r0, #4 <rp2040_hal::gpio::pin::set_function::ha309f482a26cf8c1+0x2f>
10000770: 5840         	ldr	r0, [r0, r1]
10000772: 4687         	mov	pc, r0
10000774: a3 07 00 10  	.word	0x100007a3
10000778: ab 07 00 10  	.word	0x100007ab
1000077c: b3 07 00 10  	.word	0x100007b3
10000780: bb 07 00 10  	.word	0x100007bb
10000784: c3 07 00 10  	.word	0x100007c3
10000788: cb 07 00 10  	.word	0x100007cb
1000078c: e9 07 00 10  	.word	0x100007e9
10000790: f1 07 00 10  	.word	0x100007f1
10000794: f9 07 00 10  	.word	0x100007f9
10000798: 01 08 00 10  	.word	0x10000801
1000079c: 09 08 00 10  	.word	0x10000809
100007a0: defe         	trap
100007a2: a916         	add	r1, sp, #0x58
100007a4: 2000         	movs	r0, #0x0
100007a6: 7008         	strb	r0, [r1]
100007a8: e032         	b	0x10000810 <rp2040_hal::gpio::pin::set_function::ha309f482a26cf8c1+0xcc> @ imm = #0x64
100007aa: a916         	add	r1, sp, #0x58
100007ac: 2001         	movs	r0, #0x1
100007ae: 7008         	strb	r0, [r1]
100007b0: e02e         	b	0x10000810 <rp2040_hal::gpio::pin::set_function::ha309f482a26cf8c1+0xcc> @ imm = #0x5c
100007b2: a916         	add	r1, sp, #0x58
100007b4: 2002         	movs	r0, #0x2
100007b6: 7008         	strb	r0, [r1]
100007b8: e02a         	b	0x10000810 <rp2040_hal::gpio::pin::set_function::ha309f482a26cf8c1+0xcc> @ imm = #0x54
100007ba: a916         	add	r1, sp, #0x58
100007bc: 2003         	movs	r0, #0x3
100007be: 7008         	strb	r0, [r1]
100007c0: e026         	b	0x10000810 <rp2040_hal::gpio::pin::set_function::ha309f482a26cf8c1+0xcc> @ imm = #0x4c
100007c2: a916         	add	r1, sp, #0x58
100007c4: 2004         	movs	r0, #0x4
100007c6: 7008         	strb	r0, [r1]
100007c8: e022         	b	0x10000810 <rp2040_hal::gpio::pin::set_function::ha309f482a26cf8c1+0xcc> @ imm = #0x44
100007ca: 9812         	ldr	r0, [sp, #0x48]
100007cc: 9915         	ldr	r1, [sp, #0x54]
100007ce: aa17         	add	r2, sp, #0x5c
100007d0: 9210         	str	r2, [sp, #0x40]
100007d2: 7011         	strb	r1, [r2]
100007d4: f001 fb30    	bl	0x10001e38 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::mask::h097e2160afeea3fb> @ imm = #0x1660
100007d8: 4601         	mov	r1, r0
100007da: 9810         	ldr	r0, [sp, #0x40]
100007dc: 9118         	str	r1, [sp, #0x60]
100007de: 7800         	ldrb	r0, [r0]
100007e0: 07c0         	lsls	r0, r0, #0x1f
100007e2: 2800         	cmp	r0, #0x0
100007e4: d01b         	beq	0x1000081e <rp2040_hal::gpio::pin::set_function::ha309f482a26cf8c1+0xda> @ imm = #0x36
100007e6: e03c         	b	0x10000862 <rp2040_hal::gpio::pin::set_function::ha309f482a26cf8c1+0x11e> @ imm = #0x78
100007e8: a916         	add	r1, sp, #0x58
100007ea: 2006         	movs	r0, #0x6
100007ec: 7008         	strb	r0, [r1]
100007ee: e00f         	b	0x10000810 <rp2040_hal::gpio::pin::set_function::ha309f482a26cf8c1+0xcc> @ imm = #0x1e
100007f0: a916         	add	r1, sp, #0x58
100007f2: 2007         	movs	r0, #0x7
100007f4: 7008         	strb	r0, [r1]
100007f6: e00b         	b	0x10000810 <rp2040_hal::gpio::pin::set_function::ha309f482a26cf8c1+0xcc> @ imm = #0x16
100007f8: a916         	add	r1, sp, #0x58
100007fa: 2008         	movs	r0, #0x8
100007fc: 7008         	strb	r0, [r1]
100007fe: e007         	b	0x10000810 <rp2040_hal::gpio::pin::set_function::ha309f482a26cf8c1+0xcc> @ imm = #0xe
10000800: a916         	add	r1, sp, #0x58
10000802: 2009         	movs	r0, #0x9
10000804: 7008         	strb	r0, [r1]
10000806: e003         	b	0x10000810 <rp2040_hal::gpio::pin::set_function::ha309f482a26cf8c1+0xcc> @ imm = #0x6
10000808: a916         	add	r1, sp, #0x58
1000080a: 201f         	movs	r0, #0x1f
1000080c: 7008         	strb	r0, [r1]
1000080e: e7ff         	b	0x10000810 <rp2040_hal::gpio::pin::set_function::ha309f482a26cf8c1+0xcc> @ imm = #-0x2
10000810: 4961         	ldr	r1, [pc, #0x184]        @ 0x10000998 <rp2040_hal::gpio::pin::set_function::ha309f482a26cf8c1+0x254>
10000812: a816         	add	r0, sp, #0x58
10000814: f000 fd01    	bl	0x1000121a <core::cmp::PartialEq::ne::hea4d3e7e978441a8> @ imm = #0xa02
10000818: 2800         	cmp	r0, #0x0
1000081a: d16d         	bne	0x100008f8 <rp2040_hal::gpio::pin::set_function::ha309f482a26cf8c1+0x1b4> @ imm = #0xda
1000081c: e047         	b	0x100008ae <rp2040_hal::gpio::pin::set_function::ha309f482a26cf8c1+0x16a> @ imm = #0x8e
1000081e: 9812         	ldr	r0, [sp, #0x48]
10000820: f001 fa6a    	bl	0x10001cf8 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_oe_clr::h7497cb030aaac4d1> @ imm = #0x14d4
10000824: 900f         	str	r0, [sp, #0x3c]
10000826: 901b         	str	r0, [sp, #0x6c]
10000828: a818         	add	r0, sp, #0x60
1000082a: 900e         	str	r0, [sp, #0x38]
1000082c: 901c         	str	r0, [sp, #0x70]
1000082e: 2000         	movs	r0, #0x0
10000830: 900d         	str	r0, [sp, #0x34]
10000832: f000 fb2a    	bl	0x10000e8a <<u32 as core::ops::bit::Not>::not::h922d2d19093bc4d3> @ imm = #0x654
10000836: 4601         	mov	r1, r0
10000838: 980d         	ldr	r0, [sp, #0x34]
1000083a: f000 fc5b    	bl	0x100010f4 <<u32 as core::ops::bit::BitAnd>::bitand::ha5903953a49e11fb> @ imm = #0x8b6
1000083e: 990d         	ldr	r1, [sp, #0x34]
10000840: f000 fc50    	bl	0x100010e4 <<u32 as core::ops::bit::BitOr>::bitor::hc19b6201bc9ccf34> @ imm = #0x8a0
10000844: 4601         	mov	r1, r0
10000846: 980e         	ldr	r0, [sp, #0x38]
10000848: 911a         	str	r1, [sp, #0x68]
1000084a: a91a         	add	r1, sp, #0x68
1000084c: f000 f8a6    	bl	0x1000099c <rp2040_hal::gpio::pin::set_function::{{closure}}::h15f233b609bd7136> @ imm = #0x14c
10000850: 4601         	mov	r1, r0
10000852: 980f         	ldr	r0, [sp, #0x3c]
10000854: 6809         	ldr	r1, [r1]
10000856: 903f         	str	r0, [sp, #0xfc]
10000858: 9140         	str	r1, [sp, #0x100]
1000085a: 9041         	str	r0, [sp, #0x104]
1000085c: f00b fc9e    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0xb93c
10000860: e021         	b	0x100008a6 <rp2040_hal::gpio::pin::set_function::ha309f482a26cf8c1+0x162> @ imm = #0x42
10000862: 9812         	ldr	r0, [sp, #0x48]
10000864: f001 fa98    	bl	0x10001d98 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_oe_set::hac8326d6d53e24fe> @ imm = #0x1530
10000868: 900c         	str	r0, [sp, #0x30]
1000086a: 901e         	str	r0, [sp, #0x78]
1000086c: a818         	add	r0, sp, #0x60
1000086e: 900b         	str	r0, [sp, #0x2c]
10000870: 901f         	str	r0, [sp, #0x7c]
10000872: 2000         	movs	r0, #0x0
10000874: 900a         	str	r0, [sp, #0x28]
10000876: f000 fb08    	bl	0x10000e8a <<u32 as core::ops::bit::Not>::not::h922d2d19093bc4d3> @ imm = #0x610
1000087a: 4601         	mov	r1, r0
1000087c: 980a         	ldr	r0, [sp, #0x28]
1000087e: f000 fc39    	bl	0x100010f4 <<u32 as core::ops::bit::BitAnd>::bitand::ha5903953a49e11fb> @ imm = #0x872
10000882: 990a         	ldr	r1, [sp, #0x28]
10000884: f000 fc2e    	bl	0x100010e4 <<u32 as core::ops::bit::BitOr>::bitor::hc19b6201bc9ccf34> @ imm = #0x85c
10000888: 4601         	mov	r1, r0
1000088a: 980b         	ldr	r0, [sp, #0x2c]
1000088c: 911d         	str	r1, [sp, #0x74]
1000088e: a91d         	add	r1, sp, #0x74
10000890: f000 f8b5    	bl	0x100009fe <rp2040_hal::gpio::pin::set_function::{{closure}}::h7dbdde831175bc1b> @ imm = #0x16a
10000894: 4601         	mov	r1, r0
10000896: 980c         	ldr	r0, [sp, #0x30]
10000898: 6809         	ldr	r1, [r1]
1000089a: 903c         	str	r0, [sp, #0xf0]
1000089c: 913d         	str	r1, [sp, #0xf4]
1000089e: 903e         	str	r0, [sp, #0xf8]
100008a0: f00b fc7c    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0xb8f8
100008a4: e7ff         	b	0x100008a6 <rp2040_hal::gpio::pin::set_function::ha309f482a26cf8c1+0x162> @ imm = #-0x2
100008a6: a916         	add	r1, sp, #0x58
100008a8: 2005         	movs	r0, #0x5
100008aa: 7008         	strb	r0, [r1]
100008ac: e7b0         	b	0x10000810 <rp2040_hal::gpio::pin::set_function::ha309f482a26cf8c1+0xcc> @ imm = #-0xa0
100008ae: 9812         	ldr	r0, [sp, #0x48]
100008b0: f001 fc16    	bl	0x100020e0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69> @ imm = #0x182c
100008b4: 9009         	str	r0, [sp, #0x24]
100008b6: 902b         	str	r0, [sp, #0xac]
100008b8: 902d         	str	r0, [sp, #0xb4]
100008ba: 902e         	str	r0, [sp, #0xb8]
100008bc: f00b fc03    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0xb806
100008c0: 9007         	str	r0, [sp, #0x1c]
100008c2: 902c         	str	r0, [sp, #0xb0]
100008c4: 9029         	str	r0, [sp, #0xa4]
100008c6: 2000         	movs	r0, #0x0
100008c8: 9008         	str	r0, [sp, #0x20]
100008ca: f000 fade    	bl	0x10000e8a <<u32 as core::ops::bit::Not>::not::h922d2d19093bc4d3> @ imm = #0x5bc
100008ce: 4601         	mov	r1, r0
100008d0: 9807         	ldr	r0, [sp, #0x1c]
100008d2: f000 fc0f    	bl	0x100010f4 <<u32 as core::ops::bit::BitAnd>::bitand::ha5903953a49e11fb> @ imm = #0x81e
100008d6: 9908         	ldr	r1, [sp, #0x20]
100008d8: f000 fc04    	bl	0x100010e4 <<u32 as core::ops::bit::BitOr>::bitor::hc19b6201bc9ccf34> @ imm = #0x808
100008dc: 902a         	str	r0, [sp, #0xa8]
100008de: a829         	add	r0, sp, #0xa4
100008e0: a92a         	add	r1, sp, #0xa8
100008e2: f000 f86a    	bl	0x100009ba <rp2040_hal::gpio::pin::set_function::{{closure}}::h43e96b10bfba2930> @ imm = #0xd4
100008e6: 4601         	mov	r1, r0
100008e8: 9809         	ldr	r0, [sp, #0x24]
100008ea: 6809         	ldr	r1, [r1]
100008ec: 9033         	str	r0, [sp, #0xcc]
100008ee: 9134         	str	r1, [sp, #0xd0]
100008f0: 9035         	str	r0, [sp, #0xd4]
100008f2: f00b fc53    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0xb8a6
100008f6: e024         	b	0x10000942 <rp2040_hal::gpio::pin::set_function::ha309f482a26cf8c1+0x1fe> @ imm = #0x48
100008f8: 9812         	ldr	r0, [sp, #0x48]
100008fa: f001 fbf1    	bl	0x100020e0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69> @ imm = #0x17e2
100008fe: 9006         	str	r0, [sp, #0x18]
10000900: 9022         	str	r0, [sp, #0x88]
10000902: 9031         	str	r0, [sp, #0xc4]
10000904: 9032         	str	r0, [sp, #0xc8]
10000906: f00b fbde    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0xb7bc
1000090a: 9004         	str	r0, [sp, #0x10]
1000090c: 9023         	str	r0, [sp, #0x8c]
1000090e: 9020         	str	r0, [sp, #0x80]
10000910: 2000         	movs	r0, #0x0
10000912: 9005         	str	r0, [sp, #0x14]
10000914: f000 fab9    	bl	0x10000e8a <<u32 as core::ops::bit::Not>::not::h922d2d19093bc4d3> @ imm = #0x572
10000918: 4601         	mov	r1, r0
1000091a: 9804         	ldr	r0, [sp, #0x10]
1000091c: f000 fbea    	bl	0x100010f4 <<u32 as core::ops::bit::BitAnd>::bitand::ha5903953a49e11fb> @ imm = #0x7d4
10000920: 9905         	ldr	r1, [sp, #0x14]
10000922: f000 fbdf    	bl	0x100010e4 <<u32 as core::ops::bit::BitOr>::bitor::hc19b6201bc9ccf34> @ imm = #0x7be
10000926: 9021         	str	r0, [sp, #0x84]
10000928: a820         	add	r0, sp, #0x80
1000092a: a921         	add	r1, sp, #0x84
1000092c: f000 f941    	bl	0x10000bb2 <rp2040_hal::gpio::pin::set_function::{{closure}}::he57f65a5eda70f4c> @ imm = #0x282
10000930: 4601         	mov	r1, r0
10000932: 9806         	ldr	r0, [sp, #0x18]
10000934: 6809         	ldr	r1, [r1]
10000936: 9039         	str	r0, [sp, #0xe4]
10000938: 913a         	str	r1, [sp, #0xe8]
1000093a: 903b         	str	r0, [sp, #0xec]
1000093c: f00b fc2e    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0xb85c
10000940: e7ff         	b	0x10000942 <rp2040_hal::gpio::pin::set_function::ha309f482a26cf8c1+0x1fe> @ imm = #-0x2
10000942: 9812         	ldr	r0, [sp, #0x48]
10000944: f001 faa8    	bl	0x10001e98 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::io_ctrl::h4641cd4cc0e407a6> @ imm = #0x1550
10000948: 9003         	str	r0, [sp, #0xc]
1000094a: 9026         	str	r0, [sp, #0x98]
1000094c: a916         	add	r1, sp, #0x58
1000094e: 9102         	str	r1, [sp, #0x8]
10000950: 9127         	str	r1, [sp, #0x9c]
10000952: 902f         	str	r0, [sp, #0xbc]
10000954: 9030         	str	r0, [sp, #0xc0]
10000956: f00b fbb6    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0xb76c
1000095a: 9000         	str	r0, [sp]
1000095c: 9028         	str	r0, [sp, #0xa0]
1000095e: 9024         	str	r0, [sp, #0x90]
10000960: 2000         	movs	r0, #0x0
10000962: 9001         	str	r0, [sp, #0x4]
10000964: f000 fa91    	bl	0x10000e8a <<u32 as core::ops::bit::Not>::not::h922d2d19093bc4d3> @ imm = #0x522
10000968: 4601         	mov	r1, r0
1000096a: 9800         	ldr	r0, [sp]
1000096c: f000 fbc2    	bl	0x100010f4 <<u32 as core::ops::bit::BitAnd>::bitand::ha5903953a49e11fb> @ imm = #0x784
10000970: 9901         	ldr	r1, [sp, #0x4]
10000972: f000 fbb7    	bl	0x100010e4 <<u32 as core::ops::bit::BitOr>::bitor::hc19b6201bc9ccf34> @ imm = #0x76e
10000976: 4601         	mov	r1, r0
10000978: 9802         	ldr	r0, [sp, #0x8]
1000097a: 9125         	str	r1, [sp, #0x94]
1000097c: a924         	add	r1, sp, #0x90
1000097e: aa25         	add	r2, sp, #0x94
10000980: f000 f87d    	bl	0x10000a7e <rp2040_hal::gpio::pin::set_function::{{closure}}::h94efc9a7a75c22a4> @ imm = #0xfa
10000984: 4601         	mov	r1, r0
10000986: 9803         	ldr	r0, [sp, #0xc]
10000988: 6809         	ldr	r1, [r1]
1000098a: 9036         	str	r0, [sp, #0xd8]
1000098c: 9137         	str	r1, [sp, #0xdc]
1000098e: 9038         	str	r0, [sp, #0xe0]
10000990: f00b fc04    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0xb808
10000994: b042         	add	sp, #0x108
10000996: bd80         	pop	{r7, pc}
10000998: a8 dd 00 10  	.word	0x1000dda8

1000099c <rp2040_hal::gpio::pin::set_function::{{closure}}::h15f233b609bd7136>:
1000099c: b580         	push	{r7, lr}
1000099e: af00         	add	r7, sp, #0x0
100009a0: b085         	sub	sp, #0x14
100009a2: 9100         	str	r1, [sp]
100009a4: 4601         	mov	r1, r0
100009a6: 9800         	ldr	r0, [sp]
100009a8: 9101         	str	r1, [sp, #0x4]
100009aa: 9002         	str	r0, [sp, #0x8]
100009ac: 9901         	ldr	r1, [sp, #0x4]
100009ae: 6809         	ldr	r1, [r1]
100009b0: 9003         	str	r0, [sp, #0xc]
100009b2: 9104         	str	r1, [sp, #0x10]
100009b4: 6001         	str	r1, [r0]
100009b6: b005         	add	sp, #0x14
100009b8: bd80         	pop	{r7, pc}

100009ba <rp2040_hal::gpio::pin::set_function::{{closure}}::h43e96b10bfba2930>:
100009ba: b580         	push	{r7, lr}
100009bc: af00         	add	r7, sp, #0x0
100009be: b08a         	sub	sp, #0x28
100009c0: aa03         	add	r2, sp, #0xc
100009c2: 9201         	str	r2, [sp, #0x4]
100009c4: 460a         	mov	r2, r1
100009c6: 4601         	mov	r1, r0
100009c8: 9801         	ldr	r0, [sp, #0x4]
100009ca: 6001         	str	r1, [r0]
100009cc: 6042         	str	r2, [r0, #0x4]
100009ce: 6082         	str	r2, [r0, #0x8]
100009d0: 60c2         	str	r2, [r0, #0xc]
100009d2: ab07         	add	r3, sp, #0x1c
100009d4: 2106         	movs	r1, #0x6
100009d6: 7019         	strb	r1, [r3]
100009d8: 6142         	str	r2, [r0, #0x14]
100009da: aa08         	add	r2, sp, #0x20
100009dc: 7111         	strb	r1, [r2, #0x4]
100009de: 6941         	ldr	r1, [r0, #0x14]
100009e0: 9100         	str	r1, [sp]
100009e2: 6981         	ldr	r1, [r0, #0x18]
100009e4: 2001         	movs	r0, #0x1
100009e6: f001 f8a9    	bl	0x10001b3c <<u32 as core::ops::bit::Shl<u8>>::shl::h812542cec0b8c163> @ imm = #0x1152
100009ea: f000 fa4e    	bl	0x10000e8a <<u32 as core::ops::bit::Not>::not::h922d2d19093bc4d3> @ imm = #0x49c
100009ee: 4601         	mov	r1, r0
100009f0: 9800         	ldr	r0, [sp]
100009f2: f001 f897    	bl	0x10001b24 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h3e991570dd1d70a7> @ imm = #0x112e
100009f6: 9801         	ldr	r0, [sp, #0x4]
100009f8: 6940         	ldr	r0, [r0, #0x14]
100009fa: b00a         	add	sp, #0x28
100009fc: bd80         	pop	{r7, pc}

100009fe <rp2040_hal::gpio::pin::set_function::{{closure}}::h7dbdde831175bc1b>:
100009fe: b580         	push	{r7, lr}
10000a00: af00         	add	r7, sp, #0x0
10000a02: b085         	sub	sp, #0x14
10000a04: 9100         	str	r1, [sp]
10000a06: 4601         	mov	r1, r0
10000a08: 9800         	ldr	r0, [sp]
10000a0a: 9101         	str	r1, [sp, #0x4]
10000a0c: 9002         	str	r0, [sp, #0x8]
10000a0e: 9901         	ldr	r1, [sp, #0x4]
10000a10: 6809         	ldr	r1, [r1]
10000a12: 9003         	str	r0, [sp, #0xc]
10000a14: 9104         	str	r1, [sp, #0x10]
10000a16: 6001         	str	r1, [r0]
10000a18: b005         	add	sp, #0x14
10000a1a: bd80         	pop	{r7, pc}

10000a1c <rp2040_hal::gpio::pin::set_function::{{closure}}::h8bd9a9ab9c04bb70>:
10000a1c: b580         	push	{r7, lr}
10000a1e: af00         	add	r7, sp, #0x0
10000a20: b08a         	sub	sp, #0x28
10000a22: aa03         	add	r2, sp, #0xc
10000a24: 9201         	str	r2, [sp, #0x4]
10000a26: 460a         	mov	r2, r1
10000a28: 4601         	mov	r1, r0
10000a2a: 9801         	ldr	r0, [sp, #0x4]
10000a2c: 6001         	str	r1, [r0]
10000a2e: 6042         	str	r2, [r0, #0x4]
10000a30: 6082         	str	r2, [r0, #0x8]
10000a32: 60c2         	str	r2, [r0, #0xc]
10000a34: ab07         	add	r3, sp, #0x1c
10000a36: 2106         	movs	r1, #0x6
10000a38: 7019         	strb	r1, [r3]
10000a3a: 6142         	str	r2, [r0, #0x14]
10000a3c: aa08         	add	r2, sp, #0x20
10000a3e: 7111         	strb	r1, [r2, #0x4]
10000a40: 6941         	ldr	r1, [r0, #0x14]
10000a42: 9100         	str	r1, [sp]
10000a44: 6981         	ldr	r1, [r0, #0x18]
10000a46: 2001         	movs	r0, #0x1
10000a48: f001 f878    	bl	0x10001b3c <<u32 as core::ops::bit::Shl<u8>>::shl::h812542cec0b8c163> @ imm = #0x10f0
10000a4c: f000 fa1d    	bl	0x10000e8a <<u32 as core::ops::bit::Not>::not::h922d2d19093bc4d3> @ imm = #0x43a
10000a50: 4601         	mov	r1, r0
10000a52: 9800         	ldr	r0, [sp]
10000a54: f001 f866    	bl	0x10001b24 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h3e991570dd1d70a7> @ imm = #0x10cc
10000a58: 9801         	ldr	r0, [sp, #0x4]
10000a5a: 6940         	ldr	r0, [r0, #0x14]
10000a5c: b00a         	add	sp, #0x28
10000a5e: bd80         	pop	{r7, pc}

10000a60 <rp2040_hal::gpio::pin::set_function::{{closure}}::h92672be701dab917>:
10000a60: b580         	push	{r7, lr}
10000a62: af00         	add	r7, sp, #0x0
10000a64: b085         	sub	sp, #0x14
10000a66: 9100         	str	r1, [sp]
10000a68: 4601         	mov	r1, r0
10000a6a: 9800         	ldr	r0, [sp]
10000a6c: 9101         	str	r1, [sp, #0x4]
10000a6e: 9002         	str	r0, [sp, #0x8]
10000a70: 9901         	ldr	r1, [sp, #0x4]
10000a72: 6809         	ldr	r1, [r1]
10000a74: 9003         	str	r0, [sp, #0xc]
10000a76: 9104         	str	r1, [sp, #0x10]
10000a78: 6001         	str	r1, [r0]
10000a7a: b005         	add	sp, #0x14
10000a7c: bd80         	pop	{r7, pc}

10000a7e <rp2040_hal::gpio::pin::set_function::{{closure}}::h94efc9a7a75c22a4>:
10000a7e: b580         	push	{r7, lr}
10000a80: af00         	add	r7, sp, #0x0
10000a82: b092         	sub	sp, #0x48
10000a84: 9004         	str	r0, [sp, #0x10]
10000a86: 9105         	str	r1, [sp, #0x14]
10000a88: 9206         	str	r2, [sp, #0x18]
10000a8a: 920d         	str	r2, [sp, #0x34]
10000a8c: 920e         	str	r2, [sp, #0x38]
10000a8e: a80f         	add	r0, sp, #0x3c
10000a90: 2100         	movs	r1, #0x0
10000a92: 7001         	strb	r1, [r0]
10000a94: 9804         	ldr	r0, [sp, #0x10]
10000a96: 7803         	ldrb	r3, [r0]
10000a98: 9207         	str	r2, [sp, #0x1c]
10000a9a: a807         	add	r0, sp, #0x1c
10000a9c: 7101         	strb	r1, [r0, #0x4]
10000a9e: a809         	add	r0, sp, #0x24
10000aa0: 7003         	strb	r3, [r0]
10000aa2: a810         	add	r0, sp, #0x40
10000aa4: 7003         	strb	r3, [r0]
10000aa6: 7800         	ldrb	r0, [r0]
10000aa8: 9002         	str	r0, [sp, #0x8]
10000aaa: 920a         	str	r2, [sp, #0x28]
10000aac: aa0a         	add	r2, sp, #0x28
10000aae: 7111         	strb	r1, [r2, #0x4]
10000ab0: a90c         	add	r1, sp, #0x30
10000ab2: 7008         	strb	r0, [r1]
10000ab4: 980a         	ldr	r0, [sp, #0x28]
10000ab6: 9001         	str	r0, [sp, #0x4]
10000ab8: f005 fb2a    	bl	0x10006110 <rp2040_pac::generic::mask_u32::h67ab29530e716b7a> @ imm = #0x5654
10000abc: 990b         	ldr	r1, [sp, #0x2c]
10000abe: f001 f83d    	bl	0x10001b3c <<u32 as core::ops::bit::Shl<u8>>::shl::h812542cec0b8c163> @ imm = #0x107a
10000ac2: f000 f9e2    	bl	0x10000e8a <<u32 as core::ops::bit::Not>::not::h922d2d19093bc4d3> @ imm = #0x3c4
10000ac6: 4601         	mov	r1, r0
10000ac8: 9801         	ldr	r0, [sp, #0x4]
10000aca: f001 f82b    	bl	0x10001b24 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h3e991570dd1d70a7> @ imm = #0x1056
10000ace: 9802         	ldr	r0, [sp, #0x8]
10000ad0: 990a         	ldr	r1, [sp, #0x28]
10000ad2: 9103         	str	r1, [sp, #0xc]
10000ad4: a911         	add	r1, sp, #0x44
10000ad6: 7008         	strb	r0, [r1]
10000ad8: f005 fb1a    	bl	0x10006110 <rp2040_pac::generic::mask_u32::h67ab29530e716b7a> @ imm = #0x5634
10000adc: 4601         	mov	r1, r0
10000ade: 9802         	ldr	r0, [sp, #0x8]
10000ae0: f000 fb08    	bl	0x100010f4 <<u32 as core::ops::bit::BitAnd>::bitand::ha5903953a49e11fb> @ imm = #0x610
10000ae4: 990b         	ldr	r1, [sp, #0x2c]
10000ae6: f001 f829    	bl	0x10001b3c <<u32 as core::ops::bit::Shl<u8>>::shl::h812542cec0b8c163> @ imm = #0x1052
10000aea: 4601         	mov	r1, r0
10000aec: 9803         	ldr	r0, [sp, #0xc]
10000aee: f001 f80d    	bl	0x10001b0c <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::h780b01b4b3989778> @ imm = #0x101a
10000af2: 980a         	ldr	r0, [sp, #0x28]
10000af4: b012         	add	sp, #0x48
10000af6: bd80         	pop	{r7, pc}

10000af8 <rp2040_hal::gpio::pin::set_function::{{closure}}::hd736d089d71a78df>:
10000af8: b580         	push	{r7, lr}
10000afa: af00         	add	r7, sp, #0x0
10000afc: b092         	sub	sp, #0x48
10000afe: 9004         	str	r0, [sp, #0x10]
10000b00: 9105         	str	r1, [sp, #0x14]
10000b02: 9206         	str	r2, [sp, #0x18]
10000b04: 920d         	str	r2, [sp, #0x34]
10000b06: 920e         	str	r2, [sp, #0x38]
10000b08: a80f         	add	r0, sp, #0x3c
10000b0a: 2100         	movs	r1, #0x0
10000b0c: 7001         	strb	r1, [r0]
10000b0e: 9804         	ldr	r0, [sp, #0x10]
10000b10: 7803         	ldrb	r3, [r0]
10000b12: 9207         	str	r2, [sp, #0x1c]
10000b14: a807         	add	r0, sp, #0x1c
10000b16: 7101         	strb	r1, [r0, #0x4]
10000b18: a809         	add	r0, sp, #0x24
10000b1a: 7003         	strb	r3, [r0]
10000b1c: a810         	add	r0, sp, #0x40
10000b1e: 7003         	strb	r3, [r0]
10000b20: 7800         	ldrb	r0, [r0]
10000b22: 9002         	str	r0, [sp, #0x8]
10000b24: 920a         	str	r2, [sp, #0x28]
10000b26: aa0a         	add	r2, sp, #0x28
10000b28: 7111         	strb	r1, [r2, #0x4]
10000b2a: a90c         	add	r1, sp, #0x30
10000b2c: 7008         	strb	r0, [r1]
10000b2e: 980a         	ldr	r0, [sp, #0x28]
10000b30: 9001         	str	r0, [sp, #0x4]
10000b32: f005 faed    	bl	0x10006110 <rp2040_pac::generic::mask_u32::h67ab29530e716b7a> @ imm = #0x55da
10000b36: 990b         	ldr	r1, [sp, #0x2c]
10000b38: f001 f800    	bl	0x10001b3c <<u32 as core::ops::bit::Shl<u8>>::shl::h812542cec0b8c163> @ imm = #0x1000
10000b3c: f000 f9a5    	bl	0x10000e8a <<u32 as core::ops::bit::Not>::not::h922d2d19093bc4d3> @ imm = #0x34a
10000b40: 4601         	mov	r1, r0
10000b42: 9801         	ldr	r0, [sp, #0x4]
10000b44: f000 ffee    	bl	0x10001b24 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h3e991570dd1d70a7> @ imm = #0xfdc
10000b48: 9802         	ldr	r0, [sp, #0x8]
10000b4a: 990a         	ldr	r1, [sp, #0x28]
10000b4c: 9103         	str	r1, [sp, #0xc]
10000b4e: a911         	add	r1, sp, #0x44
10000b50: 7008         	strb	r0, [r1]
10000b52: f005 fadd    	bl	0x10006110 <rp2040_pac::generic::mask_u32::h67ab29530e716b7a> @ imm = #0x55ba
10000b56: 4601         	mov	r1, r0
10000b58: 9802         	ldr	r0, [sp, #0x8]
10000b5a: f000 facb    	bl	0x100010f4 <<u32 as core::ops::bit::BitAnd>::bitand::ha5903953a49e11fb> @ imm = #0x596
10000b5e: 990b         	ldr	r1, [sp, #0x2c]
10000b60: f000 ffec    	bl	0x10001b3c <<u32 as core::ops::bit::Shl<u8>>::shl::h812542cec0b8c163> @ imm = #0xfd8
10000b64: 4601         	mov	r1, r0
10000b66: 9803         	ldr	r0, [sp, #0xc]
10000b68: f000 ffd0    	bl	0x10001b0c <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::h780b01b4b3989778> @ imm = #0xfa0
10000b6c: 980a         	ldr	r0, [sp, #0x28]
10000b6e: b012         	add	sp, #0x48
10000b70: bd80         	pop	{r7, pc}

10000b72 <rp2040_hal::gpio::pin::set_function::{{closure}}::he0add1a8070974a2>:
10000b72: b580         	push	{r7, lr}
10000b74: af00         	add	r7, sp, #0x0
10000b76: b08a         	sub	sp, #0x28
10000b78: aa03         	add	r2, sp, #0xc
10000b7a: 9201         	str	r2, [sp, #0x4]
10000b7c: 460a         	mov	r2, r1
10000b7e: 4601         	mov	r1, r0
10000b80: 9801         	ldr	r0, [sp, #0x4]
10000b82: 6001         	str	r1, [r0]
10000b84: 6042         	str	r2, [r0, #0x4]
10000b86: 6082         	str	r2, [r0, #0x8]
10000b88: 60c2         	str	r2, [r0, #0xc]
10000b8a: ab07         	add	r3, sp, #0x1c
10000b8c: 2106         	movs	r1, #0x6
10000b8e: 7019         	strb	r1, [r3]
10000b90: 6142         	str	r2, [r0, #0x14]
10000b92: aa08         	add	r2, sp, #0x20
10000b94: 7111         	strb	r1, [r2, #0x4]
10000b96: 6941         	ldr	r1, [r0, #0x14]
10000b98: 9100         	str	r1, [sp]
10000b9a: 6981         	ldr	r1, [r0, #0x18]
10000b9c: 2001         	movs	r0, #0x1
10000b9e: f000 ffcd    	bl	0x10001b3c <<u32 as core::ops::bit::Shl<u8>>::shl::h812542cec0b8c163> @ imm = #0xf9a
10000ba2: 4601         	mov	r1, r0
10000ba4: 9800         	ldr	r0, [sp]
10000ba6: f000 ffb1    	bl	0x10001b0c <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::h780b01b4b3989778> @ imm = #0xf62
10000baa: 9801         	ldr	r0, [sp, #0x4]
10000bac: 6940         	ldr	r0, [r0, #0x14]
10000bae: b00a         	add	sp, #0x28
10000bb0: bd80         	pop	{r7, pc}

10000bb2 <rp2040_hal::gpio::pin::set_function::{{closure}}::he57f65a5eda70f4c>:
10000bb2: b580         	push	{r7, lr}
10000bb4: af00         	add	r7, sp, #0x0
10000bb6: b08a         	sub	sp, #0x28
10000bb8: aa03         	add	r2, sp, #0xc
10000bba: 9201         	str	r2, [sp, #0x4]
10000bbc: 460a         	mov	r2, r1
10000bbe: 4601         	mov	r1, r0
10000bc0: 9801         	ldr	r0, [sp, #0x4]
10000bc2: 6001         	str	r1, [r0]
10000bc4: 6042         	str	r2, [r0, #0x4]
10000bc6: 6082         	str	r2, [r0, #0x8]
10000bc8: 60c2         	str	r2, [r0, #0xc]
10000bca: ab07         	add	r3, sp, #0x1c
10000bcc: 2106         	movs	r1, #0x6
10000bce: 7019         	strb	r1, [r3]
10000bd0: 6142         	str	r2, [r0, #0x14]
10000bd2: aa08         	add	r2, sp, #0x20
10000bd4: 7111         	strb	r1, [r2, #0x4]
10000bd6: 6941         	ldr	r1, [r0, #0x14]
10000bd8: 9100         	str	r1, [sp]
10000bda: 6981         	ldr	r1, [r0, #0x18]
10000bdc: 2001         	movs	r0, #0x1
10000bde: f000 ffad    	bl	0x10001b3c <<u32 as core::ops::bit::Shl<u8>>::shl::h812542cec0b8c163> @ imm = #0xf5a
10000be2: 4601         	mov	r1, r0
10000be4: 9800         	ldr	r0, [sp]
10000be6: f000 ff91    	bl	0x10001b0c <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::h780b01b4b3989778> @ imm = #0xf22
10000bea: 9801         	ldr	r0, [sp, #0x4]
10000bec: 6940         	ldr	r0, [r0, #0x14]
10000bee: b00a         	add	sp, #0x28
10000bf0: bd80         	pop	{r7, pc}

10000bf2 <rp2040_hal::gpio::pin::set_function::{{closure}}::hfc0a3ea6c7a09877>:
10000bf2: b580         	push	{r7, lr}
10000bf4: af00         	add	r7, sp, #0x0
10000bf6: b085         	sub	sp, #0x14
10000bf8: 9100         	str	r1, [sp]
10000bfa: 4601         	mov	r1, r0
10000bfc: 9800         	ldr	r0, [sp]
10000bfe: 9101         	str	r1, [sp, #0x4]
10000c00: 9002         	str	r0, [sp, #0x8]
10000c02: 9901         	ldr	r1, [sp, #0x4]
10000c04: 6809         	ldr	r1, [r1]
10000c06: 9003         	str	r0, [sp, #0xc]
10000c08: 9104         	str	r1, [sp, #0x10]
10000c0a: 6001         	str	r1, [r0]
10000c0c: b005         	add	sp, #0x14
10000c0e: bd80         	pop	{r7, pc}

10000c10 <rp2040_hal::gpio::pin::set_pull_type::he23fa2ea393e99e4>:
10000c10: b580         	push	{r7, lr}
10000c12: af00         	add	r7, sp, #0x0
10000c14: b098         	sub	sp, #0x60
10000c16: 460a         	mov	r2, r1
10000c18: 4601         	mov	r1, r0
10000c1a: 9106         	str	r1, [sp, #0x18]
10000c1c: a808         	add	r0, sp, #0x20
10000c1e: 7002         	strb	r2, [r0]
10000c20: 910c         	str	r1, [sp, #0x30]
10000c22: 7800         	ldrb	r0, [r0]
10000c24: 9007         	str	r0, [sp, #0x1c]
10000c26: 9807         	ldr	r0, [sp, #0x1c]
10000c28: 0081         	lsls	r1, r0, #0x2
10000c2a: a001         	adr	r0, #4 <rp2040_hal::gpio::pin::set_pull_type::he23fa2ea393e99e4+0x1f>
10000c2c: 5840         	ldr	r0, [r0, r1]
10000c2e: 4687         	mov	pc, r0
10000c30: 43 0c 00 10  	.word	0x10000c43
10000c34: 4d 0c 00 10  	.word	0x10000c4d
10000c38: 59 0c 00 10  	.word	0x10000c59
10000c3c: 65 0c 00 10  	.word	0x10000c65
10000c40: defe         	trap
10000c42: a90b         	add	r1, sp, #0x2c
10000c44: 2000         	movs	r0, #0x0
10000c46: 7008         	strb	r0, [r1]
10000c48: 7048         	strb	r0, [r1, #0x1]
10000c4a: e010         	b	0x10000c6e <rp2040_hal::gpio::pin::set_pull_type::he23fa2ea393e99e4+0x5e> @ imm = #0x20
10000c4c: a90b         	add	r1, sp, #0x2c
10000c4e: 2001         	movs	r0, #0x1
10000c50: 7008         	strb	r0, [r1]
10000c52: 2000         	movs	r0, #0x0
10000c54: 7048         	strb	r0, [r1, #0x1]
10000c56: e00a         	b	0x10000c6e <rp2040_hal::gpio::pin::set_pull_type::he23fa2ea393e99e4+0x5e> @ imm = #0x14
10000c58: a90b         	add	r1, sp, #0x2c
10000c5a: 2000         	movs	r0, #0x0
10000c5c: 7008         	strb	r0, [r1]
10000c5e: 2001         	movs	r0, #0x1
10000c60: 7048         	strb	r0, [r1, #0x1]
10000c62: e004         	b	0x10000c6e <rp2040_hal::gpio::pin::set_pull_type::he23fa2ea393e99e4+0x5e> @ imm = #0x8
10000c64: a90b         	add	r1, sp, #0x2c
10000c66: 2001         	movs	r0, #0x1
10000c68: 7008         	strb	r0, [r1]
10000c6a: 7048         	strb	r0, [r1, #0x1]
10000c6c: e7ff         	b	0x10000c6e <rp2040_hal::gpio::pin::set_pull_type::he23fa2ea393e99e4+0x5e> @ imm = #-0x2
10000c6e: 9806         	ldr	r0, [sp, #0x18]
10000c70: 990b         	ldr	r1, [sp, #0x2c]
10000c72: aa09         	add	r2, sp, #0x24
10000c74: 9204         	str	r2, [sp, #0x10]
10000c76: 7011         	strb	r1, [r2]
10000c78: a90b         	add	r1, sp, #0x2c
10000c7a: 7849         	ldrb	r1, [r1, #0x1]
10000c7c: aa0a         	add	r2, sp, #0x28
10000c7e: 9203         	str	r2, [sp, #0xc]
10000c80: 7011         	strb	r1, [r2]
10000c82: f001 fa2d    	bl	0x100020e0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69> @ imm = #0x145a
10000c86: 9a04         	ldr	r2, [sp, #0x10]
10000c88: 9903         	ldr	r1, [sp, #0xc]
10000c8a: 9005         	str	r0, [sp, #0x14]
10000c8c: 900f         	str	r0, [sp, #0x3c]
10000c8e: 9210         	str	r2, [sp, #0x40]
10000c90: 9111         	str	r1, [sp, #0x44]
10000c92: 9013         	str	r0, [sp, #0x4c]
10000c94: 9014         	str	r0, [sp, #0x50]
10000c96: f00b fa16    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0xb42c
10000c9a: 9001         	str	r0, [sp, #0x4]
10000c9c: 9012         	str	r0, [sp, #0x48]
10000c9e: 900d         	str	r0, [sp, #0x34]
10000ca0: 2000         	movs	r0, #0x0
10000ca2: 9002         	str	r0, [sp, #0x8]
10000ca4: f000 f8f1    	bl	0x10000e8a <<u32 as core::ops::bit::Not>::not::h922d2d19093bc4d3> @ imm = #0x1e2
10000ca8: 4601         	mov	r1, r0
10000caa: 9801         	ldr	r0, [sp, #0x4]
10000cac: f000 fa22    	bl	0x100010f4 <<u32 as core::ops::bit::BitAnd>::bitand::ha5903953a49e11fb> @ imm = #0x444
10000cb0: 9902         	ldr	r1, [sp, #0x8]
10000cb2: f000 fa17    	bl	0x100010e4 <<u32 as core::ops::bit::BitOr>::bitor::hc19b6201bc9ccf34> @ imm = #0x42e
10000cb6: 9903         	ldr	r1, [sp, #0xc]
10000cb8: 4602         	mov	r2, r0
10000cba: 9804         	ldr	r0, [sp, #0x10]
10000cbc: 920e         	str	r2, [sp, #0x38]
10000cbe: aa0d         	add	r2, sp, #0x34
10000cc0: ab0e         	add	r3, sp, #0x38
10000cc2: f000 f80a    	bl	0x10000cda <rp2040_hal::gpio::pin::set_pull_type::{{closure}}::hb0310bce37a41a4d> @ imm = #0x14
10000cc6: 4601         	mov	r1, r0
10000cc8: 9805         	ldr	r0, [sp, #0x14]
10000cca: 6809         	ldr	r1, [r1]
10000ccc: 9015         	str	r0, [sp, #0x54]
10000cce: 9116         	str	r1, [sp, #0x58]
10000cd0: 9017         	str	r0, [sp, #0x5c]
10000cd2: f00b fa63    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0xb4c6
10000cd6: b018         	add	sp, #0x60
10000cd8: bd80         	pop	{r7, pc}

10000cda <rp2040_hal::gpio::pin::set_pull_type::{{closure}}::hb0310bce37a41a4d>:
10000cda: b580         	push	{r7, lr}
10000cdc: af00         	add	r7, sp, #0x0
10000cde: b09a         	sub	sp, #0x68
10000ce0: 9008         	str	r0, [sp, #0x20]
10000ce2: 9109         	str	r1, [sp, #0x24]
10000ce4: 920a         	str	r2, [sp, #0x28]
10000ce6: 930b         	str	r3, [sp, #0x2c]
10000ce8: 930d         	str	r3, [sp, #0x34]
10000cea: 930e         	str	r3, [sp, #0x38]
10000cec: a80f         	add	r0, sp, #0x3c
10000cee: 2103         	movs	r1, #0x3
10000cf0: 7001         	strb	r1, [r0]
10000cf2: 9808         	ldr	r0, [sp, #0x20]
10000cf4: 7800         	ldrb	r0, [r0]
10000cf6: 9002         	str	r0, [sp, #0x8]
10000cf8: 9315         	str	r3, [sp, #0x54]
10000cfa: aa15         	add	r2, sp, #0x54
10000cfc: 7111         	strb	r1, [r2, #0x4]
10000cfe: a917         	add	r1, sp, #0x5c
10000d00: 7008         	strb	r0, [r1]
10000d02: 9815         	ldr	r0, [sp, #0x54]
10000d04: 9001         	str	r0, [sp, #0x4]
10000d06: 9916         	ldr	r1, [sp, #0x58]
10000d08: 2001         	movs	r0, #0x1
10000d0a: 9006         	str	r0, [sp, #0x18]
10000d0c: f000 ff16    	bl	0x10001b3c <<u32 as core::ops::bit::Shl<u8>>::shl::h812542cec0b8c163> @ imm = #0xe2c
10000d10: f000 f8bb    	bl	0x10000e8a <<u32 as core::ops::bit::Not>::not::h922d2d19093bc4d3> @ imm = #0x176
10000d14: 4601         	mov	r1, r0
10000d16: 9801         	ldr	r0, [sp, #0x4]
10000d18: f000 ff04    	bl	0x10001b24 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h3e991570dd1d70a7> @ imm = #0xe08
10000d1c: 9802         	ldr	r0, [sp, #0x8]
10000d1e: 9906         	ldr	r1, [sp, #0x18]
10000d20: 9a15         	ldr	r2, [sp, #0x54]
10000d22: 9203         	str	r2, [sp, #0xc]
10000d24: aa18         	add	r2, sp, #0x60
10000d26: 7010         	strb	r0, [r2]
10000d28: f000 f9e4    	bl	0x100010f4 <<u32 as core::ops::bit::BitAnd>::bitand::ha5903953a49e11fb> @ imm = #0x3c8
10000d2c: 9916         	ldr	r1, [sp, #0x58]
10000d2e: f000 ff05    	bl	0x10001b3c <<u32 as core::ops::bit::Shl<u8>>::shl::h812542cec0b8c163> @ imm = #0xe0a
10000d32: 4601         	mov	r1, r0
10000d34: 9803         	ldr	r0, [sp, #0xc]
10000d36: f000 fee9    	bl	0x10001b0c <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::h780b01b4b3989778> @ imm = #0xdd2
10000d3a: 9806         	ldr	r0, [sp, #0x18]
10000d3c: 9b15         	ldr	r3, [sp, #0x54]
10000d3e: 930c         	str	r3, [sp, #0x30]
10000d40: 9310         	str	r3, [sp, #0x40]
10000d42: a911         	add	r1, sp, #0x44
10000d44: 2202         	movs	r2, #0x2
10000d46: 700a         	strb	r2, [r1]
10000d48: 9909         	ldr	r1, [sp, #0x24]
10000d4a: 7809         	ldrb	r1, [r1]
10000d4c: 9105         	str	r1, [sp, #0x14]
10000d4e: 9312         	str	r3, [sp, #0x48]
10000d50: ab12         	add	r3, sp, #0x48
10000d52: 711a         	strb	r2, [r3, #0x4]
10000d54: aa14         	add	r2, sp, #0x50
10000d56: 7011         	strb	r1, [r2]
10000d58: 9912         	ldr	r1, [sp, #0x48]
10000d5a: 9104         	str	r1, [sp, #0x10]
10000d5c: 9913         	ldr	r1, [sp, #0x4c]
10000d5e: f000 feed    	bl	0x10001b3c <<u32 as core::ops::bit::Shl<u8>>::shl::h812542cec0b8c163> @ imm = #0xdda
10000d62: f000 f892    	bl	0x10000e8a <<u32 as core::ops::bit::Not>::not::h922d2d19093bc4d3> @ imm = #0x124
10000d66: 4601         	mov	r1, r0
10000d68: 9804         	ldr	r0, [sp, #0x10]
10000d6a: f000 fedb    	bl	0x10001b24 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h3e991570dd1d70a7> @ imm = #0xdb6
10000d6e: 9805         	ldr	r0, [sp, #0x14]
10000d70: 9906         	ldr	r1, [sp, #0x18]
10000d72: 9a12         	ldr	r2, [sp, #0x48]
10000d74: 9207         	str	r2, [sp, #0x1c]
10000d76: aa19         	add	r2, sp, #0x64
10000d78: 7010         	strb	r0, [r2]
10000d7a: f000 f9bb    	bl	0x100010f4 <<u32 as core::ops::bit::BitAnd>::bitand::ha5903953a49e11fb> @ imm = #0x376
10000d7e: 9913         	ldr	r1, [sp, #0x4c]
10000d80: f000 fedc    	bl	0x10001b3c <<u32 as core::ops::bit::Shl<u8>>::shl::h812542cec0b8c163> @ imm = #0xdb8
10000d84: 4601         	mov	r1, r0
10000d86: 9807         	ldr	r0, [sp, #0x1c]
10000d88: f000 fec0    	bl	0x10001b0c <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::h780b01b4b3989778> @ imm = #0xd80
10000d8c: 9812         	ldr	r0, [sp, #0x48]
10000d8e: b01a         	add	sp, #0x68
10000d90: bd80         	pop	{r7, pc}
10000d92: d4d4         	bmi	0x10000d3e <rp2040_hal::gpio::pin::set_pull_type::{{closure}}::hb0310bce37a41a4d+0x64> @ imm = #-0x58

10000d94 <rp2040_pac::Peripherals::steal::h4be80d3f46a3df04>:
10000d94: b580         	push	{r7, lr}
10000d96: af00         	add	r7, sp, #0x0
10000d98: 4901         	ldr	r1, [pc, #0x4]          @ 0x10000da0 <rp2040_pac::Peripherals::steal::h4be80d3f46a3df04+0xc>
10000d9a: 2001         	movs	r0, #0x1
10000d9c: 7008         	strb	r0, [r1]
10000d9e: bd80         	pop	{r7, pc}
10000da0: f8 fb 03 20  	.word	0x2003fbf8

10000da4 <rp2040_pac::generic::mask_u32::h52497df11b8509d6>:
10000da4: b580         	push	{r7, lr}
10000da6: af00         	add	r7, sp, #0x0
10000da8: 4800         	ldr	r0, [pc, #0x0]          @ 0x10000dac <rp2040_pac::generic::mask_u32::h52497df11b8509d6+0x8>
10000daa: bd80         	pop	{r7, pc}
10000dac: ff ff ff 3f  	.word	0x3fffffff

10000db0 <<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut::hc04f38d04af75219>:
10000db0: b580         	push	{r7, lr}
10000db2: af00         	add	r7, sp, #0x0
10000db4: b08c         	sub	sp, #0x30
10000db6: 9300         	str	r3, [sp]
10000db8: 9201         	str	r2, [sp, #0x4]
10000dba: 9102         	str	r1, [sp, #0x8]
10000dbc: 9003         	str	r0, [sp, #0xc]
10000dbe: 9004         	str	r0, [sp, #0x10]
10000dc0: 9105         	str	r1, [sp, #0x14]
10000dc2: 9206         	str	r2, [sp, #0x18]
10000dc4: 9007         	str	r0, [sp, #0x1c]
10000dc6: 9208         	str	r2, [sp, #0x20]
10000dc8: 4290         	cmp	r0, r2
10000dca: d805         	bhi	0x10000dd8 <<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut::hc04f38d04af75219+0x28> @ imm = #0xa
10000dcc: e7ff         	b	0x10000dce <<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut::hc04f38d04af75219+0x1e> @ imm = #-0x2
10000dce: 9801         	ldr	r0, [sp, #0x4]
10000dd0: 9902         	ldr	r1, [sp, #0x8]
10000dd2: 9109         	str	r1, [sp, #0x24]
10000dd4: 900a         	str	r0, [sp, #0x28]
10000dd6: e004         	b	0x10000de2 <<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut::hc04f38d04af75219+0x32> @ imm = #0x8
10000dd8: 9a00         	ldr	r2, [sp]
10000dda: 9901         	ldr	r1, [sp, #0x4]
10000ddc: 9803         	ldr	r0, [sp, #0xc]
10000dde: f00c f8a3    	bl	0x1000cf28 <core::slice::index::slice_start_index_len_fail::hb969d35d0a5d5e22> @ imm = #0xc146
10000de2: 9a01         	ldr	r2, [sp, #0x4]
10000de4: 9803         	ldr	r0, [sp, #0xc]
10000de6: 4611         	mov	r1, r2
10000de8: f7ff fa12    	bl	0x10000210 <<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check::h58d65beb6583d8af> @ imm = #-0xbdc
10000dec: e7ff         	b	0x10000dee <<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut::hc04f38d04af75219+0x3e> @ imm = #-0x2
10000dee: 9802         	ldr	r0, [sp, #0x8]
10000df0: 9a03         	ldr	r2, [sp, #0xc]
10000df2: 9901         	ldr	r1, [sp, #0x4]
10000df4: 1a89         	subs	r1, r1, r2
10000df6: 910b         	str	r1, [sp, #0x2c]
10000df8: 00d2         	lsls	r2, r2, #0x3
10000dfa: 1880         	adds	r0, r0, r2
10000dfc: b00c         	add	sp, #0x30
10000dfe: bd80         	pop	{r7, pc}

10000e00 <<rp2040_hal::gpio::func::FunctionSio<C> as rp2040_hal::gpio::func::func_sealed::Function>::from::h535dbebc6a567b08>:
10000e00: b580         	push	{r7, lr}
10000e02: af00         	add	r7, sp, #0x0
10000e04: b081         	sub	sp, #0x4
10000e06: 4669         	mov	r1, sp
10000e08: 7008         	strb	r0, [r1]
10000e0a: b001         	add	sp, #0x4
10000e0c: bd80         	pop	{r7, pc}

10000e0e <<rp2040_hal::gpio::func::FunctionSio<C> as rp2040_hal::gpio::func::func_sealed::Function>::from::ha81f40c7a944c9a5>:
10000e0e: b580         	push	{r7, lr}
10000e10: af00         	add	r7, sp, #0x0
10000e12: b081         	sub	sp, #0x4
10000e14: 4669         	mov	r1, sp
10000e16: 7008         	strb	r0, [r1]
10000e18: b001         	add	sp, #0x4
10000e1a: bd80         	pop	{r7, pc}

10000e1c <<rp2040_hal::gpio::func::FunctionSio<C> as rp2040_hal::gpio::func::func_sealed::Function>::as_dyn::h23edb71aeec5e55d>:
10000e1c: b580         	push	{r7, lr}
10000e1e: af00         	add	r7, sp, #0x0
10000e20: b082         	sub	sp, #0x8
10000e22: 9001         	str	r0, [sp, #0x4]
10000e24: 4669         	mov	r1, sp
10000e26: 2000         	movs	r0, #0x0
10000e28: 7008         	strb	r0, [r1]
10000e2a: 9800         	ldr	r0, [sp]
10000e2c: b002         	add	sp, #0x8
10000e2e: bd80         	pop	{r7, pc}

10000e30 <<rp2040_hal::gpio::func::FunctionSio<C> as rp2040_hal::gpio::func::func_sealed::Function>::as_dyn::haa6b5a42bf8230a2>:
10000e30: b580         	push	{r7, lr}
10000e32: af00         	add	r7, sp, #0x0
10000e34: b082         	sub	sp, #0x8
10000e36: 9001         	str	r0, [sp, #0x4]
10000e38: 4669         	mov	r1, sp
10000e3a: 2001         	movs	r0, #0x1
10000e3c: 7008         	strb	r0, [r1]
10000e3e: 9800         	ldr	r0, [sp]
10000e40: b002         	add	sp, #0x8
10000e42: bd80         	pop	{r7, pc}

10000e44 <<fugit::duration::Duration<u32,_,_> as core::cmp::PartialOrd<fugit::duration::Duration<u32,_,_>>>::partial_cmp::h3c3c1ec1cfb18d7a>:
10000e44: b580         	push	{r7, lr}
10000e46: af00         	add	r7, sp, #0x0
10000e48: b082         	sub	sp, #0x8
10000e4a: 9000         	str	r0, [sp]
10000e4c: 9101         	str	r1, [sp, #0x4]
10000e4e: 6800         	ldr	r0, [r0]
10000e50: 6809         	ldr	r1, [r1]
10000e52: f000 fee5    	bl	0x10001c20 <fugit::duration::Duration<u32,_,_>::const_partial_cmp::hc60f83a5d13cacba> @ imm = #0xdca
10000e56: b002         	add	sp, #0x8
10000e58: bd80         	pop	{r7, pc}

10000e5a <rtic_monotonic::Monotonic::on_interrupt::h311b9700b730bc05>:
10000e5a: b580         	push	{r7, lr}
10000e5c: af00         	add	r7, sp, #0x0
10000e5e: b081         	sub	sp, #0x4
10000e60: 9000         	str	r0, [sp]
10000e62: b001         	add	sp, #0x4
10000e64: bd80         	pop	{r7, pc}

10000e66 <<rp2040_hal::gpio::Pin<I,rp2040_hal::gpio::func::FunctionSio<rp2040_hal::gpio::func::SioOutput>,P> as embedded_hal::digital::v2::OutputPin>::set_low::h75b76ba797047269>:
10000e66: b580         	push	{r7, lr}
10000e68: af00         	add	r7, sp, #0x0
10000e6a: b082         	sub	sp, #0x8
10000e6c: 9001         	str	r0, [sp, #0x4]
10000e6e: f7ff fadd    	bl	0x1000042c <rp2040_hal::gpio::Pin<I,F,P>::_set_low::hcce8f4909c816b8d> @ imm = #-0xa46
10000e72: b002         	add	sp, #0x8
10000e74: bd80         	pop	{r7, pc}

10000e76 <<&T as core::fmt::Debug>::fmt::h5a2cac748cc6bbf7>:
10000e76: b580         	push	{r7, lr}
10000e78: af00         	add	r7, sp, #0x0
10000e7a: b082         	sub	sp, #0x8
10000e7c: 9000         	str	r0, [sp]
10000e7e: 9101         	str	r1, [sp, #0x4]
10000e80: 6800         	ldr	r0, [r0]
10000e82: f000 f9d8    	bl	0x10001236 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h223c6d823ee77f6c> @ imm = #0x3b0
10000e86: b002         	add	sp, #0x8
10000e88: bd80         	pop	{r7, pc}

10000e8a <<u32 as core::ops::bit::Not>::not::h922d2d19093bc4d3>:
10000e8a: b580         	push	{r7, lr}
10000e8c: af00         	add	r7, sp, #0x0
10000e8e: b081         	sub	sp, #0x4
10000e90: 9000         	str	r0, [sp]
10000e92: 43c0         	mvns	r0, r0
10000e94: b001         	add	sp, #0x4
10000e96: bd80         	pop	{r7, pc}

10000e98 <<T as layout_trait::GetLayout>::get_layout::h17a528a37aac9b42>:
10000e98: b580         	push	{r7, lr}
10000e9a: af00         	add	r7, sp, #0x0
10000e9c: b08a         	sub	sp, #0x28
10000e9e: 9101         	str	r1, [sp, #0x4]
10000ea0: 9002         	str	r0, [sp, #0x8]
10000ea2: 9006         	str	r0, [sp, #0x18]
10000ea4: 9107         	str	r1, [sp, #0x1c]
10000ea6: f000 f9f2    	bl	0x1000128e <core::mem::size_of_val::h1df4851ea17aa61e> @ imm = #0x3e4
10000eaa: 9901         	ldr	r1, [sp, #0x4]
10000eac: 9a02         	ldr	r2, [sp, #0x8]
10000eae: 4603         	mov	r3, r0
10000eb0: a803         	add	r0, sp, #0xc
10000eb2: f001 fde3    	bl	0x10002a7c <heapless::vec::Vec<T,_>::push::h1bc527dcf9fef357> @ imm = #0x1bc6
10000eb6: 9803         	ldr	r0, [sp, #0xc]
10000eb8: 2800         	cmp	r0, #0x0
10000eba: d00c         	beq	0x10000ed6 <<T as layout_trait::GetLayout>::get_layout::h17a528a37aac9b42+0x3e> @ imm = #0x18
10000ebc: e7ff         	b	0x10000ebe <<T as layout_trait::GetLayout>::get_layout::h17a528a37aac9b42+0x26> @ imm = #-0x2
10000ebe: 9904         	ldr	r1, [sp, #0x10]
10000ec0: 9805         	ldr	r0, [sp, #0x14]
10000ec2: 9108         	str	r1, [sp, #0x20]
10000ec4: 9009         	str	r0, [sp, #0x24]
10000ec6: 4806         	ldr	r0, [pc, #0x18]         @ 0x10000ee0 <<T as layout_trait::GetLayout>::get_layout::h17a528a37aac9b42+0x48>
10000ec8: 9000         	str	r0, [sp]
10000eca: 4806         	ldr	r0, [pc, #0x18]         @ 0x10000ee4 <<T as layout_trait::GetLayout>::get_layout::h17a528a37aac9b42+0x4c>
10000ecc: 4b06         	ldr	r3, [pc, #0x18]         @ 0x10000ee8 <<T as layout_trait::GetLayout>::get_layout::h17a528a37aac9b42+0x50>
10000ece: 212b         	movs	r1, #0x2b
10000ed0: aa08         	add	r2, sp, #0x20
10000ed2: f00b fae5    	bl	0x1000c4a0 <core::result::unwrap_failed::hc39ba1cc7ce86577> @ imm = #0xb5ca
10000ed6: 9801         	ldr	r0, [sp, #0x4]
10000ed8: f000 f926    	bl	0x10001128 <<T as layout_trait::GetLayoutType>::get_layout_type::h77061893e023a894> @ imm = #0x24c
10000edc: b00a         	add	sp, #0x28
10000ede: bd80         	pop	{r7, pc}
10000ee0: 6c df 00 10  	.word	0x1000df6c
10000ee4: a4 e4 00 10  	.word	0x1000e4a4
10000ee8: 94 e4 00 10  	.word	0x1000e494

10000eec <<T as layout_trait::GetLayout>::get_layout::h30876be8ccb0ab03>:
10000eec: b580         	push	{r7, lr}
10000eee: af00         	add	r7, sp, #0x0
10000ef0: b08a         	sub	sp, #0x28
10000ef2: 9101         	str	r1, [sp, #0x4]
10000ef4: 9002         	str	r0, [sp, #0x8]
10000ef6: 9006         	str	r0, [sp, #0x18]
10000ef8: 9107         	str	r1, [sp, #0x1c]
10000efa: f000 f9f6    	bl	0x100012ea <core::mem::size_of_val::hba660b23e10ef8d5> @ imm = #0x3ec
10000efe: 9901         	ldr	r1, [sp, #0x4]
10000f00: 9a02         	ldr	r2, [sp, #0x8]
10000f02: 4603         	mov	r3, r0
10000f04: a803         	add	r0, sp, #0xc
10000f06: f001 fdb9    	bl	0x10002a7c <heapless::vec::Vec<T,_>::push::h1bc527dcf9fef357> @ imm = #0x1b72
10000f0a: 9803         	ldr	r0, [sp, #0xc]
10000f0c: 2800         	cmp	r0, #0x0
10000f0e: d00c         	beq	0x10000f2a <<T as layout_trait::GetLayout>::get_layout::h30876be8ccb0ab03+0x3e> @ imm = #0x18
10000f10: e7ff         	b	0x10000f12 <<T as layout_trait::GetLayout>::get_layout::h30876be8ccb0ab03+0x26> @ imm = #-0x2
10000f12: 9904         	ldr	r1, [sp, #0x10]
10000f14: 9805         	ldr	r0, [sp, #0x14]
10000f16: 9108         	str	r1, [sp, #0x20]
10000f18: 9009         	str	r0, [sp, #0x24]
10000f1a: 4806         	ldr	r0, [pc, #0x18]         @ 0x10000f34 <<T as layout_trait::GetLayout>::get_layout::h30876be8ccb0ab03+0x48>
10000f1c: 9000         	str	r0, [sp]
10000f1e: 4806         	ldr	r0, [pc, #0x18]         @ 0x10000f38 <<T as layout_trait::GetLayout>::get_layout::h30876be8ccb0ab03+0x4c>
10000f20: 4b06         	ldr	r3, [pc, #0x18]         @ 0x10000f3c <<T as layout_trait::GetLayout>::get_layout::h30876be8ccb0ab03+0x50>
10000f22: 212b         	movs	r1, #0x2b
10000f24: aa08         	add	r2, sp, #0x20
10000f26: f00b fabb    	bl	0x1000c4a0 <core::result::unwrap_failed::hc39ba1cc7ce86577> @ imm = #0xb576
10000f2a: 9801         	ldr	r0, [sp, #0x4]
10000f2c: f000 f90e    	bl	0x1000114c <<T as layout_trait::GetLayoutType>::get_layout_type::hdf4d42ff1dfdd582> @ imm = #0x21c
10000f30: b00a         	add	sp, #0x28
10000f32: bd80         	pop	{r7, pc}
10000f34: 6c df 00 10  	.word	0x1000df6c
10000f38: a4 e4 00 10  	.word	0x1000e4a4
10000f3c: 94 e4 00 10  	.word	0x1000e494

10000f40 <<T as layout_trait::GetLayout>::get_layout::h7c5802084d9f9473>:
10000f40: b580         	push	{r7, lr}
10000f42: af00         	add	r7, sp, #0x0
10000f44: b08a         	sub	sp, #0x28
10000f46: 9101         	str	r1, [sp, #0x4]
10000f48: 9002         	str	r0, [sp, #0x8]
10000f4a: 9006         	str	r0, [sp, #0x18]
10000f4c: 9107         	str	r1, [sp, #0x1c]
10000f4e: f000 f9ba    	bl	0x100012c6 <core::mem::size_of_val::h8da5c8b1840583e0> @ imm = #0x374
10000f52: 9901         	ldr	r1, [sp, #0x4]
10000f54: 9a02         	ldr	r2, [sp, #0x8]
10000f56: 4603         	mov	r3, r0
10000f58: a803         	add	r0, sp, #0xc
10000f5a: f001 fd8f    	bl	0x10002a7c <heapless::vec::Vec<T,_>::push::h1bc527dcf9fef357> @ imm = #0x1b1e
10000f5e: 9803         	ldr	r0, [sp, #0xc]
10000f60: 2800         	cmp	r0, #0x0
10000f62: d00c         	beq	0x10000f7e <<T as layout_trait::GetLayout>::get_layout::h7c5802084d9f9473+0x3e> @ imm = #0x18
10000f64: e7ff         	b	0x10000f66 <<T as layout_trait::GetLayout>::get_layout::h7c5802084d9f9473+0x26> @ imm = #-0x2
10000f66: 9904         	ldr	r1, [sp, #0x10]
10000f68: 9805         	ldr	r0, [sp, #0x14]
10000f6a: 9108         	str	r1, [sp, #0x20]
10000f6c: 9009         	str	r0, [sp, #0x24]
10000f6e: 4806         	ldr	r0, [pc, #0x18]         @ 0x10000f88 <<T as layout_trait::GetLayout>::get_layout::h7c5802084d9f9473+0x48>
10000f70: 9000         	str	r0, [sp]
10000f72: 4806         	ldr	r0, [pc, #0x18]         @ 0x10000f8c <<T as layout_trait::GetLayout>::get_layout::h7c5802084d9f9473+0x4c>
10000f74: 4b06         	ldr	r3, [pc, #0x18]         @ 0x10000f90 <<T as layout_trait::GetLayout>::get_layout::h7c5802084d9f9473+0x50>
10000f76: 212b         	movs	r1, #0x2b
10000f78: aa08         	add	r2, sp, #0x20
10000f7a: f00b fa91    	bl	0x1000c4a0 <core::result::unwrap_failed::hc39ba1cc7ce86577> @ imm = #0xb522
10000f7e: 9801         	ldr	r0, [sp, #0x4]
10000f80: f000 f8cc    	bl	0x1000111c <<T as layout_trait::GetLayoutType>::get_layout_type::h4e98ed258d2e666e> @ imm = #0x198
10000f84: b00a         	add	sp, #0x28
10000f86: bd80         	pop	{r7, pc}
10000f88: 6c df 00 10  	.word	0x1000df6c
10000f8c: a4 e4 00 10  	.word	0x1000e4a4
10000f90: 94 e4 00 10  	.word	0x1000e494

10000f94 <<T as layout_trait::GetLayout>::get_layout::ha1c1734ec0f71be3>:
10000f94: b580         	push	{r7, lr}
10000f96: af00         	add	r7, sp, #0x0
10000f98: b08a         	sub	sp, #0x28
10000f9a: 9101         	str	r1, [sp, #0x4]
10000f9c: 9002         	str	r0, [sp, #0x8]
10000f9e: 9006         	str	r0, [sp, #0x18]
10000fa0: 9107         	str	r1, [sp, #0x1c]
10000fa2: f000 f9ab    	bl	0x100012fc <core::mem::size_of_val::hce90b878247c87be> @ imm = #0x356
10000fa6: 9901         	ldr	r1, [sp, #0x4]
10000fa8: 9a02         	ldr	r2, [sp, #0x8]
10000faa: 4603         	mov	r3, r0
10000fac: a803         	add	r0, sp, #0xc
10000fae: f001 fd65    	bl	0x10002a7c <heapless::vec::Vec<T,_>::push::h1bc527dcf9fef357> @ imm = #0x1aca
10000fb2: 9803         	ldr	r0, [sp, #0xc]
10000fb4: 2800         	cmp	r0, #0x0
10000fb6: d00c         	beq	0x10000fd2 <<T as layout_trait::GetLayout>::get_layout::ha1c1734ec0f71be3+0x3e> @ imm = #0x18
10000fb8: e7ff         	b	0x10000fba <<T as layout_trait::GetLayout>::get_layout::ha1c1734ec0f71be3+0x26> @ imm = #-0x2
10000fba: 9904         	ldr	r1, [sp, #0x10]
10000fbc: 9805         	ldr	r0, [sp, #0x14]
10000fbe: 9108         	str	r1, [sp, #0x20]
10000fc0: 9009         	str	r0, [sp, #0x24]
10000fc2: 4806         	ldr	r0, [pc, #0x18]         @ 0x10000fdc <<T as layout_trait::GetLayout>::get_layout::ha1c1734ec0f71be3+0x48>
10000fc4: 9000         	str	r0, [sp]
10000fc6: 4806         	ldr	r0, [pc, #0x18]         @ 0x10000fe0 <<T as layout_trait::GetLayout>::get_layout::ha1c1734ec0f71be3+0x4c>
10000fc8: 4b06         	ldr	r3, [pc, #0x18]         @ 0x10000fe4 <<T as layout_trait::GetLayout>::get_layout::ha1c1734ec0f71be3+0x50>
10000fca: 212b         	movs	r1, #0x2b
10000fcc: aa08         	add	r2, sp, #0x20
10000fce: f00b fa67    	bl	0x1000c4a0 <core::result::unwrap_failed::hc39ba1cc7ce86577> @ imm = #0xb4ce
10000fd2: 9801         	ldr	r0, [sp, #0x4]
10000fd4: f000 f896    	bl	0x10001104 <<T as layout_trait::GetLayoutType>::get_layout_type::h4472156f36c8f5e1> @ imm = #0x12c
10000fd8: b00a         	add	sp, #0x28
10000fda: bd80         	pop	{r7, pc}
10000fdc: 6c df 00 10  	.word	0x1000df6c
10000fe0: a4 e4 00 10  	.word	0x1000e4a4
10000fe4: 94 e4 00 10  	.word	0x1000e494

10000fe8 <<T as layout_trait::GetLayout>::get_layout::ha50e1ca383e9570e>:
10000fe8: b580         	push	{r7, lr}
10000fea: af00         	add	r7, sp, #0x0
10000fec: b08a         	sub	sp, #0x28
10000fee: 9101         	str	r1, [sp, #0x4]
10000ff0: 9002         	str	r0, [sp, #0x8]
10000ff2: 9006         	str	r0, [sp, #0x18]
10000ff4: 9107         	str	r1, [sp, #0x1c]
10000ff6: f000 f98a    	bl	0x1000130e <core::mem::size_of_val::hd5a13f76d3195096> @ imm = #0x314
10000ffa: 9901         	ldr	r1, [sp, #0x4]
10000ffc: 9a02         	ldr	r2, [sp, #0x8]
10000ffe: 4603         	mov	r3, r0
10001000: a803         	add	r0, sp, #0xc
10001002: f001 fd3b    	bl	0x10002a7c <heapless::vec::Vec<T,_>::push::h1bc527dcf9fef357> @ imm = #0x1a76
10001006: 9803         	ldr	r0, [sp, #0xc]
10001008: 2800         	cmp	r0, #0x0
1000100a: d00c         	beq	0x10001026 <<T as layout_trait::GetLayout>::get_layout::ha50e1ca383e9570e+0x3e> @ imm = #0x18
1000100c: e7ff         	b	0x1000100e <<T as layout_trait::GetLayout>::get_layout::ha50e1ca383e9570e+0x26> @ imm = #-0x2
1000100e: 9904         	ldr	r1, [sp, #0x10]
10001010: 9805         	ldr	r0, [sp, #0x14]
10001012: 9108         	str	r1, [sp, #0x20]
10001014: 9009         	str	r0, [sp, #0x24]
10001016: 4806         	ldr	r0, [pc, #0x18]         @ 0x10001030 <<T as layout_trait::GetLayout>::get_layout::ha50e1ca383e9570e+0x48>
10001018: 9000         	str	r0, [sp]
1000101a: 4806         	ldr	r0, [pc, #0x18]         @ 0x10001034 <<T as layout_trait::GetLayout>::get_layout::ha50e1ca383e9570e+0x4c>
1000101c: 4b06         	ldr	r3, [pc, #0x18]         @ 0x10001038 <<T as layout_trait::GetLayout>::get_layout::ha50e1ca383e9570e+0x50>
1000101e: 212b         	movs	r1, #0x2b
10001020: aa08         	add	r2, sp, #0x20
10001022: f00b fa3d    	bl	0x1000c4a0 <core::result::unwrap_failed::hc39ba1cc7ce86577> @ imm = #0xb47a
10001026: 9801         	ldr	r0, [sp, #0x4]
10001028: f000 f88a    	bl	0x10001140 <<T as layout_trait::GetLayoutType>::get_layout_type::hd48a2cd5760b6d62> @ imm = #0x114
1000102c: b00a         	add	sp, #0x28
1000102e: bd80         	pop	{r7, pc}
10001030: 6c df 00 10  	.word	0x1000df6c
10001034: a4 e4 00 10  	.word	0x1000e4a4
10001038: 94 e4 00 10  	.word	0x1000e494

1000103c <<T as layout_trait::GetLayout>::get_layout::had50d17bd079242a>:
1000103c: b580         	push	{r7, lr}
1000103e: af00         	add	r7, sp, #0x0
10001040: b08a         	sub	sp, #0x28
10001042: 9101         	str	r1, [sp, #0x4]
10001044: 9002         	str	r0, [sp, #0x8]
10001046: 9006         	str	r0, [sp, #0x18]
10001048: 9107         	str	r1, [sp, #0x1c]
1000104a: f000 f929    	bl	0x100012a0 <core::mem::size_of_val::h3d6be92fe12a6af1> @ imm = #0x252
1000104e: 9901         	ldr	r1, [sp, #0x4]
10001050: 9a02         	ldr	r2, [sp, #0x8]
10001052: 4603         	mov	r3, r0
10001054: a803         	add	r0, sp, #0xc
10001056: f001 fd11    	bl	0x10002a7c <heapless::vec::Vec<T,_>::push::h1bc527dcf9fef357> @ imm = #0x1a22
1000105a: 9803         	ldr	r0, [sp, #0xc]
1000105c: 2800         	cmp	r0, #0x0
1000105e: d00c         	beq	0x1000107a <<T as layout_trait::GetLayout>::get_layout::had50d17bd079242a+0x3e> @ imm = #0x18
10001060: e7ff         	b	0x10001062 <<T as layout_trait::GetLayout>::get_layout::had50d17bd079242a+0x26> @ imm = #-0x2
10001062: 9904         	ldr	r1, [sp, #0x10]
10001064: 9805         	ldr	r0, [sp, #0x14]
10001066: 9108         	str	r1, [sp, #0x20]
10001068: 9009         	str	r0, [sp, #0x24]
1000106a: 4806         	ldr	r0, [pc, #0x18]         @ 0x10001084 <<T as layout_trait::GetLayout>::get_layout::had50d17bd079242a+0x48>
1000106c: 9000         	str	r0, [sp]
1000106e: 4806         	ldr	r0, [pc, #0x18]         @ 0x10001088 <<T as layout_trait::GetLayout>::get_layout::had50d17bd079242a+0x4c>
10001070: 4b06         	ldr	r3, [pc, #0x18]         @ 0x1000108c <<T as layout_trait::GetLayout>::get_layout::had50d17bd079242a+0x50>
10001072: 212b         	movs	r1, #0x2b
10001074: aa08         	add	r2, sp, #0x20
10001076: f00b fa13    	bl	0x1000c4a0 <core::result::unwrap_failed::hc39ba1cc7ce86577> @ imm = #0xb426
1000107a: 9801         	ldr	r0, [sp, #0x4]
1000107c: f000 f848    	bl	0x10001110 <<T as layout_trait::GetLayoutType>::get_layout_type::h49ba82c83c7202a7> @ imm = #0x90
10001080: b00a         	add	sp, #0x28
10001082: bd80         	pop	{r7, pc}
10001084: 6c df 00 10  	.word	0x1000df6c
10001088: a4 e4 00 10  	.word	0x1000e4a4
1000108c: 94 e4 00 10  	.word	0x1000e494

10001090 <<T as layout_trait::GetLayout>::get_layout::hd44a82498e86852e>:
10001090: b580         	push	{r7, lr}
10001092: af00         	add	r7, sp, #0x0
10001094: b08a         	sub	sp, #0x28
10001096: 9101         	str	r1, [sp, #0x4]
10001098: 9002         	str	r0, [sp, #0x8]
1000109a: 9006         	str	r0, [sp, #0x18]
1000109c: 9107         	str	r1, [sp, #0x1c]
1000109e: f000 f91b    	bl	0x100012d8 <core::mem::size_of_val::hb695c20a59563e63> @ imm = #0x236
100010a2: 9901         	ldr	r1, [sp, #0x4]
100010a4: 9a02         	ldr	r2, [sp, #0x8]
100010a6: 4603         	mov	r3, r0
100010a8: a803         	add	r0, sp, #0xc
100010aa: f001 fce7    	bl	0x10002a7c <heapless::vec::Vec<T,_>::push::h1bc527dcf9fef357> @ imm = #0x19ce
100010ae: 9803         	ldr	r0, [sp, #0xc]
100010b0: 2800         	cmp	r0, #0x0
100010b2: d00c         	beq	0x100010ce <<T as layout_trait::GetLayout>::get_layout::hd44a82498e86852e+0x3e> @ imm = #0x18
100010b4: e7ff         	b	0x100010b6 <<T as layout_trait::GetLayout>::get_layout::hd44a82498e86852e+0x26> @ imm = #-0x2
100010b6: 9904         	ldr	r1, [sp, #0x10]
100010b8: 9805         	ldr	r0, [sp, #0x14]
100010ba: 9108         	str	r1, [sp, #0x20]
100010bc: 9009         	str	r0, [sp, #0x24]
100010be: 4806         	ldr	r0, [pc, #0x18]         @ 0x100010d8 <<T as layout_trait::GetLayout>::get_layout::hd44a82498e86852e+0x48>
100010c0: 9000         	str	r0, [sp]
100010c2: 4806         	ldr	r0, [pc, #0x18]         @ 0x100010dc <<T as layout_trait::GetLayout>::get_layout::hd44a82498e86852e+0x4c>
100010c4: 4b06         	ldr	r3, [pc, #0x18]         @ 0x100010e0 <<T as layout_trait::GetLayout>::get_layout::hd44a82498e86852e+0x50>
100010c6: 212b         	movs	r1, #0x2b
100010c8: aa08         	add	r2, sp, #0x20
100010ca: f00b f9e9    	bl	0x1000c4a0 <core::result::unwrap_failed::hc39ba1cc7ce86577> @ imm = #0xb3d2
100010ce: 9801         	ldr	r0, [sp, #0x4]
100010d0: f000 f830    	bl	0x10001134 <<T as layout_trait::GetLayoutType>::get_layout_type::hb8e71206dbb77006> @ imm = #0x60
100010d4: b00a         	add	sp, #0x28
100010d6: bd80         	pop	{r7, pc}
100010d8: 6c df 00 10  	.word	0x1000df6c
100010dc: a4 e4 00 10  	.word	0x1000e4a4
100010e0: 94 e4 00 10  	.word	0x1000e494

100010e4 <<u32 as core::ops::bit::BitOr>::bitor::hc19b6201bc9ccf34>:
100010e4: b580         	push	{r7, lr}
100010e6: af00         	add	r7, sp, #0x0
100010e8: b082         	sub	sp, #0x8
100010ea: 9000         	str	r0, [sp]
100010ec: 9101         	str	r1, [sp, #0x4]
100010ee: 4308         	orrs	r0, r1
100010f0: b002         	add	sp, #0x8
100010f2: bd80         	pop	{r7, pc}

100010f4 <<u32 as core::ops::bit::BitAnd>::bitand::ha5903953a49e11fb>:
100010f4: b580         	push	{r7, lr}
100010f6: af00         	add	r7, sp, #0x0
100010f8: b082         	sub	sp, #0x8
100010fa: 9000         	str	r0, [sp]
100010fc: 9101         	str	r1, [sp, #0x4]
100010fe: 4008         	ands	r0, r1
10001100: b002         	add	sp, #0x8
10001102: bd80         	pop	{r7, pc}

10001104 <<T as layout_trait::GetLayoutType>::get_layout_type::h4472156f36c8f5e1>:
10001104: b580         	push	{r7, lr}
10001106: af00         	add	r7, sp, #0x0
10001108: b081         	sub	sp, #0x4
1000110a: 9000         	str	r0, [sp]
1000110c: b001         	add	sp, #0x4
1000110e: bd80         	pop	{r7, pc}

10001110 <<T as layout_trait::GetLayoutType>::get_layout_type::h49ba82c83c7202a7>:
10001110: b580         	push	{r7, lr}
10001112: af00         	add	r7, sp, #0x0
10001114: b081         	sub	sp, #0x4
10001116: 9000         	str	r0, [sp]
10001118: b001         	add	sp, #0x4
1000111a: bd80         	pop	{r7, pc}

1000111c <<T as layout_trait::GetLayoutType>::get_layout_type::h4e98ed258d2e666e>:
1000111c: b580         	push	{r7, lr}
1000111e: af00         	add	r7, sp, #0x0
10001120: b081         	sub	sp, #0x4
10001122: 9000         	str	r0, [sp]
10001124: b001         	add	sp, #0x4
10001126: bd80         	pop	{r7, pc}

10001128 <<T as layout_trait::GetLayoutType>::get_layout_type::h77061893e023a894>:
10001128: b580         	push	{r7, lr}
1000112a: af00         	add	r7, sp, #0x0
1000112c: b081         	sub	sp, #0x4
1000112e: 9000         	str	r0, [sp]
10001130: b001         	add	sp, #0x4
10001132: bd80         	pop	{r7, pc}

10001134 <<T as layout_trait::GetLayoutType>::get_layout_type::hb8e71206dbb77006>:
10001134: b580         	push	{r7, lr}
10001136: af00         	add	r7, sp, #0x0
10001138: b081         	sub	sp, #0x4
1000113a: 9000         	str	r0, [sp]
1000113c: b001         	add	sp, #0x4
1000113e: bd80         	pop	{r7, pc}

10001140 <<T as layout_trait::GetLayoutType>::get_layout_type::hd48a2cd5760b6d62>:
10001140: b580         	push	{r7, lr}
10001142: af00         	add	r7, sp, #0x0
10001144: b081         	sub	sp, #0x4
10001146: 9000         	str	r0, [sp]
10001148: b001         	add	sp, #0x4
1000114a: bd80         	pop	{r7, pc}

1000114c <<T as layout_trait::GetLayoutType>::get_layout_type::hdf4d42ff1dfdd582>:
1000114c: b580         	push	{r7, lr}
1000114e: af00         	add	r7, sp, #0x0
10001150: b081         	sub	sp, #0x4
10001152: 9000         	str	r0, [sp]
10001154: b001         	add	sp, #0x4
10001156: bd80         	pop	{r7, pc}

10001158 <core::cmp::PartialOrd::le::h1fc900183218eeca>:
10001158: b580         	push	{r7, lr}
1000115a: af00         	add	r7, sp, #0x0
1000115c: b084         	sub	sp, #0x10
1000115e: 9002         	str	r0, [sp, #0x8]
10001160: 9103         	str	r1, [sp, #0xc]
10001162: f006 f94f    	bl	0x10007404 <<fugit::instant::Instant<u64,_,_> as core::cmp::PartialOrd>::partial_cmp::hafcb750f0d1dd699> @ imm = #0x629e
10001166: 4601         	mov	r1, r0
10001168: a801         	add	r0, sp, #0x4
1000116a: 7001         	strb	r1, [r0]
1000116c: 7800         	ldrb	r0, [r0]
1000116e: 2802         	cmp	r0, #0x2
10001170: d007         	beq	0x10001182 <core::cmp::PartialOrd::le::h1fc900183218eeca+0x2a> @ imm = #0xe
10001172: e7ff         	b	0x10001174 <core::cmp::PartialOrd::le::h1fc900183218eeca+0x1c> @ imm = #-0x2
10001174: a801         	add	r0, sp, #0x4
10001176: 7800         	ldrb	r0, [r0]
10001178: 1c40         	adds	r0, r0, #0x1
1000117a: b2c0         	uxtb	r0, r0
1000117c: 2802         	cmp	r0, #0x2
1000117e: d305         	blo	0x1000118c <core::cmp::PartialOrd::le::h1fc900183218eeca+0x34> @ imm = #0xa
10001180: e7ff         	b	0x10001182 <core::cmp::PartialOrd::le::h1fc900183218eeca+0x2a> @ imm = #-0x2
10001182: 4669         	mov	r1, sp
10001184: 2000         	movs	r0, #0x0
10001186: 7008         	strb	r0, [r1]
10001188: e004         	b	0x10001194 <core::cmp::PartialOrd::le::h1fc900183218eeca+0x3c> @ imm = #0x8
1000118a: defe         	trap
1000118c: 4669         	mov	r1, sp
1000118e: 2001         	movs	r0, #0x1
10001190: 7008         	strb	r0, [r1]
10001192: e7ff         	b	0x10001194 <core::cmp::PartialOrd::le::h1fc900183218eeca+0x3c> @ imm = #-0x2
10001194: 4668         	mov	r0, sp
10001196: 7800         	ldrb	r0, [r0]
10001198: b004         	add	sp, #0x10
1000119a: bd80         	pop	{r7, pc}

1000119c <core::cmp::PartialOrd::lt::hff4ecefc611a2f73>:
1000119c: b580         	push	{r7, lr}
1000119e: af00         	add	r7, sp, #0x0
100011a0: b084         	sub	sp, #0x10
100011a2: 9002         	str	r0, [sp, #0x8]
100011a4: 9103         	str	r1, [sp, #0xc]
100011a6: f7ff fe4d    	bl	0x10000e44 <<fugit::duration::Duration<u32,_,_> as core::cmp::PartialOrd<fugit::duration::Duration<u32,_,_>>>::partial_cmp::h3c3c1ec1cfb18d7a> @ imm = #-0x366
100011aa: 4601         	mov	r1, r0
100011ac: a801         	add	r0, sp, #0x4
100011ae: 7001         	strb	r1, [r0]
100011b0: 7800         	ldrb	r0, [r0]
100011b2: 2802         	cmp	r0, #0x2
100011b4: d008         	beq	0x100011c8 <core::cmp::PartialOrd::lt::hff4ecefc611a2f73+0x2c> @ imm = #0x10
100011b6: e7ff         	b	0x100011b8 <core::cmp::PartialOrd::lt::hff4ecefc611a2f73+0x1c> @ imm = #-0x2
100011b8: a801         	add	r0, sp, #0x4
100011ba: 7800         	ldrb	r0, [r0]
100011bc: 38ff         	subs	r0, #0xff
100011be: 4241         	rsbs	r1, r0, #0
100011c0: 4148         	adcs	r0, r1
100011c2: 4669         	mov	r1, sp
100011c4: 7008         	strb	r0, [r1]
100011c6: e003         	b	0x100011d0 <core::cmp::PartialOrd::lt::hff4ecefc611a2f73+0x34> @ imm = #0x6
100011c8: 4669         	mov	r1, sp
100011ca: 2000         	movs	r0, #0x0
100011cc: 7008         	strb	r0, [r1]
100011ce: e7ff         	b	0x100011d0 <core::cmp::PartialOrd::lt::hff4ecefc611a2f73+0x34> @ imm = #-0x2
100011d0: 4668         	mov	r0, sp
100011d2: 7800         	ldrb	r0, [r0]
100011d4: b004         	add	sp, #0x10
100011d6: bd80         	pop	{r7, pc}

100011d8 <core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq::hc2f5e54f5070e4b6>:
100011d8: b580         	push	{r7, lr}
100011da: af00         	add	r7, sp, #0x0
100011dc: b082         	sub	sp, #0x8
100011de: 9000         	str	r0, [sp]
100011e0: 9101         	str	r1, [sp, #0x4]
100011e2: 6800         	ldr	r0, [r0]
100011e4: 6809         	ldr	r1, [r1]
100011e6: f001 f9b5    	bl	0x10002554 <<rp2040_hal::gpio::func::DynSioConfig as core::cmp::PartialEq>::eq::h3fa60c4486b831f9> @ imm = #0x136a
100011ea: b002         	add	sp, #0x8
100011ec: bd80         	pop	{r7, pc}

100011ee <core::cmp::PartialEq::ne::h666d04005e67d501>:
100011ee: b580         	push	{r7, lr}
100011f0: af00         	add	r7, sp, #0x0
100011f2: b082         	sub	sp, #0x8
100011f4: 9000         	str	r0, [sp]
100011f6: 9101         	str	r1, [sp, #0x4]
100011f8: f001 f934    	bl	0x10002464 <<rp2040_hal::gpio::func::DynFunction as core::cmp::PartialEq>::eq::h06d6c709647a16ba> @ imm = #0x1268
100011fc: 2101         	movs	r1, #0x1
100011fe: 4048         	eors	r0, r1
10001200: b002         	add	sp, #0x8
10001202: bd80         	pop	{r7, pc}

10001204 <core::cmp::PartialEq::ne::h67a65f5fb613986a>:
10001204: b580         	push	{r7, lr}
10001206: af00         	add	r7, sp, #0x0
10001208: b082         	sub	sp, #0x8
1000120a: 9000         	str	r0, [sp]
1000120c: 9101         	str	r1, [sp, #0x4]
1000120e: f001 f985    	bl	0x1000251c <<rp2040_hal::gpio::pull::DynPullType as core::cmp::PartialEq>::eq::hf94938c47a02f71f> @ imm = #0x130a
10001212: 2101         	movs	r1, #0x1
10001214: 4048         	eors	r0, r1
10001216: b002         	add	sp, #0x8
10001218: bd80         	pop	{r7, pc}

1000121a <core::cmp::PartialEq::ne::hea4d3e7e978441a8>:
1000121a: b580         	push	{r7, lr}
1000121c: af00         	add	r7, sp, #0x0
1000121e: b082         	sub	sp, #0x8
10001220: 9000         	str	r0, [sp]
10001222: 9101         	str	r1, [sp, #0x4]
10001224: f001 f9f8    	bl	0x10002618 <<rp2040_pac::io_bank0::gpio::gpio_ctrl::FUNCSEL_A as core::cmp::PartialEq>::eq::h2f7a071112dce480> @ imm = #0x13f0
10001228: 2101         	movs	r1, #0x1
1000122a: 4048         	eors	r0, r1
1000122c: b002         	add	sp, #0x8
1000122e: bd80         	pop	{r7, pc}

10001230 <core::fmt::rt::Argument::none::h7ec904d04eb9bd64>:
10001230: b580         	push	{r7, lr}
10001232: af00         	add	r7, sp, #0x0
10001234: bd80         	pop	{r7, pc}

10001236 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h223c6d823ee77f6c>:
10001236: b580         	push	{r7, lr}
10001238: af00         	add	r7, sp, #0x0
1000123a: b086         	sub	sp, #0x18
1000123c: 9101         	str	r1, [sp, #0x4]
1000123e: 9002         	str	r0, [sp, #0x8]
10001240: 9004         	str	r0, [sp, #0x10]
10001242: 9105         	str	r1, [sp, #0x14]
10001244: 7d08         	ldrb	r0, [r1, #0x14]
10001246: 06c0         	lsls	r0, r0, #0x1b
10001248: 2800         	cmp	r0, #0x0
1000124a: d406         	bmi	0x1000125a <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h223c6d823ee77f6c+0x24> @ imm = #0xc
1000124c: e7ff         	b	0x1000124e <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h223c6d823ee77f6c+0x18> @ imm = #-0x2
1000124e: 9801         	ldr	r0, [sp, #0x4]
10001250: 7d00         	ldrb	r0, [r0, #0x14]
10001252: 0680         	lsls	r0, r0, #0x1a
10001254: 2800         	cmp	r0, #0x0
10001256: d507         	bpl	0x10001268 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h223c6d823ee77f6c+0x32> @ imm = #0xe
10001258: e00d         	b	0x10001276 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h223c6d823ee77f6c+0x40> @ imm = #0x1a
1000125a: 9901         	ldr	r1, [sp, #0x4]
1000125c: 9802         	ldr	r0, [sp, #0x8]
1000125e: f00c f941    	bl	0x1000d4e4 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hb92c8b48db2d2494> @ imm = #0xc282
10001262: a903         	add	r1, sp, #0xc
10001264: 7008         	strb	r0, [r1]
10001266: e00e         	b	0x10001286 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h223c6d823ee77f6c+0x50> @ imm = #0x1c
10001268: 9901         	ldr	r1, [sp, #0x4]
1000126a: 9802         	ldr	r0, [sp, #0x8]
1000126c: f00c f9a6    	bl	0x1000d5bc <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h7d999e7a287a22d7> @ imm = #0xc34c
10001270: a903         	add	r1, sp, #0xc
10001272: 7008         	strb	r0, [r1]
10001274: e006         	b	0x10001284 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h223c6d823ee77f6c+0x4e> @ imm = #0xc
10001276: 9901         	ldr	r1, [sp, #0x4]
10001278: 9802         	ldr	r0, [sp, #0x8]
1000127a: f00c f969    	bl	0x1000d550 <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::hbb67dfb2459cb522> @ imm = #0xc2d2
1000127e: a903         	add	r1, sp, #0xc
10001280: 7008         	strb	r0, [r1]
10001282: e7ff         	b	0x10001284 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h223c6d823ee77f6c+0x4e> @ imm = #-0x2
10001284: e7ff         	b	0x10001286 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h223c6d823ee77f6c+0x50> @ imm = #-0x2
10001286: a803         	add	r0, sp, #0xc
10001288: 7800         	ldrb	r0, [r0]
1000128a: b006         	add	sp, #0x18
1000128c: bd80         	pop	{r7, pc}

1000128e <core::mem::size_of_val::h1df4851ea17aa61e>:
1000128e: b580         	push	{r7, lr}
10001290: af00         	add	r7, sp, #0x0
10001292: b082         	sub	sp, #0x8
10001294: 9000         	str	r0, [sp]
10001296: 2001         	movs	r0, #0x1
10001298: 9001         	str	r0, [sp, #0x4]
1000129a: 9801         	ldr	r0, [sp, #0x4]
1000129c: b002         	add	sp, #0x8
1000129e: bd80         	pop	{r7, pc}

100012a0 <core::mem::size_of_val::h3d6be92fe12a6af1>:
100012a0: b580         	push	{r7, lr}
100012a2: af00         	add	r7, sp, #0x0
100012a4: b082         	sub	sp, #0x8
100012a6: 9000         	str	r0, [sp]
100012a8: 2001         	movs	r0, #0x1
100012aa: 9001         	str	r0, [sp, #0x4]
100012ac: 9801         	ldr	r0, [sp, #0x4]
100012ae: b002         	add	sp, #0x8
100012b0: bd80         	pop	{r7, pc}

100012b2 <core::mem::size_of_val::h525e65f28ed1fc04>:
100012b2: b580         	push	{r7, lr}
100012b4: af00         	add	r7, sp, #0x0
100012b6: b082         	sub	sp, #0x8
100012b8: 9000         	str	r0, [sp]
100012ba: 2019         	movs	r0, #0x19
100012bc: 0100         	lsls	r0, r0, #0x4
100012be: 9001         	str	r0, [sp, #0x4]
100012c0: 9801         	ldr	r0, [sp, #0x4]
100012c2: b002         	add	sp, #0x8
100012c4: bd80         	pop	{r7, pc}

100012c6 <core::mem::size_of_val::h8da5c8b1840583e0>:
100012c6: b580         	push	{r7, lr}
100012c8: af00         	add	r7, sp, #0x0
100012ca: b082         	sub	sp, #0x8
100012cc: 9000         	str	r0, [sp]
100012ce: 2000         	movs	r0, #0x0
100012d0: 9001         	str	r0, [sp, #0x4]
100012d2: 9801         	ldr	r0, [sp, #0x4]
100012d4: b002         	add	sp, #0x8
100012d6: bd80         	pop	{r7, pc}

100012d8 <core::mem::size_of_val::hb695c20a59563e63>:
100012d8: b580         	push	{r7, lr}
100012da: af00         	add	r7, sp, #0x0
100012dc: b082         	sub	sp, #0x8
100012de: 9000         	str	r0, [sp]
100012e0: 2000         	movs	r0, #0x0
100012e2: 9001         	str	r0, [sp, #0x4]
100012e4: 9801         	ldr	r0, [sp, #0x4]
100012e6: b002         	add	sp, #0x8
100012e8: bd80         	pop	{r7, pc}

100012ea <core::mem::size_of_val::hba660b23e10ef8d5>:
100012ea: b580         	push	{r7, lr}
100012ec: af00         	add	r7, sp, #0x0
100012ee: b082         	sub	sp, #0x8
100012f0: 9000         	str	r0, [sp]
100012f2: 2001         	movs	r0, #0x1
100012f4: 9001         	str	r0, [sp, #0x4]
100012f6: 9801         	ldr	r0, [sp, #0x4]
100012f8: b002         	add	sp, #0x8
100012fa: bd80         	pop	{r7, pc}

100012fc <core::mem::size_of_val::hce90b878247c87be>:
100012fc: b580         	push	{r7, lr}
100012fe: af00         	add	r7, sp, #0x0
10001300: b082         	sub	sp, #0x8
10001302: 9000         	str	r0, [sp]
10001304: 2000         	movs	r0, #0x0
10001306: 9001         	str	r0, [sp, #0x4]
10001308: 9801         	ldr	r0, [sp, #0x4]
1000130a: b002         	add	sp, #0x8
1000130c: bd80         	pop	{r7, pc}

1000130e <core::mem::size_of_val::hd5a13f76d3195096>:
1000130e: b580         	push	{r7, lr}
10001310: af00         	add	r7, sp, #0x0
10001312: b082         	sub	sp, #0x8
10001314: 9000         	str	r0, [sp]
10001316: 2000         	movs	r0, #0x0
10001318: 9001         	str	r0, [sp, #0x4]
1000131a: 9801         	ldr	r0, [sp, #0x4]
1000131c: b002         	add	sp, #0x8
1000131e: bd80         	pop	{r7, pc}

10001320 <core::mem::size_of_val::he0b11da83ee7ead6>:
10001320: b580         	push	{r7, lr}
10001322: af00         	add	r7, sp, #0x0
10001324: b082         	sub	sp, #0x8
10001326: 9000         	str	r0, [sp]
10001328: 2010         	movs	r0, #0x10
1000132a: 9001         	str	r0, [sp, #0x4]
1000132c: 9801         	ldr	r0, [sp, #0x4]
1000132e: b002         	add	sp, #0x8
10001330: bd80         	pop	{r7, pc}

10001332 <core::num::<impl u32>::checked_sub::h45d651da7253cb54>:
10001332: b580         	push	{r7, lr}
10001334: af00         	add	r7, sp, #0x0
10001336: b086         	sub	sp, #0x18
10001338: 9100         	str	r1, [sp]
1000133a: 9001         	str	r0, [sp, #0x4]
1000133c: 9004         	str	r0, [sp, #0x10]
1000133e: 9105         	str	r1, [sp, #0x14]
10001340: 4288         	cmp	r0, r1
10001342: d307         	blo	0x10001354 <core::num::<impl u32>::checked_sub::h45d651da7253cb54+0x22> @ imm = #0xe
10001344: e7ff         	b	0x10001346 <core::num::<impl u32>::checked_sub::h45d651da7253cb54+0x14> @ imm = #-0x2
10001346: 9801         	ldr	r0, [sp, #0x4]
10001348: 9900         	ldr	r1, [sp]
1000134a: 1a40         	subs	r0, r0, r1
1000134c: 9003         	str	r0, [sp, #0xc]
1000134e: 2001         	movs	r0, #0x1
10001350: 9002         	str	r0, [sp, #0x8]
10001352: e002         	b	0x1000135a <core::num::<impl u32>::checked_sub::h45d651da7253cb54+0x28> @ imm = #0x4
10001354: 2000         	movs	r0, #0x0
10001356: 9002         	str	r0, [sp, #0x8]
10001358: e7ff         	b	0x1000135a <core::num::<impl u32>::checked_sub::h45d651da7253cb54+0x28> @ imm = #-0x2
1000135a: 9802         	ldr	r0, [sp, #0x8]
1000135c: 9903         	ldr	r1, [sp, #0xc]
1000135e: b006         	add	sp, #0x18
10001360: bd80         	pop	{r7, pc}

10001362 <core::ptr::read_volatile::h76143b1b5a894831>:
10001362: b580         	push	{r7, lr}
10001364: af00         	add	r7, sp, #0x0
10001366: b084         	sub	sp, #0x10
10001368: 9001         	str	r0, [sp, #0x4]
1000136a: 9002         	str	r0, [sp, #0x8]
1000136c: e7ff         	b	0x1000136e <core::ptr::read_volatile::h76143b1b5a894831+0xc> @ imm = #-0x2
1000136e: 9801         	ldr	r0, [sp, #0x4]
10001370: 2104         	movs	r1, #0x4
10001372: 2200         	movs	r2, #0x0
10001374: f000 f808    	bl	0x10001388 <core::ptr::read_volatile::precondition_check::h836cf8c8c9fbfa4a> @ imm = #0x10
10001378: e7ff         	b	0x1000137a <core::ptr::read_volatile::h76143b1b5a894831+0x18> @ imm = #-0x2
1000137a: 9801         	ldr	r0, [sp, #0x4]
1000137c: 6800         	ldr	r0, [r0]
1000137e: 9003         	str	r0, [sp, #0xc]
10001380: 9803         	ldr	r0, [sp, #0xc]
10001382: b004         	add	sp, #0x10
10001384: bd80         	pop	{r7, pc}
10001386: d4d4         	bmi	0x10001332 <core::num::<impl u32>::checked_sub::h45d651da7253cb54> @ imm = #-0x58

10001388 <core::ptr::read_volatile::precondition_check::h836cf8c8c9fbfa4a>:
10001388: b580         	push	{r7, lr}
1000138a: af00         	add	r7, sp, #0x0
1000138c: b090         	sub	sp, #0x40
1000138e: 9102         	str	r1, [sp, #0x8]
10001390: 9003         	str	r0, [sp, #0xc]
10001392: 4613         	mov	r3, r2
10001394: 9304         	str	r3, [sp, #0x10]
10001396: 900b         	str	r0, [sp, #0x2c]
10001398: 910c         	str	r1, [sp, #0x30]
1000139a: a80d         	add	r0, sp, #0x34
1000139c: 7002         	strb	r2, [r0]
1000139e: 481f         	ldr	r0, [pc, #0x7c]         @ 0x1000141c <core::ptr::read_volatile::precondition_check::h836cf8c8c9fbfa4a+0x94>
100013a0: 900e         	str	r0, [sp, #0x38]
100013a2: 0848         	lsrs	r0, r1, #0x1
100013a4: 4a1e         	ldr	r2, [pc, #0x78]         @ 0x10001420 <core::ptr::read_volatile::precondition_check::h836cf8c8c9fbfa4a+0x98>
100013a6: 4010         	ands	r0, r2
100013a8: 1a09         	subs	r1, r1, r0
100013aa: 4a1e         	ldr	r2, [pc, #0x78]         @ 0x10001424 <core::ptr::read_volatile::precondition_check::h836cf8c8c9fbfa4a+0x9c>
100013ac: 4608         	mov	r0, r1
100013ae: 4010         	ands	r0, r2
100013b0: 0889         	lsrs	r1, r1, #0x2
100013b2: 4011         	ands	r1, r2
100013b4: 1840         	adds	r0, r0, r1
100013b6: 0901         	lsrs	r1, r0, #0x4
100013b8: 1841         	adds	r1, r0, r1
100013ba: 481b         	ldr	r0, [pc, #0x6c]         @ 0x10001428 <core::ptr::read_volatile::precondition_check::h836cf8c8c9fbfa4a+0xa0>
100013bc: 4001         	ands	r1, r0
100013be: 481b         	ldr	r0, [pc, #0x6c]         @ 0x1000142c <core::ptr::read_volatile::precondition_check::h836cf8c8c9fbfa4a+0xa4>
100013c0: 4348         	muls	r0, r1, r0
100013c2: 0e00         	lsrs	r0, r0, #0x18
100013c4: 900f         	str	r0, [sp, #0x3c]
100013c6: 980f         	ldr	r0, [sp, #0x3c]
100013c8: 2801         	cmp	r0, #0x1
100013ca: d108         	bne	0x100013de <core::ptr::read_volatile::precondition_check::h836cf8c8c9fbfa4a+0x56> @ imm = #0x10
100013cc: e7ff         	b	0x100013ce <core::ptr::read_volatile::precondition_check::h836cf8c8c9fbfa4a+0x46> @ imm = #-0x2
100013ce: 9803         	ldr	r0, [sp, #0xc]
100013d0: 9902         	ldr	r1, [sp, #0x8]
100013d2: 4602         	mov	r2, r0
100013d4: 9201         	str	r2, [sp, #0x4]
100013d6: 1e49         	subs	r1, r1, #0x1
100013d8: 4208         	tst	r0, r1
100013da: d00d         	beq	0x100013f8 <core::ptr::read_volatile::precondition_check::h836cf8c8c9fbfa4a+0x70> @ imm = #0x1a
100013dc: e011         	b	0x10001402 <core::ptr::read_volatile::precondition_check::h836cf8c8c9fbfa4a+0x7a> @ imm = #0x22
100013de: 480f         	ldr	r0, [pc, #0x3c]         @ 0x1000141c <core::ptr::read_volatile::precondition_check::h836cf8c8c9fbfa4a+0x94>
100013e0: 9005         	str	r0, [sp, #0x14]
100013e2: 2001         	movs	r0, #0x1
100013e4: 9006         	str	r0, [sp, #0x18]
100013e6: 2000         	movs	r0, #0x0
100013e8: 9009         	str	r0, [sp, #0x24]
100013ea: 2104         	movs	r1, #0x4
100013ec: 9107         	str	r1, [sp, #0x1c]
100013ee: 9008         	str	r0, [sp, #0x20]
100013f0: 490f         	ldr	r1, [pc, #0x3c]         @ 0x10001430 <core::ptr::read_volatile::precondition_check::h836cf8c8c9fbfa4a+0xa8>
100013f2: a805         	add	r0, sp, #0x14
100013f4: f00a ffc2    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #0xaf84
100013f8: 9804         	ldr	r0, [sp, #0x10]
100013fa: 07c0         	lsls	r0, r0, #0x1f
100013fc: 2800         	cmp	r0, #0x0
100013fe: d105         	bne	0x1000140c <core::ptr::read_volatile::precondition_check::h836cf8c8c9fbfa4a+0x84> @ imm = #0xa
10001400: e000         	b	0x10001404 <core::ptr::read_volatile::precondition_check::h836cf8c8c9fbfa4a+0x7c> @ imm = #0x0
10001402: e004         	b	0x1000140e <core::ptr::read_volatile::precondition_check::h836cf8c8c9fbfa4a+0x86> @ imm = #0x8
10001404: 9801         	ldr	r0, [sp, #0x4]
10001406: 2800         	cmp	r0, #0x0
10001408: d105         	bne	0x10001416 <core::ptr::read_volatile::precondition_check::h836cf8c8c9fbfa4a+0x8e> @ imm = #0xa
1000140a: e000         	b	0x1000140e <core::ptr::read_volatile::precondition_check::h836cf8c8c9fbfa4a+0x86> @ imm = #0x0
1000140c: e003         	b	0x10001416 <core::ptr::read_volatile::precondition_check::h836cf8c8c9fbfa4a+0x8e> @ imm = #0x6
1000140e: 4809         	ldr	r0, [pc, #0x24]         @ 0x10001434 <core::ptr::read_volatile::precondition_check::h836cf8c8c9fbfa4a+0xac>
10001410: 21e3         	movs	r1, #0xe3
10001412: f00a ffe5    	bl	0x1000c3e0 <core::panicking::panic_nounwind::h6901392fec1083b6> @ imm = #0xafca
10001416: b010         	add	sp, #0x40
10001418: bd80         	pop	{r7, pc}
1000141a: 46c0         	mov	r8, r8
1000141c: a8 df 00 10  	.word	0x1000dfa8
10001420: 55 55 55 55  	.word	0x55555555
10001424: 33 33 33 33  	.word	0x33333333
10001428: 0f 0f 0f 0f  	.word	0x0f0f0f0f
1000142c: 01 01 01 01  	.word	0x01010101
10001430: 08 e1 00 10  	.word	0x1000e108
10001434: b0 df 00 10  	.word	0x1000dfb0

10001438 <core::ptr::drop_in_place<heapless::vec::Vec<layout_trait::Layout,1024_usize>>::h9011a0d2aca7ee43>:
10001438: b580         	push	{r7, lr}
1000143a: af00         	add	r7, sp, #0x0
1000143c: b082         	sub	sp, #0x8
1000143e: 9001         	str	r0, [sp, #0x4]
10001440: f000 ff60    	bl	0x10002304 <<heapless::vec::Vec<T,_> as core::ops::drop::Drop>::drop::h1dd3978f8e424722> @ imm = #0xec0
10001444: b002         	add	sp, #0x8
10001446: bd80         	pop	{r7, pc}

10001448 <core::ptr::drop_in_place<heapless::vec::IntoIter<layout_trait::Layout,1024_usize>>::h2fd5c7dcb6dad8b8>:
10001448: b580         	push	{r7, lr}
1000144a: af00         	add	r7, sp, #0x0
1000144c: b082         	sub	sp, #0x8
1000144e: 9000         	str	r0, [sp]
10001450: 9001         	str	r0, [sp, #0x4]
10001452: f001 f88d    	bl	0x10002570 <<heapless::vec::IntoIter<T,_> as core::ops::drop::Drop>::drop::h59c4883beba556ec> @ imm = #0x111a
10001456: 9800         	ldr	r0, [sp]
10001458: f7ff ffee    	bl	0x10001438 <core::ptr::drop_in_place<heapless::vec::Vec<layout_trait::Layout,1024_usize>>::h9011a0d2aca7ee43> @ imm = #-0x24
1000145c: b002         	add	sp, #0x8
1000145e: bd80         	pop	{r7, pc}

10001460 <core::ptr::const_ptr::<impl *const T>::read::h1e6dc54a453b5f23>:
10001460: b580         	push	{r7, lr}
10001462: af00         	add	r7, sp, #0x0
10001464: b082         	sub	sp, #0x8
10001466: 9100         	str	r1, [sp]
10001468: 4601         	mov	r1, r0
1000146a: 9800         	ldr	r0, [sp]
1000146c: 9001         	str	r0, [sp, #0x4]
1000146e: 68c2         	ldr	r2, [r0, #0xc]
10001470: 60ca         	str	r2, [r1, #0xc]
10001472: 6882         	ldr	r2, [r0, #0x8]
10001474: 608a         	str	r2, [r1, #0x8]
10001476: 6842         	ldr	r2, [r0, #0x4]
10001478: 604a         	str	r2, [r1, #0x4]
1000147a: 6800         	ldr	r0, [r0]
1000147c: 6008         	str	r0, [r1]
1000147e: b002         	add	sp, #0x8
10001480: bd80         	pop	{r7, pc}

10001482 <core::ptr::const_ptr::<impl *const T>::read::h4552bbea9b066495>:
10001482: b580         	push	{r7, lr}
10001484: af00         	add	r7, sp, #0x0
10001486: b081         	sub	sp, #0x4
10001488: 4601         	mov	r1, r0
1000148a: 9100         	str	r1, [sp]
1000148c: 6808         	ldr	r0, [r1]
1000148e: 6849         	ldr	r1, [r1, #0x4]
10001490: b001         	add	sp, #0x4
10001492: bd80         	pop	{r7, pc}

10001494 <core::ptr::const_ptr::<impl *const T>::read::h9692f49c6cbf0508>:
10001494: b580         	push	{r7, lr}
10001496: af00         	add	r7, sp, #0x0
10001498: b082         	sub	sp, #0x8
1000149a: 9100         	str	r1, [sp]
1000149c: 4601         	mov	r1, r0
1000149e: 9800         	ldr	r0, [sp]
100014a0: 9001         	str	r0, [sp, #0x4]
100014a2: 68c2         	ldr	r2, [r0, #0xc]
100014a4: 60ca         	str	r2, [r1, #0xc]
100014a6: 6882         	ldr	r2, [r0, #0x8]
100014a8: 608a         	str	r2, [r1, #0x8]
100014aa: 6842         	ldr	r2, [r0, #0x4]
100014ac: 604a         	str	r2, [r1, #0x4]
100014ae: 6800         	ldr	r0, [r0]
100014b0: 6008         	str	r0, [r1]
100014b2: defe         	trap

100014b4 <core::cell::Cell<T>::get::h819713353ec39ea2>:
100014b4: b580         	push	{r7, lr}
100014b6: af00         	add	r7, sp, #0x0
100014b8: b081         	sub	sp, #0x4
100014ba: 9000         	str	r0, [sp]
100014bc: 7800         	ldrb	r0, [r0]
100014be: b001         	add	sp, #0x4
100014c0: bd80         	pop	{r7, pc}

100014c2 <core::cell::Cell<T>::new::hd2720efbb8528b48>:
100014c2: b580         	push	{r7, lr}
100014c4: af00         	add	r7, sp, #0x0
100014c6: b081         	sub	sp, #0x4
100014c8: 4669         	mov	r1, sp
100014ca: 7008         	strb	r0, [r1]
100014cc: b001         	add	sp, #0x4
100014ce: bd80         	pop	{r7, pc}

100014d0 <core::cell::Cell<T>::set::hd10409ba164119e2>:
100014d0: b580         	push	{r7, lr}
100014d2: af00         	add	r7, sp, #0x0
100014d4: b082         	sub	sp, #0x8
100014d6: 9000         	str	r0, [sp]
100014d8: aa01         	add	r2, sp, #0x4
100014da: 7011         	strb	r1, [r2]
100014dc: 7001         	strb	r1, [r0]
100014de: b002         	add	sp, #0x8
100014e0: bd80         	pop	{r7, pc}

100014e2 <core::hint::unreachable_unchecked::ha5db41a312eb8c90>:
100014e2: b580         	push	{r7, lr}
100014e4: af00         	add	r7, sp, #0x0
100014e6: f000 f801    	bl	0x100014ec <core::hint::unreachable_unchecked::precondition_check::h69a872a812f08a58> @ imm = #0x2
100014ea: defe         	trap

100014ec <core::hint::unreachable_unchecked::precondition_check::h69a872a812f08a58>:
100014ec: b580         	push	{r7, lr}
100014ee: af00         	add	r7, sp, #0x0
100014f0: 4801         	ldr	r0, [pc, #0x4]          @ 0x100014f8 <core::hint::unreachable_unchecked::precondition_check::h69a872a812f08a58+0xc>
100014f2: 21c7         	movs	r1, #0xc7
100014f4: f00a ff74    	bl	0x1000c3e0 <core::panicking::panic_nounwind::h6901392fec1083b6> @ imm = #0xaee8
100014f8: 18 e1 00 10  	.word	0x1000e118

100014fc <core::hint::black_box::h607f70ec5fc7e824>:
100014fc: b580         	push	{r7, lr}
100014fe: af00         	add	r7, sp, #0x0
10001500: b082         	sub	sp, #0x8
10001502: 9000         	str	r0, [sp]
10001504: 9001         	str	r0, [sp, #0x4]
10001506: a801         	add	r0, sp, #0x4
10001508: 9801         	ldr	r0, [sp, #0x4]
1000150a: b002         	add	sp, #0x8
1000150c: bd80         	pop	{r7, pc}

1000150e <core::hint::black_box::h83b709d0e5a7b65b>:
1000150e: b580         	push	{r7, lr}
10001510: af00         	add	r7, sp, #0x0
10001512: b081         	sub	sp, #0x4
10001514: b001         	add	sp, #0x4
10001516: bd80         	pop	{r7, pc}

10001518 <core::hint::black_box::hca14cde926edf4df>:
10001518: b580         	push	{r7, lr}
1000151a: af00         	add	r7, sp, #0x0
1000151c: b081         	sub	sp, #0x4
1000151e: b001         	add	sp, #0x4
10001520: bd80         	pop	{r7, pc}

10001522 <core::hint::black_box::hca50ecabf1603962>:
10001522: b580         	push	{r7, lr}
10001524: af00         	add	r7, sp, #0x0
10001526: b081         	sub	sp, #0x4
10001528: b001         	add	sp, #0x4
1000152a: bd80         	pop	{r7, pc}

1000152c <core::hint::black_box::hd3c2859a6f29afbf>:
1000152c: b580         	push	{r7, lr}
1000152e: af00         	add	r7, sp, #0x0
10001530: b082         	sub	sp, #0x8
10001532: 9000         	str	r0, [sp]
10001534: 9001         	str	r0, [sp, #0x4]
10001536: a801         	add	r0, sp, #0x4
10001538: 9801         	ldr	r0, [sp, #0x4]
1000153a: b002         	add	sp, #0x8
1000153c: bd80         	pop	{r7, pc}

1000153e <core::hint::black_box::hfedc34f3e4e541aa>:
1000153e: b580         	push	{r7, lr}
10001540: af00         	add	r7, sp, #0x0
10001542: b081         	sub	sp, #0x4
10001544: b001         	add	sp, #0x4
10001546: bd80         	pop	{r7, pc}

10001548 <core::array::<impl core::ops::index::Index<I> for [T; N]>::index::hf8b26490293f2ac7>:
10001548: b580         	push	{r7, lr}
1000154a: af00         	add	r7, sp, #0x0
1000154c: b096         	sub	sp, #0x58
1000154e: 9302         	str	r3, [sp, #0x8]
10001550: 9203         	str	r2, [sp, #0xc]
10001552: 9104         	str	r1, [sp, #0x10]
10001554: 4603         	mov	r3, r0
10001556: 9305         	str	r3, [sp, #0x14]
10001558: 9306         	str	r3, [sp, #0x18]
1000155a: 9107         	str	r1, [sp, #0x1c]
1000155c: 9208         	str	r2, [sp, #0x20]
1000155e: 9309         	str	r3, [sp, #0x24]
10001560: 2003         	movs	r0, #0x3
10001562: 900a         	str	r0, [sp, #0x28]
10001564: 910b         	str	r1, [sp, #0x2c]
10001566: 920c         	str	r2, [sp, #0x30]
10001568: 910f         	str	r1, [sp, #0x3c]
1000156a: 9210         	str	r2, [sp, #0x40]
1000156c: 9311         	str	r3, [sp, #0x44]
1000156e: 9012         	str	r0, [sp, #0x48]
10001570: 9213         	str	r2, [sp, #0x4c]
10001572: 9114         	str	r1, [sp, #0x50]
10001574: 428a         	cmp	r2, r1
10001576: d30c         	blo	0x10001592 <core::array::<impl core::ops::index::Index<I> for [T; N]>::index::hf8b26490293f2ac7+0x4a> @ imm = #0x18
10001578: e7ff         	b	0x1000157a <core::array::<impl core::ops::index::Index<I> for [T; N]>::index::hf8b26490293f2ac7+0x32> @ imm = #-0x2
1000157a: 9803         	ldr	r0, [sp, #0xc]
1000157c: 9904         	ldr	r1, [sp, #0x10]
1000157e: 1a41         	subs	r1, r0, r1
10001580: 910e         	str	r1, [sp, #0x38]
10001582: 2101         	movs	r1, #0x1
10001584: 910d         	str	r1, [sp, #0x34]
10001586: 990e         	ldr	r1, [sp, #0x38]
10001588: 9101         	str	r1, [sp, #0x4]
1000158a: 9115         	str	r1, [sp, #0x54]
1000158c: 2803         	cmp	r0, #0x3
1000158e: d805         	bhi	0x1000159c <core::array::<impl core::ops::index::Index<I> for [T; N]>::index::hf8b26490293f2ac7+0x54> @ imm = #0xa
10001590: e009         	b	0x100015a6 <core::array::<impl core::ops::index::Index<I> for [T; N]>::index::hf8b26490293f2ac7+0x5e> @ imm = #0x12
10001592: 9a02         	ldr	r2, [sp, #0x8]
10001594: 9903         	ldr	r1, [sp, #0xc]
10001596: 9804         	ldr	r0, [sp, #0x10]
10001598: f00b fcce    	bl	0x1000cf38 <core::slice::index::slice_index_order_fail::h1916bdd21c84665e> @ imm = #0xb99c
1000159c: 9a02         	ldr	r2, [sp, #0x8]
1000159e: 9803         	ldr	r0, [sp, #0xc]
100015a0: 2103         	movs	r1, #0x3
100015a2: f00b fcc5    	bl	0x1000cf30 <core::slice::index::slice_end_index_len_fail::h7a57dff6cef359c9> @ imm = #0xb98a
100015a6: 9901         	ldr	r1, [sp, #0x4]
100015a8: 9805         	ldr	r0, [sp, #0x14]
100015aa: 9a04         	ldr	r2, [sp, #0x10]
100015ac: 0092         	lsls	r2, r2, #0x2
100015ae: 1880         	adds	r0, r0, r2
100015b0: b016         	add	sp, #0x58
100015b2: bd80         	pop	{r7, pc}

100015b4 <core::slice::<impl [T]>::get_unchecked::h61a0ea211310880c>:
100015b4: b580         	push	{r7, lr}
100015b6: af00         	add	r7, sp, #0x0
100015b8: b084         	sub	sp, #0x10
100015ba: 9200         	str	r2, [sp]
100015bc: 460a         	mov	r2, r1
100015be: 4601         	mov	r1, r0
100015c0: 9800         	ldr	r0, [sp]
100015c2: 9101         	str	r1, [sp, #0x4]
100015c4: 9202         	str	r2, [sp, #0x8]
100015c6: 9003         	str	r0, [sp, #0xc]
100015c8: f000 feea    	bl	0x100023a0 <<usize as core::slice::index::SliceIndex<[T]>>::get_unchecked::hcac749fb19dc6451> @ imm = #0xdd4
100015cc: b004         	add	sp, #0x10
100015ce: bd80         	pop	{r7, pc}

100015d0 <core::slice::<impl [T]>::get_unchecked_mut::h32db90cb63af3313>:
100015d0: b580         	push	{r7, lr}
100015d2: af00         	add	r7, sp, #0x0
100015d4: b084         	sub	sp, #0x10
100015d6: 9200         	str	r2, [sp]
100015d8: 460a         	mov	r2, r1
100015da: 4601         	mov	r1, r0
100015dc: 9800         	ldr	r0, [sp]
100015de: 9101         	str	r1, [sp, #0x4]
100015e0: 9202         	str	r2, [sp, #0x8]
100015e2: 9003         	str	r0, [sp, #0xc]
100015e4: f000 ff18    	bl	0x10002418 <<usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut::hf2625fdc473e6304> @ imm = #0xe30
100015e8: b004         	add	sp, #0x10
100015ea: bd80         	pop	{r7, pc}

100015ec <core::slice::<impl [T]>::get_unchecked_mut::h5db555c5dd7468d7>:
100015ec: b580         	push	{r7, lr}
100015ee: af00         	add	r7, sp, #0x0
100015f0: b084         	sub	sp, #0x10
100015f2: 9200         	str	r2, [sp]
100015f4: 460a         	mov	r2, r1
100015f6: 4601         	mov	r1, r0
100015f8: 9800         	ldr	r0, [sp]
100015fa: 9101         	str	r1, [sp, #0x4]
100015fc: 9202         	str	r2, [sp, #0x8]
100015fe: 9003         	str	r0, [sp, #0xc]
10001600: f000 fef4    	bl	0x100023ec <<usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut::hd2ae9f48e78b4487> @ imm = #0xde8
10001604: b004         	add	sp, #0x10
10001606: bd80         	pop	{r7, pc}

10001608 <core::slice::<impl [T]>::iter::hf02149d412a096dd>:
10001608: b580         	push	{r7, lr}
1000160a: af00         	add	r7, sp, #0x0
1000160c: b082         	sub	sp, #0x8
1000160e: 9000         	str	r0, [sp]
10001610: 9101         	str	r1, [sp, #0x4]
10001612: f000 f925    	bl	0x10001860 <core::slice::iter::Iter<T>::new::hefeb7003b20f28da> @ imm = #0x24a
10001616: b002         	add	sp, #0x8
10001618: bd80         	pop	{r7, pc}

1000161a <core::slice::raw::from_raw_parts::h5c7b96c0d3b39ce9>:
1000161a: b580         	push	{r7, lr}
1000161c: af00         	add	r7, sp, #0x0
1000161e: b084         	sub	sp, #0x10
10001620: 9100         	str	r1, [sp]
10001622: 9001         	str	r0, [sp, #0x4]
10001624: 9002         	str	r0, [sp, #0x8]
10001626: 9103         	str	r1, [sp, #0xc]
10001628: e7ff         	b	0x1000162a <core::slice::raw::from_raw_parts::h5c7b96c0d3b39ce9+0x10> @ imm = #-0x2
1000162a: 9b00         	ldr	r3, [sp]
1000162c: 9801         	ldr	r0, [sp, #0x4]
1000162e: 2108         	movs	r1, #0x8
10001630: 2204         	movs	r2, #0x4
10001632: f000 f805    	bl	0x10001640 <core::slice::raw::from_raw_parts::precondition_check::hd2e4fbaf84326e58> @ imm = #0xa
10001636: e7ff         	b	0x10001638 <core::slice::raw::from_raw_parts::h5c7b96c0d3b39ce9+0x1e> @ imm = #-0x2
10001638: 9900         	ldr	r1, [sp]
1000163a: 9801         	ldr	r0, [sp, #0x4]
1000163c: b004         	add	sp, #0x10
1000163e: bd80         	pop	{r7, pc}

10001640 <core::slice::raw::from_raw_parts::precondition_check::hd2e4fbaf84326e58>:
10001640: b580         	push	{r7, lr}
10001642: af00         	add	r7, sp, #0x0
10001644: b096         	sub	sp, #0x58
10001646: 9302         	str	r3, [sp, #0x8]
10001648: 9203         	str	r2, [sp, #0xc]
1000164a: 9104         	str	r1, [sp, #0x10]
1000164c: 9005         	str	r0, [sp, #0x14]
1000164e: 900d         	str	r0, [sp, #0x34]
10001650: 910e         	str	r1, [sp, #0x38]
10001652: 920f         	str	r2, [sp, #0x3c]
10001654: 9310         	str	r3, [sp, #0x40]
10001656: ab11         	add	r3, sp, #0x44
10001658: 2100         	movs	r1, #0x0
1000165a: 7019         	strb	r1, [r3]
1000165c: ab12         	add	r3, sp, #0x48
1000165e: 7019         	strb	r1, [r3]
10001660: 492d         	ldr	r1, [pc, #0xb4]         @ 0x10001718 <core::slice::raw::from_raw_parts::precondition_check::hd2e4fbaf84326e58+0xd8>
10001662: 9113         	str	r1, [sp, #0x4c]
10001664: 9014         	str	r0, [sp, #0x50]
10001666: 0850         	lsrs	r0, r2, #0x1
10001668: 492c         	ldr	r1, [pc, #0xb0]         @ 0x1000171c <core::slice::raw::from_raw_parts::precondition_check::hd2e4fbaf84326e58+0xdc>
1000166a: 4008         	ands	r0, r1
1000166c: 1a11         	subs	r1, r2, r0
1000166e: 4a2c         	ldr	r2, [pc, #0xb0]         @ 0x10001720 <core::slice::raw::from_raw_parts::precondition_check::hd2e4fbaf84326e58+0xe0>
10001670: 4608         	mov	r0, r1
10001672: 4010         	ands	r0, r2
10001674: 0889         	lsrs	r1, r1, #0x2
10001676: 4011         	ands	r1, r2
10001678: 1840         	adds	r0, r0, r1
1000167a: 0901         	lsrs	r1, r0, #0x4
1000167c: 1841         	adds	r1, r0, r1
1000167e: 4829         	ldr	r0, [pc, #0xa4]         @ 0x10001724 <core::slice::raw::from_raw_parts::precondition_check::hd2e4fbaf84326e58+0xe4>
10001680: 4001         	ands	r1, r0
10001682: 4829         	ldr	r0, [pc, #0xa4]         @ 0x10001728 <core::slice::raw::from_raw_parts::precondition_check::hd2e4fbaf84326e58+0xe8>
10001684: 4348         	muls	r0, r1, r0
10001686: 0e00         	lsrs	r0, r0, #0x18
10001688: 9015         	str	r0, [sp, #0x54]
1000168a: 9815         	ldr	r0, [sp, #0x54]
1000168c: 2801         	cmp	r0, #0x1
1000168e: d108         	bne	0x100016a2 <core::slice::raw::from_raw_parts::precondition_check::hd2e4fbaf84326e58+0x62> @ imm = #0x10
10001690: e7ff         	b	0x10001692 <core::slice::raw::from_raw_parts::precondition_check::hd2e4fbaf84326e58+0x52> @ imm = #-0x2
10001692: 9805         	ldr	r0, [sp, #0x14]
10001694: 9903         	ldr	r1, [sp, #0xc]
10001696: 4602         	mov	r2, r0
10001698: 9201         	str	r2, [sp, #0x4]
1000169a: 1e49         	subs	r1, r1, #0x1
1000169c: 4208         	tst	r0, r1
1000169e: d00d         	beq	0x100016bc <core::slice::raw::from_raw_parts::precondition_check::hd2e4fbaf84326e58+0x7c> @ imm = #0x1a
100016a0: e010         	b	0x100016c4 <core::slice::raw::from_raw_parts::precondition_check::hd2e4fbaf84326e58+0x84> @ imm = #0x20
100016a2: 481d         	ldr	r0, [pc, #0x74]         @ 0x10001718 <core::slice::raw::from_raw_parts::precondition_check::hd2e4fbaf84326e58+0xd8>
100016a4: 9006         	str	r0, [sp, #0x18]
100016a6: 2001         	movs	r0, #0x1
100016a8: 9007         	str	r0, [sp, #0x1c]
100016aa: 2000         	movs	r0, #0x0
100016ac: 900a         	str	r0, [sp, #0x28]
100016ae: 2104         	movs	r1, #0x4
100016b0: 9108         	str	r1, [sp, #0x20]
100016b2: 9009         	str	r0, [sp, #0x24]
100016b4: 491d         	ldr	r1, [pc, #0x74]         @ 0x1000172c <core::slice::raw::from_raw_parts::precondition_check::hd2e4fbaf84326e58+0xec>
100016b6: a806         	add	r0, sp, #0x18
100016b8: f00a fe60    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #0xacc0
100016bc: 9801         	ldr	r0, [sp, #0x4]
100016be: 2800         	cmp	r0, #0x0
100016c0: d102         	bne	0x100016c8 <core::slice::raw::from_raw_parts::precondition_check::hd2e4fbaf84326e58+0x88> @ imm = #0x4
100016c2: e000         	b	0x100016c6 <core::slice::raw::from_raw_parts::precondition_check::hd2e4fbaf84326e58+0x86> @ imm = #0x0
100016c4: e7ff         	b	0x100016c6 <core::slice::raw::from_raw_parts::precondition_check::hd2e4fbaf84326e58+0x86> @ imm = #-0x2
100016c6: e021         	b	0x1000170c <core::slice::raw::from_raw_parts::precondition_check::hd2e4fbaf84326e58+0xcc> @ imm = #0x42
100016c8: 9804         	ldr	r0, [sp, #0x10]
100016ca: 4242         	rsbs	r2, r0, #0
100016cc: 4601         	mov	r1, r0
100016ce: 4151         	adcs	r1, r2
100016d0: 9100         	str	r1, [sp]
100016d2: 2800         	cmp	r0, #0x0
100016d4: d104         	bne	0x100016e0 <core::slice::raw::from_raw_parts::precondition_check::hd2e4fbaf84326e58+0xa0> @ imm = #0x8
100016d6: e7ff         	b	0x100016d8 <core::slice::raw::from_raw_parts::precondition_check::hd2e4fbaf84326e58+0x98> @ imm = #-0x2
100016d8: 2000         	movs	r0, #0x0
100016da: 43c0         	mvns	r0, r0
100016dc: 900c         	str	r0, [sp, #0x30]
100016de: e004         	b	0x100016ea <core::slice::raw::from_raw_parts::precondition_check::hd2e4fbaf84326e58+0xaa> @ imm = #0x8
100016e0: 9800         	ldr	r0, [sp]
100016e2: 07c0         	lsls	r0, r0, #0x1f
100016e4: 2800         	cmp	r0, #0x0
100016e6: d10b         	bne	0x10001700 <core::slice::raw::from_raw_parts::precondition_check::hd2e4fbaf84326e58+0xc0> @ imm = #0x16
100016e8: e004         	b	0x100016f4 <core::slice::raw::from_raw_parts::precondition_check::hd2e4fbaf84326e58+0xb4> @ imm = #0x8
100016ea: 9802         	ldr	r0, [sp, #0x8]
100016ec: 990c         	ldr	r1, [sp, #0x30]
100016ee: 4288         	cmp	r0, r1
100016f0: d90a         	bls	0x10001708 <core::slice::raw::from_raw_parts::precondition_check::hd2e4fbaf84326e58+0xc8> @ imm = #0x14
100016f2: e008         	b	0x10001706 <core::slice::raw::from_raw_parts::precondition_check::hd2e4fbaf84326e58+0xc6> @ imm = #0x10
100016f4: 9904         	ldr	r1, [sp, #0x10]
100016f6: 480e         	ldr	r0, [pc, #0x38]         @ 0x10001730 <core::slice::raw::from_raw_parts::precondition_check::hd2e4fbaf84326e58+0xf0>
100016f8: f00c f850    	bl	0x1000d79c <__aeabi_uidiv> @ imm = #0xc0a0
100016fc: 900c         	str	r0, [sp, #0x30]
100016fe: e7f4         	b	0x100016ea <core::slice::raw::from_raw_parts::precondition_check::hd2e4fbaf84326e58+0xaa> @ imm = #-0x18
10001700: 480c         	ldr	r0, [pc, #0x30]         @ 0x10001734 <core::slice::raw::from_raw_parts::precondition_check::hd2e4fbaf84326e58+0xf4>
10001702: f00b fedd    	bl	0x1000d4c0 <core::panicking::panic_const::panic_const_div_by_zero::ha09f740279da4cf0> @ imm = #0xbdba
10001706: e001         	b	0x1000170c <core::slice::raw::from_raw_parts::precondition_check::hd2e4fbaf84326e58+0xcc> @ imm = #0x2
10001708: b016         	add	sp, #0x58
1000170a: bd80         	pop	{r7, pc}
1000170c: 480a         	ldr	r0, [pc, #0x28]         @ 0x10001738 <core::slice::raw::from_raw_parts::precondition_check::hd2e4fbaf84326e58+0xf8>
1000170e: 21ff         	movs	r1, #0xff
10001710: 3118         	adds	r1, #0x18
10001712: f00a fe65    	bl	0x1000c3e0 <core::panicking::panic_nounwind::h6901392fec1083b6> @ imm = #0xacca
10001716: 46c0         	mov	r8, r8
10001718: a8 df 00 10  	.word	0x1000dfa8
1000171c: 55 55 55 55  	.word	0x55555555
10001720: 33 33 33 33  	.word	0x33333333
10001724: 0f 0f 0f 0f  	.word	0x0f0f0f0f
10001728: 01 01 01 01  	.word	0x01010101
1000172c: 08 e1 00 10  	.word	0x1000e108
10001730: ff ff ff 7f  	.word	0x7fffffff
10001734: 50 e2 00 10  	.word	0x1000e250
10001738: 60 e2 00 10  	.word	0x1000e260

1000173c <core::slice::raw::from_raw_parts_mut::h00e16020bdeeca9e>:
1000173c: b580         	push	{r7, lr}
1000173e: af00         	add	r7, sp, #0x0
10001740: b084         	sub	sp, #0x10
10001742: 9100         	str	r1, [sp]
10001744: 9001         	str	r0, [sp, #0x4]
10001746: 9002         	str	r0, [sp, #0x8]
10001748: 9103         	str	r1, [sp, #0xc]
1000174a: e7ff         	b	0x1000174c <core::slice::raw::from_raw_parts_mut::h00e16020bdeeca9e+0x10> @ imm = #-0x2
1000174c: 9b00         	ldr	r3, [sp]
1000174e: 9801         	ldr	r0, [sp, #0x4]
10001750: 2108         	movs	r1, #0x8
10001752: 2204         	movs	r2, #0x4
10001754: f000 f806    	bl	0x10001764 <core::slice::raw::from_raw_parts_mut::precondition_check::h5ef2aa0bdc896872> @ imm = #0xc
10001758: e7ff         	b	0x1000175a <core::slice::raw::from_raw_parts_mut::h00e16020bdeeca9e+0x1e> @ imm = #-0x2
1000175a: 9900         	ldr	r1, [sp]
1000175c: 9801         	ldr	r0, [sp, #0x4]
1000175e: b004         	add	sp, #0x10
10001760: bd80         	pop	{r7, pc}
10001762: d4d4         	bmi	0x1000170e <core::slice::raw::from_raw_parts::precondition_check::hd2e4fbaf84326e58+0xce> @ imm = #-0x58

10001764 <core::slice::raw::from_raw_parts_mut::precondition_check::h5ef2aa0bdc896872>:
10001764: b580         	push	{r7, lr}
10001766: af00         	add	r7, sp, #0x0
10001768: b096         	sub	sp, #0x58
1000176a: 9302         	str	r3, [sp, #0x8]
1000176c: 9203         	str	r2, [sp, #0xc]
1000176e: 9104         	str	r1, [sp, #0x10]
10001770: 9005         	str	r0, [sp, #0x14]
10001772: 900d         	str	r0, [sp, #0x34]
10001774: 910e         	str	r1, [sp, #0x38]
10001776: 920f         	str	r2, [sp, #0x3c]
10001778: 9310         	str	r3, [sp, #0x40]
1000177a: ab11         	add	r3, sp, #0x44
1000177c: 2100         	movs	r1, #0x0
1000177e: 7019         	strb	r1, [r3]
10001780: ab12         	add	r3, sp, #0x48
10001782: 7019         	strb	r1, [r3]
10001784: 492d         	ldr	r1, [pc, #0xb4]         @ 0x1000183c <core::slice::raw::from_raw_parts_mut::precondition_check::h5ef2aa0bdc896872+0xd8>
10001786: 9113         	str	r1, [sp, #0x4c]
10001788: 9014         	str	r0, [sp, #0x50]
1000178a: 0850         	lsrs	r0, r2, #0x1
1000178c: 492c         	ldr	r1, [pc, #0xb0]         @ 0x10001840 <core::slice::raw::from_raw_parts_mut::precondition_check::h5ef2aa0bdc896872+0xdc>
1000178e: 4008         	ands	r0, r1
10001790: 1a11         	subs	r1, r2, r0
10001792: 4a2c         	ldr	r2, [pc, #0xb0]         @ 0x10001844 <core::slice::raw::from_raw_parts_mut::precondition_check::h5ef2aa0bdc896872+0xe0>
10001794: 4608         	mov	r0, r1
10001796: 4010         	ands	r0, r2
10001798: 0889         	lsrs	r1, r1, #0x2
1000179a: 4011         	ands	r1, r2
1000179c: 1840         	adds	r0, r0, r1
1000179e: 0901         	lsrs	r1, r0, #0x4
100017a0: 1841         	adds	r1, r0, r1
100017a2: 4829         	ldr	r0, [pc, #0xa4]         @ 0x10001848 <core::slice::raw::from_raw_parts_mut::precondition_check::h5ef2aa0bdc896872+0xe4>
100017a4: 4001         	ands	r1, r0
100017a6: 4829         	ldr	r0, [pc, #0xa4]         @ 0x1000184c <core::slice::raw::from_raw_parts_mut::precondition_check::h5ef2aa0bdc896872+0xe8>
100017a8: 4348         	muls	r0, r1, r0
100017aa: 0e00         	lsrs	r0, r0, #0x18
100017ac: 9015         	str	r0, [sp, #0x54]
100017ae: 9815         	ldr	r0, [sp, #0x54]
100017b0: 2801         	cmp	r0, #0x1
100017b2: d108         	bne	0x100017c6 <core::slice::raw::from_raw_parts_mut::precondition_check::h5ef2aa0bdc896872+0x62> @ imm = #0x10
100017b4: e7ff         	b	0x100017b6 <core::slice::raw::from_raw_parts_mut::precondition_check::h5ef2aa0bdc896872+0x52> @ imm = #-0x2
100017b6: 9805         	ldr	r0, [sp, #0x14]
100017b8: 9903         	ldr	r1, [sp, #0xc]
100017ba: 4602         	mov	r2, r0
100017bc: 9201         	str	r2, [sp, #0x4]
100017be: 1e49         	subs	r1, r1, #0x1
100017c0: 4208         	tst	r0, r1
100017c2: d00d         	beq	0x100017e0 <core::slice::raw::from_raw_parts_mut::precondition_check::h5ef2aa0bdc896872+0x7c> @ imm = #0x1a
100017c4: e010         	b	0x100017e8 <core::slice::raw::from_raw_parts_mut::precondition_check::h5ef2aa0bdc896872+0x84> @ imm = #0x20
100017c6: 481d         	ldr	r0, [pc, #0x74]         @ 0x1000183c <core::slice::raw::from_raw_parts_mut::precondition_check::h5ef2aa0bdc896872+0xd8>
100017c8: 9006         	str	r0, [sp, #0x18]
100017ca: 2001         	movs	r0, #0x1
100017cc: 9007         	str	r0, [sp, #0x1c]
100017ce: 2000         	movs	r0, #0x0
100017d0: 900a         	str	r0, [sp, #0x28]
100017d2: 2104         	movs	r1, #0x4
100017d4: 9108         	str	r1, [sp, #0x20]
100017d6: 9009         	str	r0, [sp, #0x24]
100017d8: 491d         	ldr	r1, [pc, #0x74]         @ 0x10001850 <core::slice::raw::from_raw_parts_mut::precondition_check::h5ef2aa0bdc896872+0xec>
100017da: a806         	add	r0, sp, #0x18
100017dc: f00a fdce    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #0xab9c
100017e0: 9801         	ldr	r0, [sp, #0x4]
100017e2: 2800         	cmp	r0, #0x0
100017e4: d102         	bne	0x100017ec <core::slice::raw::from_raw_parts_mut::precondition_check::h5ef2aa0bdc896872+0x88> @ imm = #0x4
100017e6: e000         	b	0x100017ea <core::slice::raw::from_raw_parts_mut::precondition_check::h5ef2aa0bdc896872+0x86> @ imm = #0x0
100017e8: e7ff         	b	0x100017ea <core::slice::raw::from_raw_parts_mut::precondition_check::h5ef2aa0bdc896872+0x86> @ imm = #-0x2
100017ea: e021         	b	0x10001830 <core::slice::raw::from_raw_parts_mut::precondition_check::h5ef2aa0bdc896872+0xcc> @ imm = #0x42
100017ec: 9804         	ldr	r0, [sp, #0x10]
100017ee: 4242         	rsbs	r2, r0, #0
100017f0: 4601         	mov	r1, r0
100017f2: 4151         	adcs	r1, r2
100017f4: 9100         	str	r1, [sp]
100017f6: 2800         	cmp	r0, #0x0
100017f8: d104         	bne	0x10001804 <core::slice::raw::from_raw_parts_mut::precondition_check::h5ef2aa0bdc896872+0xa0> @ imm = #0x8
100017fa: e7ff         	b	0x100017fc <core::slice::raw::from_raw_parts_mut::precondition_check::h5ef2aa0bdc896872+0x98> @ imm = #-0x2
100017fc: 2000         	movs	r0, #0x0
100017fe: 43c0         	mvns	r0, r0
10001800: 900c         	str	r0, [sp, #0x30]
10001802: e004         	b	0x1000180e <core::slice::raw::from_raw_parts_mut::precondition_check::h5ef2aa0bdc896872+0xaa> @ imm = #0x8
10001804: 9800         	ldr	r0, [sp]
10001806: 07c0         	lsls	r0, r0, #0x1f
10001808: 2800         	cmp	r0, #0x0
1000180a: d10b         	bne	0x10001824 <core::slice::raw::from_raw_parts_mut::precondition_check::h5ef2aa0bdc896872+0xc0> @ imm = #0x16
1000180c: e004         	b	0x10001818 <core::slice::raw::from_raw_parts_mut::precondition_check::h5ef2aa0bdc896872+0xb4> @ imm = #0x8
1000180e: 9802         	ldr	r0, [sp, #0x8]
10001810: 990c         	ldr	r1, [sp, #0x30]
10001812: 4288         	cmp	r0, r1
10001814: d90a         	bls	0x1000182c <core::slice::raw::from_raw_parts_mut::precondition_check::h5ef2aa0bdc896872+0xc8> @ imm = #0x14
10001816: e008         	b	0x1000182a <core::slice::raw::from_raw_parts_mut::precondition_check::h5ef2aa0bdc896872+0xc6> @ imm = #0x10
10001818: 9904         	ldr	r1, [sp, #0x10]
1000181a: 480e         	ldr	r0, [pc, #0x38]         @ 0x10001854 <core::slice::raw::from_raw_parts_mut::precondition_check::h5ef2aa0bdc896872+0xf0>
1000181c: f00b ffbe    	bl	0x1000d79c <__aeabi_uidiv> @ imm = #0xbf7c
10001820: 900c         	str	r0, [sp, #0x30]
10001822: e7f4         	b	0x1000180e <core::slice::raw::from_raw_parts_mut::precondition_check::h5ef2aa0bdc896872+0xaa> @ imm = #-0x18
10001824: 480c         	ldr	r0, [pc, #0x30]         @ 0x10001858 <core::slice::raw::from_raw_parts_mut::precondition_check::h5ef2aa0bdc896872+0xf4>
10001826: f00b fe4b    	bl	0x1000d4c0 <core::panicking::panic_const::panic_const_div_by_zero::ha09f740279da4cf0> @ imm = #0xbc96
1000182a: e001         	b	0x10001830 <core::slice::raw::from_raw_parts_mut::precondition_check::h5ef2aa0bdc896872+0xcc> @ imm = #0x2
1000182c: b016         	add	sp, #0x58
1000182e: bd80         	pop	{r7, pc}
10001830: 480a         	ldr	r0, [pc, #0x28]         @ 0x1000185c <core::slice::raw::from_raw_parts_mut::precondition_check::h5ef2aa0bdc896872+0xf8>
10001832: 21ff         	movs	r1, #0xff
10001834: 311c         	adds	r1, #0x1c
10001836: f00a fdd3    	bl	0x1000c3e0 <core::panicking::panic_nounwind::h6901392fec1083b6> @ imm = #0xaba6
1000183a: 46c0         	mov	r8, r8
1000183c: a8 df 00 10  	.word	0x1000dfa8
10001840: 55 55 55 55  	.word	0x55555555
10001844: 33 33 33 33  	.word	0x33333333
10001848: 0f 0f 0f 0f  	.word	0x0f0f0f0f
1000184c: 01 01 01 01  	.word	0x01010101
10001850: 08 e1 00 10  	.word	0x1000e108
10001854: ff ff ff 7f  	.word	0x7fffffff
10001858: 50 e2 00 10  	.word	0x1000e250
1000185c: 77 e3 00 10  	.word	0x1000e377

10001860 <core::slice::iter::Iter<T>::new::hefeb7003b20f28da>:
10001860: b580         	push	{r7, lr}
10001862: af00         	add	r7, sp, #0x0
10001864: b08a         	sub	sp, #0x28
10001866: 9100         	str	r1, [sp]
10001868: 9001         	str	r0, [sp, #0x4]
1000186a: 9003         	str	r0, [sp, #0xc]
1000186c: 9104         	str	r1, [sp, #0x10]
1000186e: 9105         	str	r1, [sp, #0x14]
10001870: 9006         	str	r0, [sp, #0x18]
10001872: 9107         	str	r1, [sp, #0x1c]
10001874: 9008         	str	r0, [sp, #0x20]
10001876: e7ff         	b	0x10001878 <core::slice::iter::Iter<T>::new::hefeb7003b20f28da+0x18> @ imm = #-0x2
10001878: 9801         	ldr	r0, [sp, #0x4]
1000187a: 9900         	ldr	r1, [sp]
1000187c: 9009         	str	r0, [sp, #0x24]
1000187e: 0089         	lsls	r1, r1, #0x2
10001880: 1840         	adds	r0, r0, r1
10001882: 9002         	str	r0, [sp, #0x8]
10001884: e7ff         	b	0x10001886 <core::slice::iter::Iter<T>::new::hefeb7003b20f28da+0x26> @ imm = #-0x2
10001886: 9801         	ldr	r0, [sp, #0x4]
10001888: 9902         	ldr	r1, [sp, #0x8]
1000188a: b00a         	add	sp, #0x28
1000188c: bd80         	pop	{r7, pc}

1000188e <core::option::Option<T>::map::h66d764b054af0c1d>:
1000188e: b580         	push	{r7, lr}
10001890: af00         	add	r7, sp, #0x0
10001892: b084         	sub	sp, #0x10
10001894: 9000         	str	r0, [sp]
10001896: 9101         	str	r1, [sp, #0x4]
10001898: 9801         	ldr	r0, [sp, #0x4]
1000189a: 2800         	cmp	r0, #0x0
1000189c: d105         	bne	0x100018aa <core::option::Option<T>::map::h66d764b054af0c1d+0x1c> @ imm = #0xa
1000189e: e7ff         	b	0x100018a0 <core::option::Option<T>::map::h66d764b054af0c1d+0x12> @ imm = #-0x2
100018a0: 9900         	ldr	r1, [sp]
100018a2: 2000         	movs	r0, #0x0
100018a4: 6048         	str	r0, [r1, #0x4]
100018a6: 6008         	str	r0, [r1]
100018a8: e00c         	b	0x100018c4 <core::option::Option<T>::map::h66d764b054af0c1d+0x36> @ imm = #0x18
100018aa: 9801         	ldr	r0, [sp, #0x4]
100018ac: 9003         	str	r0, [sp, #0xc]
100018ae: f000 f8ce    	bl	0x10001a4e <rtic::tq::TimerQueue<Mono,Task,_>::dequeue::{{closure}}::h8d066e9656d168d4> @ imm = #0x19c
100018b2: 460a         	mov	r2, r1
100018b4: 9900         	ldr	r1, [sp]
100018b6: 60ca         	str	r2, [r1, #0xc]
100018b8: 6088         	str	r0, [r1, #0x8]
100018ba: 2000         	movs	r0, #0x0
100018bc: 6048         	str	r0, [r1, #0x4]
100018be: 2001         	movs	r0, #0x1
100018c0: 6008         	str	r0, [r1]
100018c2: e7ff         	b	0x100018c4 <core::option::Option<T>::map::h66d764b054af0c1d+0x36> @ imm = #-0x2
100018c4: b004         	add	sp, #0x10
100018c6: bd80         	pop	{r7, pc}

100018c8 <core::option::Option<T>::map::h67c46991df151a41>:
100018c8: b580         	push	{r7, lr}
100018ca: af00         	add	r7, sp, #0x0
100018cc: b086         	sub	sp, #0x18
100018ce: 9200         	str	r2, [sp]
100018d0: 9001         	str	r0, [sp, #0x4]
100018d2: 9102         	str	r1, [sp, #0x8]
100018d4: 9204         	str	r2, [sp, #0x10]
100018d6: 9801         	ldr	r0, [sp, #0x4]
100018d8: 2800         	cmp	r0, #0x0
100018da: d103         	bne	0x100018e4 <core::option::Option<T>::map::h67c46991df151a41+0x1c> @ imm = #0x6
100018dc: e7ff         	b	0x100018de <core::option::Option<T>::map::h67c46991df151a41+0x16> @ imm = #-0x2
100018de: 2000         	movs	r0, #0x0
100018e0: 9003         	str	r0, [sp, #0xc]
100018e2: e006         	b	0x100018f2 <core::option::Option<T>::map::h67c46991df151a41+0x2a> @ imm = #0xc
100018e4: 9800         	ldr	r0, [sp]
100018e6: 9902         	ldr	r1, [sp, #0x8]
100018e8: 9105         	str	r1, [sp, #0x14]
100018ea: f001 f855    	bl	0x10002998 <heapless::sorted_linked_list::SortedLinkedList<T,Idx,K,_>::peek::{{closure}}::h8dcd3ee31c5fdca8> @ imm = #0x10aa
100018ee: 9003         	str	r0, [sp, #0xc]
100018f0: e7ff         	b	0x100018f2 <core::option::Option<T>::map::h67c46991df151a41+0x2a> @ imm = #-0x2
100018f2: 9803         	ldr	r0, [sp, #0xc]
100018f4: b006         	add	sp, #0x18
100018f6: bd80         	pop	{r7, pc}

100018f8 <core::option::Option<T>::as_mut::h317fcaf66625bd65>:
100018f8: b580         	push	{r7, lr}
100018fa: af00         	add	r7, sp, #0x0
100018fc: b084         	sub	sp, #0x10
100018fe: 9000         	str	r0, [sp]
10001900: 9002         	str	r0, [sp, #0x8]
10001902: 7800         	ldrb	r0, [r0]
10001904: 07c0         	lsls	r0, r0, #0x1f
10001906: 2800         	cmp	r0, #0x0
10001908: d103         	bne	0x10001912 <core::option::Option<T>::as_mut::h317fcaf66625bd65+0x1a> @ imm = #0x6
1000190a: e7ff         	b	0x1000190c <core::option::Option<T>::as_mut::h317fcaf66625bd65+0x14> @ imm = #-0x2
1000190c: 2000         	movs	r0, #0x0
1000190e: 9001         	str	r0, [sp, #0x4]
10001910: e004         	b	0x1000191c <core::option::Option<T>::as_mut::h317fcaf66625bd65+0x24> @ imm = #0x8
10001912: 9800         	ldr	r0, [sp]
10001914: 1c40         	adds	r0, r0, #0x1
10001916: 9003         	str	r0, [sp, #0xc]
10001918: 9001         	str	r0, [sp, #0x4]
1000191a: e7ff         	b	0x1000191c <core::option::Option<T>::as_mut::h317fcaf66625bd65+0x24> @ imm = #-0x2
1000191c: 9801         	ldr	r0, [sp, #0x4]
1000191e: b004         	add	sp, #0x10
10001920: bd80         	pop	{r7, pc}

10001922 <_ZN4core6result19Result$LT$T$C$E$GT$16unwrap_unchecked17h27564fc2ea7c75e3E>:
10001922: b580         	push	{r7, lr}
10001924: af00         	add	r7, sp, #0x0
10001926: b081         	sub	sp, #0x4
10001928: e7ff         	b	0x1000192a <_ZN4core6result19Result$LT$T$C$E$GT$16unwrap_unchecked17h27564fc2ea7c75e3E+0x8> @ imm = #-0x2
1000192a: e7ff         	b	0x1000192c <_ZN4core6result19Result$LT$T$C$E$GT$16unwrap_unchecked17h27564fc2ea7c75e3E+0xa> @ imm = #-0x2
1000192c: b001         	add	sp, #0x4
1000192e: bd80         	pop	{r7, pc}

10001930 <_ZN4core6result19Result$LT$T$C$E$GT$2ok17h37b5575f688d71baE>:
10001930: b5f0         	push	{r4, r5, r6, r7, lr}
10001932: af03         	add	r7, sp, #0xc
10001934: b08c         	sub	sp, #0x30
10001936: 9100         	str	r1, [sp]
10001938: 9001         	str	r0, [sp, #0x4]
1000193a: 7808         	ldrb	r0, [r1]
1000193c: 07c0         	lsls	r0, r0, #0x1f
1000193e: 2800         	cmp	r0, #0x0
10001940: d115         	bne	0x1000196e <_ZN4core6result19Result$LT$T$C$E$GT$2ok17h37b5575f688d71baE+0x3e> @ imm = #0x2a
10001942: e7ff         	b	0x10001944 <_ZN4core6result19Result$LT$T$C$E$GT$2ok17h37b5575f688d71baE+0x14> @ imm = #-0x2
10001944: 9800         	ldr	r0, [sp]
10001946: 1d03         	adds	r3, r0, #0x4
10001948: aa02         	add	r2, sp, #0x8
1000194a: 4610         	mov	r0, r2
1000194c: cb32         	ldm	r3!, {r1, r4, r5}
1000194e: c032         	stm	r0!, {r1, r4, r5}
10001950: cb32         	ldm	r3!, {r1, r4, r5}
10001952: c032         	stm	r0!, {r1, r4, r5}
10001954: cb72         	ldm	r3!, {r1, r4, r5, r6}
10001956: c072         	stm	r0!, {r1, r4, r5, r6}
10001958: 9901         	ldr	r1, [sp, #0x4]
1000195a: 1d08         	adds	r0, r1, #0x4
1000195c: ca38         	ldm	r2!, {r3, r4, r5}
1000195e: c038         	stm	r0!, {r3, r4, r5}
10001960: ca38         	ldm	r2!, {r3, r4, r5}
10001962: c038         	stm	r0!, {r3, r4, r5}
10001964: ca78         	ldm	r2!, {r3, r4, r5, r6}
10001966: c078         	stm	r0!, {r3, r4, r5, r6}
10001968: 2001         	movs	r0, #0x1
1000196a: 6008         	str	r0, [r1]
1000196c: e003         	b	0x10001976 <_ZN4core6result19Result$LT$T$C$E$GT$2ok17h37b5575f688d71baE+0x46> @ imm = #0x6
1000196e: 9901         	ldr	r1, [sp, #0x4]
10001970: 2000         	movs	r0, #0x0
10001972: 6008         	str	r0, [r1]
10001974: e7ff         	b	0x10001976 <_ZN4core6result19Result$LT$T$C$E$GT$2ok17h37b5575f688d71baE+0x46> @ imm = #-0x2
10001976: 9800         	ldr	r0, [sp]
10001978: 7800         	ldrb	r0, [r0]
1000197a: 07c0         	lsls	r0, r0, #0x1f
1000197c: 2800         	cmp	r0, #0x0
1000197e: d102         	bne	0x10001986 <_ZN4core6result19Result$LT$T$C$E$GT$2ok17h37b5575f688d71baE+0x56> @ imm = #0x4
10001980: e7ff         	b	0x10001982 <_ZN4core6result19Result$LT$T$C$E$GT$2ok17h37b5575f688d71baE+0x52> @ imm = #-0x2
10001982: b00c         	add	sp, #0x30
10001984: bdf0         	pop	{r4, r5, r6, r7, pc}
10001986: e7fc         	b	0x10001982 <_ZN4core6result19Result$LT$T$C$E$GT$2ok17h37b5575f688d71baE+0x52> @ imm = #-0x8

10001988 <rtic::tq::TimerQueue<Mono,Task,_>::dequeue::h170fc814149e15bd>:
10001988: b580         	push	{r7, lr}
1000198a: af00         	add	r7, sp, #0x0
1000198c: b09a         	sub	sp, #0x68
1000198e: 9101         	str	r1, [sp, #0x4]
10001990: 4601         	mov	r1, r0
10001992: 9801         	ldr	r0, [sp, #0x4]
10001994: 9102         	str	r1, [sp, #0x8]
10001996: 9117         	str	r1, [sp, #0x5c]
10001998: 9019         	str	r0, [sp, #0x64]
1000199a: aa16         	add	r2, sp, #0x58
1000199c: 2100         	movs	r1, #0x0
1000199e: 7011         	strb	r1, [r2]
100019a0: 2101         	movs	r1, #0x1
100019a2: 7011         	strb	r1, [r2]
100019a4: f003 faca    	bl	0x10004f3c <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::clear_compare_flag::hf9a2a5fb3c3beaf3> @ imm = #0x3594
100019a8: 9802         	ldr	r0, [sp, #0x8]
100019aa: f000 ffd5    	bl	0x10002958 <heapless::sorted_linked_list::SortedLinkedList<T,Idx,K,_>::peek::h18c13cbce0c525f7> @ imm = #0xfaa
100019ae: 4601         	mov	r1, r0
100019b0: a804         	add	r0, sp, #0x10
100019b2: f7ff ff6c    	bl	0x1000188e <core::option::Option<T>::map::h66d764b054af0c1d> @ imm = #-0x128
100019b6: 9804         	ldr	r0, [sp, #0x10]
100019b8: 2801         	cmp	r0, #0x1
100019ba: d110         	bne	0x100019de <rtic::tq::TimerQueue<Mono,Task,_>::dequeue::h170fc814149e15bd+0x56> @ imm = #0x20
100019bc: e7ff         	b	0x100019be <rtic::tq::TimerQueue<Mono,Task,_>::dequeue::h170fc814149e15bd+0x36> @ imm = #-0x2
100019be: 9801         	ldr	r0, [sp, #0x4]
100019c0: 9906         	ldr	r1, [sp, #0x18]
100019c2: 9a07         	ldr	r2, [sp, #0x1c]
100019c4: 9209         	str	r2, [sp, #0x24]
100019c6: 9108         	str	r1, [sp, #0x20]
100019c8: f003 f940    	bl	0x10004c4c <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::now::h8a49c9d58152d716> @ imm = #0x3280
100019cc: 910b         	str	r1, [sp, #0x2c]
100019ce: 900a         	str	r0, [sp, #0x28]
100019d0: a808         	add	r0, sp, #0x20
100019d2: a90a         	add	r1, sp, #0x28
100019d4: f7ff fbc0    	bl	0x10001158 <core::cmp::PartialOrd::le::h1fc900183218eeca> @ imm = #-0x880
100019d8: 2800         	cmp	r0, #0x0
100019da: d112         	bne	0x10001a02 <rtic::tq::TimerQueue<Mono,Task,_>::dequeue::h170fc814149e15bd+0x7a> @ imm = #0x24
100019dc: e000         	b	0x100019e0 <rtic::tq::TimerQueue<Mono,Task,_>::dequeue::h170fc814149e15bd+0x58> @ imm = #0x0
100019de: e02c         	b	0x10001a3a <rtic::tq::TimerQueue<Mono,Task,_>::dequeue::h170fc814149e15bd+0xb2> @ imm = #0x58
100019e0: 9801         	ldr	r0, [sp, #0x4]
100019e2: 9b09         	ldr	r3, [sp, #0x24]
100019e4: 9a08         	ldr	r2, [sp, #0x20]
100019e6: f003 fa33    	bl	0x10004e50 <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::set_compare::h3a1f5092ad3092b8> @ imm = #0x3466
100019ea: 9801         	ldr	r0, [sp, #0x4]
100019ec: f003 f92e    	bl	0x10004c4c <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::now::h8a49c9d58152d716> @ imm = #0x325c
100019f0: 9111         	str	r1, [sp, #0x44]
100019f2: 9010         	str	r0, [sp, #0x40]
100019f4: a808         	add	r0, sp, #0x20
100019f6: a910         	add	r1, sp, #0x40
100019f8: f7ff fbae    	bl	0x10001158 <core::cmp::PartialOrd::le::h1fc900183218eeca> @ imm = #-0x8a4
100019fc: 2800         	cmp	r0, #0x0
100019fe: d10d         	bne	0x10001a1c <rtic::tq::TimerQueue<Mono,Task,_>::dequeue::h170fc814149e15bd+0x94> @ imm = #0x1a
10001a00: e008         	b	0x10001a14 <rtic::tq::TimerQueue<Mono,Task,_>::dequeue::h170fc814149e15bd+0x8c> @ imm = #0x10
10001a02: 9902         	ldr	r1, [sp, #0x8]
10001a04: a80c         	add	r0, sp, #0x30
10001a06: f000 ff70    	bl	0x100028ea <heapless::sorted_linked_list::SortedLinkedList<T,Idx,K,_>::pop_unchecked::h6c6f9c216b7b8d74> @ imm = #0xee0
10001a0a: 980f         	ldr	r0, [sp, #0x3c]
10001a0c: a903         	add	r1, sp, #0xc
10001a0e: 7048         	strb	r0, [r1, #0x1]
10001a10: defe         	trap
10001a12: e00c         	b	0x10001a2e <rtic::tq::TimerQueue<Mono,Task,_>::dequeue::h170fc814149e15bd+0xa6> @ imm = #0x18
10001a14: a903         	add	r1, sp, #0xc
10001a16: 2000         	movs	r0, #0x0
10001a18: 7008         	strb	r0, [r1]
10001a1a: e008         	b	0x10001a2e <rtic::tq::TimerQueue<Mono,Task,_>::dequeue::h170fc814149e15bd+0xa6> @ imm = #0x10
10001a1c: 9902         	ldr	r1, [sp, #0x8]
10001a1e: a812         	add	r0, sp, #0x48
10001a20: f000 ff63    	bl	0x100028ea <heapless::sorted_linked_list::SortedLinkedList<T,Idx,K,_>::pop_unchecked::h6c6f9c216b7b8d74> @ imm = #0xec6
10001a24: 9815         	ldr	r0, [sp, #0x54]
10001a26: a903         	add	r1, sp, #0xc
10001a28: 7048         	strb	r0, [r1, #0x1]
10001a2a: defe         	trap
10001a2c: e7ff         	b	0x10001a2e <rtic::tq::TimerQueue<Mono,Task,_>::dequeue::h170fc814149e15bd+0xa6> @ imm = #-0x2
10001a2e: a816         	add	r0, sp, #0x58
10001a30: 7800         	ldrb	r0, [r0]
10001a32: 07c0         	lsls	r0, r0, #0x1f
10001a34: 2800         	cmp	r0, #0x0
10001a36: d109         	bne	0x10001a4c <rtic::tq::TimerQueue<Mono,Task,_>::dequeue::h170fc814149e15bd+0xc4> @ imm = #0x12
10001a38: e003         	b	0x10001a42 <rtic::tq::TimerQueue<Mono,Task,_>::dequeue::h170fc814149e15bd+0xba> @ imm = #0x6
10001a3a: a903         	add	r1, sp, #0xc
10001a3c: 2000         	movs	r0, #0x0
10001a3e: 7008         	strb	r0, [r1]
10001a40: e7f5         	b	0x10001a2e <rtic::tq::TimerQueue<Mono,Task,_>::dequeue::h170fc814149e15bd+0xa6> @ imm = #-0x16
10001a42: a803         	add	r0, sp, #0xc
10001a44: 7841         	ldrb	r1, [r0, #0x1]
10001a46: 9803         	ldr	r0, [sp, #0xc]
10001a48: b01a         	add	sp, #0x68
10001a4a: bd80         	pop	{r7, pc}
10001a4c: e7f9         	b	0x10001a42 <rtic::tq::TimerQueue<Mono,Task,_>::dequeue::h170fc814149e15bd+0xba> @ imm = #-0xe

10001a4e <rtic::tq::TimerQueue<Mono,Task,_>::dequeue::{{closure}}::h8d066e9656d168d4>:
10001a4e: b580         	push	{r7, lr}
10001a50: af00         	add	r7, sp, #0x0
10001a52: b082         	sub	sp, #0x8
10001a54: 4601         	mov	r1, r0
10001a56: 9101         	str	r1, [sp, #0x4]
10001a58: 6808         	ldr	r0, [r1]
10001a5a: 6849         	ldr	r1, [r1, #0x4]
10001a5c: b002         	add	sp, #0x8
10001a5e: bd80         	pop	{r7, pc}

10001a60 <rtic::export::logical2hw::ha4625f4536969112>:
10001a60: b580         	push	{r7, lr}
10001a62: af00         	add	r7, sp, #0x0
10001a64: b086         	sub	sp, #0x18
10001a66: 4602         	mov	r2, r0
10001a68: b2c8         	uxtb	r0, r1
10001a6a: 460b         	mov	r3, r1
10001a6c: 9302         	str	r3, [sp, #0x8]
10001a6e: 4613         	mov	r3, r2
10001a70: 9303         	str	r3, [sp, #0xc]
10001a72: ab04         	add	r3, sp, #0x10
10001a74: 701a         	strb	r2, [r3]
10001a76: aa05         	add	r2, sp, #0x14
10001a78: 7011         	strb	r1, [r2]
10001a7a: 2807         	cmp	r0, #0x7
10001a7c: d80c         	bhi	0x10001a98 <rtic::export::logical2hw::ha4625f4536969112+0x38> @ imm = #0x18
10001a7e: e7ff         	b	0x10001a80 <rtic::export::logical2hw::ha4625f4536969112+0x20> @ imm = #-0x2
10001a80: 9803         	ldr	r0, [sp, #0xc]
10001a82: 9a02         	ldr	r2, [sp, #0x8]
10001a84: 2107         	movs	r1, #0x7
10001a86: 400a         	ands	r2, r1
10001a88: 2101         	movs	r1, #0x1
10001a8a: 4091         	lsls	r1, r2
10001a8c: 1a0a         	subs	r2, r1, r0
10001a8e: 9201         	str	r2, [sp, #0x4]
10001a90: b2c0         	uxtb	r0, r0
10001a92: 4288         	cmp	r0, r1
10001a94: d80b         	bhi	0x10001aae <rtic::export::logical2hw::ha4625f4536969112+0x4e> @ imm = #0x16
10001a96: e002         	b	0x10001a9e <rtic::export::logical2hw::ha4625f4536969112+0x3e> @ imm = #0x4
10001a98: 480f         	ldr	r0, [pc, #0x3c]         @ 0x10001ad8 <rtic::export::logical2hw::ha4625f4536969112+0x78>
10001a9a: f00b fcff    	bl	0x1000d49c <core::panicking::panic_const::panic_const_shl_overflow::h42afea46a5d11e4a> @ imm = #0xb9fe
10001a9e: 9802         	ldr	r0, [sp, #0x8]
10001aa0: 2108         	movs	r1, #0x8
10001aa2: 1a09         	subs	r1, r1, r0
10001aa4: 9100         	str	r1, [sp]
10001aa6: b2c0         	uxtb	r0, r0
10001aa8: 2808         	cmp	r0, #0x8
10001aaa: d808         	bhi	0x10001abe <rtic::export::logical2hw::ha4625f4536969112+0x5e> @ imm = #0x10
10001aac: e002         	b	0x10001ab4 <rtic::export::logical2hw::ha4625f4536969112+0x54> @ imm = #0x4
10001aae: 480b         	ldr	r0, [pc, #0x2c]         @ 0x10001adc <rtic::export::logical2hw::ha4625f4536969112+0x7c>
10001ab0: f00b fcd0    	bl	0x1000d454 <core::panicking::panic_const::panic_const_sub_overflow::hcef9c8e46a564551> @ imm = #0xb9a0
10001ab4: 9800         	ldr	r0, [sp]
10001ab6: b2c0         	uxtb	r0, r0
10001ab8: 2808         	cmp	r0, #0x8
10001aba: d303         	blo	0x10001ac4 <rtic::export::logical2hw::ha4625f4536969112+0x64> @ imm = #0x6
10001abc: e009         	b	0x10001ad2 <rtic::export::logical2hw::ha4625f4536969112+0x72> @ imm = #0x12
10001abe: 4808         	ldr	r0, [pc, #0x20]         @ 0x10001ae0 <rtic::export::logical2hw::ha4625f4536969112+0x80>
10001ac0: f00b fcc8    	bl	0x1000d454 <core::panicking::panic_const::panic_const_sub_overflow::hcef9c8e46a564551> @ imm = #0xb990
10001ac4: 9801         	ldr	r0, [sp, #0x4]
10001ac6: 9900         	ldr	r1, [sp]
10001ac8: 2207         	movs	r2, #0x7
10001aca: 4011         	ands	r1, r2
10001acc: 4088         	lsls	r0, r1
10001ace: b006         	add	sp, #0x18
10001ad0: bd80         	pop	{r7, pc}
10001ad2: 4802         	ldr	r0, [pc, #0x8]          @ 0x10001adc <rtic::export::logical2hw::ha4625f4536969112+0x7c>
10001ad4: f00b fce2    	bl	0x1000d49c <core::panicking::panic_const::panic_const_shl_overflow::h42afea46a5d11e4a> @ imm = #0xb9c4
10001ad8: 30 e5 00 10  	.word	0x1000e530
10001adc: 40 e5 00 10  	.word	0x1000e540
10001ae0: 50 e5 00 10  	.word	0x1000e550

10001ae4 <rtic::export::compute_mask::{{closure}}::he7ac2e493e147712>:
10001ae4: b580         	push	{r7, lr}
10001ae6: af00         	add	r7, sp, #0x0
10001ae8: b084         	sub	sp, #0x10
10001aea: 9001         	str	r0, [sp, #0x4]
10001aec: 9102         	str	r1, [sp, #0x8]
10001aee: 6800         	ldr	r0, [r0]
10001af0: 6809         	ldr	r1, [r1]
10001af2: 9100         	str	r1, [sp]
10001af4: 9900         	ldr	r1, [sp]
10001af6: 9103         	str	r1, [sp, #0xc]
10001af8: 9903         	ldr	r1, [sp, #0xc]
10001afa: f000 fc13    	bl	0x10002324 <<rtic::export::Mask<_> as core::ops::bit::BitOrAssign>::bitor_assign::h714736c586c671fb> @ imm = #0x826
10001afe: b004         	add	sp, #0x10
10001b00: bd80         	pop	{r7, pc}

10001b02 <<T as core::convert::Into<U>>::into::h0d24b07b48444121>:
10001b02: b580         	push	{r7, lr}
10001b04: af00         	add	r7, sp, #0x0
10001b06: b081         	sub	sp, #0x4
10001b08: b001         	add	sp, #0x4
10001b0a: bd80         	pop	{r7, pc}

10001b0c <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::h780b01b4b3989778>:
10001b0c: b580         	push	{r7, lr}
10001b0e: af00         	add	r7, sp, #0x0
10001b10: b082         	sub	sp, #0x8
10001b12: 460a         	mov	r2, r1
10001b14: 4601         	mov	r1, r0
10001b16: 9100         	str	r1, [sp]
10001b18: 9201         	str	r2, [sp, #0x4]
10001b1a: 6808         	ldr	r0, [r1]
10001b1c: 4310         	orrs	r0, r2
10001b1e: 6008         	str	r0, [r1]
10001b20: b002         	add	sp, #0x8
10001b22: bd80         	pop	{r7, pc}

10001b24 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h3e991570dd1d70a7>:
10001b24: b580         	push	{r7, lr}
10001b26: af00         	add	r7, sp, #0x0
10001b28: b082         	sub	sp, #0x8
10001b2a: 460a         	mov	r2, r1
10001b2c: 4601         	mov	r1, r0
10001b2e: 9100         	str	r1, [sp]
10001b30: 9201         	str	r2, [sp, #0x4]
10001b32: 6808         	ldr	r0, [r1]
10001b34: 4010         	ands	r0, r2
10001b36: 6008         	str	r0, [r1]
10001b38: b002         	add	sp, #0x8
10001b3a: bd80         	pop	{r7, pc}

10001b3c <<u32 as core::ops::bit::Shl<u8>>::shl::h812542cec0b8c163>:
10001b3c: b580         	push	{r7, lr}
10001b3e: af00         	add	r7, sp, #0x0
10001b40: b084         	sub	sp, #0x10
10001b42: 4602         	mov	r2, r0
10001b44: 9200         	str	r2, [sp]
10001b46: b2c8         	uxtb	r0, r1
10001b48: 460b         	mov	r3, r1
10001b4a: 9301         	str	r3, [sp, #0x4]
10001b4c: 9202         	str	r2, [sp, #0x8]
10001b4e: aa03         	add	r2, sp, #0xc
10001b50: 7011         	strb	r1, [r2]
10001b52: 281f         	cmp	r0, #0x1f
10001b54: d807         	bhi	0x10001b66 <<u32 as core::ops::bit::Shl<u8>>::shl::h812542cec0b8c163+0x2a> @ imm = #0xe
10001b56: e7ff         	b	0x10001b58 <<u32 as core::ops::bit::Shl<u8>>::shl::h812542cec0b8c163+0x1c> @ imm = #-0x2
10001b58: 9800         	ldr	r0, [sp]
10001b5a: 9901         	ldr	r1, [sp, #0x4]
10001b5c: 221f         	movs	r2, #0x1f
10001b5e: 4011         	ands	r1, r2
10001b60: 4088         	lsls	r0, r1
10001b62: b004         	add	sp, #0x10
10001b64: bd80         	pop	{r7, pc}
10001b66: 4801         	ldr	r0, [pc, #0x4]          @ 0x10001b6c <<u32 as core::ops::bit::Shl<u8>>::shl::h812542cec0b8c163+0x30>
10001b68: f00b fc98    	bl	0x1000d49c <core::panicking::panic_const::panic_const_shl_overflow::h42afea46a5d11e4a> @ imm = #0xb930
10001b6c: 40 e6 00 10  	.word	0x1000e640

10001b70 <<layout_trait::Layout as core::fmt::Debug>::fmt::h01a6cad6b9ed4e62>:
10001b70: b580         	push	{r7, lr}
10001b72: af00         	add	r7, sp, #0x0
10001b74: b08c         	sub	sp, #0x30
10001b76: 9108         	str	r1, [sp, #0x20]
10001b78: 4601         	mov	r1, r0
10001b7a: 9808         	ldr	r0, [sp, #0x20]
10001b7c: 910a         	str	r1, [sp, #0x28]
10001b7e: 900b         	str	r0, [sp, #0x2c]
10001b80: 1d0a         	adds	r2, r1, #0x4
10001b82: 9209         	str	r2, [sp, #0x24]
10001b84: 4a09         	ldr	r2, [pc, #0x24]         @ 0x10001bac <<layout_trait::Layout as core::fmt::Debug>::fmt::h01a6cad6b9ed4e62+0x3c>
10001b86: 9206         	str	r2, [sp, #0x18]
10001b88: aa09         	add	r2, sp, #0x24
10001b8a: 9205         	str	r2, [sp, #0x14]
10001b8c: 2204         	movs	r2, #0x4
10001b8e: 9204         	str	r2, [sp, #0x10]
10001b90: 4a07         	ldr	r2, [pc, #0x1c]         @ 0x10001bb0 <<layout_trait::Layout as core::fmt::Debug>::fmt::h01a6cad6b9ed4e62+0x40>
10001b92: 9203         	str	r2, [sp, #0xc]
10001b94: 4a07         	ldr	r2, [pc, #0x1c]         @ 0x10001bb4 <<layout_trait::Layout as core::fmt::Debug>::fmt::h01a6cad6b9ed4e62+0x44>
10001b96: 9202         	str	r2, [sp, #0x8]
10001b98: 9101         	str	r1, [sp, #0x4]
10001b9a: 2107         	movs	r1, #0x7
10001b9c: 9100         	str	r1, [sp]
10001b9e: 4906         	ldr	r1, [pc, #0x18]         @ 0x10001bb8 <<layout_trait::Layout as core::fmt::Debug>::fmt::h01a6cad6b9ed4e62+0x48>
10001ba0: 4b06         	ldr	r3, [pc, #0x18]         @ 0x10001bbc <<layout_trait::Layout as core::fmt::Debug>::fmt::h01a6cad6b9ed4e62+0x4c>
10001ba2: 2206         	movs	r2, #0x6
10001ba4: f00b f982    	bl	0x1000ceac <core::fmt::Formatter::debug_struct_field2_finish::h52a203d28ffdee01> @ imm = #0xb304
10001ba8: b00c         	add	sp, #0x30
10001baa: bd80         	pop	{r7, pc}
10001bac: 80 e6 00 10  	.word	0x1000e680
10001bb0: 7c e6 00 10  	.word	0x1000e67c
10001bb4: 60 e6 00 10  	.word	0x1000e660
10001bb8: 50 e6 00 10  	.word	0x1000e650
10001bbc: 56 e6 00 10  	.word	0x1000e656

10001bc0 <fugit::helpers::greater_than_0::h85842c3a0753dd69>:
10001bc0: b580         	push	{r7, lr}
10001bc2: af00         	add	r7, sp, #0x0
10001bc4: bd80         	pop	{r7, pc}

10001bc6 <fugit::duration::Duration<u32,_,_>::from_ticks::h7f37a5b5a6447ecc>:
10001bc6: b580         	push	{r7, lr}
10001bc8: af00         	add	r7, sp, #0x0
10001bca: b082         	sub	sp, #0x8
10001bcc: 9000         	str	r0, [sp]
10001bce: 9001         	str	r0, [sp, #0x4]
10001bd0: f005 fa08    	bl	0x10006fe4 <fugit::helpers::greater_than_0::h3591ec4eb6c18ad8> @ imm = #0x5410
10001bd4: f7ff fff4    	bl	0x10001bc0 <fugit::helpers::greater_than_0::h85842c3a0753dd69> @ imm = #-0x18
10001bd8: 9800         	ldr	r0, [sp]
10001bda: b002         	add	sp, #0x8
10001bdc: bd80         	pop	{r7, pc}

10001bde <fugit::duration::Duration<u32,_,_>::checked_sub::h7132cd7e1372da4e>:
10001bde: b580         	push	{r7, lr}
10001be0: af00         	add	r7, sp, #0x0
10001be2: b08a         	sub	sp, #0x28
10001be4: 9101         	str	r1, [sp, #0x4]
10001be6: 9002         	str	r0, [sp, #0x8]
10001be8: 9007         	str	r0, [sp, #0x1c]
10001bea: 9108         	str	r1, [sp, #0x20]
10001bec: e7ff         	b	0x10001bee <fugit::duration::Duration<u32,_,_>::checked_sub::h7132cd7e1372da4e+0x10> @ imm = #-0x2
10001bee: 9901         	ldr	r1, [sp, #0x4]
10001bf0: 9802         	ldr	r0, [sp, #0x8]
10001bf2: f7ff fb9e    	bl	0x10001332 <core::num::<impl u32>::checked_sub::h45d651da7253cb54> @ imm = #-0x8c4
10001bf6: 9005         	str	r0, [sp, #0x14]
10001bf8: 9106         	str	r1, [sp, #0x18]
10001bfa: 9805         	ldr	r0, [sp, #0x14]
10001bfc: 2801         	cmp	r0, #0x1
10001bfe: d108         	bne	0x10001c12 <fugit::duration::Duration<u32,_,_>::checked_sub::h7132cd7e1372da4e+0x34> @ imm = #0x10
10001c00: e7ff         	b	0x10001c02 <fugit::duration::Duration<u32,_,_>::checked_sub::h7132cd7e1372da4e+0x24> @ imm = #-0x2
10001c02: 9806         	ldr	r0, [sp, #0x18]
10001c04: 9009         	str	r0, [sp, #0x24]
10001c06: f7ff ffde    	bl	0x10001bc6 <fugit::duration::Duration<u32,_,_>::from_ticks::h7f37a5b5a6447ecc> @ imm = #-0x44
10001c0a: 9004         	str	r0, [sp, #0x10]
10001c0c: 2001         	movs	r0, #0x1
10001c0e: 9003         	str	r0, [sp, #0xc]
10001c10: e002         	b	0x10001c18 <fugit::duration::Duration<u32,_,_>::checked_sub::h7132cd7e1372da4e+0x3a> @ imm = #0x4
10001c12: 2000         	movs	r0, #0x0
10001c14: 9003         	str	r0, [sp, #0xc]
10001c16: e7ff         	b	0x10001c18 <fugit::duration::Duration<u32,_,_>::checked_sub::h7132cd7e1372da4e+0x3a> @ imm = #-0x2
10001c18: 9803         	ldr	r0, [sp, #0xc]
10001c1a: 9904         	ldr	r1, [sp, #0x10]
10001c1c: b00a         	add	sp, #0x28
10001c1e: bd80         	pop	{r7, pc}

10001c20 <fugit::duration::Duration<u32,_,_>::const_partial_cmp::hc60f83a5d13cacba>:
10001c20: b580         	push	{r7, lr}
10001c22: af00         	add	r7, sp, #0x0
10001c24: b088         	sub	sp, #0x20
10001c26: 9100         	str	r1, [sp]
10001c28: 9001         	str	r0, [sp, #0x4]
10001c2a: 9003         	str	r0, [sp, #0xc]
10001c2c: 9104         	str	r1, [sp, #0x10]
10001c2e: e7ff         	b	0x10001c30 <fugit::duration::Duration<u32,_,_>::const_partial_cmp::hc60f83a5d13cacba+0x10> @ imm = #-0x2
10001c30: 9801         	ldr	r0, [sp, #0x4]
10001c32: 9900         	ldr	r1, [sp]
10001c34: 9006         	str	r0, [sp, #0x18]
10001c36: 9107         	str	r1, [sp, #0x1c]
10001c38: 4288         	cmp	r0, r1
10001c3a: d305         	blo	0x10001c48 <fugit::duration::Duration<u32,_,_>::const_partial_cmp::hc60f83a5d13cacba+0x28> @ imm = #0xa
10001c3c: e7ff         	b	0x10001c3e <fugit::duration::Duration<u32,_,_>::const_partial_cmp::hc60f83a5d13cacba+0x1e> @ imm = #-0x2
10001c3e: 9801         	ldr	r0, [sp, #0x4]
10001c40: 9900         	ldr	r1, [sp]
10001c42: 4288         	cmp	r0, r1
10001c44: d808         	bhi	0x10001c58 <fugit::duration::Duration<u32,_,_>::const_partial_cmp::hc60f83a5d13cacba+0x38> @ imm = #0x10
10001c46: e003         	b	0x10001c50 <fugit::duration::Duration<u32,_,_>::const_partial_cmp::hc60f83a5d13cacba+0x30> @ imm = #0x6
10001c48: a905         	add	r1, sp, #0x14
10001c4a: 20ff         	movs	r0, #0xff
10001c4c: 7008         	strb	r0, [r1]
10001c4e: e007         	b	0x10001c60 <fugit::duration::Duration<u32,_,_>::const_partial_cmp::hc60f83a5d13cacba+0x40> @ imm = #0xe
10001c50: a905         	add	r1, sp, #0x14
10001c52: 2000         	movs	r0, #0x0
10001c54: 7008         	strb	r0, [r1]
10001c56: e003         	b	0x10001c60 <fugit::duration::Duration<u32,_,_>::const_partial_cmp::hc60f83a5d13cacba+0x40> @ imm = #0x6
10001c58: a905         	add	r1, sp, #0x14
10001c5a: 2001         	movs	r0, #0x1
10001c5c: 7008         	strb	r0, [r1]
10001c5e: e7ff         	b	0x10001c60 <fugit::duration::Duration<u32,_,_>::const_partial_cmp::hc60f83a5d13cacba+0x40> @ imm = #-0x2
10001c60: 9805         	ldr	r0, [sp, #0x14]
10001c62: a902         	add	r1, sp, #0x8
10001c64: 7008         	strb	r0, [r1]
10001c66: e7ff         	b	0x10001c68 <fugit::duration::Duration<u32,_,_>::const_partial_cmp::hc60f83a5d13cacba+0x48> @ imm = #-0x2
10001c68: 9802         	ldr	r0, [sp, #0x8]
10001c6a: b008         	add	sp, #0x20
10001c6c: bd80         	pop	{r7, pc}
10001c6e: d4d4         	bmi	0x10001c1a <fugit::duration::Duration<u32,_,_>::checked_sub::h7132cd7e1372da4e+0x3c> @ imm = #-0x58

10001c70 <fugit::duration::Duration<u32,_,_>::millis::hdc4af7d6f5ea660d>:
10001c70: b580         	push	{r7, lr}
10001c72: af00         	add	r7, sp, #0x0
10001c74: b082         	sub	sp, #0x8
10001c76: 9001         	str	r0, [sp, #0x4]
10001c78: 4a09         	ldr	r2, [pc, #0x24]         @ 0x10001ca0 <fugit::duration::Duration<u32,_,_>::millis::hdc4af7d6f5ea660d+0x30>
10001c7a: 2300         	movs	r3, #0x0
10001c7c: 4619         	mov	r1, r3
10001c7e: f00b fe64    	bl	0x1000d94a <__aeabi_lmul> @ imm = #0xbcc8
10001c82: 1e4a         	subs	r2, r1, #0x1
10001c84: 4191         	sbcs	r1, r2
10001c86: 9000         	str	r0, [sp]
10001c88: 2900         	cmp	r1, #0x0
10001c8a: d105         	bne	0x10001c98 <fugit::duration::Duration<u32,_,_>::millis::hdc4af7d6f5ea660d+0x28> @ imm = #0xa
10001c8c: e7ff         	b	0x10001c8e <fugit::duration::Duration<u32,_,_>::millis::hdc4af7d6f5ea660d+0x1e> @ imm = #-0x2
10001c8e: 9800         	ldr	r0, [sp]
10001c90: f7ff ff99    	bl	0x10001bc6 <fugit::duration::Duration<u32,_,_>::from_ticks::h7f37a5b5a6447ecc> @ imm = #-0xce
10001c94: b002         	add	sp, #0x8
10001c96: bd80         	pop	{r7, pc}
10001c98: 4802         	ldr	r0, [pc, #0x8]          @ 0x10001ca4 <fugit::duration::Duration<u32,_,_>::millis::hdc4af7d6f5ea660d+0x34>
10001c9a: f00b fbed    	bl	0x1000d478 <core::panicking::panic_const::panic_const_mul_overflow::hdb56fe2dcc791345> @ imm = #0xb7da
10001c9e: 46c0         	mov	r8, r8
10001ca0: 48 e8 01 00  	.word	0x0001e848
10001ca4: ec e6 00 10  	.word	0x1000e6ec

10001ca8 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_oe_clr::h2ce0619782b658d6>:
10001ca8: b580         	push	{r7, lr}
10001caa: af00         	add	r7, sp, #0x0
10001cac: b086         	sub	sp, #0x18
10001cae: 9002         	str	r0, [sp, #0x8]
10001cb0: f000 fc89    	bl	0x100025c6 <<rp2040_hal::gpio::pin::bank0::Gpio25 as rp2040_hal::gpio::pin::PinId>::as_dyn::h45f212e232b7040d> @ imm = #0x912
10001cb4: 4602         	mov	r2, r0
10001cb6: 2001         	movs	r0, #0x1
10001cb8: 4002         	ands	r2, r0
10001cba: 4668         	mov	r0, sp
10001cbc: 7002         	strb	r2, [r0]
10001cbe: 7041         	strb	r1, [r0, #0x1]
10001cc0: 210d         	movs	r1, #0xd
10001cc2: 0709         	lsls	r1, r1, #0x1c
10001cc4: 9103         	str	r1, [sp, #0xc]
10001cc6: 7800         	ldrb	r0, [r0]
10001cc8: 07c0         	lsls	r0, r0, #0x1f
10001cca: 2800         	cmp	r0, #0x0
10001ccc: d106         	bne	0x10001cdc <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_oe_clr::h2ce0619782b658d6+0x34> @ imm = #0xc
10001cce: e7ff         	b	0x10001cd0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_oe_clr::h2ce0619782b658d6+0x28> @ imm = #-0x2
10001cd0: 200d         	movs	r0, #0xd
10001cd2: 0700         	lsls	r0, r0, #0x1c
10001cd4: 9004         	str	r0, [sp, #0x10]
10001cd6: 4807         	ldr	r0, [pc, #0x1c]         @ 0x10001cf4 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_oe_clr::h2ce0619782b658d6+0x4c>
10001cd8: 9001         	str	r0, [sp, #0x4]
10001cda: e005         	b	0x10001ce8 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_oe_clr::h2ce0619782b658d6+0x40> @ imm = #0xa
10001cdc: 200d         	movs	r0, #0xd
10001cde: 0700         	lsls	r0, r0, #0x1c
10001ce0: 9005         	str	r0, [sp, #0x14]
10001ce2: 4803         	ldr	r0, [pc, #0xc]          @ 0x10001cf0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_oe_clr::h2ce0619782b658d6+0x48>
10001ce4: 9001         	str	r0, [sp, #0x4]
10001ce6: e7ff         	b	0x10001ce8 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_oe_clr::h2ce0619782b658d6+0x40> @ imm = #-0x2
10001ce8: 9801         	ldr	r0, [sp, #0x4]
10001cea: b006         	add	sp, #0x18
10001cec: bd80         	pop	{r7, pc}
10001cee: 46c0         	mov	r8, r8
10001cf0: 48 00 00 d0  	.word	0xd0000048
10001cf4: 28 00 00 d0  	.word	0xd0000028

10001cf8 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_oe_clr::h7497cb030aaac4d1>:
10001cf8: b580         	push	{r7, lr}
10001cfa: af00         	add	r7, sp, #0x0
10001cfc: b086         	sub	sp, #0x18
10001cfe: 9002         	str	r0, [sp, #0x8]
10001d00: f000 fc56    	bl	0x100025b0 <<rp2040_hal::gpio::pin::bank0::Gpio22 as rp2040_hal::gpio::pin::PinId>::as_dyn::hf69c3befa49694bf> @ imm = #0x8ac
10001d04: 4602         	mov	r2, r0
10001d06: 2001         	movs	r0, #0x1
10001d08: 4002         	ands	r2, r0
10001d0a: 4668         	mov	r0, sp
10001d0c: 7002         	strb	r2, [r0]
10001d0e: 7041         	strb	r1, [r0, #0x1]
10001d10: 210d         	movs	r1, #0xd
10001d12: 0709         	lsls	r1, r1, #0x1c
10001d14: 9103         	str	r1, [sp, #0xc]
10001d16: 7800         	ldrb	r0, [r0]
10001d18: 07c0         	lsls	r0, r0, #0x1f
10001d1a: 2800         	cmp	r0, #0x0
10001d1c: d106         	bne	0x10001d2c <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_oe_clr::h7497cb030aaac4d1+0x34> @ imm = #0xc
10001d1e: e7ff         	b	0x10001d20 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_oe_clr::h7497cb030aaac4d1+0x28> @ imm = #-0x2
10001d20: 200d         	movs	r0, #0xd
10001d22: 0700         	lsls	r0, r0, #0x1c
10001d24: 9004         	str	r0, [sp, #0x10]
10001d26: 4807         	ldr	r0, [pc, #0x1c]         @ 0x10001d44 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_oe_clr::h7497cb030aaac4d1+0x4c>
10001d28: 9001         	str	r0, [sp, #0x4]
10001d2a: e005         	b	0x10001d38 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_oe_clr::h7497cb030aaac4d1+0x40> @ imm = #0xa
10001d2c: 200d         	movs	r0, #0xd
10001d2e: 0700         	lsls	r0, r0, #0x1c
10001d30: 9005         	str	r0, [sp, #0x14]
10001d32: 4803         	ldr	r0, [pc, #0xc]          @ 0x10001d40 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_oe_clr::h7497cb030aaac4d1+0x48>
10001d34: 9001         	str	r0, [sp, #0x4]
10001d36: e7ff         	b	0x10001d38 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_oe_clr::h7497cb030aaac4d1+0x40> @ imm = #-0x2
10001d38: 9801         	ldr	r0, [sp, #0x4]
10001d3a: b006         	add	sp, #0x18
10001d3c: bd80         	pop	{r7, pc}
10001d3e: 46c0         	mov	r8, r8
10001d40: 48 00 00 d0  	.word	0xd0000048
10001d44: 28 00 00 d0  	.word	0xd0000028

10001d48 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_oe_set::h76759ac06de69ca2>:
10001d48: b580         	push	{r7, lr}
10001d4a: af00         	add	r7, sp, #0x0
10001d4c: b086         	sub	sp, #0x18
10001d4e: 9002         	str	r0, [sp, #0x8]
10001d50: f000 fc39    	bl	0x100025c6 <<rp2040_hal::gpio::pin::bank0::Gpio25 as rp2040_hal::gpio::pin::PinId>::as_dyn::h45f212e232b7040d> @ imm = #0x872
10001d54: 4602         	mov	r2, r0
10001d56: 2001         	movs	r0, #0x1
10001d58: 4002         	ands	r2, r0
10001d5a: 4668         	mov	r0, sp
10001d5c: 7002         	strb	r2, [r0]
10001d5e: 7041         	strb	r1, [r0, #0x1]
10001d60: 210d         	movs	r1, #0xd
10001d62: 0709         	lsls	r1, r1, #0x1c
10001d64: 9103         	str	r1, [sp, #0xc]
10001d66: 7800         	ldrb	r0, [r0]
10001d68: 07c0         	lsls	r0, r0, #0x1f
10001d6a: 2800         	cmp	r0, #0x0
10001d6c: d106         	bne	0x10001d7c <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_oe_set::h76759ac06de69ca2+0x34> @ imm = #0xc
10001d6e: e7ff         	b	0x10001d70 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_oe_set::h76759ac06de69ca2+0x28> @ imm = #-0x2
10001d70: 200d         	movs	r0, #0xd
10001d72: 0700         	lsls	r0, r0, #0x1c
10001d74: 9004         	str	r0, [sp, #0x10]
10001d76: 4807         	ldr	r0, [pc, #0x1c]         @ 0x10001d94 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_oe_set::h76759ac06de69ca2+0x4c>
10001d78: 9001         	str	r0, [sp, #0x4]
10001d7a: e005         	b	0x10001d88 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_oe_set::h76759ac06de69ca2+0x40> @ imm = #0xa
10001d7c: 200d         	movs	r0, #0xd
10001d7e: 0700         	lsls	r0, r0, #0x1c
10001d80: 9005         	str	r0, [sp, #0x14]
10001d82: 4803         	ldr	r0, [pc, #0xc]          @ 0x10001d90 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_oe_set::h76759ac06de69ca2+0x48>
10001d84: 9001         	str	r0, [sp, #0x4]
10001d86: e7ff         	b	0x10001d88 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_oe_set::h76759ac06de69ca2+0x40> @ imm = #-0x2
10001d88: 9801         	ldr	r0, [sp, #0x4]
10001d8a: b006         	add	sp, #0x18
10001d8c: bd80         	pop	{r7, pc}
10001d8e: 46c0         	mov	r8, r8
10001d90: 44 00 00 d0  	.word	0xd0000044
10001d94: 24 00 00 d0  	.word	0xd0000024

10001d98 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_oe_set::hac8326d6d53e24fe>:
10001d98: b580         	push	{r7, lr}
10001d9a: af00         	add	r7, sp, #0x0
10001d9c: b086         	sub	sp, #0x18
10001d9e: 9002         	str	r0, [sp, #0x8]
10001da0: f000 fc06    	bl	0x100025b0 <<rp2040_hal::gpio::pin::bank0::Gpio22 as rp2040_hal::gpio::pin::PinId>::as_dyn::hf69c3befa49694bf> @ imm = #0x80c
10001da4: 4602         	mov	r2, r0
10001da6: 2001         	movs	r0, #0x1
10001da8: 4002         	ands	r2, r0
10001daa: 4668         	mov	r0, sp
10001dac: 7002         	strb	r2, [r0]
10001dae: 7041         	strb	r1, [r0, #0x1]
10001db0: 210d         	movs	r1, #0xd
10001db2: 0709         	lsls	r1, r1, #0x1c
10001db4: 9103         	str	r1, [sp, #0xc]
10001db6: 7800         	ldrb	r0, [r0]
10001db8: 07c0         	lsls	r0, r0, #0x1f
10001dba: 2800         	cmp	r0, #0x0
10001dbc: d106         	bne	0x10001dcc <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_oe_set::hac8326d6d53e24fe+0x34> @ imm = #0xc
10001dbe: e7ff         	b	0x10001dc0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_oe_set::hac8326d6d53e24fe+0x28> @ imm = #-0x2
10001dc0: 200d         	movs	r0, #0xd
10001dc2: 0700         	lsls	r0, r0, #0x1c
10001dc4: 9004         	str	r0, [sp, #0x10]
10001dc6: 4807         	ldr	r0, [pc, #0x1c]         @ 0x10001de4 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_oe_set::hac8326d6d53e24fe+0x4c>
10001dc8: 9001         	str	r0, [sp, #0x4]
10001dca: e005         	b	0x10001dd8 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_oe_set::hac8326d6d53e24fe+0x40> @ imm = #0xa
10001dcc: 200d         	movs	r0, #0xd
10001dce: 0700         	lsls	r0, r0, #0x1c
10001dd0: 9005         	str	r0, [sp, #0x14]
10001dd2: 4803         	ldr	r0, [pc, #0xc]          @ 0x10001de0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_oe_set::hac8326d6d53e24fe+0x48>
10001dd4: 9001         	str	r0, [sp, #0x4]
10001dd6: e7ff         	b	0x10001dd8 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_oe_set::hac8326d6d53e24fe+0x40> @ imm = #-0x2
10001dd8: 9801         	ldr	r0, [sp, #0x4]
10001dda: b006         	add	sp, #0x18
10001ddc: bd80         	pop	{r7, pc}
10001dde: 46c0         	mov	r8, r8
10001de0: 44 00 00 d0  	.word	0xd0000044
10001de4: 24 00 00 d0  	.word	0xd0000024

10001de8 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_out_clr::h6563b5b48f38d2c8>:
10001de8: b580         	push	{r7, lr}
10001dea: af00         	add	r7, sp, #0x0
10001dec: b086         	sub	sp, #0x18
10001dee: 9002         	str	r0, [sp, #0x8]
10001df0: f000 fbe9    	bl	0x100025c6 <<rp2040_hal::gpio::pin::bank0::Gpio25 as rp2040_hal::gpio::pin::PinId>::as_dyn::h45f212e232b7040d> @ imm = #0x7d2
10001df4: 4602         	mov	r2, r0
10001df6: 2001         	movs	r0, #0x1
10001df8: 4002         	ands	r2, r0
10001dfa: 4668         	mov	r0, sp
10001dfc: 7002         	strb	r2, [r0]
10001dfe: 7041         	strb	r1, [r0, #0x1]
10001e00: 210d         	movs	r1, #0xd
10001e02: 0709         	lsls	r1, r1, #0x1c
10001e04: 9103         	str	r1, [sp, #0xc]
10001e06: 7800         	ldrb	r0, [r0]
10001e08: 07c0         	lsls	r0, r0, #0x1f
10001e0a: 2800         	cmp	r0, #0x0
10001e0c: d106         	bne	0x10001e1c <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_out_clr::h6563b5b48f38d2c8+0x34> @ imm = #0xc
10001e0e: e7ff         	b	0x10001e10 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_out_clr::h6563b5b48f38d2c8+0x28> @ imm = #-0x2
10001e10: 200d         	movs	r0, #0xd
10001e12: 0700         	lsls	r0, r0, #0x1c
10001e14: 9004         	str	r0, [sp, #0x10]
10001e16: 4807         	ldr	r0, [pc, #0x1c]         @ 0x10001e34 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_out_clr::h6563b5b48f38d2c8+0x4c>
10001e18: 9001         	str	r0, [sp, #0x4]
10001e1a: e005         	b	0x10001e28 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_out_clr::h6563b5b48f38d2c8+0x40> @ imm = #0xa
10001e1c: 200d         	movs	r0, #0xd
10001e1e: 0700         	lsls	r0, r0, #0x1c
10001e20: 9005         	str	r0, [sp, #0x14]
10001e22: 4803         	ldr	r0, [pc, #0xc]          @ 0x10001e30 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_out_clr::h6563b5b48f38d2c8+0x48>
10001e24: 9001         	str	r0, [sp, #0x4]
10001e26: e7ff         	b	0x10001e28 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::sio_out_clr::h6563b5b48f38d2c8+0x40> @ imm = #-0x2
10001e28: 9801         	ldr	r0, [sp, #0x4]
10001e2a: b006         	add	sp, #0x18
10001e2c: bd80         	pop	{r7, pc}
10001e2e: 46c0         	mov	r8, r8
10001e30: 38 00 00 d0  	.word	0xd0000038
10001e34: 18 00 00 d0  	.word	0xd0000018

10001e38 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::mask::h097e2160afeea3fb>:
10001e38: b580         	push	{r7, lr}
10001e3a: af00         	add	r7, sp, #0x0
10001e3c: b082         	sub	sp, #0x8
10001e3e: 9001         	str	r0, [sp, #0x4]
10001e40: f000 fbb6    	bl	0x100025b0 <<rp2040_hal::gpio::pin::bank0::Gpio22 as rp2040_hal::gpio::pin::PinId>::as_dyn::hf69c3befa49694bf> @ imm = #0x76c
10001e44: b2c8         	uxtb	r0, r1
10001e46: 9100         	str	r1, [sp]
10001e48: 281f         	cmp	r0, #0x1f
10001e4a: d807         	bhi	0x10001e5c <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::mask::h097e2160afeea3fb+0x24> @ imm = #0xe
10001e4c: e7ff         	b	0x10001e4e <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::mask::h097e2160afeea3fb+0x16> @ imm = #-0x2
10001e4e: 9900         	ldr	r1, [sp]
10001e50: 201f         	movs	r0, #0x1f
10001e52: 4001         	ands	r1, r0
10001e54: 2001         	movs	r0, #0x1
10001e56: 4088         	lsls	r0, r1
10001e58: b002         	add	sp, #0x8
10001e5a: bd80         	pop	{r7, pc}
10001e5c: 4801         	ldr	r0, [pc, #0x4]          @ 0x10001e64 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::mask::h097e2160afeea3fb+0x2c>
10001e5e: f00b fb1d    	bl	0x1000d49c <core::panicking::panic_const::panic_const_shl_overflow::h42afea46a5d11e4a> @ imm = #0xb63a
10001e62: 46c0         	mov	r8, r8
10001e64: 68 e7 00 10  	.word	0x1000e768

10001e68 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::mask::h254d74b02b0cae54>:
10001e68: b580         	push	{r7, lr}
10001e6a: af00         	add	r7, sp, #0x0
10001e6c: b082         	sub	sp, #0x8
10001e6e: 9001         	str	r0, [sp, #0x4]
10001e70: f000 fba9    	bl	0x100025c6 <<rp2040_hal::gpio::pin::bank0::Gpio25 as rp2040_hal::gpio::pin::PinId>::as_dyn::h45f212e232b7040d> @ imm = #0x752
10001e74: b2c8         	uxtb	r0, r1
10001e76: 9100         	str	r1, [sp]
10001e78: 281f         	cmp	r0, #0x1f
10001e7a: d807         	bhi	0x10001e8c <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::mask::h254d74b02b0cae54+0x24> @ imm = #0xe
10001e7c: e7ff         	b	0x10001e7e <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::mask::h254d74b02b0cae54+0x16> @ imm = #-0x2
10001e7e: 9900         	ldr	r1, [sp]
10001e80: 201f         	movs	r0, #0x1f
10001e82: 4001         	ands	r1, r0
10001e84: 2001         	movs	r0, #0x1
10001e86: 4088         	lsls	r0, r1
10001e88: b002         	add	sp, #0x8
10001e8a: bd80         	pop	{r7, pc}
10001e8c: 4801         	ldr	r0, [pc, #0x4]          @ 0x10001e94 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::mask::h254d74b02b0cae54+0x2c>
10001e8e: f00b fb05    	bl	0x1000d49c <core::panicking::panic_const::panic_const_shl_overflow::h42afea46a5d11e4a> @ imm = #0xb60a
10001e92: 46c0         	mov	r8, r8
10001e94: 68 e7 00 10  	.word	0x1000e768

10001e98 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::io_ctrl::h4641cd4cc0e407a6>:
10001e98: b580         	push	{r7, lr}
10001e9a: af00         	add	r7, sp, #0x0
10001e9c: b090         	sub	sp, #0x40
10001e9e: 9005         	str	r0, [sp, #0x14]
10001ea0: f000 fb86    	bl	0x100025b0 <<rp2040_hal::gpio::pin::bank0::Gpio22 as rp2040_hal::gpio::pin::PinId>::as_dyn::hf69c3befa49694bf> @ imm = #0x70c
10001ea4: 4602         	mov	r2, r0
10001ea6: 2001         	movs	r0, #0x1
10001ea8: 4002         	ands	r2, r0
10001eaa: a804         	add	r0, sp, #0x10
10001eac: 7002         	strb	r2, [r0]
10001eae: 7041         	strb	r1, [r0, #0x1]
10001eb0: 7800         	ldrb	r0, [r0]
10001eb2: 07c0         	lsls	r0, r0, #0x1f
10001eb4: 2800         	cmp	r0, #0x0
10001eb6: d119         	bne	0x10001eec <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::io_ctrl::h4641cd4cc0e407a6+0x54> @ imm = #0x32
10001eb8: e7ff         	b	0x10001eba <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::io_ctrl::h4641cd4cc0e407a6+0x22> @ imm = #-0x2
10001eba: 491c         	ldr	r1, [pc, #0x70]         @ 0x10001f2c <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::io_ctrl::h4641cd4cc0e407a6+0x94>
10001ebc: 9106         	str	r1, [sp, #0x18]
10001ebe: a804         	add	r0, sp, #0x10
10001ec0: 7840         	ldrb	r0, [r0, #0x1]
10001ec2: 9002         	str	r0, [sp, #0x8]
10001ec4: aa0f         	add	r2, sp, #0x3c
10001ec6: 7010         	strb	r0, [r2]
10001ec8: 910b         	str	r1, [sp, #0x2c]
10001eca: 900c         	str	r0, [sp, #0x30]
10001ecc: 281e         	cmp	r0, #0x1e
10001ece: d305         	blo	0x10001edc <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::io_ctrl::h4641cd4cc0e407a6+0x44> @ imm = #0xa
10001ed0: e7ff         	b	0x10001ed2 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::io_ctrl::h4641cd4cc0e407a6+0x3a> @ imm = #-0x2
10001ed2: 9802         	ldr	r0, [sp, #0x8]
10001ed4: 4a16         	ldr	r2, [pc, #0x58]         @ 0x10001f30 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::io_ctrl::h4641cd4cc0e407a6+0x98>
10001ed6: 211e         	movs	r1, #0x1e
10001ed8: f00a fab2    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0xa564
10001edc: 9802         	ldr	r0, [sp, #0x8]
10001ede: 00c0         	lsls	r0, r0, #0x3
10001ee0: 4912         	ldr	r1, [pc, #0x48]         @ 0x10001f2c <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::io_ctrl::h4641cd4cc0e407a6+0x94>
10001ee2: 1840         	adds	r0, r0, r1
10001ee4: 900d         	str	r0, [sp, #0x34]
10001ee6: 1d00         	adds	r0, r0, #0x4
10001ee8: 9003         	str	r0, [sp, #0xc]
10001eea: e018         	b	0x10001f1e <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::io_ctrl::h4641cd4cc0e407a6+0x86> @ imm = #0x30
10001eec: 490d         	ldr	r1, [pc, #0x34]         @ 0x10001f24 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::io_ctrl::h4641cd4cc0e407a6+0x8c>
10001eee: 9107         	str	r1, [sp, #0x1c]
10001ef0: a804         	add	r0, sp, #0x10
10001ef2: 7840         	ldrb	r0, [r0, #0x1]
10001ef4: 9001         	str	r0, [sp, #0x4]
10001ef6: aa0e         	add	r2, sp, #0x38
10001ef8: 7010         	strb	r0, [r2]
10001efa: 9108         	str	r1, [sp, #0x20]
10001efc: 9009         	str	r0, [sp, #0x24]
10001efe: 2806         	cmp	r0, #0x6
10001f00: d305         	blo	0x10001f0e <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::io_ctrl::h4641cd4cc0e407a6+0x76> @ imm = #0xa
10001f02: e7ff         	b	0x10001f04 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::io_ctrl::h4641cd4cc0e407a6+0x6c> @ imm = #-0x2
10001f04: 9801         	ldr	r0, [sp, #0x4]
10001f06: 4a08         	ldr	r2, [pc, #0x20]         @ 0x10001f28 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::io_ctrl::h4641cd4cc0e407a6+0x90>
10001f08: 2106         	movs	r1, #0x6
10001f0a: f00a fa99    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0xa532
10001f0e: 9801         	ldr	r0, [sp, #0x4]
10001f10: 00c0         	lsls	r0, r0, #0x3
10001f12: 4904         	ldr	r1, [pc, #0x10]         @ 0x10001f24 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::io_ctrl::h4641cd4cc0e407a6+0x8c>
10001f14: 1840         	adds	r0, r0, r1
10001f16: 900a         	str	r0, [sp, #0x28]
10001f18: 1d00         	adds	r0, r0, #0x4
10001f1a: 9003         	str	r0, [sp, #0xc]
10001f1c: e7ff         	b	0x10001f1e <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::io_ctrl::h4641cd4cc0e407a6+0x86> @ imm = #-0x2
10001f1e: 9803         	ldr	r0, [sp, #0xc]
10001f20: b010         	add	sp, #0x40
10001f22: bd80         	pop	{r7, pc}
10001f24: 00 80 01 40  	.word	0x40018000
10001f28: 7c de 00 10  	.word	0x1000de7c
10001f2c: 00 40 01 40  	.word	0x40014000
10001f30: 0c df 00 10  	.word	0x1000df0c

10001f34 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::io_ctrl::h6e52738b7f3db4ba>:
10001f34: b580         	push	{r7, lr}
10001f36: af00         	add	r7, sp, #0x0
10001f38: b090         	sub	sp, #0x40
10001f3a: 9005         	str	r0, [sp, #0x14]
10001f3c: f000 fb43    	bl	0x100025c6 <<rp2040_hal::gpio::pin::bank0::Gpio25 as rp2040_hal::gpio::pin::PinId>::as_dyn::h45f212e232b7040d> @ imm = #0x686
10001f40: 4602         	mov	r2, r0
10001f42: 2001         	movs	r0, #0x1
10001f44: 4002         	ands	r2, r0
10001f46: a804         	add	r0, sp, #0x10
10001f48: 7002         	strb	r2, [r0]
10001f4a: 7041         	strb	r1, [r0, #0x1]
10001f4c: 7800         	ldrb	r0, [r0]
10001f4e: 07c0         	lsls	r0, r0, #0x1f
10001f50: 2800         	cmp	r0, #0x0
10001f52: d119         	bne	0x10001f88 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::io_ctrl::h6e52738b7f3db4ba+0x54> @ imm = #0x32
10001f54: e7ff         	b	0x10001f56 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::io_ctrl::h6e52738b7f3db4ba+0x22> @ imm = #-0x2
10001f56: 491c         	ldr	r1, [pc, #0x70]         @ 0x10001fc8 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::io_ctrl::h6e52738b7f3db4ba+0x94>
10001f58: 9106         	str	r1, [sp, #0x18]
10001f5a: a804         	add	r0, sp, #0x10
10001f5c: 7840         	ldrb	r0, [r0, #0x1]
10001f5e: 9002         	str	r0, [sp, #0x8]
10001f60: aa0f         	add	r2, sp, #0x3c
10001f62: 7010         	strb	r0, [r2]
10001f64: 910b         	str	r1, [sp, #0x2c]
10001f66: 900c         	str	r0, [sp, #0x30]
10001f68: 281e         	cmp	r0, #0x1e
10001f6a: d305         	blo	0x10001f78 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::io_ctrl::h6e52738b7f3db4ba+0x44> @ imm = #0xa
10001f6c: e7ff         	b	0x10001f6e <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::io_ctrl::h6e52738b7f3db4ba+0x3a> @ imm = #-0x2
10001f6e: 9802         	ldr	r0, [sp, #0x8]
10001f70: 4a16         	ldr	r2, [pc, #0x58]         @ 0x10001fcc <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::io_ctrl::h6e52738b7f3db4ba+0x98>
10001f72: 211e         	movs	r1, #0x1e
10001f74: f00a fa64    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0xa4c8
10001f78: 9802         	ldr	r0, [sp, #0x8]
10001f7a: 00c0         	lsls	r0, r0, #0x3
10001f7c: 4912         	ldr	r1, [pc, #0x48]         @ 0x10001fc8 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::io_ctrl::h6e52738b7f3db4ba+0x94>
10001f7e: 1840         	adds	r0, r0, r1
10001f80: 900d         	str	r0, [sp, #0x34]
10001f82: 1d00         	adds	r0, r0, #0x4
10001f84: 9003         	str	r0, [sp, #0xc]
10001f86: e018         	b	0x10001fba <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::io_ctrl::h6e52738b7f3db4ba+0x86> @ imm = #0x30
10001f88: 490d         	ldr	r1, [pc, #0x34]         @ 0x10001fc0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::io_ctrl::h6e52738b7f3db4ba+0x8c>
10001f8a: 9107         	str	r1, [sp, #0x1c]
10001f8c: a804         	add	r0, sp, #0x10
10001f8e: 7840         	ldrb	r0, [r0, #0x1]
10001f90: 9001         	str	r0, [sp, #0x4]
10001f92: aa0e         	add	r2, sp, #0x38
10001f94: 7010         	strb	r0, [r2]
10001f96: 9108         	str	r1, [sp, #0x20]
10001f98: 9009         	str	r0, [sp, #0x24]
10001f9a: 2806         	cmp	r0, #0x6
10001f9c: d305         	blo	0x10001faa <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::io_ctrl::h6e52738b7f3db4ba+0x76> @ imm = #0xa
10001f9e: e7ff         	b	0x10001fa0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::io_ctrl::h6e52738b7f3db4ba+0x6c> @ imm = #-0x2
10001fa0: 9801         	ldr	r0, [sp, #0x4]
10001fa2: 4a08         	ldr	r2, [pc, #0x20]         @ 0x10001fc4 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::io_ctrl::h6e52738b7f3db4ba+0x90>
10001fa4: 2106         	movs	r1, #0x6
10001fa6: f00a fa4b    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0xa496
10001faa: 9801         	ldr	r0, [sp, #0x4]
10001fac: 00c0         	lsls	r0, r0, #0x3
10001fae: 4904         	ldr	r1, [pc, #0x10]         @ 0x10001fc0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::io_ctrl::h6e52738b7f3db4ba+0x8c>
10001fb0: 1840         	adds	r0, r0, r1
10001fb2: 900a         	str	r0, [sp, #0x28]
10001fb4: 1d00         	adds	r0, r0, #0x4
10001fb6: 9003         	str	r0, [sp, #0xc]
10001fb8: e7ff         	b	0x10001fba <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::io_ctrl::h6e52738b7f3db4ba+0x86> @ imm = #-0x2
10001fba: 9803         	ldr	r0, [sp, #0xc]
10001fbc: b010         	add	sp, #0x40
10001fbe: bd80         	pop	{r7, pc}
10001fc0: 00 80 01 40  	.word	0x40018000
10001fc4: 7c de 00 10  	.word	0x1000de7c
10001fc8: 00 40 01 40  	.word	0x40014000
10001fcc: 0c df 00 10  	.word	0x1000df0c

10001fd0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48>:
10001fd0: b580         	push	{r7, lr}
10001fd2: af00         	add	r7, sp, #0x0
10001fd4: b09a         	sub	sp, #0x68
10001fd6: 900e         	str	r0, [sp, #0x38]
10001fd8: f000 faf5    	bl	0x100025c6 <<rp2040_hal::gpio::pin::bank0::Gpio25 as rp2040_hal::gpio::pin::PinId>::as_dyn::h45f212e232b7040d> @ imm = #0x5ea
10001fdc: 4602         	mov	r2, r0
10001fde: 2001         	movs	r0, #0x1
10001fe0: 4002         	ands	r2, r0
10001fe2: a805         	add	r0, sp, #0x14
10001fe4: 7002         	strb	r2, [r0]
10001fe6: 7041         	strb	r1, [r0, #0x1]
10001fe8: 7800         	ldrb	r0, [r0]
10001fea: 07c0         	lsls	r0, r0, #0x1f
10001fec: 2800         	cmp	r0, #0x0
10001fee: d117         	bne	0x10002020 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48+0x50> @ imm = #0x2e
10001ff0: e7ff         	b	0x10001ff2 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48+0x22> @ imm = #-0x2
10001ff2: 4938         	ldr	r1, [pc, #0xe0]         @ 0x100020d4 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48+0x104>
10001ff4: 910f         	str	r1, [sp, #0x3c]
10001ff6: a805         	add	r0, sp, #0x14
10001ff8: 7840         	ldrb	r0, [r0, #0x1]
10001ffa: 9003         	str	r0, [sp, #0xc]
10001ffc: aa19         	add	r2, sp, #0x64
10001ffe: 7010         	strb	r0, [r2]
10002000: 9111         	str	r1, [sp, #0x44]
10002002: 9012         	str	r0, [sp, #0x48]
10002004: 281e         	cmp	r0, #0x1e
10002006: d305         	blo	0x10002014 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48+0x44> @ imm = #0xa
10002008: e7ff         	b	0x1000200a <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48+0x3a> @ imm = #-0x2
1000200a: 9803         	ldr	r0, [sp, #0xc]
1000200c: 4a32         	ldr	r2, [pc, #0xc8]         @ 0x100020d8 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48+0x108>
1000200e: 211e         	movs	r1, #0x1e
10002010: f00a fa16    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0xa42c
10002014: 9803         	ldr	r0, [sp, #0xc]
10002016: 0080         	lsls	r0, r0, #0x2
10002018: 4930         	ldr	r1, [pc, #0xc0]         @ 0x100020dc <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48+0x10c>
1000201a: 1840         	adds	r0, r0, r1
1000201c: 9004         	str	r0, [sp, #0x10]
1000201e: e017         	b	0x10002050 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48+0x80> @ imm = #0x2e
10002020: 4823         	ldr	r0, [pc, #0x8c]         @ 0x100020b0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48+0xe0>
10002022: 9010         	str	r0, [sp, #0x40]
10002024: a805         	add	r0, sp, #0x14
10002026: 7840         	ldrb	r0, [r0, #0x1]
10002028: 9002         	str	r0, [sp, #0x8]
1000202a: 2805         	cmp	r0, #0x5
1000202c: d813         	bhi	0x10002056 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48+0x86> @ imm = #0x26
1000202e: 9802         	ldr	r0, [sp, #0x8]
10002030: 0081         	lsls	r1, r0, #0x2
10002032: a001         	adr	r0, #4 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48+0x67>
10002034: 5840         	ldr	r0, [r0, r1]
10002036: 4687         	mov	pc, r0
10002038: 6f 20 00 10  	.word	0x1000206f
1000203c: 79 20 00 10  	.word	0x10002079
10002040: 83 20 00 10  	.word	0x10002083
10002044: 8d 20 00 10  	.word	0x1000208d
10002048: 97 20 00 10  	.word	0x10002097
1000204c: a1 20 00 10  	.word	0x100020a1
10002050: 9804         	ldr	r0, [sp, #0x10]
10002052: b01a         	add	sp, #0x68
10002054: bd80         	pop	{r7, pc}
10002056: f7ff f8eb    	bl	0x10001230 <core::fmt::rt::Argument::none::h7ec904d04eb9bd64> @ imm = #-0xe2a
1000205a: 491c         	ldr	r1, [pc, #0x70]         @ 0x100020cc <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48+0xfc>
1000205c: a807         	add	r0, sp, #0x1c
1000205e: 9001         	str	r0, [sp, #0x4]
10002060: aa0d         	add	r2, sp, #0x34
10002062: f004 f9a5    	bl	0x100063b0 <core::fmt::Arguments::new_v1::hbda2e269fb3c02c4> @ imm = #0x434a
10002066: 9801         	ldr	r0, [sp, #0x4]
10002068: 4919         	ldr	r1, [pc, #0x64]         @ 0x100020d0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48+0x100>
1000206a: f00a f987    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #0xa30e
1000206e: 4810         	ldr	r0, [pc, #0x40]         @ 0x100020b0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48+0xe0>
10002070: 9018         	str	r0, [sp, #0x60]
10002072: 4815         	ldr	r0, [pc, #0x54]         @ 0x100020c8 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48+0xf8>
10002074: 9006         	str	r0, [sp, #0x18]
10002076: e018         	b	0x100020aa <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48+0xda> @ imm = #0x30
10002078: 480d         	ldr	r0, [pc, #0x34]         @ 0x100020b0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48+0xe0>
1000207a: 9013         	str	r0, [sp, #0x4c]
1000207c: 4811         	ldr	r0, [pc, #0x44]         @ 0x100020c4 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48+0xf4>
1000207e: 9006         	str	r0, [sp, #0x18]
10002080: e013         	b	0x100020aa <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48+0xda> @ imm = #0x26
10002082: 480b         	ldr	r0, [pc, #0x2c]         @ 0x100020b0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48+0xe0>
10002084: 9014         	str	r0, [sp, #0x50]
10002086: 480e         	ldr	r0, [pc, #0x38]         @ 0x100020c0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48+0xf0>
10002088: 9006         	str	r0, [sp, #0x18]
1000208a: e00e         	b	0x100020aa <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48+0xda> @ imm = #0x1c
1000208c: 4808         	ldr	r0, [pc, #0x20]         @ 0x100020b0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48+0xe0>
1000208e: 9015         	str	r0, [sp, #0x54]
10002090: 480a         	ldr	r0, [pc, #0x28]         @ 0x100020bc <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48+0xec>
10002092: 9006         	str	r0, [sp, #0x18]
10002094: e009         	b	0x100020aa <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48+0xda> @ imm = #0x12
10002096: 4806         	ldr	r0, [pc, #0x18]         @ 0x100020b0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48+0xe0>
10002098: 9016         	str	r0, [sp, #0x58]
1000209a: 4807         	ldr	r0, [pc, #0x1c]         @ 0x100020b8 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48+0xe8>
1000209c: 9006         	str	r0, [sp, #0x18]
1000209e: e004         	b	0x100020aa <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48+0xda> @ imm = #0x8
100020a0: 4803         	ldr	r0, [pc, #0xc]          @ 0x100020b0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48+0xe0>
100020a2: 9017         	str	r0, [sp, #0x5c]
100020a4: 4803         	ldr	r0, [pc, #0xc]          @ 0x100020b4 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48+0xe4>
100020a6: 9006         	str	r0, [sp, #0x18]
100020a8: e7ff         	b	0x100020aa <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48+0xda> @ imm = #-0x2
100020aa: 9806         	ldr	r0, [sp, #0x18]
100020ac: 9004         	str	r0, [sp, #0x10]
100020ae: e7cf         	b	0x10002050 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h2a515708791ecc48+0x80> @ imm = #-0x62
100020b0: 00 00 02 40  	.word	0x40020000
100020b4: 14 00 02 40  	.word	0x40020014
100020b8: 10 00 02 40  	.word	0x40020010
100020bc: 0c 00 02 40  	.word	0x4002000c
100020c0: 08 00 02 40  	.word	0x40020008
100020c4: 18 00 02 40  	.word	0x40020018
100020c8: 04 00 02 40  	.word	0x40020004
100020cc: c0 e7 00 10  	.word	0x1000e7c0
100020d0: c8 e7 00 10  	.word	0x1000e7c8
100020d4: 00 c0 01 40  	.word	0x4001c000
100020d8: 0c de 00 10  	.word	0x1000de0c
100020dc: 04 c0 01 40  	.word	0x4001c004

100020e0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69>:
100020e0: b580         	push	{r7, lr}
100020e2: af00         	add	r7, sp, #0x0
100020e4: b09a         	sub	sp, #0x68
100020e6: 900e         	str	r0, [sp, #0x38]
100020e8: f000 fa62    	bl	0x100025b0 <<rp2040_hal::gpio::pin::bank0::Gpio22 as rp2040_hal::gpio::pin::PinId>::as_dyn::hf69c3befa49694bf> @ imm = #0x4c4
100020ec: 4602         	mov	r2, r0
100020ee: 2001         	movs	r0, #0x1
100020f0: 4002         	ands	r2, r0
100020f2: a805         	add	r0, sp, #0x14
100020f4: 7002         	strb	r2, [r0]
100020f6: 7041         	strb	r1, [r0, #0x1]
100020f8: 7800         	ldrb	r0, [r0]
100020fa: 07c0         	lsls	r0, r0, #0x1f
100020fc: 2800         	cmp	r0, #0x0
100020fe: d117         	bne	0x10002130 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69+0x50> @ imm = #0x2e
10002100: e7ff         	b	0x10002102 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69+0x22> @ imm = #-0x2
10002102: 4938         	ldr	r1, [pc, #0xe0]         @ 0x100021e4 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69+0x104>
10002104: 910f         	str	r1, [sp, #0x3c]
10002106: a805         	add	r0, sp, #0x14
10002108: 7840         	ldrb	r0, [r0, #0x1]
1000210a: 9003         	str	r0, [sp, #0xc]
1000210c: aa19         	add	r2, sp, #0x64
1000210e: 7010         	strb	r0, [r2]
10002110: 9111         	str	r1, [sp, #0x44]
10002112: 9012         	str	r0, [sp, #0x48]
10002114: 281e         	cmp	r0, #0x1e
10002116: d305         	blo	0x10002124 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69+0x44> @ imm = #0xa
10002118: e7ff         	b	0x1000211a <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69+0x3a> @ imm = #-0x2
1000211a: 9803         	ldr	r0, [sp, #0xc]
1000211c: 4a32         	ldr	r2, [pc, #0xc8]         @ 0x100021e8 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69+0x108>
1000211e: 211e         	movs	r1, #0x1e
10002120: f00a f98e    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0xa31c
10002124: 9803         	ldr	r0, [sp, #0xc]
10002126: 0080         	lsls	r0, r0, #0x2
10002128: 4930         	ldr	r1, [pc, #0xc0]         @ 0x100021ec <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69+0x10c>
1000212a: 1840         	adds	r0, r0, r1
1000212c: 9004         	str	r0, [sp, #0x10]
1000212e: e017         	b	0x10002160 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69+0x80> @ imm = #0x2e
10002130: 4823         	ldr	r0, [pc, #0x8c]         @ 0x100021c0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69+0xe0>
10002132: 9010         	str	r0, [sp, #0x40]
10002134: a805         	add	r0, sp, #0x14
10002136: 7840         	ldrb	r0, [r0, #0x1]
10002138: 9002         	str	r0, [sp, #0x8]
1000213a: 2805         	cmp	r0, #0x5
1000213c: d813         	bhi	0x10002166 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69+0x86> @ imm = #0x26
1000213e: 9802         	ldr	r0, [sp, #0x8]
10002140: 0081         	lsls	r1, r0, #0x2
10002142: a001         	adr	r0, #4 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69+0x67>
10002144: 5840         	ldr	r0, [r0, r1]
10002146: 4687         	mov	pc, r0
10002148: 7f 21 00 10  	.word	0x1000217f
1000214c: 89 21 00 10  	.word	0x10002189
10002150: 93 21 00 10  	.word	0x10002193
10002154: 9d 21 00 10  	.word	0x1000219d
10002158: a7 21 00 10  	.word	0x100021a7
1000215c: b1 21 00 10  	.word	0x100021b1
10002160: 9804         	ldr	r0, [sp, #0x10]
10002162: b01a         	add	sp, #0x68
10002164: bd80         	pop	{r7, pc}
10002166: f7ff f863    	bl	0x10001230 <core::fmt::rt::Argument::none::h7ec904d04eb9bd64> @ imm = #-0xf3a
1000216a: 491c         	ldr	r1, [pc, #0x70]         @ 0x100021dc <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69+0xfc>
1000216c: a807         	add	r0, sp, #0x1c
1000216e: 9001         	str	r0, [sp, #0x4]
10002170: aa0d         	add	r2, sp, #0x34
10002172: f004 f91d    	bl	0x100063b0 <core::fmt::Arguments::new_v1::hbda2e269fb3c02c4> @ imm = #0x423a
10002176: 9801         	ldr	r0, [sp, #0x4]
10002178: 4919         	ldr	r1, [pc, #0x64]         @ 0x100021e0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69+0x100>
1000217a: f00a f8ff    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #0xa1fe
1000217e: 4810         	ldr	r0, [pc, #0x40]         @ 0x100021c0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69+0xe0>
10002180: 9018         	str	r0, [sp, #0x60]
10002182: 4815         	ldr	r0, [pc, #0x54]         @ 0x100021d8 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69+0xf8>
10002184: 9006         	str	r0, [sp, #0x18]
10002186: e018         	b	0x100021ba <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69+0xda> @ imm = #0x30
10002188: 480d         	ldr	r0, [pc, #0x34]         @ 0x100021c0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69+0xe0>
1000218a: 9013         	str	r0, [sp, #0x4c]
1000218c: 4811         	ldr	r0, [pc, #0x44]         @ 0x100021d4 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69+0xf4>
1000218e: 9006         	str	r0, [sp, #0x18]
10002190: e013         	b	0x100021ba <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69+0xda> @ imm = #0x26
10002192: 480b         	ldr	r0, [pc, #0x2c]         @ 0x100021c0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69+0xe0>
10002194: 9014         	str	r0, [sp, #0x50]
10002196: 480e         	ldr	r0, [pc, #0x38]         @ 0x100021d0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69+0xf0>
10002198: 9006         	str	r0, [sp, #0x18]
1000219a: e00e         	b	0x100021ba <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69+0xda> @ imm = #0x1c
1000219c: 4808         	ldr	r0, [pc, #0x20]         @ 0x100021c0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69+0xe0>
1000219e: 9015         	str	r0, [sp, #0x54]
100021a0: 480a         	ldr	r0, [pc, #0x28]         @ 0x100021cc <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69+0xec>
100021a2: 9006         	str	r0, [sp, #0x18]
100021a4: e009         	b	0x100021ba <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69+0xda> @ imm = #0x12
100021a6: 4806         	ldr	r0, [pc, #0x18]         @ 0x100021c0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69+0xe0>
100021a8: 9016         	str	r0, [sp, #0x58]
100021aa: 4807         	ldr	r0, [pc, #0x1c]         @ 0x100021c8 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69+0xe8>
100021ac: 9006         	str	r0, [sp, #0x18]
100021ae: e004         	b	0x100021ba <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69+0xda> @ imm = #0x8
100021b0: 4803         	ldr	r0, [pc, #0xc]          @ 0x100021c0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69+0xe0>
100021b2: 9017         	str	r0, [sp, #0x5c]
100021b4: 4803         	ldr	r0, [pc, #0xc]          @ 0x100021c4 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69+0xe4>
100021b6: 9006         	str	r0, [sp, #0x18]
100021b8: e7ff         	b	0x100021ba <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69+0xda> @ imm = #-0x2
100021ba: 9806         	ldr	r0, [sp, #0x18]
100021bc: 9004         	str	r0, [sp, #0x10]
100021be: e7cf         	b	0x10002160 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::pad_ctrl::h90b65adb8e649c69+0x80> @ imm = #-0x62
100021c0: 00 00 02 40  	.word	0x40020000
100021c4: 14 00 02 40  	.word	0x40020014
100021c8: 10 00 02 40  	.word	0x40020010
100021cc: 0c 00 02 40  	.word	0x4002000c
100021d0: 08 00 02 40  	.word	0x40020008
100021d4: 18 00 02 40  	.word	0x40020018
100021d8: 04 00 02 40  	.word	0x40020004
100021dc: c0 e7 00 10  	.word	0x1000e7c0
100021e0: c8 e7 00 10  	.word	0x1000e7c8
100021e4: 00 c0 01 40  	.word	0x4001c000
100021e8: 0c de 00 10  	.word	0x1000de0c
100021ec: 04 c0 01 40  	.word	0x4001c004

100021f0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::proc_inte::h2c567fd7275313d9>:
100021f0: b580         	push	{r7, lr}
100021f2: af00         	add	r7, sp, #0x0
100021f4: b096         	sub	sp, #0x58
100021f6: aa04         	add	r2, sp, #0x10
100021f8: 7011         	strb	r1, [r2]
100021fa: 9008         	str	r0, [sp, #0x20]
100021fc: f000 f9d8    	bl	0x100025b0 <<rp2040_hal::gpio::pin::bank0::Gpio22 as rp2040_hal::gpio::pin::PinId>::as_dyn::hf69c3befa49694bf> @ imm = #0x3b0
10002200: 4602         	mov	r2, r0
10002202: 2001         	movs	r0, #0x1
10002204: 4002         	ands	r2, r0
10002206: a805         	add	r0, sp, #0x14
10002208: 7002         	strb	r2, [r0]
1000220a: 7041         	strb	r1, [r0, #0x1]
1000220c: 7840         	ldrb	r0, [r0, #0x1]
1000220e: 08c1         	lsrs	r1, r0, #0x3
10002210: 9102         	str	r1, [sp, #0x8]
10002212: 0740         	lsls	r0, r0, #0x1d
10002214: 0ec0         	lsrs	r0, r0, #0x1b
10002216: 9003         	str	r0, [sp, #0xc]
10002218: 2000         	movs	r0, #0x0
1000221a: 2800         	cmp	r0, #0x0
1000221c: d10c         	bne	0x10002238 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::proc_inte::h2c567fd7275313d9+0x48> @ imm = #0x18
1000221e: e7ff         	b	0x10002220 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::proc_inte::h2c567fd7275313d9+0x30> @ imm = #-0x2
10002220: 9803         	ldr	r0, [sp, #0xc]
10002222: 9902         	ldr	r1, [sp, #0x8]
10002224: aa09         	add	r2, sp, #0x24
10002226: 7011         	strb	r1, [r2]
10002228: a90a         	add	r1, sp, #0x28
1000222a: 7008         	strb	r0, [r1]
1000222c: a805         	add	r0, sp, #0x14
1000222e: 7800         	ldrb	r0, [r0]
10002230: 07c0         	lsls	r0, r0, #0x1f
10002232: 2800         	cmp	r0, #0x0
10002234: d003         	beq	0x1000223e <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::proc_inte::h2c567fd7275313d9+0x4e> @ imm = #0x6
10002236: e00a         	b	0x1000224e <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::proc_inte::h2c567fd7275313d9+0x5e> @ imm = #0x14
10002238: 4831         	ldr	r0, [pc, #0xc4]         @ 0x10002300 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::proc_inte::h2c567fd7275313d9+0x110>
1000223a: f00b f91d    	bl	0x1000d478 <core::panicking::panic_const::panic_const_mul_overflow::hdb56fe2dcc791345> @ imm = #0xb23a
1000223e: 482b         	ldr	r0, [pc, #0xac]         @ 0x100022ec <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::proc_inte::h2c567fd7275313d9+0xfc>
10002240: 900b         	str	r0, [sp, #0x2c]
10002242: a804         	add	r0, sp, #0x10
10002244: 7800         	ldrb	r0, [r0]
10002246: 07c0         	lsls	r0, r0, #0x1f
10002248: 2800         	cmp	r0, #0x0
1000224a: d008         	beq	0x1000225e <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::proc_inte::h2c567fd7275313d9+0x6e> @ imm = #0x10
1000224c: e01d         	b	0x1000228a <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::proc_inte::h2c567fd7275313d9+0x9a> @ imm = #0x3a
1000224e: 4824         	ldr	r0, [pc, #0x90]         @ 0x100022e0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::proc_inte::h2c567fd7275313d9+0xf0>
10002250: 900c         	str	r0, [sp, #0x30]
10002252: a804         	add	r0, sp, #0x10
10002254: 7800         	ldrb	r0, [r0]
10002256: 07c0         	lsls	r0, r0, #0x1f
10002258: 2800         	cmp	r0, #0x0
1000225a: d033         	beq	0x100022c4 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::proc_inte::h2c567fd7275313d9+0xd4> @ imm = #0x66
1000225c: e037         	b	0x100022ce <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::proc_inte::h2c567fd7275313d9+0xde> @ imm = #0x6e
1000225e: 9802         	ldr	r0, [sp, #0x8]
10002260: a915         	add	r1, sp, #0x54
10002262: 7008         	strb	r0, [r1]
10002264: b2c0         	uxtb	r0, r0
10002266: 9001         	str	r0, [sp, #0x4]
10002268: 4920         	ldr	r1, [pc, #0x80]         @ 0x100022ec <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::proc_inte::h2c567fd7275313d9+0xfc>
1000226a: 910f         	str	r1, [sp, #0x3c]
1000226c: 9010         	str	r0, [sp, #0x40]
1000226e: 2804         	cmp	r0, #0x4
10002270: d305         	blo	0x1000227e <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::proc_inte::h2c567fd7275313d9+0x8e> @ imm = #0xa
10002272: e7ff         	b	0x10002274 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::proc_inte::h2c567fd7275313d9+0x84> @ imm = #-0x2
10002274: 9801         	ldr	r0, [sp, #0x4]
10002276: 4a20         	ldr	r2, [pc, #0x80]         @ 0x100022f8 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::proc_inte::h2c567fd7275313d9+0x108>
10002278: 2104         	movs	r1, #0x4
1000227a: f00a f8e1    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0xa1c2
1000227e: 9801         	ldr	r0, [sp, #0x4]
10002280: 0080         	lsls	r0, r0, #0x2
10002282: 491e         	ldr	r1, [pc, #0x78]         @ 0x100022fc <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::proc_inte::h2c567fd7275313d9+0x10c>
10002284: 1840         	adds	r0, r0, r1
10002286: 9006         	str	r0, [sp, #0x18]
10002288: e015         	b	0x100022b6 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::proc_inte::h2c567fd7275313d9+0xc6> @ imm = #0x2a
1000228a: 9802         	ldr	r0, [sp, #0x8]
1000228c: a914         	add	r1, sp, #0x50
1000228e: 7008         	strb	r0, [r1]
10002290: b2c0         	uxtb	r0, r0
10002292: 9000         	str	r0, [sp]
10002294: 4915         	ldr	r1, [pc, #0x54]         @ 0x100022ec <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::proc_inte::h2c567fd7275313d9+0xfc>
10002296: 9111         	str	r1, [sp, #0x44]
10002298: 9012         	str	r0, [sp, #0x48]
1000229a: 2804         	cmp	r0, #0x4
1000229c: d305         	blo	0x100022aa <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::proc_inte::h2c567fd7275313d9+0xba> @ imm = #0xa
1000229e: e7ff         	b	0x100022a0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::proc_inte::h2c567fd7275313d9+0xb0> @ imm = #-0x2
100022a0: 9800         	ldr	r0, [sp]
100022a2: 4a13         	ldr	r2, [pc, #0x4c]         @ 0x100022f0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::proc_inte::h2c567fd7275313d9+0x100>
100022a4: 2104         	movs	r1, #0x4
100022a6: f00a f8cb    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0xa196
100022aa: 9800         	ldr	r0, [sp]
100022ac: 0080         	lsls	r0, r0, #0x2
100022ae: 4911         	ldr	r1, [pc, #0x44]         @ 0x100022f4 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::proc_inte::h2c567fd7275313d9+0x104>
100022b0: 1840         	adds	r0, r0, r1
100022b2: 9006         	str	r0, [sp, #0x18]
100022b4: e7ff         	b	0x100022b6 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::proc_inte::h2c567fd7275313d9+0xc6> @ imm = #-0x2
100022b6: 9903         	ldr	r1, [sp, #0xc]
100022b8: 9806         	ldr	r0, [sp, #0x18]
100022ba: aa13         	add	r2, sp, #0x4c
100022bc: 7011         	strb	r1, [r2]
100022be: b2c9         	uxtb	r1, r1
100022c0: b016         	add	sp, #0x58
100022c2: bd80         	pop	{r7, pc}
100022c4: 4806         	ldr	r0, [pc, #0x18]         @ 0x100022e0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::proc_inte::h2c567fd7275313d9+0xf0>
100022c6: 900d         	str	r0, [sp, #0x34]
100022c8: 4807         	ldr	r0, [pc, #0x1c]         @ 0x100022e8 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::proc_inte::h2c567fd7275313d9+0xf8>
100022ca: 9007         	str	r0, [sp, #0x1c]
100022cc: e004         	b	0x100022d8 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::proc_inte::h2c567fd7275313d9+0xe8> @ imm = #0x8
100022ce: 4804         	ldr	r0, [pc, #0x10]         @ 0x100022e0 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::proc_inte::h2c567fd7275313d9+0xf0>
100022d0: 900e         	str	r0, [sp, #0x38]
100022d2: 4804         	ldr	r0, [pc, #0x10]         @ 0x100022e4 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::proc_inte::h2c567fd7275313d9+0xf4>
100022d4: 9007         	str	r0, [sp, #0x1c]
100022d6: e7ff         	b	0x100022d8 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::proc_inte::h2c567fd7275313d9+0xe8> @ imm = #-0x2
100022d8: 9807         	ldr	r0, [sp, #0x1c]
100022da: 9006         	str	r0, [sp, #0x18]
100022dc: e7eb         	b	0x100022b6 <<T as rp2040_hal::gpio::pin::pin_sealed::PinIdOps>::proc_inte::h2c567fd7275313d9+0xc6> @ imm = #-0x2a
100022de: 46c0         	mov	r8, r8
100022e0: 00 80 01 40  	.word	0x40018000
100022e4: 40 80 01 40  	.word	0x40018040
100022e8: 34 80 01 40  	.word	0x40018034
100022ec: 00 40 01 40  	.word	0x40014000
100022f0: fc de 00 10  	.word	0x1000defc
100022f4: 30 41 01 40  	.word	0x40014130
100022f8: ec de 00 10  	.word	0x1000deec
100022fc: 00 41 01 40  	.word	0x40014100
10002300: d8 e7 00 10  	.word	0x1000e7d8

10002304 <<heapless::vec::Vec<T,_> as core::ops::drop::Drop>::drop::h1dd3978f8e424722>:
10002304: b580         	push	{r7, lr}
10002306: af00         	add	r7, sp, #0x0
10002308: b082         	sub	sp, #0x8
1000230a: 9001         	str	r0, [sp, #0x4]
1000230c: f000 fb56    	bl	0x100029bc <heapless::vec::Vec<T,_>::as_mut_slice::h56d82833d797e176> @ imm = #0x6ac
10002310: b002         	add	sp, #0x8
10002312: bd80         	pop	{r7, pc}

10002314 <<heapless::vec::Vec<T,_> as core::ops::deref::Deref>::deref::h6943d2549037674e>:
10002314: b580         	push	{r7, lr}
10002316: af00         	add	r7, sp, #0x0
10002318: b082         	sub	sp, #0x8
1000231a: 9001         	str	r0, [sp, #0x4]
1000231c: f000 fbe9    	bl	0x10002af2 <heapless::vec::Vec<T,_>::as_slice::h31b870ea68d548a4> @ imm = #0x7d2
10002320: b002         	add	sp, #0x8
10002322: bd80         	pop	{r7, pc}

10002324 <<rtic::export::Mask<_> as core::ops::bit::BitOrAssign>::bitor_assign::h714736c586c671fb>:
10002324: b580         	push	{r7, lr}
10002326: af00         	add	r7, sp, #0x0
10002328: b08c         	sub	sp, #0x30
1000232a: 9003         	str	r0, [sp, #0xc]
1000232c: 9105         	str	r1, [sp, #0x14]
1000232e: 9905         	ldr	r1, [sp, #0x14]
10002330: 9104         	str	r1, [sp, #0x10]
10002332: 900a         	str	r0, [sp, #0x28]
10002334: 2000         	movs	r0, #0x0
10002336: 2101         	movs	r1, #0x1
10002338: f003 fe44    	bl	0x10005fc4 <<I as core::iter::traits::collect::IntoIterator>::into_iter::hcd2f3c39bb368951> @ imm = #0x3c88
1000233c: 9006         	str	r0, [sp, #0x18]
1000233e: 9107         	str	r1, [sp, #0x1c]
10002340: e7ff         	b	0x10002342 <<rtic::export::Mask<_> as core::ops::bit::BitOrAssign>::bitor_assign::h714736c586c671fb+0x1e> @ imm = #-0x2
10002342: a806         	add	r0, sp, #0x18
10002344: f003 fe36    	bl	0x10005fb4 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next::h3f3b5f6ece6bd4b0> @ imm = #0x3c6c
10002348: 9008         	str	r0, [sp, #0x20]
1000234a: 9109         	str	r1, [sp, #0x24]
1000234c: 9808         	ldr	r0, [sp, #0x20]
1000234e: 2800         	cmp	r0, #0x0
10002350: d102         	bne	0x10002358 <<rtic::export::Mask<_> as core::ops::bit::BitOrAssign>::bitor_assign::h714736c586c671fb+0x34> @ imm = #0x4
10002352: e7ff         	b	0x10002354 <<rtic::export::Mask<_> as core::ops::bit::BitOrAssign>::bitor_assign::h714736c586c671fb+0x30> @ imm = #-0x2
10002354: b00c         	add	sp, #0x30
10002356: bd80         	pop	{r7, pc}
10002358: 9809         	ldr	r0, [sp, #0x24]
1000235a: 9002         	str	r0, [sp, #0x8]
1000235c: 900b         	str	r0, [sp, #0x2c]
1000235e: 2800         	cmp	r0, #0x0
10002360: d108         	bne	0x10002374 <<rtic::export::Mask<_> as core::ops::bit::BitOrAssign>::bitor_assign::h714736c586c671fb+0x50> @ imm = #0x10
10002362: e7ff         	b	0x10002364 <<rtic::export::Mask<_> as core::ops::bit::BitOrAssign>::bitor_assign::h714736c586c671fb+0x40> @ imm = #-0x2
10002364: 9802         	ldr	r0, [sp, #0x8]
10002366: 0082         	lsls	r2, r0, #0x2
10002368: a904         	add	r1, sp, #0x10
1000236a: 5889         	ldr	r1, [r1, r2]
1000236c: 9101         	str	r1, [sp, #0x4]
1000236e: 2800         	cmp	r0, #0x0
10002370: d005         	beq	0x1000237e <<rtic::export::Mask<_> as core::ops::bit::BitOrAssign>::bitor_assign::h714736c586c671fb+0x5a> @ imm = #0xa
10002372: e00c         	b	0x1000238e <<rtic::export::Mask<_> as core::ops::bit::BitOrAssign>::bitor_assign::h714736c586c671fb+0x6a> @ imm = #0x18
10002374: 9802         	ldr	r0, [sp, #0x8]
10002376: 4a08         	ldr	r2, [pc, #0x20]         @ 0x10002398 <<rtic::export::Mask<_> as core::ops::bit::BitOrAssign>::bitor_assign::h714736c586c671fb+0x74>
10002378: 2101         	movs	r1, #0x1
1000237a: f00a f861    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0xa0c2
1000237e: 9903         	ldr	r1, [sp, #0xc]
10002380: 9b01         	ldr	r3, [sp, #0x4]
10002382: 9802         	ldr	r0, [sp, #0x8]
10002384: 0082         	lsls	r2, r0, #0x2
10002386: 5888         	ldr	r0, [r1, r2]
10002388: 4318         	orrs	r0, r3
1000238a: 5088         	str	r0, [r1, r2]
1000238c: e7d9         	b	0x10002342 <<rtic::export::Mask<_> as core::ops::bit::BitOrAssign>::bitor_assign::h714736c586c671fb+0x1e> @ imm = #-0x4e
1000238e: 9802         	ldr	r0, [sp, #0x8]
10002390: 4a02         	ldr	r2, [pc, #0x8]          @ 0x1000239c <<rtic::export::Mask<_> as core::ops::bit::BitOrAssign>::bitor_assign::h714736c586c671fb+0x78>
10002392: 2101         	movs	r1, #0x1
10002394: f00a f854    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0xa0a8
10002398: e8 e7 00 10  	.word	0x1000e7e8
1000239c: f8 e7 00 10  	.word	0x1000e7f8

100023a0 <<usize as core::slice::index::SliceIndex<[T]>>::get_unchecked::hcac749fb19dc6451>:
100023a0: b580         	push	{r7, lr}
100023a2: af00         	add	r7, sp, #0x0
100023a4: b086         	sub	sp, #0x18
100023a6: 9200         	str	r2, [sp]
100023a8: 9101         	str	r1, [sp, #0x4]
100023aa: 9002         	str	r0, [sp, #0x8]
100023ac: 9003         	str	r0, [sp, #0xc]
100023ae: 9104         	str	r1, [sp, #0x10]
100023b0: 9205         	str	r2, [sp, #0x14]
100023b2: e7ff         	b	0x100023b4 <<usize as core::slice::index::SliceIndex<[T]>>::get_unchecked::hcac749fb19dc6451+0x14> @ imm = #-0x2
100023b4: 9900         	ldr	r1, [sp]
100023b6: 9802         	ldr	r0, [sp, #0x8]
100023b8: f000 f808    	bl	0x100023cc <<usize as core::slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check::ha10351696ba08861> @ imm = #0x10
100023bc: e7ff         	b	0x100023be <<usize as core::slice::index::SliceIndex<[T]>>::get_unchecked::hcac749fb19dc6451+0x1e> @ imm = #-0x2
100023be: 9801         	ldr	r0, [sp, #0x4]
100023c0: 9a02         	ldr	r2, [sp, #0x8]
100023c2: 2118         	movs	r1, #0x18
100023c4: 4351         	muls	r1, r2, r1
100023c6: 1840         	adds	r0, r0, r1
100023c8: b006         	add	sp, #0x18
100023ca: bd80         	pop	{r7, pc}

100023cc <<usize as core::slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check::ha10351696ba08861>:
100023cc: b580         	push	{r7, lr}
100023ce: af00         	add	r7, sp, #0x0
100023d0: b082         	sub	sp, #0x8
100023d2: 9000         	str	r0, [sp]
100023d4: 9101         	str	r1, [sp, #0x4]
100023d6: 4288         	cmp	r0, r1
100023d8: d304         	blo	0x100023e4 <<usize as core::slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check::ha10351696ba08861+0x18> @ imm = #0x8
100023da: e7ff         	b	0x100023dc <<usize as core::slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check::ha10351696ba08861+0x10> @ imm = #-0x2
100023dc: 4802         	ldr	r0, [pc, #0x8]          @ 0x100023e8 <<usize as core::slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check::ha10351696ba08861+0x1c>
100023de: 21d6         	movs	r1, #0xd6
100023e0: f009 fffe    	bl	0x1000c3e0 <core::panicking::panic_nounwind::h6901392fec1083b6> @ imm = #0x9ffc
100023e4: b002         	add	sp, #0x8
100023e6: bd80         	pop	{r7, pc}
100023e8: 08 e8 00 10  	.word	0x1000e808

100023ec <<usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut::hd2ae9f48e78b4487>:
100023ec: b580         	push	{r7, lr}
100023ee: af00         	add	r7, sp, #0x0
100023f0: b086         	sub	sp, #0x18
100023f2: 9200         	str	r2, [sp]
100023f4: 9101         	str	r1, [sp, #0x4]
100023f6: 9002         	str	r0, [sp, #0x8]
100023f8: 9003         	str	r0, [sp, #0xc]
100023fa: 9104         	str	r1, [sp, #0x10]
100023fc: 9205         	str	r2, [sp, #0x14]
100023fe: e7ff         	b	0x10002400 <<usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut::hd2ae9f48e78b4487+0x14> @ imm = #-0x2
10002400: 9900         	ldr	r1, [sp]
10002402: 9802         	ldr	r0, [sp, #0x8]
10002404: f000 f81e    	bl	0x10002444 <<usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check::hea0c22e47cb53490> @ imm = #0x3c
10002408: e7ff         	b	0x1000240a <<usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut::hd2ae9f48e78b4487+0x1e> @ imm = #-0x2
1000240a: 9801         	ldr	r0, [sp, #0x4]
1000240c: 9a02         	ldr	r2, [sp, #0x8]
1000240e: 2118         	movs	r1, #0x18
10002410: 4351         	muls	r1, r2, r1
10002412: 1840         	adds	r0, r0, r1
10002414: b006         	add	sp, #0x18
10002416: bd80         	pop	{r7, pc}

10002418 <<usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut::hf2625fdc473e6304>:
10002418: b580         	push	{r7, lr}
1000241a: af00         	add	r7, sp, #0x0
1000241c: b086         	sub	sp, #0x18
1000241e: 9200         	str	r2, [sp]
10002420: 9101         	str	r1, [sp, #0x4]
10002422: 9002         	str	r0, [sp, #0x8]
10002424: 9003         	str	r0, [sp, #0xc]
10002426: 9104         	str	r1, [sp, #0x10]
10002428: 9205         	str	r2, [sp, #0x14]
1000242a: e7ff         	b	0x1000242c <<usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut::hf2625fdc473e6304+0x14> @ imm = #-0x2
1000242c: 9900         	ldr	r1, [sp]
1000242e: 9802         	ldr	r0, [sp, #0x8]
10002430: f000 f808    	bl	0x10002444 <<usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check::hea0c22e47cb53490> @ imm = #0x10
10002434: e7ff         	b	0x10002436 <<usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut::hf2625fdc473e6304+0x1e> @ imm = #-0x2
10002436: 9801         	ldr	r0, [sp, #0x4]
10002438: 9902         	ldr	r1, [sp, #0x8]
1000243a: 00c9         	lsls	r1, r1, #0x3
1000243c: 1840         	adds	r0, r0, r1
1000243e: b006         	add	sp, #0x18
10002440: bd80         	pop	{r7, pc}
10002442: d4d4         	bmi	0x100023ee <<usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut::hd2ae9f48e78b4487+0x2> @ imm = #-0x58

10002444 <<usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check::hea0c22e47cb53490>:
10002444: b580         	push	{r7, lr}
10002446: af00         	add	r7, sp, #0x0
10002448: b082         	sub	sp, #0x8
1000244a: 9000         	str	r0, [sp]
1000244c: 9101         	str	r1, [sp, #0x4]
1000244e: 4288         	cmp	r0, r1
10002450: d304         	blo	0x1000245c <<usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check::hea0c22e47cb53490+0x18> @ imm = #0x8
10002452: e7ff         	b	0x10002454 <<usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check::hea0c22e47cb53490+0x10> @ imm = #-0x2
10002454: 4802         	ldr	r0, [pc, #0x8]          @ 0x10002460 <<usize as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check::hea0c22e47cb53490+0x1c>
10002456: 21da         	movs	r1, #0xda
10002458: f009 ffc2    	bl	0x1000c3e0 <core::panicking::panic_nounwind::h6901392fec1083b6> @ imm = #0x9f84
1000245c: b002         	add	sp, #0x8
1000245e: bd80         	pop	{r7, pc}
10002460: de e8 00 10  	.word	0x1000e8de

10002464 <<rp2040_hal::gpio::func::DynFunction as core::cmp::PartialEq>::eq::h06d6c709647a16ba>:
10002464: b580         	push	{r7, lr}
10002466: af00         	add	r7, sp, #0x0
10002468: b094         	sub	sp, #0x50
1000246a: 9107         	str	r1, [sp, #0x1c]
1000246c: 9008         	str	r0, [sp, #0x20]
1000246e: 9010         	str	r0, [sp, #0x40]
10002470: 9111         	str	r1, [sp, #0x44]
10002472: 7800         	ldrb	r0, [r0]
10002474: 1e80         	subs	r0, r0, #0x2
10002476: b2c0         	uxtb	r0, r0
10002478: 2105         	movs	r1, #0x5
1000247a: 9109         	str	r1, [sp, #0x24]
1000247c: 280b         	cmp	r0, #0xb
1000247e: 900a         	str	r0, [sp, #0x28]
10002480: d301         	blo	0x10002486 <<rp2040_hal::gpio::func::DynFunction as core::cmp::PartialEq>::eq::h06d6c709647a16ba+0x22> @ imm = #0x2
10002482: 9809         	ldr	r0, [sp, #0x24]
10002484: 900a         	str	r0, [sp, #0x28]
10002486: 9807         	ldr	r0, [sp, #0x1c]
10002488: 990a         	ldr	r1, [sp, #0x28]
1000248a: 9105         	str	r1, [sp, #0x14]
1000248c: 9112         	str	r1, [sp, #0x48]
1000248e: 7800         	ldrb	r0, [r0]
10002490: 1e80         	subs	r0, r0, #0x2
10002492: b2c0         	uxtb	r0, r0
10002494: 280b         	cmp	r0, #0xb
10002496: 9006         	str	r0, [sp, #0x18]
10002498: d301         	blo	0x1000249e <<rp2040_hal::gpio::func::DynFunction as core::cmp::PartialEq>::eq::h06d6c709647a16ba+0x3a> @ imm = #0x2
1000249a: 9809         	ldr	r0, [sp, #0x24]
1000249c: 9006         	str	r0, [sp, #0x18]
1000249e: 9805         	ldr	r0, [sp, #0x14]
100024a0: 9906         	ldr	r1, [sp, #0x18]
100024a2: 9113         	str	r1, [sp, #0x4c]
100024a4: 4288         	cmp	r0, r1
100024a6: d004         	beq	0x100024b2 <<rp2040_hal::gpio::func::DynFunction as core::cmp::PartialEq>::eq::h06d6c709647a16ba+0x4e> @ imm = #0x8
100024a8: e7ff         	b	0x100024aa <<rp2040_hal::gpio::func::DynFunction as core::cmp::PartialEq>::eq::h06d6c709647a16ba+0x46> @ imm = #-0x2
100024aa: a90b         	add	r1, sp, #0x2c
100024ac: 2000         	movs	r0, #0x0
100024ae: 7008         	strb	r0, [r1]
100024b0: e012         	b	0x100024d8 <<rp2040_hal::gpio::func::DynFunction as core::cmp::PartialEq>::eq::h06d6c709647a16ba+0x74> @ imm = #0x24
100024b2: 9807         	ldr	r0, [sp, #0x1c]
100024b4: 9908         	ldr	r1, [sp, #0x20]
100024b6: 910c         	str	r1, [sp, #0x30]
100024b8: 900d         	str	r0, [sp, #0x34]
100024ba: 980c         	ldr	r0, [sp, #0x30]
100024bc: 7800         	ldrb	r0, [r0]
100024be: 1e80         	subs	r0, r0, #0x2
100024c0: b2c0         	uxtb	r0, r0
100024c2: 2105         	movs	r1, #0x5
100024c4: 9103         	str	r1, [sp, #0xc]
100024c6: 280b         	cmp	r0, #0xb
100024c8: 9004         	str	r0, [sp, #0x10]
100024ca: d301         	blo	0x100024d0 <<rp2040_hal::gpio::func::DynFunction as core::cmp::PartialEq>::eq::h06d6c709647a16ba+0x6c> @ imm = #0x2
100024cc: 9803         	ldr	r0, [sp, #0xc]
100024ce: 9004         	str	r0, [sp, #0x10]
100024d0: 9804         	ldr	r0, [sp, #0x10]
100024d2: 2805         	cmp	r0, #0x5
100024d4: d004         	beq	0x100024e0 <<rp2040_hal::gpio::func::DynFunction as core::cmp::PartialEq>::eq::h06d6c709647a16ba+0x7c> @ imm = #0x8
100024d6: e012         	b	0x100024fe <<rp2040_hal::gpio::func::DynFunction as core::cmp::PartialEq>::eq::h06d6c709647a16ba+0x9a> @ imm = #0x24
100024d8: a80b         	add	r0, sp, #0x2c
100024da: 7800         	ldrb	r0, [r0]
100024dc: b014         	add	sp, #0x50
100024de: bd80         	pop	{r7, pc}
100024e0: 980d         	ldr	r0, [sp, #0x34]
100024e2: 7800         	ldrb	r0, [r0]
100024e4: 1e80         	subs	r0, r0, #0x2
100024e6: b2c0         	uxtb	r0, r0
100024e8: 2105         	movs	r1, #0x5
100024ea: 9101         	str	r1, [sp, #0x4]
100024ec: 280b         	cmp	r0, #0xb
100024ee: 9002         	str	r0, [sp, #0x8]
100024f0: d301         	blo	0x100024f6 <<rp2040_hal::gpio::func::DynFunction as core::cmp::PartialEq>::eq::h06d6c709647a16ba+0x92> @ imm = #0x2
100024f2: 9801         	ldr	r0, [sp, #0x4]
100024f4: 9002         	str	r0, [sp, #0x8]
100024f6: 9802         	ldr	r0, [sp, #0x8]
100024f8: 2805         	cmp	r0, #0x5
100024fa: d004         	beq	0x10002506 <<rp2040_hal::gpio::func::DynFunction as core::cmp::PartialEq>::eq::h06d6c709647a16ba+0xa2> @ imm = #0x8
100024fc: e7ff         	b	0x100024fe <<rp2040_hal::gpio::func::DynFunction as core::cmp::PartialEq>::eq::h06d6c709647a16ba+0x9a> @ imm = #-0x2
100024fe: a90b         	add	r1, sp, #0x2c
10002500: 2001         	movs	r0, #0x1
10002502: 7008         	strb	r0, [r1]
10002504: e7e8         	b	0x100024d8 <<rp2040_hal::gpio::func::DynFunction as core::cmp::PartialEq>::eq::h06d6c709647a16ba+0x74> @ imm = #-0x30
10002506: 980c         	ldr	r0, [sp, #0x30]
10002508: 900e         	str	r0, [sp, #0x38]
1000250a: 980d         	ldr	r0, [sp, #0x34]
1000250c: 900f         	str	r0, [sp, #0x3c]
1000250e: a80e         	add	r0, sp, #0x38
10002510: a90f         	add	r1, sp, #0x3c
10002512: f7fe fe61    	bl	0x100011d8 <core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq::hc2f5e54f5070e4b6> @ imm = #-0x133e
10002516: a90b         	add	r1, sp, #0x2c
10002518: 7008         	strb	r0, [r1]
1000251a: e7dd         	b	0x100024d8 <<rp2040_hal::gpio::func::DynFunction as core::cmp::PartialEq>::eq::h06d6c709647a16ba+0x74> @ imm = #-0x46

1000251c <<rp2040_hal::gpio::pull::DynPullType as core::cmp::PartialEq>::eq::hf94938c47a02f71f>:
1000251c: b580         	push	{r7, lr}
1000251e: af00         	add	r7, sp, #0x0
10002520: b084         	sub	sp, #0x10
10002522: 9000         	str	r0, [sp]
10002524: 9101         	str	r1, [sp, #0x4]
10002526: 7800         	ldrb	r0, [r0]
10002528: 9002         	str	r0, [sp, #0x8]
1000252a: 7809         	ldrb	r1, [r1]
1000252c: 9103         	str	r1, [sp, #0xc]
1000252e: 1a40         	subs	r0, r0, r1
10002530: 4241         	rsbs	r1, r0, #0
10002532: 4148         	adcs	r0, r1
10002534: b004         	add	sp, #0x10
10002536: bd80         	pop	{r7, pc}

10002538 <<cortex_m::register::primask::Primask as core::cmp::PartialEq>::eq::h1b514e9ca2dbfc15>:
10002538: b580         	push	{r7, lr}
1000253a: af00         	add	r7, sp, #0x0
1000253c: b084         	sub	sp, #0x10
1000253e: 9000         	str	r0, [sp]
10002540: 9101         	str	r1, [sp, #0x4]
10002542: 7800         	ldrb	r0, [r0]
10002544: 9002         	str	r0, [sp, #0x8]
10002546: 7809         	ldrb	r1, [r1]
10002548: 9103         	str	r1, [sp, #0xc]
1000254a: 1a40         	subs	r0, r0, r1
1000254c: 4241         	rsbs	r1, r0, #0
1000254e: 4148         	adcs	r0, r1
10002550: b004         	add	sp, #0x10
10002552: bd80         	pop	{r7, pc}

10002554 <<rp2040_hal::gpio::func::DynSioConfig as core::cmp::PartialEq>::eq::h3fa60c4486b831f9>:
10002554: b580         	push	{r7, lr}
10002556: af00         	add	r7, sp, #0x0
10002558: b084         	sub	sp, #0x10
1000255a: 9000         	str	r0, [sp]
1000255c: 9101         	str	r1, [sp, #0x4]
1000255e: 7800         	ldrb	r0, [r0]
10002560: 9002         	str	r0, [sp, #0x8]
10002562: 7809         	ldrb	r1, [r1]
10002564: 9103         	str	r1, [sp, #0xc]
10002566: 1a40         	subs	r0, r0, r1
10002568: 4241         	rsbs	r1, r0, #0
1000256a: 4148         	adcs	r0, r1
1000256c: b004         	add	sp, #0x10
1000256e: bd80         	pop	{r7, pc}

10002570 <<heapless::vec::IntoIter<T,_> as core::ops::drop::Drop>::drop::h59c4883beba556ec>:
10002570: b580         	push	{r7, lr}
10002572: af00         	add	r7, sp, #0x0
10002574: b086         	sub	sp, #0x18
10002576: 9001         	str	r0, [sp, #0x4]
10002578: 9002         	str	r0, [sp, #0x8]
1000257a: f000 fa1f    	bl	0x100029bc <heapless::vec::Vec<T,_>::as_mut_slice::h56d82833d797e176> @ imm = #0x43e
1000257e: 4602         	mov	r2, r0
10002580: 9801         	ldr	r0, [sp, #0x4]
10002582: 9200         	str	r2, [sp]
10002584: 460a         	mov	r2, r1
10002586: 9900         	ldr	r1, [sp]
10002588: 4b07         	ldr	r3, [pc, #0x1c]         @ 0x100025a8 <<heapless::vec::IntoIter<T,_> as core::ops::drop::Drop>::drop::h59c4883beba556ec+0x38>
1000258a: 58c0         	ldr	r0, [r0, r3]
1000258c: 9103         	str	r1, [sp, #0xc]
1000258e: 9204         	str	r2, [sp, #0x10]
10002590: 9005         	str	r0, [sp, #0x14]
10002592: 4b06         	ldr	r3, [pc, #0x18]         @ 0x100025ac <<heapless::vec::IntoIter<T,_> as core::ops::drop::Drop>::drop::h59c4883beba556ec+0x3c>
10002594: f7fe fc0c    	bl	0x10000db0 <<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut::hc04f38d04af75219> @ imm = #-0x17e8
10002598: 9901         	ldr	r1, [sp, #0x4]
1000259a: 2001         	movs	r0, #0x1
1000259c: 0342         	lsls	r2, r0, #0xd
1000259e: 2000         	movs	r0, #0x0
100025a0: 5088         	str	r0, [r1, r2]
100025a2: b006         	add	sp, #0x18
100025a4: bd80         	pop	{r7, pc}
100025a6: 46c0         	mov	r8, r8
100025a8: 04 20 00 00  	.word	0x00002004
100025ac: 14 ea 00 10  	.word	0x1000ea14

100025b0 <<rp2040_hal::gpio::pin::bank0::Gpio22 as rp2040_hal::gpio::pin::PinId>::as_dyn::hf69c3befa49694bf>:
100025b0: b580         	push	{r7, lr}
100025b2: af00         	add	r7, sp, #0x0
100025b4: b082         	sub	sp, #0x8
100025b6: 9001         	str	r0, [sp, #0x4]
100025b8: 4669         	mov	r1, sp
100025ba: 2000         	movs	r0, #0x0
100025bc: 7008         	strb	r0, [r1]
100025be: 9800         	ldr	r0, [sp]
100025c0: 2116         	movs	r1, #0x16
100025c2: b002         	add	sp, #0x8
100025c4: bd80         	pop	{r7, pc}

100025c6 <<rp2040_hal::gpio::pin::bank0::Gpio25 as rp2040_hal::gpio::pin::PinId>::as_dyn::h45f212e232b7040d>:
100025c6: b580         	push	{r7, lr}
100025c8: af00         	add	r7, sp, #0x0
100025ca: b082         	sub	sp, #0x8
100025cc: 9001         	str	r0, [sp, #0x4]
100025ce: 4669         	mov	r1, sp
100025d0: 2000         	movs	r0, #0x0
100025d2: 7008         	strb	r0, [r1]
100025d4: 9800         	ldr	r0, [sp]
100025d6: 2119         	movs	r1, #0x19
100025d8: b002         	add	sp, #0x8
100025da: bd80         	pop	{r7, pc}

100025dc <<fugit::duration::Duration<u32,_,_> as core::ops::arith::Sub>::sub::hde235045ed6676b8>:
100025dc: b580         	push	{r7, lr}
100025de: af00         	add	r7, sp, #0x0
100025e0: b08c         	sub	sp, #0x30
100025e2: 9009         	str	r0, [sp, #0x24]
100025e4: 910a         	str	r1, [sp, #0x28]
100025e6: f7ff fafa    	bl	0x10001bde <fugit::duration::Duration<u32,_,_>::checked_sub::h7132cd7e1372da4e> @ imm = #-0xa0c
100025ea: 9001         	str	r0, [sp, #0x4]
100025ec: 9102         	str	r1, [sp, #0x8]
100025ee: 9801         	ldr	r0, [sp, #0x4]
100025f0: 2801         	cmp	r0, #0x1
100025f2: d104         	bne	0x100025fe <<fugit::duration::Duration<u32,_,_> as core::ops::arith::Sub>::sub::hde235045ed6676b8+0x22> @ imm = #0x8
100025f4: e7ff         	b	0x100025f6 <<fugit::duration::Duration<u32,_,_> as core::ops::arith::Sub>::sub::hde235045ed6676b8+0x1a> @ imm = #-0x2
100025f6: 9802         	ldr	r0, [sp, #0x8]
100025f8: 900b         	str	r0, [sp, #0x2c]
100025fa: b00c         	add	sp, #0x30
100025fc: bd80         	pop	{r7, pc}
100025fe: 4904         	ldr	r1, [pc, #0x10]         @ 0x10002610 <<fugit::duration::Duration<u32,_,_> as core::ops::arith::Sub>::sub::hde235045ed6676b8+0x34>
10002600: a803         	add	r0, sp, #0xc
10002602: 9000         	str	r0, [sp]
10002604: f002 fe36    	bl	0x10005274 <core::fmt::Arguments::new_const::h27364244335e4a43> @ imm = #0x2c6c
10002608: 9800         	ldr	r0, [sp]
1000260a: 4902         	ldr	r1, [pc, #0x8]          @ 0x10002614 <<fugit::duration::Duration<u32,_,_> as core::ops::arith::Sub>::sub::hde235045ed6676b8+0x38>
1000260c: f009 feb6    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #0x9d6c
10002610: 30 ea 00 10  	.word	0x1000ea30
10002614: ec e6 00 10  	.word	0x1000e6ec

10002618 <<rp2040_pac::io_bank0::gpio::gpio_ctrl::FUNCSEL_A as core::cmp::PartialEq>::eq::h2f7a071112dce480>:
10002618: b580         	push	{r7, lr}
1000261a: af00         	add	r7, sp, #0x0
1000261c: b084         	sub	sp, #0x10
1000261e: 9000         	str	r0, [sp]
10002620: 9101         	str	r1, [sp, #0x4]
10002622: 7800         	ldrb	r0, [r0]
10002624: aa02         	add	r2, sp, #0x8
10002626: 7010         	strb	r0, [r2]
10002628: 7809         	ldrb	r1, [r1]
1000262a: aa03         	add	r2, sp, #0xc
1000262c: 7011         	strb	r1, [r2]
1000262e: 1a40         	subs	r0, r0, r1
10002630: 4241         	rsbs	r1, r0, #0
10002632: 4148         	adcs	r0, r1
10002634: b004         	add	sp, #0x10
10002636: bd80         	pop	{r7, pc}

10002638 <cortex_m::peripheral::Peripherals::steal::ha5dcc0c5eb5b4f5c>:
10002638: b580         	push	{r7, lr}
1000263a: af00         	add	r7, sp, #0x0
1000263c: 4901         	ldr	r1, [pc, #0x4]          @ 0x10002644 <cortex_m::peripheral::Peripherals::steal::ha5dcc0c5eb5b4f5c+0xc>
1000263e: 2001         	movs	r0, #0x1
10002640: 7008         	strb	r0, [r1]
10002642: bd80         	pop	{r7, pc}
10002644: f9 fb 03 20  	.word	0x2003fbf9

10002648 <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::set_priority::hcb6e282f4580d922>:
10002648: b580         	push	{r7, lr}
1000264a: af00         	add	r7, sp, #0x0
1000264c: b090         	sub	sp, #0x40
1000264e: ab04         	add	r3, sp, #0x10
10002650: 8019         	strh	r1, [r3]
10002652: a905         	add	r1, sp, #0x14
10002654: 700a         	strb	r2, [r1]
10002656: 9006         	str	r0, [sp, #0x18]
10002658: 900f         	str	r0, [sp, #0x3c]
1000265a: 9804         	ldr	r0, [sp, #0x10]
1000265c: f000 f8a4    	bl	0x100027a8 <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::ipr_index::h884f300f6258fde1> @ imm = #0x148
10002660: 4601         	mov	r1, r0
10002662: 9103         	str	r1, [sp, #0xc]
10002664: 2807         	cmp	r0, #0x7
10002666: d81e         	bhi	0x100026a6 <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::set_priority::hcb6e282f4580d922+0x5e> @ imm = #0x3c
10002668: e7ff         	b	0x1000266a <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::set_priority::hcb6e282f4580d922+0x22> @ imm = #-0x2
1000266a: 9803         	ldr	r0, [sp, #0xc]
1000266c: 0080         	lsls	r0, r0, #0x2
1000266e: 4911         	ldr	r1, [pc, #0x44]         @ 0x100026b4 <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::set_priority::hcb6e282f4580d922+0x6c>
10002670: 1840         	adds	r0, r0, r1
10002672: 9002         	str	r0, [sp, #0x8]
10002674: 9007         	str	r0, [sp, #0x1c]
10002676: a904         	add	r1, sp, #0x10
10002678: 9101         	str	r1, [sp, #0x4]
1000267a: 9108         	str	r1, [sp, #0x20]
1000267c: a905         	add	r1, sp, #0x14
1000267e: 9100         	str	r1, [sp]
10002680: 9109         	str	r1, [sp, #0x24]
10002682: 900a         	str	r0, [sp, #0x28]
10002684: 900b         	str	r0, [sp, #0x2c]
10002686: f009 fd1e    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x9a3c
1000268a: 9900         	ldr	r1, [sp]
1000268c: 4602         	mov	r2, r0
1000268e: 9801         	ldr	r0, [sp, #0x4]
10002690: f000 f812    	bl	0x100026b8 <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::set_priority::{{closure}}::h837ef91f89acf7b1> @ imm = #0x24
10002694: 4601         	mov	r1, r0
10002696: 9802         	ldr	r0, [sp, #0x8]
10002698: 900c         	str	r0, [sp, #0x30]
1000269a: 910d         	str	r1, [sp, #0x34]
1000269c: 900e         	str	r0, [sp, #0x38]
1000269e: f009 fd7d    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x9afa
100026a2: b010         	add	sp, #0x40
100026a4: bd80         	pop	{r7, pc}
100026a6: 9803         	ldr	r0, [sp, #0xc]
100026a8: 4a01         	ldr	r2, [pc, #0x4]          @ 0x100026b0 <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::set_priority::hcb6e282f4580d922+0x68>
100026aa: 2108         	movs	r1, #0x8
100026ac: f009 fec8    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0x9d90
100026b0: a0 ea 00 10  	.word	0x1000eaa0
100026b4: 00 e4 00 e0  	.word	0xe000e400

100026b8 <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::set_priority::{{closure}}::h837ef91f89acf7b1>:
100026b8: b5d0         	push	{r4, r6, r7, lr}
100026ba: af02         	add	r7, sp, #0x8
100026bc: b08c         	sub	sp, #0x30
100026be: 9204         	str	r2, [sp, #0x10]
100026c0: 9006         	str	r0, [sp, #0x18]
100026c2: 9107         	str	r1, [sp, #0x1c]
100026c4: 9208         	str	r2, [sp, #0x20]
100026c6: 9806         	ldr	r0, [sp, #0x18]
100026c8: 8800         	ldrh	r0, [r0]
100026ca: f000 f87b    	bl	0x100027c4 <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::ipr_shift::h57e1ece9ee55b710> @ imm = #0xf6
100026ce: 4601         	mov	r1, r0
100026d0: 9105         	str	r1, [sp, #0x14]
100026d2: 281f         	cmp	r0, #0x1f
100026d4: d815         	bhi	0x10002702 <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::set_priority::{{closure}}::h837ef91f89acf7b1+0x4a> @ imm = #0x2a
100026d6: e7ff         	b	0x100026d8 <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::set_priority::{{closure}}::h837ef91f89acf7b1+0x20> @ imm = #-0x2
100026d8: 9905         	ldr	r1, [sp, #0x14]
100026da: 201f         	movs	r0, #0x1f
100026dc: 4001         	ands	r1, r0
100026de: 20ff         	movs	r0, #0xff
100026e0: 4088         	lsls	r0, r1
100026e2: 9001         	str	r0, [sp, #0x4]
100026e4: 9009         	str	r0, [sp, #0x24]
100026e6: 9807         	ldr	r0, [sp, #0x1c]
100026e8: 7800         	ldrb	r0, [r0]
100026ea: 9002         	str	r0, [sp, #0x8]
100026ec: a90b         	add	r1, sp, #0x2c
100026ee: 7008         	strb	r0, [r1]
100026f0: 9806         	ldr	r0, [sp, #0x18]
100026f2: 8800         	ldrh	r0, [r0]
100026f4: f000 f866    	bl	0x100027c4 <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::ipr_shift::h57e1ece9ee55b710> @ imm = #0xcc
100026f8: 4601         	mov	r1, r0
100026fa: 9103         	str	r1, [sp, #0xc]
100026fc: 2820         	cmp	r0, #0x20
100026fe: d303         	blo	0x10002708 <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::set_priority::{{closure}}::h837ef91f89acf7b1+0x50> @ imm = #0x6
10002700: e00e         	b	0x10002720 <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::set_priority::{{closure}}::h837ef91f89acf7b1+0x68> @ imm = #0x1c
10002702: 4809         	ldr	r0, [pc, #0x24]         @ 0x10002728 <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::set_priority::{{closure}}::h837ef91f89acf7b1+0x70>
10002704: f00a feca    	bl	0x1000d49c <core::panicking::panic_const::panic_const_shl_overflow::h42afea46a5d11e4a> @ imm = #0xad94
10002708: 9a01         	ldr	r2, [sp, #0x4]
1000270a: 9804         	ldr	r0, [sp, #0x10]
1000270c: 9902         	ldr	r1, [sp, #0x8]
1000270e: 9b03         	ldr	r3, [sp, #0xc]
10002710: 241f         	movs	r4, #0x1f
10002712: 4023         	ands	r3, r4
10002714: 4099         	lsls	r1, r3
10002716: 910a         	str	r1, [sp, #0x28]
10002718: 4390         	bics	r0, r2
1000271a: 4308         	orrs	r0, r1
1000271c: b00c         	add	sp, #0x30
1000271e: bdd0         	pop	{r4, r6, r7, pc}
10002720: 4802         	ldr	r0, [pc, #0x8]          @ 0x1000272c <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::set_priority::{{closure}}::h837ef91f89acf7b1+0x74>
10002722: f00a febb    	bl	0x1000d49c <core::panicking::panic_const::panic_const_shl_overflow::h42afea46a5d11e4a> @ imm = #0xad76
10002726: 46c0         	mov	r8, r8
10002728: b0 ea 00 10  	.word	0x1000eab0
1000272c: c0 ea 00 10  	.word	0x1000eac0

10002730 <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::unmask::h960bd739fb738cf9>:
10002730: b580         	push	{r7, lr}
10002732: af00         	add	r7, sp, #0x0
10002734: b08e         	sub	sp, #0x38
10002736: 4601         	mov	r1, r0
10002738: a805         	add	r0, sp, #0x14
1000273a: 8001         	strh	r1, [r0]
1000273c: a80d         	add	r0, sp, #0x34
1000273e: 8001         	strh	r1, [r0]
10002740: 8800         	ldrh	r0, [r0]
10002742: 9003         	str	r0, [sp, #0xc]
10002744: a906         	add	r1, sp, #0x18
10002746: 8008         	strh	r0, [r1]
10002748: 0940         	lsrs	r0, r0, #0x5
1000274a: 9004         	str	r0, [sp, #0x10]
1000274c: a909         	add	r1, sp, #0x24
1000274e: 8008         	strh	r0, [r1]
10002750: 280f         	cmp	r0, #0xf
10002752: d80c         	bhi	0x1000276e <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::unmask::h960bd739fb738cf9+0x3e> @ imm = #0x18
10002754: e7ff         	b	0x10002756 <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::unmask::h960bd739fb738cf9+0x26> @ imm = #-0x2
10002756: 9803         	ldr	r0, [sp, #0xc]
10002758: 9904         	ldr	r1, [sp, #0x10]
1000275a: 0089         	lsls	r1, r1, #0x2
1000275c: 4a10         	ldr	r2, [pc, #0x40]         @ 0x100027a0 <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::unmask::h960bd739fb738cf9+0x70>
1000275e: 1889         	adds	r1, r1, r2
10002760: 9101         	str	r1, [sp, #0x4]
10002762: 211f         	movs	r1, #0x1f
10002764: 4008         	ands	r0, r1
10002766: 9002         	str	r0, [sp, #0x8]
10002768: 2820         	cmp	r0, #0x20
1000276a: d305         	blo	0x10002778 <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::unmask::h960bd739fb738cf9+0x48> @ imm = #0xa
1000276c: e013         	b	0x10002796 <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::unmask::h960bd739fb738cf9+0x66> @ imm = #0x26
1000276e: 9804         	ldr	r0, [sp, #0x10]
10002770: 4a0a         	ldr	r2, [pc, #0x28]         @ 0x1000279c <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::unmask::h960bd739fb738cf9+0x6c>
10002772: 2110         	movs	r1, #0x10
10002774: f009 fe64    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0x9cc8
10002778: 9801         	ldr	r0, [sp, #0x4]
1000277a: 9a02         	ldr	r2, [sp, #0x8]
1000277c: 211f         	movs	r1, #0x1f
1000277e: 400a         	ands	r2, r1
10002780: 2101         	movs	r1, #0x1
10002782: 4091         	lsls	r1, r2
10002784: 9007         	str	r0, [sp, #0x1c]
10002786: 9108         	str	r1, [sp, #0x20]
10002788: 900a         	str	r0, [sp, #0x28]
1000278a: 910b         	str	r1, [sp, #0x2c]
1000278c: 900c         	str	r0, [sp, #0x30]
1000278e: f009 fd05    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x9a0a
10002792: b00e         	add	sp, #0x38
10002794: bd80         	pop	{r7, pc}
10002796: 4803         	ldr	r0, [pc, #0xc]          @ 0x100027a4 <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::unmask::h960bd739fb738cf9+0x74>
10002798: f00a fe80    	bl	0x1000d49c <core::panicking::panic_const::panic_const_shl_overflow::h42afea46a5d11e4a> @ imm = #0xad00
1000279c: d0 ea 00 10  	.word	0x1000ead0
100027a0: 00 e1 00 e0  	.word	0xe000e100
100027a4: e0 ea 00 10  	.word	0x1000eae0

100027a8 <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::ipr_index::h884f300f6258fde1>:
100027a8: b580         	push	{r7, lr}
100027aa: af00         	add	r7, sp, #0x0
100027ac: b083         	sub	sp, #0xc
100027ae: 4601         	mov	r1, r0
100027b0: 4668         	mov	r0, sp
100027b2: 8001         	strh	r1, [r0]
100027b4: a802         	add	r0, sp, #0x8
100027b6: 8001         	strh	r1, [r0]
100027b8: 8800         	ldrh	r0, [r0]
100027ba: a901         	add	r1, sp, #0x4
100027bc: 8008         	strh	r0, [r1]
100027be: 0880         	lsrs	r0, r0, #0x2
100027c0: b003         	add	sp, #0xc
100027c2: bd80         	pop	{r7, pc}

100027c4 <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::ipr_shift::h57e1ece9ee55b710>:
100027c4: b580         	push	{r7, lr}
100027c6: af00         	add	r7, sp, #0x0
100027c8: b084         	sub	sp, #0x10
100027ca: 4601         	mov	r1, r0
100027cc: a801         	add	r0, sp, #0x4
100027ce: 8001         	strh	r1, [r0]
100027d0: a803         	add	r0, sp, #0xc
100027d2: 8001         	strh	r1, [r0]
100027d4: 8800         	ldrh	r0, [r0]
100027d6: a902         	add	r1, sp, #0x8
100027d8: 8008         	strh	r0, [r1]
100027da: 0780         	lsls	r0, r0, #0x1e
100027dc: 0ec0         	lsrs	r0, r0, #0x1b
100027de: 9000         	str	r0, [sp]
100027e0: 2000         	movs	r0, #0x0
100027e2: 2800         	cmp	r0, #0x0
100027e4: d103         	bne	0x100027ee <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::ipr_shift::h57e1ece9ee55b710+0x2a> @ imm = #0x6
100027e6: e7ff         	b	0x100027e8 <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::ipr_shift::h57e1ece9ee55b710+0x24> @ imm = #-0x2
100027e8: 9800         	ldr	r0, [sp]
100027ea: b004         	add	sp, #0x10
100027ec: bd80         	pop	{r7, pc}
100027ee: 4801         	ldr	r0, [pc, #0x4]          @ 0x100027f4 <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::ipr_shift::h57e1ece9ee55b710+0x30>
100027f0: f00a fe42    	bl	0x1000d478 <core::panicking::panic_const::panic_const_mul_overflow::hdb56fe2dcc791345> @ imm = #0xac84
100027f4: f0 ea 00 10  	.word	0x1000eaf0

100027f8 <cortex_m::asm::nop::h3f7eb3f0d24427f5>:
100027f8: b580         	push	{r7, lr}
100027fa: af00         	add	r7, sp, #0x0
100027fc: f009 fd43    	bl	0x1000c286 <__nop>      @ imm = #0x9a86
10002800: bd80         	pop	{r7, pc}

10002802 <cortex_m::register::primask::read::hbf67ef60a503d53e>:
10002802: b580         	push	{r7, lr}
10002804: af00         	add	r7, sp, #0x0
10002806: b082         	sub	sp, #0x8
10002808: f009 fd3f    	bl	0x1000c28a <__primask_r> @ imm = #0x9a7e
1000280c: 9001         	str	r0, [sp, #0x4]
1000280e: 2101         	movs	r1, #0x1
10002810: 4008         	ands	r0, r1
10002812: 2801         	cmp	r0, #0x1
10002814: d004         	beq	0x10002820 <cortex_m::register::primask::read::hbf67ef60a503d53e+0x1e> @ imm = #0x8
10002816: e7ff         	b	0x10002818 <cortex_m::register::primask::read::hbf67ef60a503d53e+0x16> @ imm = #-0x2
10002818: 4669         	mov	r1, sp
1000281a: 2000         	movs	r0, #0x0
1000281c: 7008         	strb	r0, [r1]
1000281e: e003         	b	0x10002828 <cortex_m::register::primask::read::hbf67ef60a503d53e+0x26> @ imm = #0x6
10002820: 4669         	mov	r1, sp
10002822: 2001         	movs	r0, #0x1
10002824: 7008         	strb	r0, [r1]
10002826: e7ff         	b	0x10002828 <cortex_m::register::primask::read::hbf67ef60a503d53e+0x26> @ imm = #-0x2
10002828: 4668         	mov	r0, sp
1000282a: 7800         	ldrb	r0, [r0]
1000282c: b002         	add	sp, #0x8
1000282e: bd80         	pop	{r7, pc}

10002830 <cortex_m::register::primask::Primask::is_active::h5880a38553b20be9>:
10002830: b580         	push	{r7, lr}
10002832: af00         	add	r7, sp, #0x0
10002834: b082         	sub	sp, #0x8
10002836: 4601         	mov	r1, r0
10002838: a801         	add	r0, sp, #0x4
1000283a: 7001         	strb	r1, [r0]
1000283c: 4902         	ldr	r1, [pc, #0x8]          @ 0x10002848 <cortex_m::register::primask::Primask::is_active::h5880a38553b20be9+0x18>
1000283e: f7ff fe7b    	bl	0x10002538 <<cortex_m::register::primask::Primask as core::cmp::PartialEq>::eq::h1b514e9ca2dbfc15> @ imm = #-0x30a
10002842: b002         	add	sp, #0x8
10002844: bd80         	pop	{r7, pc}
10002846: 46c0         	mov	r8, r8
10002848: 00 eb 00 10  	.word	0x1000eb00

1000284c <cortex_m::interrupt::free::hc6324d472d11cc43>:
1000284c: b580         	push	{r7, lr}
1000284e: af00         	add	r7, sp, #0x0
10002850: b084         	sub	sp, #0x10
10002852: f7ff ffd6    	bl	0x10002802 <cortex_m::register::primask::read::hbf67ef60a503d53e> @ imm = #-0x54
10002856: 9001         	str	r0, [sp, #0x4]
10002858: a903         	add	r1, sp, #0xc
1000285a: 7008         	strb	r0, [r1]
1000285c: f000 f839    	bl	0x100028d2 <cortex_m::interrupt::disable::h303235e1cf853f1e> @ imm = #0x72
10002860: f009 fd29    	bl	0x1000c2b6 <bare_metal::CriticalSection::new::h22725cac2bd2d9c1> @ imm = #0x9a52
10002864: a802         	add	r0, sp, #0x8
10002866: f001 fe5f    	bl	0x10004528 <simple_rtic::app::TIMER_IRQ_0::{{closure}}::h9227bce7fa7804ee> @ imm = #0x1cbe
1000286a: 9801         	ldr	r0, [sp, #0x4]
1000286c: f7ff ffe0    	bl	0x10002830 <cortex_m::register::primask::Primask::is_active::h5880a38553b20be9> @ imm = #-0x40
10002870: 2800         	cmp	r0, #0x0
10002872: d102         	bne	0x1000287a <cortex_m::interrupt::free::hc6324d472d11cc43+0x2e> @ imm = #0x4
10002874: e7ff         	b	0x10002876 <cortex_m::interrupt::free::hc6324d472d11cc43+0x2a> @ imm = #-0x2
10002876: b004         	add	sp, #0x10
10002878: bd80         	pop	{r7, pc}
1000287a: f000 f825    	bl	0x100028c8 <cortex_m::interrupt::enable::h8eff18a931d63b54> @ imm = #0x4a
1000287e: e7fa         	b	0x10002876 <cortex_m::interrupt::free::hc6324d472d11cc43+0x2a> @ imm = #-0xc

10002880 <cortex_m::interrupt::free::hde7e74f70d23bf53>:
10002880: b580         	push	{r7, lr}
10002882: af00         	add	r7, sp, #0x0
10002884: b086         	sub	sp, #0x18
10002886: f7ff ffbc    	bl	0x10002802 <cortex_m::register::primask::read::hbf67ef60a503d53e> @ imm = #-0x88
1000288a: 9000         	str	r0, [sp]
1000288c: a904         	add	r1, sp, #0x10
1000288e: 7008         	strb	r0, [r1]
10002890: f000 f81f    	bl	0x100028d2 <cortex_m::interrupt::disable::h303235e1cf853f1e> @ imm = #0x3e
10002894: f009 fd0f    	bl	0x1000c2b6 <bare_metal::CriticalSection::new::h22725cac2bd2d9c1> @ imm = #0x9a1e
10002898: a803         	add	r0, sp, #0xc
1000289a: f001 fe15    	bl	0x100044c8 <simple_rtic::app::TIMER_IRQ_0::{{closure}}::hcf033c5e7f32e51a> @ imm = #0x1c2a
1000289e: 4603         	mov	r3, r0
100028a0: 9800         	ldr	r0, [sp]
100028a2: 461a         	mov	r2, r3
100028a4: 9201         	str	r2, [sp, #0x4]
100028a6: 460a         	mov	r2, r1
100028a8: 9202         	str	r2, [sp, #0x8]
100028aa: aa05         	add	r2, sp, #0x14
100028ac: 7013         	strb	r3, [r2]
100028ae: 7051         	strb	r1, [r2, #0x1]
100028b0: f7ff ffbe    	bl	0x10002830 <cortex_m::register::primask::Primask::is_active::h5880a38553b20be9> @ imm = #-0x84
100028b4: 2800         	cmp	r0, #0x0
100028b6: d104         	bne	0x100028c2 <cortex_m::interrupt::free::hde7e74f70d23bf53+0x42> @ imm = #0x8
100028b8: e7ff         	b	0x100028ba <cortex_m::interrupt::free::hde7e74f70d23bf53+0x3a> @ imm = #-0x2
100028ba: 9902         	ldr	r1, [sp, #0x8]
100028bc: 9801         	ldr	r0, [sp, #0x4]
100028be: b006         	add	sp, #0x18
100028c0: bd80         	pop	{r7, pc}
100028c2: f000 f801    	bl	0x100028c8 <cortex_m::interrupt::enable::h8eff18a931d63b54> @ imm = #0x2
100028c6: e7f8         	b	0x100028ba <cortex_m::interrupt::free::hde7e74f70d23bf53+0x3a> @ imm = #-0x10

100028c8 <cortex_m::interrupt::enable::h8eff18a931d63b54>:
100028c8: b580         	push	{r7, lr}
100028ca: af00         	add	r7, sp, #0x0
100028cc: f009 fcd4    	bl	0x1000c278 <__cpsie>    @ imm = #0x99a8
100028d0: bd80         	pop	{r7, pc}

100028d2 <cortex_m::interrupt::disable::h303235e1cf853f1e>:
100028d2: b580         	push	{r7, lr}
100028d4: af00         	add	r7, sp, #0x0
100028d6: f009 fccd    	bl	0x1000c274 <__cpsid>    @ imm = #0x999a
100028da: bd80         	pop	{r7, pc}

100028dc <heapless::sorted_linked_list::LinkedIndexU16::new_unchecked::h6677b2be0604f196>:
100028dc: b580         	push	{r7, lr}
100028de: af00         	add	r7, sp, #0x0
100028e0: b081         	sub	sp, #0x4
100028e2: 4669         	mov	r1, sp
100028e4: 8008         	strh	r0, [r1]
100028e6: b001         	add	sp, #0x4
100028e8: bd80         	pop	{r7, pc}

100028ea <heapless::sorted_linked_list::SortedLinkedList<T,Idx,K,_>::pop_unchecked::h6c6f9c216b7b8d74>:
100028ea: b580         	push	{r7, lr}
100028ec: af00         	add	r7, sp, #0x0
100028ee: b092         	sub	sp, #0x48
100028f0: 9103         	str	r1, [sp, #0xc]
100028f2: 4601         	mov	r1, r0
100028f4: 9803         	ldr	r0, [sp, #0xc]
100028f6: 9104         	str	r1, [sp, #0x10]
100028f8: 9005         	str	r0, [sp, #0x14]
100028fa: 8802         	ldrh	r2, [r0]
100028fc: 9202         	str	r2, [sp, #0x8]
100028fe: a907         	add	r1, sp, #0x1c
10002900: 800a         	strh	r2, [r1]
10002902: 9206         	str	r2, [sp, #0x18]
10002904: 9010         	str	r0, [sp, #0x40]
10002906: 9211         	str	r2, [sp, #0x44]
10002908: 2100         	movs	r1, #0x0
1000290a: 9101         	str	r1, [sp, #0x4]
1000290c: f7fe fe52    	bl	0x100015b4 <core::slice::<impl [T]>::get_unchecked::h61a0ea211310880c> @ imm = #-0x135c
10002910: 9901         	ldr	r1, [sp, #0x4]
10002912: 9a02         	ldr	r2, [sp, #0x8]
10002914: 4603         	mov	r3, r0
10002916: 9803         	ldr	r0, [sp, #0xc]
10002918: 8a1b         	ldrh	r3, [r3, #0x10]
1000291a: 8003         	strh	r3, [r0]
1000291c: 8843         	ldrh	r3, [r0, #0x2]
1000291e: 9300         	str	r3, [sp]
10002920: 9009         	str	r0, [sp, #0x24]
10002922: 920a         	str	r2, [sp, #0x28]
10002924: f7fe fe62    	bl	0x100015ec <core::slice::<impl [T]>::get_unchecked_mut::h5db555c5dd7468d7> @ imm = #-0x133c
10002928: 9900         	ldr	r1, [sp]
1000292a: 4602         	mov	r2, r0
1000292c: 9802         	ldr	r0, [sp, #0x8]
1000292e: 8211         	strh	r1, [r2, #0x10]
10002930: 9008         	str	r0, [sp, #0x20]
10002932: f7ff ffd3    	bl	0x100028dc <heapless::sorted_linked_list::LinkedIndexU16::new_unchecked::h6677b2be0604f196> @ imm = #-0x5a
10002936: 9901         	ldr	r1, [sp, #0x4]
10002938: 9a02         	ldr	r2, [sp, #0x8]
1000293a: 4603         	mov	r3, r0
1000293c: 9803         	ldr	r0, [sp, #0xc]
1000293e: 8043         	strh	r3, [r0, #0x2]
10002940: 900b         	str	r0, [sp, #0x2c]
10002942: 920c         	str	r2, [sp, #0x30]
10002944: 900e         	str	r0, [sp, #0x38]
10002946: 920f         	str	r2, [sp, #0x3c]
10002948: f7fe fe34    	bl	0x100015b4 <core::slice::<impl [T]>::get_unchecked::h61a0ea211310880c> @ imm = #-0x1398
1000294c: 4601         	mov	r1, r0
1000294e: 9804         	ldr	r0, [sp, #0x10]
10002950: 910d         	str	r1, [sp, #0x34]
10002952: f7fe fd9f    	bl	0x10001494 <core::ptr::const_ptr::<impl *const T>::read::h9692f49c6cbf0508> @ imm = #-0x14c2
10002956: defe         	trap

10002958 <heapless::sorted_linked_list::SortedLinkedList<T,Idx,K,_>::peek::h18c13cbce0c525f7>:
10002958: b580         	push	{r7, lr}
1000295a: af00         	add	r7, sp, #0x0
1000295c: b086         	sub	sp, #0x18
1000295e: 9002         	str	r0, [sp, #0x8]
10002960: 9802         	ldr	r0, [sp, #0x8]
10002962: 8800         	ldrh	r0, [r0]
10002964: 9001         	str	r0, [sp, #0x4]
10002966: a905         	add	r1, sp, #0x14
10002968: 8008         	strh	r0, [r1]
1000296a: 490a         	ldr	r1, [pc, #0x28]         @ 0x10002994 <heapless::sorted_linked_list::SortedLinkedList<T,Idx,K,_>::peek::h18c13cbce0c525f7+0x3c>
1000296c: 4288         	cmp	r0, r1
1000296e: d006         	beq	0x1000297e <heapless::sorted_linked_list::SortedLinkedList<T,Idx,K,_>::peek::h18c13cbce0c525f7+0x26> @ imm = #0xc
10002970: e7ff         	b	0x10002972 <heapless::sorted_linked_list::SortedLinkedList<T,Idx,K,_>::peek::h18c13cbce0c525f7+0x1a> @ imm = #-0x2
10002972: 9801         	ldr	r0, [sp, #0x4]
10002974: b280         	uxth	r0, r0
10002976: 9004         	str	r0, [sp, #0x10]
10002978: 2001         	movs	r0, #0x1
1000297a: 9003         	str	r0, [sp, #0xc]
1000297c: e002         	b	0x10002984 <heapless::sorted_linked_list::SortedLinkedList<T,Idx,K,_>::peek::h18c13cbce0c525f7+0x2c> @ imm = #0x4
1000297e: 2000         	movs	r0, #0x0
10002980: 9003         	str	r0, [sp, #0xc]
10002982: e7ff         	b	0x10002984 <heapless::sorted_linked_list::SortedLinkedList<T,Idx,K,_>::peek::h18c13cbce0c525f7+0x2c> @ imm = #-0x2
10002984: 9803         	ldr	r0, [sp, #0xc]
10002986: 9904         	ldr	r1, [sp, #0x10]
10002988: aa02         	add	r2, sp, #0x8
1000298a: f7fe ff9d    	bl	0x100018c8 <core::option::Option<T>::map::h67c46991df151a41> @ imm = #-0x10c6
1000298e: b006         	add	sp, #0x18
10002990: bd80         	pop	{r7, pc}
10002992: 46c0         	mov	r8, r8
10002994: ff ff 00 00  	.word	0x0000ffff

10002998 <heapless::sorted_linked_list::SortedLinkedList<T,Idx,K,_>::peek::{{closure}}::h8dcd3ee31c5fdca8>:
10002998: b580         	push	{r7, lr}
1000299a: af00         	add	r7, sp, #0x0
1000299c: b088         	sub	sp, #0x20
1000299e: 460a         	mov	r2, r1
100029a0: 9001         	str	r0, [sp, #0x4]
100029a2: 9202         	str	r2, [sp, #0x8]
100029a4: 9801         	ldr	r0, [sp, #0x4]
100029a6: 6800         	ldr	r0, [r0]
100029a8: 9003         	str	r0, [sp, #0xc]
100029aa: 9204         	str	r2, [sp, #0x10]
100029ac: 9006         	str	r0, [sp, #0x18]
100029ae: 9207         	str	r2, [sp, #0x1c]
100029b0: 2100         	movs	r1, #0x0
100029b2: f7fe fdff    	bl	0x100015b4 <core::slice::<impl [T]>::get_unchecked::h61a0ea211310880c> @ imm = #-0x1402
100029b6: 9005         	str	r0, [sp, #0x14]
100029b8: b008         	add	sp, #0x20
100029ba: bd80         	pop	{r7, pc}

100029bc <heapless::vec::Vec<T,_>::as_mut_slice::h56d82833d797e176>:
100029bc: b580         	push	{r7, lr}
100029be: af00         	add	r7, sp, #0x0
100029c0: b084         	sub	sp, #0x10
100029c2: 9001         	str	r0, [sp, #0x4]
100029c4: 9002         	str	r0, [sp, #0x8]
100029c6: 2101         	movs	r1, #0x1
100029c8: 028a         	lsls	r2, r1, #0xa
100029ca: 9203         	str	r2, [sp, #0xc]
100029cc: 0349         	lsls	r1, r1, #0xd
100029ce: 5841         	ldr	r1, [r0, r1]
100029d0: f7fe feb4    	bl	0x1000173c <core::slice::raw::from_raw_parts_mut::h00e16020bdeeca9e> @ imm = #-0x1298
100029d4: b004         	add	sp, #0x10
100029d6: bd80         	pop	{r7, pc}

100029d8 <heapless::vec::Vec<T,_>::push_unchecked::h2e4158920ecafe2e>:
100029d8: b5d0         	push	{r4, r6, r7, lr}
100029da: af02         	add	r7, sp, #0x8
100029dc: b08e         	sub	sp, #0x38
100029de: 9204         	str	r2, [sp, #0x10]
100029e0: 9105         	str	r1, [sp, #0x14]
100029e2: 9006         	str	r0, [sp, #0x18]
100029e4: 9007         	str	r0, [sp, #0x1c]
100029e6: 9108         	str	r1, [sp, #0x20]
100029e8: 9209         	str	r2, [sp, #0x24]
100029ea: f000 f871    	bl	0x10002ad0 <heapless::vec::Vec<T,_>::is_full::h7a2003f0ffd23a0e> @ imm = #0xe2
100029ee: 2800         	cmp	r0, #0x0
100029f0: d11d         	bne	0x10002a2e <heapless::vec::Vec<T,_>::push_unchecked::h2e4158920ecafe2e+0x56> @ imm = #0x3a
100029f2: e7ff         	b	0x100029f4 <heapless::vec::Vec<T,_>::push_unchecked::h2e4158920ecafe2e+0x1c> @ imm = #-0x2
100029f4: 9806         	ldr	r0, [sp, #0x18]
100029f6: 9904         	ldr	r1, [sp, #0x10]
100029f8: 9a05         	ldr	r2, [sp, #0x14]
100029fa: 920c         	str	r2, [sp, #0x30]
100029fc: 910d         	str	r1, [sp, #0x34]
100029fe: 920a         	str	r2, [sp, #0x28]
10002a00: 910b         	str	r1, [sp, #0x2c]
10002a02: 9c0a         	ldr	r4, [sp, #0x28]
10002a04: 990b         	ldr	r1, [sp, #0x2c]
10002a06: 9101         	str	r1, [sp, #0x4]
10002a08: 2101         	movs	r1, #0x1
10002a0a: 034a         	lsls	r2, r1, #0xd
10002a0c: 9202         	str	r2, [sp, #0x8]
10002a0e: 5882         	ldr	r2, [r0, r2]
10002a10: 0289         	lsls	r1, r1, #0xa
10002a12: f7fe fddd    	bl	0x100015d0 <core::slice::<impl [T]>::get_unchecked_mut::h32db90cb63af3313> @ imm = #-0x1446
10002a16: 9a01         	ldr	r2, [sp, #0x4]
10002a18: 9902         	ldr	r1, [sp, #0x8]
10002a1a: 4603         	mov	r3, r0
10002a1c: 9806         	ldr	r0, [sp, #0x18]
10002a1e: 601c         	str	r4, [r3]
10002a20: 605a         	str	r2, [r3, #0x4]
10002a22: 5841         	ldr	r1, [r0, r1]
10002a24: 1c48         	adds	r0, r1, #0x1
10002a26: 9003         	str	r0, [sp, #0xc]
10002a28: 4288         	cmp	r0, r1
10002a2a: d30c         	blo	0x10002a46 <heapless::vec::Vec<T,_>::push_unchecked::h2e4158920ecafe2e+0x6e> @ imm = #0x18
10002a2c: e004         	b	0x10002a38 <heapless::vec::Vec<T,_>::push_unchecked::h2e4158920ecafe2e+0x60> @ imm = #0x8
10002a2e: 4808         	ldr	r0, [pc, #0x20]         @ 0x10002a50 <heapless::vec::Vec<T,_>::push_unchecked::h2e4158920ecafe2e+0x78>
10002a30: 4a08         	ldr	r2, [pc, #0x20]         @ 0x10002a54 <heapless::vec::Vec<T,_>::push_unchecked::h2e4158920ecafe2e+0x7c>
10002a32: 2121         	movs	r1, #0x21
10002a34: f009 fcc1    	bl	0x1000c3ba <core::panicking::panic::h8206ba60402e7bb2> @ imm = #0x9982
10002a38: 9803         	ldr	r0, [sp, #0xc]
10002a3a: 9906         	ldr	r1, [sp, #0x18]
10002a3c: 2201         	movs	r2, #0x1
10002a3e: 0352         	lsls	r2, r2, #0xd
10002a40: 5088         	str	r0, [r1, r2]
10002a42: b00e         	add	sp, #0x38
10002a44: bdd0         	pop	{r4, r6, r7, pc}
10002a46: 4801         	ldr	r0, [pc, #0x4]          @ 0x10002a4c <heapless::vec::Vec<T,_>::push_unchecked::h2e4158920ecafe2e+0x74>
10002a48: f00a fcf2    	bl	0x1000d430 <core::panicking::panic_const::panic_const_add_overflow::h73b6e802431fc142> @ imm = #0xa9e4
10002a4c: 04 eb 00 10  	.word	0x1000eb04
10002a50: 14 eb 00 10  	.word	0x1000eb14
10002a54: 38 eb 00 10  	.word	0x1000eb38

10002a58 <heapless::vec::Vec<T,_>::new::hc803600c544224c3>:
10002a58: b580         	push	{r7, lr}
10002a5a: af00         	add	r7, sp, #0x0
10002a5c: b082         	sub	sp, #0x8
10002a5e: 9001         	str	r0, [sp, #0x4]
10002a60: f000 f85d    	bl	0x10002b1e <heapless::sealed::greater_than_eq_0::h1e777373acb433d0> @ imm = #0xba
10002a64: 9801         	ldr	r0, [sp, #0x4]
10002a66: 2101         	movs	r1, #0x1
10002a68: 034a         	lsls	r2, r1, #0xd
10002a6a: 2100         	movs	r1, #0x0
10002a6c: 5081         	str	r1, [r0, r2]
10002a6e: 4902         	ldr	r1, [pc, #0x8]          @ 0x10002a78 <heapless::vec::Vec<T,_>::new::hc803600c544224c3+0x20>
10002a70: f00a ff90    	bl	0x1000d994 <__aeabi_memcpy4> @ imm = #0xaf20
10002a74: b002         	add	sp, #0x8
10002a76: bd80         	pop	{r7, pc}
10002a78: 48 eb 00 10  	.word	0x1000eb48

10002a7c <heapless::vec::Vec<T,_>::push::h1bc527dcf9fef357>:
10002a7c: b580         	push	{r7, lr}
10002a7e: af00         	add	r7, sp, #0x0
10002a80: b088         	sub	sp, #0x20
10002a82: 9300         	str	r3, [sp]
10002a84: 9201         	str	r2, [sp, #0x4]
10002a86: 9102         	str	r1, [sp, #0x8]
10002a88: 4601         	mov	r1, r0
10002a8a: 9802         	ldr	r0, [sp, #0x8]
10002a8c: 9103         	str	r1, [sp, #0xc]
10002a8e: 9005         	str	r0, [sp, #0x14]
10002a90: 9206         	str	r2, [sp, #0x18]
10002a92: 9307         	str	r3, [sp, #0x1c]
10002a94: 2101         	movs	r1, #0x1
10002a96: 0349         	lsls	r1, r1, #0xd
10002a98: 5841         	ldr	r1, [r0, r1]
10002a9a: 9104         	str	r1, [sp, #0x10]
10002a9c: f000 f837    	bl	0x10002b0e <heapless::vec::Vec<T,_>::capacity::h43a0cedc749d0617> @ imm = #0x6e
10002aa0: 4601         	mov	r1, r0
10002aa2: 9804         	ldr	r0, [sp, #0x10]
10002aa4: 4288         	cmp	r0, r1
10002aa6: d308         	blo	0x10002aba <heapless::vec::Vec<T,_>::push::h1bc527dcf9fef357+0x3e> @ imm = #0x10
10002aa8: e7ff         	b	0x10002aaa <heapless::vec::Vec<T,_>::push::h1bc527dcf9fef357+0x2e> @ imm = #-0x2
10002aaa: 9903         	ldr	r1, [sp, #0xc]
10002aac: 9800         	ldr	r0, [sp]
10002aae: 9a01         	ldr	r2, [sp, #0x4]
10002ab0: 604a         	str	r2, [r1, #0x4]
10002ab2: 6088         	str	r0, [r1, #0x8]
10002ab4: 2001         	movs	r0, #0x1
10002ab6: 6008         	str	r0, [r1]
10002ab8: e008         	b	0x10002acc <heapless::vec::Vec<T,_>::push::h1bc527dcf9fef357+0x50> @ imm = #0x10
10002aba: 9a00         	ldr	r2, [sp]
10002abc: 9901         	ldr	r1, [sp, #0x4]
10002abe: 9802         	ldr	r0, [sp, #0x8]
10002ac0: f7ff ff8a    	bl	0x100029d8 <heapless::vec::Vec<T,_>::push_unchecked::h2e4158920ecafe2e> @ imm = #-0xec
10002ac4: 9903         	ldr	r1, [sp, #0xc]
10002ac6: 2000         	movs	r0, #0x0
10002ac8: 6008         	str	r0, [r1]
10002aca: e7ff         	b	0x10002acc <heapless::vec::Vec<T,_>::push::h1bc527dcf9fef357+0x50> @ imm = #-0x2
10002acc: b008         	add	sp, #0x20
10002ace: bd80         	pop	{r7, pc}

10002ad0 <heapless::vec::Vec<T,_>::is_full::h7a2003f0ffd23a0e>:
10002ad0: b580         	push	{r7, lr}
10002ad2: af00         	add	r7, sp, #0x0
10002ad4: b082         	sub	sp, #0x8
10002ad6: 9001         	str	r0, [sp, #0x4]
10002ad8: 2101         	movs	r1, #0x1
10002ada: 0349         	lsls	r1, r1, #0xd
10002adc: 5841         	ldr	r1, [r0, r1]
10002ade: 9100         	str	r1, [sp]
10002ae0: f000 f815    	bl	0x10002b0e <heapless::vec::Vec<T,_>::capacity::h43a0cedc749d0617> @ imm = #0x2a
10002ae4: 4601         	mov	r1, r0
10002ae6: 9800         	ldr	r0, [sp]
10002ae8: 1a40         	subs	r0, r0, r1
10002aea: 4241         	rsbs	r1, r0, #0
10002aec: 4148         	adcs	r0, r1
10002aee: b002         	add	sp, #0x8
10002af0: bd80         	pop	{r7, pc}

10002af2 <heapless::vec::Vec<T,_>::as_slice::h31b870ea68d548a4>:
10002af2: b580         	push	{r7, lr}
10002af4: af00         	add	r7, sp, #0x0
10002af6: b084         	sub	sp, #0x10
10002af8: 9001         	str	r0, [sp, #0x4]
10002afa: 9002         	str	r0, [sp, #0x8]
10002afc: 2101         	movs	r1, #0x1
10002afe: 028a         	lsls	r2, r1, #0xa
10002b00: 9203         	str	r2, [sp, #0xc]
10002b02: 0349         	lsls	r1, r1, #0xd
10002b04: 5841         	ldr	r1, [r0, r1]
10002b06: f7fe fd88    	bl	0x1000161a <core::slice::raw::from_raw_parts::h5c7b96c0d3b39ce9> @ imm = #-0x14f0
10002b0a: b004         	add	sp, #0x10
10002b0c: bd80         	pop	{r7, pc}

10002b0e <heapless::vec::Vec<T,_>::capacity::h43a0cedc749d0617>:
10002b0e: b580         	push	{r7, lr}
10002b10: af00         	add	r7, sp, #0x0
10002b12: b081         	sub	sp, #0x4
10002b14: 9000         	str	r0, [sp]
10002b16: 2001         	movs	r0, #0x1
10002b18: 0280         	lsls	r0, r0, #0xa
10002b1a: b001         	add	sp, #0x4
10002b1c: bd80         	pop	{r7, pc}

10002b1e <heapless::sealed::greater_than_eq_0::h1e777373acb433d0>:
10002b1e: b580         	push	{r7, lr}
10002b20: af00         	add	r7, sp, #0x0
10002b22: bd80         	pop	{r7, pc}

10002b24 <<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next::h7b5b726cc78c6372>:
10002b24: b580         	push	{r7, lr}
10002b26: af00         	add	r7, sp, #0x0
10002b28: b08d         	sub	sp, #0x34
10002b2a: 9000         	str	r0, [sp]
10002b2c: 9006         	str	r0, [sp, #0x18]
10002b2e: 2101         	movs	r1, #0x1
10002b30: 9107         	str	r1, [sp, #0x1c]
10002b32: 9108         	str	r1, [sp, #0x20]
10002b34: 6801         	ldr	r1, [r0]
10002b36: 9103         	str	r1, [sp, #0xc]
10002b38: 6840         	ldr	r0, [r0, #0x4]
10002b3a: 9001         	str	r0, [sp, #0x4]
10002b3c: 9009         	str	r0, [sp, #0x24]
10002b3e: e7ff         	b	0x10002b40 <<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next::h7b5b726cc78c6372+0x1c> @ imm = #-0x2
10002b40: 9801         	ldr	r0, [sp, #0x4]
10002b42: a903         	add	r1, sp, #0xc
10002b44: 910a         	str	r1, [sp, #0x28]
10002b46: 9004         	str	r0, [sp, #0x10]
10002b48: a804         	add	r0, sp, #0x10
10002b4a: 900b         	str	r0, [sp, #0x2c]
10002b4c: 9803         	ldr	r0, [sp, #0xc]
10002b4e: 9904         	ldr	r1, [sp, #0x10]
10002b50: 4288         	cmp	r0, r1
10002b52: d005         	beq	0x10002b60 <<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next::h7b5b726cc78c6372+0x3c> @ imm = #0xa
10002b54: e7ff         	b	0x10002b56 <<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next::h7b5b726cc78c6372+0x32> @ imm = #-0x2
10002b56: 9900         	ldr	r1, [sp]
10002b58: 9803         	ldr	r0, [sp, #0xc]
10002b5a: 1d00         	adds	r0, r0, #0x4
10002b5c: 6008         	str	r0, [r1]
10002b5e: e002         	b	0x10002b66 <<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next::h7b5b726cc78c6372+0x42> @ imm = #0x4
10002b60: 2000         	movs	r0, #0x0
10002b62: 9002         	str	r0, [sp, #0x8]
10002b64: e009         	b	0x10002b7a <<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next::h7b5b726cc78c6372+0x56> @ imm = #0x12
10002b66: 9803         	ldr	r0, [sp, #0xc]
10002b68: 9005         	str	r0, [sp, #0x14]
10002b6a: a805         	add	r0, sp, #0x14
10002b6c: 900c         	str	r0, [sp, #0x30]
10002b6e: 9803         	ldr	r0, [sp, #0xc]
10002b70: 9002         	str	r0, [sp, #0x8]
10002b72: e7ff         	b	0x10002b74 <<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next::h7b5b726cc78c6372+0x50> @ imm = #-0x2
10002b74: 9802         	ldr	r0, [sp, #0x8]
10002b76: b00d         	add	sp, #0x34
10002b78: bd80         	pop	{r7, pc}
10002b7a: e7fb         	b	0x10002b74 <<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next::h7b5b726cc78c6372+0x50> @ imm = #-0xa

10002b7c <<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each::hf0c7599b28330770>:
10002b7c: b580         	push	{r7, lr}
10002b7e: af00         	add	r7, sp, #0x0
10002b80: b086         	sub	sp, #0x18
10002b82: 9001         	str	r0, [sp, #0x4]
10002b84: 9102         	str	r1, [sp, #0x8]
10002b86: 9203         	str	r2, [sp, #0xc]
10002b88: e7ff         	b	0x10002b8a <<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each::hf0c7599b28330770+0xe> @ imm = #-0x2
10002b8a: a801         	add	r0, sp, #0x4
10002b8c: f7ff ffca    	bl	0x10002b24 <<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next::h7b5b726cc78c6372> @ imm = #-0x6c
10002b90: 9004         	str	r0, [sp, #0x10]
10002b92: 9804         	ldr	r0, [sp, #0x10]
10002b94: 2800         	cmp	r0, #0x0
10002b96: d006         	beq	0x10002ba6 <<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each::hf0c7599b28330770+0x2a> @ imm = #0xc
10002b98: e7ff         	b	0x10002b9a <<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each::hf0c7599b28330770+0x1e> @ imm = #-0x2
10002b9a: 9904         	ldr	r1, [sp, #0x10]
10002b9c: 9105         	str	r1, [sp, #0x14]
10002b9e: a803         	add	r0, sp, #0xc
10002ba0: f7fe ffa0    	bl	0x10001ae4 <rtic::export::compute_mask::{{closure}}::he7ac2e493e147712> @ imm = #-0x10c0
10002ba4: e7f1         	b	0x10002b8a <<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each::hf0c7599b28330770+0xe> @ imm = #-0x1e
10002ba6: b006         	add	sp, #0x18
10002ba8: bd80         	pop	{r7, pc}
10002baa: d4d4         	bmi	0x10002b56 <<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next::h7b5b726cc78c6372+0x32> @ imm = #-0x58

10002bac <<heapless::vec::Vec<T,_> as core::iter::traits::collect::IntoIterator>::into_iter::hbe9d32a2bf28c854>:
10002bac: b580         	push	{r7, lr}
10002bae: af00         	add	r7, sp, #0x0
10002bb0: b082         	sub	sp, #0x8
10002bb2: 9001         	str	r0, [sp, #0x4]
10002bb4: 4a04         	ldr	r2, [pc, #0x10]         @ 0x10002bc8 <<heapless::vec::Vec<T,_> as core::iter::traits::collect::IntoIterator>::into_iter::hbe9d32a2bf28c854+0x1c>
10002bb6: 9200         	str	r2, [sp]
10002bb8: f00a feec    	bl	0x1000d994 <__aeabi_memcpy4> @ imm = #0xadd8
10002bbc: 9a00         	ldr	r2, [sp]
10002bbe: 9901         	ldr	r1, [sp, #0x4]
10002bc0: 2000         	movs	r0, #0x0
10002bc2: 5088         	str	r0, [r1, r2]
10002bc4: b002         	add	sp, #0x8
10002bc6: bd80         	pop	{r7, pc}
10002bc8: 04 20 00 00  	.word	0x00002004

10002bcc <<heapless::vec::IntoIter<T,_> as core::iter::traits::iterator::Iterator>::next::h06b8b85865aa0b92>:
10002bcc: b5b0         	push	{r4, r5, r7, lr}
10002bce: af02         	add	r7, sp, #0x8
10002bd0: b08c         	sub	sp, #0x30
10002bd2: 9105         	str	r1, [sp, #0x14]
10002bd4: 4601         	mov	r1, r0
10002bd6: 9805         	ldr	r0, [sp, #0x14]
10002bd8: 9106         	str	r1, [sp, #0x18]
10002bda: 9008         	str	r0, [sp, #0x20]
10002bdc: 491c         	ldr	r1, [pc, #0x70]         @ 0x10002c50 <<heapless::vec::IntoIter<T,_> as core::iter::traits::iterator::Iterator>::next::h06b8b85865aa0b92+0x84>
10002bde: 5841         	ldr	r1, [r0, r1]
10002be0: 9107         	str	r1, [sp, #0x1c]
10002be2: f7ff fb97    	bl	0x10002314 <<heapless::vec::Vec<T,_> as core::ops::deref::Deref>::deref::h6943d2549037674e> @ imm = #-0x8d2
10002be6: 9807         	ldr	r0, [sp, #0x1c]
10002be8: 4288         	cmp	r0, r1
10002bea: d304         	blo	0x10002bf6 <<heapless::vec::IntoIter<T,_> as core::iter::traits::iterator::Iterator>::next::h06b8b85865aa0b92+0x2a> @ imm = #0x8
10002bec: e7ff         	b	0x10002bee <<heapless::vec::IntoIter<T,_> as core::iter::traits::iterator::Iterator>::next::h06b8b85865aa0b92+0x22> @ imm = #-0x2
10002bee: 9906         	ldr	r1, [sp, #0x18]
10002bf0: 2000         	movs	r0, #0x0
10002bf2: 6008         	str	r0, [r1]
10002bf4: e01a         	b	0x10002c2c <<heapless::vec::IntoIter<T,_> as core::iter::traits::iterator::Iterator>::next::h06b8b85865aa0b92+0x60> @ imm = #0x34
10002bf6: 9805         	ldr	r0, [sp, #0x14]
10002bf8: 4915         	ldr	r1, [pc, #0x54]         @ 0x10002c50 <<heapless::vec::IntoIter<T,_> as core::iter::traits::iterator::Iterator>::next::h06b8b85865aa0b92+0x84>
10002bfa: 9101         	str	r1, [sp, #0x4]
10002bfc: 5842         	ldr	r2, [r0, r1]
10002bfe: 2101         	movs	r1, #0x1
10002c00: 0289         	lsls	r1, r1, #0xa
10002c02: f7fe fce5    	bl	0x100015d0 <core::slice::<impl [T]>::get_unchecked_mut::h32db90cb63af3313> @ imm = #-0x1636
10002c06: 900b         	str	r0, [sp, #0x2c]
10002c08: f7fe fc3b    	bl	0x10001482 <core::ptr::const_ptr::<impl *const T>::read::h4552bbea9b066495> @ imm = #-0x178a
10002c0c: 4603         	mov	r3, r0
10002c0e: 9805         	ldr	r0, [sp, #0x14]
10002c10: 460a         	mov	r2, r1
10002c12: 9901         	ldr	r1, [sp, #0x4]
10002c14: 461c         	mov	r4, r3
10002c16: 9402         	str	r4, [sp, #0x8]
10002c18: 4614         	mov	r4, r2
10002c1a: 9403         	str	r4, [sp, #0xc]
10002c1c: 9309         	str	r3, [sp, #0x24]
10002c1e: 920a         	str	r2, [sp, #0x28]
10002c20: 5841         	ldr	r1, [r0, r1]
10002c22: 1c48         	adds	r0, r1, #0x1
10002c24: 9004         	str	r0, [sp, #0x10]
10002c26: 4288         	cmp	r0, r1
10002c28: d30e         	blo	0x10002c48 <<heapless::vec::IntoIter<T,_> as core::iter::traits::iterator::Iterator>::next::h06b8b85865aa0b92+0x7c> @ imm = #0x1c
10002c2a: e001         	b	0x10002c30 <<heapless::vec::IntoIter<T,_> as core::iter::traits::iterator::Iterator>::next::h06b8b85865aa0b92+0x64> @ imm = #0x2
10002c2c: b00c         	add	sp, #0x30
10002c2e: bdb0         	pop	{r4, r5, r7, pc}
10002c30: 9906         	ldr	r1, [sp, #0x18]
10002c32: 9803         	ldr	r0, [sp, #0xc]
10002c34: 9a02         	ldr	r2, [sp, #0x8]
10002c36: 9b04         	ldr	r3, [sp, #0x10]
10002c38: 9c05         	ldr	r4, [sp, #0x14]
10002c3a: 4d05         	ldr	r5, [pc, #0x14]         @ 0x10002c50 <<heapless::vec::IntoIter<T,_> as core::iter::traits::iterator::Iterator>::next::h06b8b85865aa0b92+0x84>
10002c3c: 5163         	str	r3, [r4, r5]
10002c3e: 604a         	str	r2, [r1, #0x4]
10002c40: 6088         	str	r0, [r1, #0x8]
10002c42: 2001         	movs	r0, #0x1
10002c44: 6008         	str	r0, [r1]
10002c46: e7f1         	b	0x10002c2c <<heapless::vec::IntoIter<T,_> as core::iter::traits::iterator::Iterator>::next::h06b8b85865aa0b92+0x60> @ imm = #-0x1e
10002c48: 4802         	ldr	r0, [pc, #0x8]          @ 0x10002c54 <<heapless::vec::IntoIter<T,_> as core::iter::traits::iterator::Iterator>::next::h06b8b85865aa0b92+0x88>
10002c4a: f00a fbf1    	bl	0x1000d430 <core::panicking::panic_const::panic_const_add_overflow::h73b6e802431fc142> @ imm = #0xa7e2
10002c4e: 46c0         	mov	r8, r8
10002c50: 04 20 00 00  	.word	0x00002004
10002c54: 48 0b 01 10  	.word	0x10010b48

10002c58 <symex_lib::grant_access::h008dbff15bc8e35d>:
10002c58: b5d0         	push	{r4, r6, r7, lr}
10002c5a: af02         	add	r7, sp, #0x8
10002c5c: 4e29         	ldr	r6, [pc, #0xa4]         @ 0x10002d04 <symex_lib::grant_access::h008dbff15bc8e35d+0xac>
10002c5e: 44b5         	add	sp, r6
10002c60: 4a2c         	ldr	r2, [pc, #0xb0]         @ 0x10002d14 <symex_lib::grant_access::h008dbff15bc8e35d+0xbc>
10002c62: 446a         	add	r2, sp, r2
10002c64: 9203         	str	r2, [sp, #0xc]
10002c66: 9105         	str	r1, [sp, #0x14]
10002c68: 4602         	mov	r2, r0
10002c6a: 9803         	ldr	r0, [sp, #0xc]
10002c6c: 9204         	str	r2, [sp, #0x10]
10002c6e: 60c2         	str	r2, [r0, #0xc]
10002c70: 6101         	str	r1, [r0, #0x10]
10002c72: a809         	add	r0, sp, #0x24
10002c74: 9006         	str	r0, [sp, #0x18]
10002c76: f7ff feef    	bl	0x10002a58 <heapless::vec::Vec<T,_>::new::hc803600c544224c3> @ imm = #-0x222
10002c7a: 9805         	ldr	r0, [sp, #0x14]
10002c7c: 9906         	ldr	r1, [sp, #0x18]
10002c7e: f7fe fa07    	bl	0x10001090 <<T as layout_trait::GetLayout>::get_layout::hd44a82498e86852e> @ imm = #-0x1bf2
10002c82: 9906         	ldr	r1, [sp, #0x18]
10002c84: 4822         	ldr	r0, [pc, #0x88]         @ 0x10002d10 <symex_lib::grant_access::h008dbff15bc8e35d+0xb8>
10002c86: 4468         	add	r0, sp, r0
10002c88: 9007         	str	r0, [sp, #0x1c]
10002c8a: 4a1b         	ldr	r2, [pc, #0x6c]         @ 0x10002cf8 <symex_lib::grant_access::h008dbff15bc8e35d+0xa0>
10002c8c: f00a fe82    	bl	0x1000d994 <__aeabi_memcpy4> @ imm = #0xad04
10002c90: 9907         	ldr	r1, [sp, #0x1c]
10002c92: 481e         	ldr	r0, [pc, #0x78]         @ 0x10002d0c <symex_lib::grant_access::h008dbff15bc8e35d+0xb4>
10002c94: 4468         	add	r0, sp, r0
10002c96: 9008         	str	r0, [sp, #0x20]
10002c98: f7ff ff88    	bl	0x10002bac <<heapless::vec::Vec<T,_> as core::iter::traits::collect::IntoIterator>::into_iter::hbe9d32a2bf28c854> @ imm = #-0xf0
10002c9c: 9908         	ldr	r1, [sp, #0x20]
10002c9e: 481a         	ldr	r0, [pc, #0x68]         @ 0x10002d08 <symex_lib::grant_access::h008dbff15bc8e35d+0xb0>
10002ca0: 4468         	add	r0, sp, r0
10002ca2: 4a16         	ldr	r2, [pc, #0x58]         @ 0x10002cfc <symex_lib::grant_access::h008dbff15bc8e35d+0xa4>
10002ca4: f00a fe76    	bl	0x1000d994 <__aeabi_memcpy4> @ imm = #0xacec
10002ca8: e7ff         	b	0x10002caa <symex_lib::grant_access::h008dbff15bc8e35d+0x52> @ imm = #-0x2
10002caa: 481a         	ldr	r0, [pc, #0x68]         @ 0x10002d14 <symex_lib::grant_access::h008dbff15bc8e35d+0xbc>
10002cac: 4468         	add	r0, sp, r0
10002cae: 4916         	ldr	r1, [pc, #0x58]         @ 0x10002d08 <symex_lib::grant_access::h008dbff15bc8e35d+0xb0>
10002cb0: 4469         	add	r1, sp, r1
10002cb2: f7ff ff8b    	bl	0x10002bcc <<heapless::vec::IntoIter<T,_> as core::iter::traits::iterator::Iterator>::next::h06b8b85865aa0b92> @ imm = #-0xea
10002cb6: 9803         	ldr	r0, [sp, #0xc]
10002cb8: 6800         	ldr	r0, [r0]
10002cba: 2800         	cmp	r0, #0x0
10002cbc: d108         	bne	0x10002cd0 <symex_lib::grant_access::h008dbff15bc8e35d+0x78> @ imm = #0x10
10002cbe: e7ff         	b	0x10002cc0 <symex_lib::grant_access::h008dbff15bc8e35d+0x68> @ imm = #-0x2
10002cc0: 4811         	ldr	r0, [pc, #0x44]         @ 0x10002d08 <symex_lib::grant_access::h008dbff15bc8e35d+0xb0>
10002cc2: 4468         	add	r0, sp, r0
10002cc4: f7fe fbc0    	bl	0x10001448 <core::ptr::drop_in_place<heapless::vec::IntoIter<layout_trait::Layout,1024_usize>>::h2fd5c7dcb6dad8b8> @ imm = #-0x1880
10002cc8: 1ffe         	subs	r6, r7, #0x7
10002cca: 3e01         	subs	r6, #0x1
10002ccc: 46b5         	mov	sp, r6
10002cce: bdd0         	pop	{r4, r6, r7, pc}
10002cd0: 9a03         	ldr	r2, [sp, #0xc]
10002cd2: 6851         	ldr	r1, [r2, #0x4]
10002cd4: 9101         	str	r1, [sp, #0x4]
10002cd6: 6151         	str	r1, [r2, #0x14]
10002cd8: 6890         	ldr	r0, [r2, #0x8]
10002cda: 6190         	str	r0, [r2, #0x18]
10002cdc: 1808         	adds	r0, r1, r0
10002cde: 9002         	str	r0, [sp, #0x8]
10002ce0: 4288         	cmp	r0, r1
10002ce2: d306         	blo	0x10002cf2 <symex_lib::grant_access::h008dbff15bc8e35d+0x9a> @ imm = #0xc
10002ce4: e7ff         	b	0x10002ce6 <symex_lib::grant_access::h008dbff15bc8e35d+0x8e> @ imm = #-0x2
10002ce6: 9a02         	ldr	r2, [sp, #0x8]
10002ce8: 9901         	ldr	r1, [sp, #0x4]
10002cea: 9804         	ldr	r0, [sp, #0x10]
10002cec: f003 f8fa    	bl	0x10005ee4 <__symex_allow_access> @ imm = #0x31f4
10002cf0: e7db         	b	0x10002caa <symex_lib::grant_access::h008dbff15bc8e35d+0x52> @ imm = #-0x4a
10002cf2: 4803         	ldr	r0, [pc, #0xc]          @ 0x10002d00 <symex_lib::grant_access::h008dbff15bc8e35d+0xa8>
10002cf4: f00a fb9c    	bl	0x1000d430 <core::panicking::panic_const::panic_const_add_overflow::h73b6e802431fc142> @ imm = #0xa738
10002cf8: 04 20 00 00  	.word	0x00002004
10002cfc: 08 20 00 00  	.word	0x00002008
10002d00: b4 0b 01 10  	.word	0x10010bb4
10002d04: a8 7f ff ff  	.word	0xffff7fa8
10002d08: 34 60 00 00  	.word	0x00006034
10002d0c: 28 20 00 00  	.word	0x00002028
10002d10: 30 40 00 00  	.word	0x00004030
10002d14: 3c 80 00 00  	.word	0x0000803c

10002d18 <symex_lib::grant_access::h012bf463892480b0>:
10002d18: b5d0         	push	{r4, r6, r7, lr}
10002d1a: af02         	add	r7, sp, #0x8
10002d1c: 4e29         	ldr	r6, [pc, #0xa4]         @ 0x10002dc4 <symex_lib::grant_access::h012bf463892480b0+0xac>
10002d1e: 44b5         	add	sp, r6
10002d20: 4a2c         	ldr	r2, [pc, #0xb0]         @ 0x10002dd4 <symex_lib::grant_access::h012bf463892480b0+0xbc>
10002d22: 446a         	add	r2, sp, r2
10002d24: 9203         	str	r2, [sp, #0xc]
10002d26: 9105         	str	r1, [sp, #0x14]
10002d28: 4602         	mov	r2, r0
10002d2a: 9803         	ldr	r0, [sp, #0xc]
10002d2c: 9204         	str	r2, [sp, #0x10]
10002d2e: 60c2         	str	r2, [r0, #0xc]
10002d30: 6101         	str	r1, [r0, #0x10]
10002d32: a809         	add	r0, sp, #0x24
10002d34: 9006         	str	r0, [sp, #0x18]
10002d36: f7ff fe8f    	bl	0x10002a58 <heapless::vec::Vec<T,_>::new::hc803600c544224c3> @ imm = #-0x2e2
10002d3a: 9805         	ldr	r0, [sp, #0x14]
10002d3c: 9906         	ldr	r1, [sp, #0x18]
10002d3e: f7fe f97d    	bl	0x1000103c <<T as layout_trait::GetLayout>::get_layout::had50d17bd079242a> @ imm = #-0x1d06
10002d42: 9906         	ldr	r1, [sp, #0x18]
10002d44: 4822         	ldr	r0, [pc, #0x88]         @ 0x10002dd0 <symex_lib::grant_access::h012bf463892480b0+0xb8>
10002d46: 4468         	add	r0, sp, r0
10002d48: 9007         	str	r0, [sp, #0x1c]
10002d4a: 4a1b         	ldr	r2, [pc, #0x6c]         @ 0x10002db8 <symex_lib::grant_access::h012bf463892480b0+0xa0>
10002d4c: f00a fe22    	bl	0x1000d994 <__aeabi_memcpy4> @ imm = #0xac44
10002d50: 9907         	ldr	r1, [sp, #0x1c]
10002d52: 481e         	ldr	r0, [pc, #0x78]         @ 0x10002dcc <symex_lib::grant_access::h012bf463892480b0+0xb4>
10002d54: 4468         	add	r0, sp, r0
10002d56: 9008         	str	r0, [sp, #0x20]
10002d58: f7ff ff28    	bl	0x10002bac <<heapless::vec::Vec<T,_> as core::iter::traits::collect::IntoIterator>::into_iter::hbe9d32a2bf28c854> @ imm = #-0x1b0
10002d5c: 9908         	ldr	r1, [sp, #0x20]
10002d5e: 481a         	ldr	r0, [pc, #0x68]         @ 0x10002dc8 <symex_lib::grant_access::h012bf463892480b0+0xb0>
10002d60: 4468         	add	r0, sp, r0
10002d62: 4a16         	ldr	r2, [pc, #0x58]         @ 0x10002dbc <symex_lib::grant_access::h012bf463892480b0+0xa4>
10002d64: f00a fe16    	bl	0x1000d994 <__aeabi_memcpy4> @ imm = #0xac2c
10002d68: e7ff         	b	0x10002d6a <symex_lib::grant_access::h012bf463892480b0+0x52> @ imm = #-0x2
10002d6a: 481a         	ldr	r0, [pc, #0x68]         @ 0x10002dd4 <symex_lib::grant_access::h012bf463892480b0+0xbc>
10002d6c: 4468         	add	r0, sp, r0
10002d6e: 4916         	ldr	r1, [pc, #0x58]         @ 0x10002dc8 <symex_lib::grant_access::h012bf463892480b0+0xb0>
10002d70: 4469         	add	r1, sp, r1
10002d72: f7ff ff2b    	bl	0x10002bcc <<heapless::vec::IntoIter<T,_> as core::iter::traits::iterator::Iterator>::next::h06b8b85865aa0b92> @ imm = #-0x1aa
10002d76: 9803         	ldr	r0, [sp, #0xc]
10002d78: 6800         	ldr	r0, [r0]
10002d7a: 2800         	cmp	r0, #0x0
10002d7c: d108         	bne	0x10002d90 <symex_lib::grant_access::h012bf463892480b0+0x78> @ imm = #0x10
10002d7e: e7ff         	b	0x10002d80 <symex_lib::grant_access::h012bf463892480b0+0x68> @ imm = #-0x2
10002d80: 4811         	ldr	r0, [pc, #0x44]         @ 0x10002dc8 <symex_lib::grant_access::h012bf463892480b0+0xb0>
10002d82: 4468         	add	r0, sp, r0
10002d84: f7fe fb60    	bl	0x10001448 <core::ptr::drop_in_place<heapless::vec::IntoIter<layout_trait::Layout,1024_usize>>::h2fd5c7dcb6dad8b8> @ imm = #-0x1940
10002d88: 1ffe         	subs	r6, r7, #0x7
10002d8a: 3e01         	subs	r6, #0x1
10002d8c: 46b5         	mov	sp, r6
10002d8e: bdd0         	pop	{r4, r6, r7, pc}
10002d90: 9a03         	ldr	r2, [sp, #0xc]
10002d92: 6851         	ldr	r1, [r2, #0x4]
10002d94: 9101         	str	r1, [sp, #0x4]
10002d96: 6151         	str	r1, [r2, #0x14]
10002d98: 6890         	ldr	r0, [r2, #0x8]
10002d9a: 6190         	str	r0, [r2, #0x18]
10002d9c: 1808         	adds	r0, r1, r0
10002d9e: 9002         	str	r0, [sp, #0x8]
10002da0: 4288         	cmp	r0, r1
10002da2: d306         	blo	0x10002db2 <symex_lib::grant_access::h012bf463892480b0+0x9a> @ imm = #0xc
10002da4: e7ff         	b	0x10002da6 <symex_lib::grant_access::h012bf463892480b0+0x8e> @ imm = #-0x2
10002da6: 9a02         	ldr	r2, [sp, #0x8]
10002da8: 9901         	ldr	r1, [sp, #0x4]
10002daa: 9804         	ldr	r0, [sp, #0x10]
10002dac: f003 f89a    	bl	0x10005ee4 <__symex_allow_access> @ imm = #0x3134
10002db0: e7db         	b	0x10002d6a <symex_lib::grant_access::h012bf463892480b0+0x52> @ imm = #-0x4a
10002db2: 4803         	ldr	r0, [pc, #0xc]          @ 0x10002dc0 <symex_lib::grant_access::h012bf463892480b0+0xa8>
10002db4: f00a fb3c    	bl	0x1000d430 <core::panicking::panic_const::panic_const_add_overflow::h73b6e802431fc142> @ imm = #0xa678
10002db8: 04 20 00 00  	.word	0x00002004
10002dbc: 08 20 00 00  	.word	0x00002008
10002dc0: b4 0b 01 10  	.word	0x10010bb4
10002dc4: a8 7f ff ff  	.word	0xffff7fa8
10002dc8: 34 60 00 00  	.word	0x00006034
10002dcc: 28 20 00 00  	.word	0x00002028
10002dd0: 30 40 00 00  	.word	0x00004030
10002dd4: 3c 80 00 00  	.word	0x0000803c

10002dd8 <symex_lib::grant_access::h30329ce8e3c8dac9>:
10002dd8: b5d0         	push	{r4, r6, r7, lr}
10002dda: af02         	add	r7, sp, #0x8
10002ddc: 4e29         	ldr	r6, [pc, #0xa4]         @ 0x10002e84 <symex_lib::grant_access::h30329ce8e3c8dac9+0xac>
10002dde: 44b5         	add	sp, r6
10002de0: 4a2c         	ldr	r2, [pc, #0xb0]         @ 0x10002e94 <symex_lib::grant_access::h30329ce8e3c8dac9+0xbc>
10002de2: 446a         	add	r2, sp, r2
10002de4: 9203         	str	r2, [sp, #0xc]
10002de6: 9105         	str	r1, [sp, #0x14]
10002de8: 4602         	mov	r2, r0
10002dea: 9803         	ldr	r0, [sp, #0xc]
10002dec: 9204         	str	r2, [sp, #0x10]
10002dee: 60c2         	str	r2, [r0, #0xc]
10002df0: 6101         	str	r1, [r0, #0x10]
10002df2: a809         	add	r0, sp, #0x24
10002df4: 9006         	str	r0, [sp, #0x18]
10002df6: f7ff fe2f    	bl	0x10002a58 <heapless::vec::Vec<T,_>::new::hc803600c544224c3> @ imm = #-0x3a2
10002dfa: 9805         	ldr	r0, [sp, #0x14]
10002dfc: 9906         	ldr	r1, [sp, #0x18]
10002dfe: f7fe f875    	bl	0x10000eec <<T as layout_trait::GetLayout>::get_layout::h30876be8ccb0ab03> @ imm = #-0x1f16
10002e02: 9906         	ldr	r1, [sp, #0x18]
10002e04: 4822         	ldr	r0, [pc, #0x88]         @ 0x10002e90 <symex_lib::grant_access::h30329ce8e3c8dac9+0xb8>
10002e06: 4468         	add	r0, sp, r0
10002e08: 9007         	str	r0, [sp, #0x1c]
10002e0a: 4a1b         	ldr	r2, [pc, #0x6c]         @ 0x10002e78 <symex_lib::grant_access::h30329ce8e3c8dac9+0xa0>
10002e0c: f00a fdc2    	bl	0x1000d994 <__aeabi_memcpy4> @ imm = #0xab84
10002e10: 9907         	ldr	r1, [sp, #0x1c]
10002e12: 481e         	ldr	r0, [pc, #0x78]         @ 0x10002e8c <symex_lib::grant_access::h30329ce8e3c8dac9+0xb4>
10002e14: 4468         	add	r0, sp, r0
10002e16: 9008         	str	r0, [sp, #0x20]
10002e18: f7ff fec8    	bl	0x10002bac <<heapless::vec::Vec<T,_> as core::iter::traits::collect::IntoIterator>::into_iter::hbe9d32a2bf28c854> @ imm = #-0x270
10002e1c: 9908         	ldr	r1, [sp, #0x20]
10002e1e: 481a         	ldr	r0, [pc, #0x68]         @ 0x10002e88 <symex_lib::grant_access::h30329ce8e3c8dac9+0xb0>
10002e20: 4468         	add	r0, sp, r0
10002e22: 4a16         	ldr	r2, [pc, #0x58]         @ 0x10002e7c <symex_lib::grant_access::h30329ce8e3c8dac9+0xa4>
10002e24: f00a fdb6    	bl	0x1000d994 <__aeabi_memcpy4> @ imm = #0xab6c
10002e28: e7ff         	b	0x10002e2a <symex_lib::grant_access::h30329ce8e3c8dac9+0x52> @ imm = #-0x2
10002e2a: 481a         	ldr	r0, [pc, #0x68]         @ 0x10002e94 <symex_lib::grant_access::h30329ce8e3c8dac9+0xbc>
10002e2c: 4468         	add	r0, sp, r0
10002e2e: 4916         	ldr	r1, [pc, #0x58]         @ 0x10002e88 <symex_lib::grant_access::h30329ce8e3c8dac9+0xb0>
10002e30: 4469         	add	r1, sp, r1
10002e32: f7ff fecb    	bl	0x10002bcc <<heapless::vec::IntoIter<T,_> as core::iter::traits::iterator::Iterator>::next::h06b8b85865aa0b92> @ imm = #-0x26a
10002e36: 9803         	ldr	r0, [sp, #0xc]
10002e38: 6800         	ldr	r0, [r0]
10002e3a: 2800         	cmp	r0, #0x0
10002e3c: d108         	bne	0x10002e50 <symex_lib::grant_access::h30329ce8e3c8dac9+0x78> @ imm = #0x10
10002e3e: e7ff         	b	0x10002e40 <symex_lib::grant_access::h30329ce8e3c8dac9+0x68> @ imm = #-0x2
10002e40: 4811         	ldr	r0, [pc, #0x44]         @ 0x10002e88 <symex_lib::grant_access::h30329ce8e3c8dac9+0xb0>
10002e42: 4468         	add	r0, sp, r0
10002e44: f7fe fb00    	bl	0x10001448 <core::ptr::drop_in_place<heapless::vec::IntoIter<layout_trait::Layout,1024_usize>>::h2fd5c7dcb6dad8b8> @ imm = #-0x1a00
10002e48: 1ffe         	subs	r6, r7, #0x7
10002e4a: 3e01         	subs	r6, #0x1
10002e4c: 46b5         	mov	sp, r6
10002e4e: bdd0         	pop	{r4, r6, r7, pc}
10002e50: 9a03         	ldr	r2, [sp, #0xc]
10002e52: 6851         	ldr	r1, [r2, #0x4]
10002e54: 9101         	str	r1, [sp, #0x4]
10002e56: 6151         	str	r1, [r2, #0x14]
10002e58: 6890         	ldr	r0, [r2, #0x8]
10002e5a: 6190         	str	r0, [r2, #0x18]
10002e5c: 1808         	adds	r0, r1, r0
10002e5e: 9002         	str	r0, [sp, #0x8]
10002e60: 4288         	cmp	r0, r1
10002e62: d306         	blo	0x10002e72 <symex_lib::grant_access::h30329ce8e3c8dac9+0x9a> @ imm = #0xc
10002e64: e7ff         	b	0x10002e66 <symex_lib::grant_access::h30329ce8e3c8dac9+0x8e> @ imm = #-0x2
10002e66: 9a02         	ldr	r2, [sp, #0x8]
10002e68: 9901         	ldr	r1, [sp, #0x4]
10002e6a: 9804         	ldr	r0, [sp, #0x10]
10002e6c: f003 f83a    	bl	0x10005ee4 <__symex_allow_access> @ imm = #0x3074
10002e70: e7db         	b	0x10002e2a <symex_lib::grant_access::h30329ce8e3c8dac9+0x52> @ imm = #-0x4a
10002e72: 4803         	ldr	r0, [pc, #0xc]          @ 0x10002e80 <symex_lib::grant_access::h30329ce8e3c8dac9+0xa8>
10002e74: f00a fadc    	bl	0x1000d430 <core::panicking::panic_const::panic_const_add_overflow::h73b6e802431fc142> @ imm = #0xa5b8
10002e78: 04 20 00 00  	.word	0x00002004
10002e7c: 08 20 00 00  	.word	0x00002008
10002e80: b4 0b 01 10  	.word	0x10010bb4
10002e84: a8 7f ff ff  	.word	0xffff7fa8
10002e88: 34 60 00 00  	.word	0x00006034
10002e8c: 28 20 00 00  	.word	0x00002028
10002e90: 30 40 00 00  	.word	0x00004030
10002e94: 3c 80 00 00  	.word	0x0000803c

10002e98 <symex_lib::grant_access::h5db3418f942a639b>:
10002e98: b5d0         	push	{r4, r6, r7, lr}
10002e9a: af02         	add	r7, sp, #0x8
10002e9c: 4e29         	ldr	r6, [pc, #0xa4]         @ 0x10002f44 <symex_lib::grant_access::h5db3418f942a639b+0xac>
10002e9e: 44b5         	add	sp, r6
10002ea0: 4a2c         	ldr	r2, [pc, #0xb0]         @ 0x10002f54 <symex_lib::grant_access::h5db3418f942a639b+0xbc>
10002ea2: 446a         	add	r2, sp, r2
10002ea4: 9203         	str	r2, [sp, #0xc]
10002ea6: 9105         	str	r1, [sp, #0x14]
10002ea8: 4602         	mov	r2, r0
10002eaa: 9803         	ldr	r0, [sp, #0xc]
10002eac: 9204         	str	r2, [sp, #0x10]
10002eae: 60c2         	str	r2, [r0, #0xc]
10002eb0: 6101         	str	r1, [r0, #0x10]
10002eb2: a809         	add	r0, sp, #0x24
10002eb4: 9006         	str	r0, [sp, #0x18]
10002eb6: f7ff fdcf    	bl	0x10002a58 <heapless::vec::Vec<T,_>::new::hc803600c544224c3> @ imm = #-0x462
10002eba: 9805         	ldr	r0, [sp, #0x14]
10002ebc: 9906         	ldr	r1, [sp, #0x18]
10002ebe: f7fe f893    	bl	0x10000fe8 <<T as layout_trait::GetLayout>::get_layout::ha50e1ca383e9570e> @ imm = #-0x1eda
10002ec2: 9906         	ldr	r1, [sp, #0x18]
10002ec4: 4822         	ldr	r0, [pc, #0x88]         @ 0x10002f50 <symex_lib::grant_access::h5db3418f942a639b+0xb8>
10002ec6: 4468         	add	r0, sp, r0
10002ec8: 9007         	str	r0, [sp, #0x1c]
10002eca: 4a1b         	ldr	r2, [pc, #0x6c]         @ 0x10002f38 <symex_lib::grant_access::h5db3418f942a639b+0xa0>
10002ecc: f00a fd62    	bl	0x1000d994 <__aeabi_memcpy4> @ imm = #0xaac4
10002ed0: 9907         	ldr	r1, [sp, #0x1c]
10002ed2: 481e         	ldr	r0, [pc, #0x78]         @ 0x10002f4c <symex_lib::grant_access::h5db3418f942a639b+0xb4>
10002ed4: 4468         	add	r0, sp, r0
10002ed6: 9008         	str	r0, [sp, #0x20]
10002ed8: f7ff fe68    	bl	0x10002bac <<heapless::vec::Vec<T,_> as core::iter::traits::collect::IntoIterator>::into_iter::hbe9d32a2bf28c854> @ imm = #-0x330
10002edc: 9908         	ldr	r1, [sp, #0x20]
10002ede: 481a         	ldr	r0, [pc, #0x68]         @ 0x10002f48 <symex_lib::grant_access::h5db3418f942a639b+0xb0>
10002ee0: 4468         	add	r0, sp, r0
10002ee2: 4a16         	ldr	r2, [pc, #0x58]         @ 0x10002f3c <symex_lib::grant_access::h5db3418f942a639b+0xa4>
10002ee4: f00a fd56    	bl	0x1000d994 <__aeabi_memcpy4> @ imm = #0xaaac
10002ee8: e7ff         	b	0x10002eea <symex_lib::grant_access::h5db3418f942a639b+0x52> @ imm = #-0x2
10002eea: 481a         	ldr	r0, [pc, #0x68]         @ 0x10002f54 <symex_lib::grant_access::h5db3418f942a639b+0xbc>
10002eec: 4468         	add	r0, sp, r0
10002eee: 4916         	ldr	r1, [pc, #0x58]         @ 0x10002f48 <symex_lib::grant_access::h5db3418f942a639b+0xb0>
10002ef0: 4469         	add	r1, sp, r1
10002ef2: f7ff fe6b    	bl	0x10002bcc <<heapless::vec::IntoIter<T,_> as core::iter::traits::iterator::Iterator>::next::h06b8b85865aa0b92> @ imm = #-0x32a
10002ef6: 9803         	ldr	r0, [sp, #0xc]
10002ef8: 6800         	ldr	r0, [r0]
10002efa: 2800         	cmp	r0, #0x0
10002efc: d108         	bne	0x10002f10 <symex_lib::grant_access::h5db3418f942a639b+0x78> @ imm = #0x10
10002efe: e7ff         	b	0x10002f00 <symex_lib::grant_access::h5db3418f942a639b+0x68> @ imm = #-0x2
10002f00: 4811         	ldr	r0, [pc, #0x44]         @ 0x10002f48 <symex_lib::grant_access::h5db3418f942a639b+0xb0>
10002f02: 4468         	add	r0, sp, r0
10002f04: f7fe faa0    	bl	0x10001448 <core::ptr::drop_in_place<heapless::vec::IntoIter<layout_trait::Layout,1024_usize>>::h2fd5c7dcb6dad8b8> @ imm = #-0x1ac0
10002f08: 1ffe         	subs	r6, r7, #0x7
10002f0a: 3e01         	subs	r6, #0x1
10002f0c: 46b5         	mov	sp, r6
10002f0e: bdd0         	pop	{r4, r6, r7, pc}
10002f10: 9a03         	ldr	r2, [sp, #0xc]
10002f12: 6851         	ldr	r1, [r2, #0x4]
10002f14: 9101         	str	r1, [sp, #0x4]
10002f16: 6151         	str	r1, [r2, #0x14]
10002f18: 6890         	ldr	r0, [r2, #0x8]
10002f1a: 6190         	str	r0, [r2, #0x18]
10002f1c: 1808         	adds	r0, r1, r0
10002f1e: 9002         	str	r0, [sp, #0x8]
10002f20: 4288         	cmp	r0, r1
10002f22: d306         	blo	0x10002f32 <symex_lib::grant_access::h5db3418f942a639b+0x9a> @ imm = #0xc
10002f24: e7ff         	b	0x10002f26 <symex_lib::grant_access::h5db3418f942a639b+0x8e> @ imm = #-0x2
10002f26: 9a02         	ldr	r2, [sp, #0x8]
10002f28: 9901         	ldr	r1, [sp, #0x4]
10002f2a: 9804         	ldr	r0, [sp, #0x10]
10002f2c: f002 ffda    	bl	0x10005ee4 <__symex_allow_access> @ imm = #0x2fb4
10002f30: e7db         	b	0x10002eea <symex_lib::grant_access::h5db3418f942a639b+0x52> @ imm = #-0x4a
10002f32: 4803         	ldr	r0, [pc, #0xc]          @ 0x10002f40 <symex_lib::grant_access::h5db3418f942a639b+0xa8>
10002f34: f00a fa7c    	bl	0x1000d430 <core::panicking::panic_const::panic_const_add_overflow::h73b6e802431fc142> @ imm = #0xa4f8
10002f38: 04 20 00 00  	.word	0x00002004
10002f3c: 08 20 00 00  	.word	0x00002008
10002f40: b4 0b 01 10  	.word	0x10010bb4
10002f44: a8 7f ff ff  	.word	0xffff7fa8
10002f48: 34 60 00 00  	.word	0x00006034
10002f4c: 28 20 00 00  	.word	0x00002028
10002f50: 30 40 00 00  	.word	0x00004030
10002f54: 3c 80 00 00  	.word	0x0000803c

10002f58 <symex_lib::grant_access::h73f67e540c78f8fb>:
10002f58: b5d0         	push	{r4, r6, r7, lr}
10002f5a: af02         	add	r7, sp, #0x8
10002f5c: 4e29         	ldr	r6, [pc, #0xa4]         @ 0x10003004 <symex_lib::grant_access::h73f67e540c78f8fb+0xac>
10002f5e: 44b5         	add	sp, r6
10002f60: 4a2c         	ldr	r2, [pc, #0xb0]         @ 0x10003014 <symex_lib::grant_access::h73f67e540c78f8fb+0xbc>
10002f62: 446a         	add	r2, sp, r2
10002f64: 9203         	str	r2, [sp, #0xc]
10002f66: 9105         	str	r1, [sp, #0x14]
10002f68: 4602         	mov	r2, r0
10002f6a: 9803         	ldr	r0, [sp, #0xc]
10002f6c: 9204         	str	r2, [sp, #0x10]
10002f6e: 60c2         	str	r2, [r0, #0xc]
10002f70: 6101         	str	r1, [r0, #0x10]
10002f72: a809         	add	r0, sp, #0x24
10002f74: 9006         	str	r0, [sp, #0x18]
10002f76: f7ff fd6f    	bl	0x10002a58 <heapless::vec::Vec<T,_>::new::hc803600c544224c3> @ imm = #-0x522
10002f7a: 9805         	ldr	r0, [sp, #0x14]
10002f7c: 9906         	ldr	r1, [sp, #0x18]
10002f7e: f000 fbbb    	bl	0x100036f8 <<simple_rtic::MockLed<_> as layout_trait::GetLayout>::get_layout::hce2c7b7ff442d2be> @ imm = #0x776
10002f82: 9906         	ldr	r1, [sp, #0x18]
10002f84: 4822         	ldr	r0, [pc, #0x88]         @ 0x10003010 <symex_lib::grant_access::h73f67e540c78f8fb+0xb8>
10002f86: 4468         	add	r0, sp, r0
10002f88: 9007         	str	r0, [sp, #0x1c]
10002f8a: 4a1b         	ldr	r2, [pc, #0x6c]         @ 0x10002ff8 <symex_lib::grant_access::h73f67e540c78f8fb+0xa0>
10002f8c: f00a fd02    	bl	0x1000d994 <__aeabi_memcpy4> @ imm = #0xaa04
10002f90: 9907         	ldr	r1, [sp, #0x1c]
10002f92: 481e         	ldr	r0, [pc, #0x78]         @ 0x1000300c <symex_lib::grant_access::h73f67e540c78f8fb+0xb4>
10002f94: 4468         	add	r0, sp, r0
10002f96: 9008         	str	r0, [sp, #0x20]
10002f98: f7ff fe08    	bl	0x10002bac <<heapless::vec::Vec<T,_> as core::iter::traits::collect::IntoIterator>::into_iter::hbe9d32a2bf28c854> @ imm = #-0x3f0
10002f9c: 9908         	ldr	r1, [sp, #0x20]
10002f9e: 481a         	ldr	r0, [pc, #0x68]         @ 0x10003008 <symex_lib::grant_access::h73f67e540c78f8fb+0xb0>
10002fa0: 4468         	add	r0, sp, r0
10002fa2: 4a16         	ldr	r2, [pc, #0x58]         @ 0x10002ffc <symex_lib::grant_access::h73f67e540c78f8fb+0xa4>
10002fa4: f00a fcf6    	bl	0x1000d994 <__aeabi_memcpy4> @ imm = #0xa9ec
10002fa8: e7ff         	b	0x10002faa <symex_lib::grant_access::h73f67e540c78f8fb+0x52> @ imm = #-0x2
10002faa: 481a         	ldr	r0, [pc, #0x68]         @ 0x10003014 <symex_lib::grant_access::h73f67e540c78f8fb+0xbc>
10002fac: 4468         	add	r0, sp, r0
10002fae: 4916         	ldr	r1, [pc, #0x58]         @ 0x10003008 <symex_lib::grant_access::h73f67e540c78f8fb+0xb0>
10002fb0: 4469         	add	r1, sp, r1
10002fb2: f7ff fe0b    	bl	0x10002bcc <<heapless::vec::IntoIter<T,_> as core::iter::traits::iterator::Iterator>::next::h06b8b85865aa0b92> @ imm = #-0x3ea
10002fb6: 9803         	ldr	r0, [sp, #0xc]
10002fb8: 6800         	ldr	r0, [r0]
10002fba: 2800         	cmp	r0, #0x0
10002fbc: d108         	bne	0x10002fd0 <symex_lib::grant_access::h73f67e540c78f8fb+0x78> @ imm = #0x10
10002fbe: e7ff         	b	0x10002fc0 <symex_lib::grant_access::h73f67e540c78f8fb+0x68> @ imm = #-0x2
10002fc0: 4811         	ldr	r0, [pc, #0x44]         @ 0x10003008 <symex_lib::grant_access::h73f67e540c78f8fb+0xb0>
10002fc2: 4468         	add	r0, sp, r0
10002fc4: f7fe fa40    	bl	0x10001448 <core::ptr::drop_in_place<heapless::vec::IntoIter<layout_trait::Layout,1024_usize>>::h2fd5c7dcb6dad8b8> @ imm = #-0x1b80
10002fc8: 1ffe         	subs	r6, r7, #0x7
10002fca: 3e01         	subs	r6, #0x1
10002fcc: 46b5         	mov	sp, r6
10002fce: bdd0         	pop	{r4, r6, r7, pc}
10002fd0: 9a03         	ldr	r2, [sp, #0xc]
10002fd2: 6851         	ldr	r1, [r2, #0x4]
10002fd4: 9101         	str	r1, [sp, #0x4]
10002fd6: 6151         	str	r1, [r2, #0x14]
10002fd8: 6890         	ldr	r0, [r2, #0x8]
10002fda: 6190         	str	r0, [r2, #0x18]
10002fdc: 1808         	adds	r0, r1, r0
10002fde: 9002         	str	r0, [sp, #0x8]
10002fe0: 4288         	cmp	r0, r1
10002fe2: d306         	blo	0x10002ff2 <symex_lib::grant_access::h73f67e540c78f8fb+0x9a> @ imm = #0xc
10002fe4: e7ff         	b	0x10002fe6 <symex_lib::grant_access::h73f67e540c78f8fb+0x8e> @ imm = #-0x2
10002fe6: 9a02         	ldr	r2, [sp, #0x8]
10002fe8: 9901         	ldr	r1, [sp, #0x4]
10002fea: 9804         	ldr	r0, [sp, #0x10]
10002fec: f002 ff7a    	bl	0x10005ee4 <__symex_allow_access> @ imm = #0x2ef4
10002ff0: e7db         	b	0x10002faa <symex_lib::grant_access::h73f67e540c78f8fb+0x52> @ imm = #-0x4a
10002ff2: 4803         	ldr	r0, [pc, #0xc]          @ 0x10003000 <symex_lib::grant_access::h73f67e540c78f8fb+0xa8>
10002ff4: f00a fa1c    	bl	0x1000d430 <core::panicking::panic_const::panic_const_add_overflow::h73b6e802431fc142> @ imm = #0xa438
10002ff8: 04 20 00 00  	.word	0x00002004
10002ffc: 08 20 00 00  	.word	0x00002008
10003000: b4 0b 01 10  	.word	0x10010bb4
10003004: a8 7f ff ff  	.word	0xffff7fa8
10003008: 34 60 00 00  	.word	0x00006034
1000300c: 28 20 00 00  	.word	0x00002028
10003010: 30 40 00 00  	.word	0x00004030
10003014: 3c 80 00 00  	.word	0x0000803c

10003018 <symex_lib::grant_access::h801bfedcd992b9cb>:
10003018: b5d0         	push	{r4, r6, r7, lr}
1000301a: af02         	add	r7, sp, #0x8
1000301c: 4e29         	ldr	r6, [pc, #0xa4]         @ 0x100030c4 <symex_lib::grant_access::h801bfedcd992b9cb+0xac>
1000301e: 44b5         	add	sp, r6
10003020: 4a2c         	ldr	r2, [pc, #0xb0]         @ 0x100030d4 <symex_lib::grant_access::h801bfedcd992b9cb+0xbc>
10003022: 446a         	add	r2, sp, r2
10003024: 9203         	str	r2, [sp, #0xc]
10003026: 9105         	str	r1, [sp, #0x14]
10003028: 4602         	mov	r2, r0
1000302a: 9803         	ldr	r0, [sp, #0xc]
1000302c: 9204         	str	r2, [sp, #0x10]
1000302e: 60c2         	str	r2, [r0, #0xc]
10003030: 6101         	str	r1, [r0, #0x10]
10003032: a809         	add	r0, sp, #0x24
10003034: 9006         	str	r0, [sp, #0x18]
10003036: f7ff fd0f    	bl	0x10002a58 <heapless::vec::Vec<T,_>::new::hc803600c544224c3> @ imm = #-0x5e2
1000303a: 9805         	ldr	r0, [sp, #0x14]
1000303c: 9906         	ldr	r1, [sp, #0x18]
1000303e: f7fd ff2b    	bl	0x10000e98 <<T as layout_trait::GetLayout>::get_layout::h17a528a37aac9b42> @ imm = #-0x21aa
10003042: 9906         	ldr	r1, [sp, #0x18]
10003044: 4822         	ldr	r0, [pc, #0x88]         @ 0x100030d0 <symex_lib::grant_access::h801bfedcd992b9cb+0xb8>
10003046: 4468         	add	r0, sp, r0
10003048: 9007         	str	r0, [sp, #0x1c]
1000304a: 4a1b         	ldr	r2, [pc, #0x6c]         @ 0x100030b8 <symex_lib::grant_access::h801bfedcd992b9cb+0xa0>
1000304c: f00a fca2    	bl	0x1000d994 <__aeabi_memcpy4> @ imm = #0xa944
10003050: 9907         	ldr	r1, [sp, #0x1c]
10003052: 481e         	ldr	r0, [pc, #0x78]         @ 0x100030cc <symex_lib::grant_access::h801bfedcd992b9cb+0xb4>
10003054: 4468         	add	r0, sp, r0
10003056: 9008         	str	r0, [sp, #0x20]
10003058: f7ff fda8    	bl	0x10002bac <<heapless::vec::Vec<T,_> as core::iter::traits::collect::IntoIterator>::into_iter::hbe9d32a2bf28c854> @ imm = #-0x4b0
1000305c: 9908         	ldr	r1, [sp, #0x20]
1000305e: 481a         	ldr	r0, [pc, #0x68]         @ 0x100030c8 <symex_lib::grant_access::h801bfedcd992b9cb+0xb0>
10003060: 4468         	add	r0, sp, r0
10003062: 4a16         	ldr	r2, [pc, #0x58]         @ 0x100030bc <symex_lib::grant_access::h801bfedcd992b9cb+0xa4>
10003064: f00a fc96    	bl	0x1000d994 <__aeabi_memcpy4> @ imm = #0xa92c
10003068: e7ff         	b	0x1000306a <symex_lib::grant_access::h801bfedcd992b9cb+0x52> @ imm = #-0x2
1000306a: 481a         	ldr	r0, [pc, #0x68]         @ 0x100030d4 <symex_lib::grant_access::h801bfedcd992b9cb+0xbc>
1000306c: 4468         	add	r0, sp, r0
1000306e: 4916         	ldr	r1, [pc, #0x58]         @ 0x100030c8 <symex_lib::grant_access::h801bfedcd992b9cb+0xb0>
10003070: 4469         	add	r1, sp, r1
10003072: f7ff fdab    	bl	0x10002bcc <<heapless::vec::IntoIter<T,_> as core::iter::traits::iterator::Iterator>::next::h06b8b85865aa0b92> @ imm = #-0x4aa
10003076: 9803         	ldr	r0, [sp, #0xc]
10003078: 6800         	ldr	r0, [r0]
1000307a: 2800         	cmp	r0, #0x0
1000307c: d108         	bne	0x10003090 <symex_lib::grant_access::h801bfedcd992b9cb+0x78> @ imm = #0x10
1000307e: e7ff         	b	0x10003080 <symex_lib::grant_access::h801bfedcd992b9cb+0x68> @ imm = #-0x2
10003080: 4811         	ldr	r0, [pc, #0x44]         @ 0x100030c8 <symex_lib::grant_access::h801bfedcd992b9cb+0xb0>
10003082: 4468         	add	r0, sp, r0
10003084: f7fe f9e0    	bl	0x10001448 <core::ptr::drop_in_place<heapless::vec::IntoIter<layout_trait::Layout,1024_usize>>::h2fd5c7dcb6dad8b8> @ imm = #-0x1c40
10003088: 1ffe         	subs	r6, r7, #0x7
1000308a: 3e01         	subs	r6, #0x1
1000308c: 46b5         	mov	sp, r6
1000308e: bdd0         	pop	{r4, r6, r7, pc}
10003090: 9a03         	ldr	r2, [sp, #0xc]
10003092: 6851         	ldr	r1, [r2, #0x4]
10003094: 9101         	str	r1, [sp, #0x4]
10003096: 6151         	str	r1, [r2, #0x14]
10003098: 6890         	ldr	r0, [r2, #0x8]
1000309a: 6190         	str	r0, [r2, #0x18]
1000309c: 1808         	adds	r0, r1, r0
1000309e: 9002         	str	r0, [sp, #0x8]
100030a0: 4288         	cmp	r0, r1
100030a2: d306         	blo	0x100030b2 <symex_lib::grant_access::h801bfedcd992b9cb+0x9a> @ imm = #0xc
100030a4: e7ff         	b	0x100030a6 <symex_lib::grant_access::h801bfedcd992b9cb+0x8e> @ imm = #-0x2
100030a6: 9a02         	ldr	r2, [sp, #0x8]
100030a8: 9901         	ldr	r1, [sp, #0x4]
100030aa: 9804         	ldr	r0, [sp, #0x10]
100030ac: f002 ff1a    	bl	0x10005ee4 <__symex_allow_access> @ imm = #0x2e34
100030b0: e7db         	b	0x1000306a <symex_lib::grant_access::h801bfedcd992b9cb+0x52> @ imm = #-0x4a
100030b2: 4803         	ldr	r0, [pc, #0xc]          @ 0x100030c0 <symex_lib::grant_access::h801bfedcd992b9cb+0xa8>
100030b4: f00a f9bc    	bl	0x1000d430 <core::panicking::panic_const::panic_const_add_overflow::h73b6e802431fc142> @ imm = #0xa378
100030b8: 04 20 00 00  	.word	0x00002004
100030bc: 08 20 00 00  	.word	0x00002008
100030c0: b4 0b 01 10  	.word	0x10010bb4
100030c4: a8 7f ff ff  	.word	0xffff7fa8
100030c8: 34 60 00 00  	.word	0x00006034
100030cc: 28 20 00 00  	.word	0x00002028
100030d0: 30 40 00 00  	.word	0x00004030
100030d4: 3c 80 00 00  	.word	0x0000803c

100030d8 <symex_lib::grant_access::ha102dfa1f8942e20>:
100030d8: b5d0         	push	{r4, r6, r7, lr}
100030da: af02         	add	r7, sp, #0x8
100030dc: 4e29         	ldr	r6, [pc, #0xa4]         @ 0x10003184 <symex_lib::grant_access::ha102dfa1f8942e20+0xac>
100030de: 44b5         	add	sp, r6
100030e0: 4a2c         	ldr	r2, [pc, #0xb0]         @ 0x10003194 <symex_lib::grant_access::ha102dfa1f8942e20+0xbc>
100030e2: 446a         	add	r2, sp, r2
100030e4: 9203         	str	r2, [sp, #0xc]
100030e6: 9105         	str	r1, [sp, #0x14]
100030e8: 4602         	mov	r2, r0
100030ea: 9803         	ldr	r0, [sp, #0xc]
100030ec: 9204         	str	r2, [sp, #0x10]
100030ee: 60c2         	str	r2, [r0, #0xc]
100030f0: 6101         	str	r1, [r0, #0x10]
100030f2: a809         	add	r0, sp, #0x24
100030f4: 9006         	str	r0, [sp, #0x18]
100030f6: f7ff fcaf    	bl	0x10002a58 <heapless::vec::Vec<T,_>::new::hc803600c544224c3> @ imm = #-0x6a2
100030fa: 9805         	ldr	r0, [sp, #0x14]
100030fc: 9906         	ldr	r1, [sp, #0x18]
100030fe: f000 f9bf    	bl	0x10003480 <<simple_rtic::Systick<_> as layout_trait::GetLayout>::get_layout::h27ff8f374eb035a4> @ imm = #0x37e
10003102: 9906         	ldr	r1, [sp, #0x18]
10003104: 4822         	ldr	r0, [pc, #0x88]         @ 0x10003190 <symex_lib::grant_access::ha102dfa1f8942e20+0xb8>
10003106: 4468         	add	r0, sp, r0
10003108: 9007         	str	r0, [sp, #0x1c]
1000310a: 4a1b         	ldr	r2, [pc, #0x6c]         @ 0x10003178 <symex_lib::grant_access::ha102dfa1f8942e20+0xa0>
1000310c: f00a fc42    	bl	0x1000d994 <__aeabi_memcpy4> @ imm = #0xa884
10003110: 9907         	ldr	r1, [sp, #0x1c]
10003112: 481e         	ldr	r0, [pc, #0x78]         @ 0x1000318c <symex_lib::grant_access::ha102dfa1f8942e20+0xb4>
10003114: 4468         	add	r0, sp, r0
10003116: 9008         	str	r0, [sp, #0x20]
10003118: f7ff fd48    	bl	0x10002bac <<heapless::vec::Vec<T,_> as core::iter::traits::collect::IntoIterator>::into_iter::hbe9d32a2bf28c854> @ imm = #-0x570
1000311c: 9908         	ldr	r1, [sp, #0x20]
1000311e: 481a         	ldr	r0, [pc, #0x68]         @ 0x10003188 <symex_lib::grant_access::ha102dfa1f8942e20+0xb0>
10003120: 4468         	add	r0, sp, r0
10003122: 4a16         	ldr	r2, [pc, #0x58]         @ 0x1000317c <symex_lib::grant_access::ha102dfa1f8942e20+0xa4>
10003124: f00a fc36    	bl	0x1000d994 <__aeabi_memcpy4> @ imm = #0xa86c
10003128: e7ff         	b	0x1000312a <symex_lib::grant_access::ha102dfa1f8942e20+0x52> @ imm = #-0x2
1000312a: 481a         	ldr	r0, [pc, #0x68]         @ 0x10003194 <symex_lib::grant_access::ha102dfa1f8942e20+0xbc>
1000312c: 4468         	add	r0, sp, r0
1000312e: 4916         	ldr	r1, [pc, #0x58]         @ 0x10003188 <symex_lib::grant_access::ha102dfa1f8942e20+0xb0>
10003130: 4469         	add	r1, sp, r1
10003132: f7ff fd4b    	bl	0x10002bcc <<heapless::vec::IntoIter<T,_> as core::iter::traits::iterator::Iterator>::next::h06b8b85865aa0b92> @ imm = #-0x56a
10003136: 9803         	ldr	r0, [sp, #0xc]
10003138: 6800         	ldr	r0, [r0]
1000313a: 2800         	cmp	r0, #0x0
1000313c: d108         	bne	0x10003150 <symex_lib::grant_access::ha102dfa1f8942e20+0x78> @ imm = #0x10
1000313e: e7ff         	b	0x10003140 <symex_lib::grant_access::ha102dfa1f8942e20+0x68> @ imm = #-0x2
10003140: 4811         	ldr	r0, [pc, #0x44]         @ 0x10003188 <symex_lib::grant_access::ha102dfa1f8942e20+0xb0>
10003142: 4468         	add	r0, sp, r0
10003144: f7fe f980    	bl	0x10001448 <core::ptr::drop_in_place<heapless::vec::IntoIter<layout_trait::Layout,1024_usize>>::h2fd5c7dcb6dad8b8> @ imm = #-0x1d00
10003148: 1ffe         	subs	r6, r7, #0x7
1000314a: 3e01         	subs	r6, #0x1
1000314c: 46b5         	mov	sp, r6
1000314e: bdd0         	pop	{r4, r6, r7, pc}
10003150: 9a03         	ldr	r2, [sp, #0xc]
10003152: 6851         	ldr	r1, [r2, #0x4]
10003154: 9101         	str	r1, [sp, #0x4]
10003156: 6151         	str	r1, [r2, #0x14]
10003158: 6890         	ldr	r0, [r2, #0x8]
1000315a: 6190         	str	r0, [r2, #0x18]
1000315c: 1808         	adds	r0, r1, r0
1000315e: 9002         	str	r0, [sp, #0x8]
10003160: 4288         	cmp	r0, r1
10003162: d306         	blo	0x10003172 <symex_lib::grant_access::ha102dfa1f8942e20+0x9a> @ imm = #0xc
10003164: e7ff         	b	0x10003166 <symex_lib::grant_access::ha102dfa1f8942e20+0x8e> @ imm = #-0x2
10003166: 9a02         	ldr	r2, [sp, #0x8]
10003168: 9901         	ldr	r1, [sp, #0x4]
1000316a: 9804         	ldr	r0, [sp, #0x10]
1000316c: f002 feba    	bl	0x10005ee4 <__symex_allow_access> @ imm = #0x2d74
10003170: e7db         	b	0x1000312a <symex_lib::grant_access::ha102dfa1f8942e20+0x52> @ imm = #-0x4a
10003172: 4803         	ldr	r0, [pc, #0xc]          @ 0x10003180 <symex_lib::grant_access::ha102dfa1f8942e20+0xa8>
10003174: f00a f95c    	bl	0x1000d430 <core::panicking::panic_const::panic_const_add_overflow::h73b6e802431fc142> @ imm = #0xa2b8
10003178: 04 20 00 00  	.word	0x00002004
1000317c: 08 20 00 00  	.word	0x00002008
10003180: b4 0b 01 10  	.word	0x10010bb4
10003184: a8 7f ff ff  	.word	0xffff7fa8
10003188: 34 60 00 00  	.word	0x00006034
1000318c: 28 20 00 00  	.word	0x00002028
10003190: 30 40 00 00  	.word	0x00004030
10003194: 3c 80 00 00  	.word	0x0000803c

10003198 <symex_lib::grant_access::hc4d26217fbfd0ab0>:
10003198: b5d0         	push	{r4, r6, r7, lr}
1000319a: af02         	add	r7, sp, #0x8
1000319c: 4e29         	ldr	r6, [pc, #0xa4]         @ 0x10003244 <symex_lib::grant_access::hc4d26217fbfd0ab0+0xac>
1000319e: 44b5         	add	sp, r6
100031a0: 4a2c         	ldr	r2, [pc, #0xb0]         @ 0x10003254 <symex_lib::grant_access::hc4d26217fbfd0ab0+0xbc>
100031a2: 446a         	add	r2, sp, r2
100031a4: 9203         	str	r2, [sp, #0xc]
100031a6: 9105         	str	r1, [sp, #0x14]
100031a8: 4602         	mov	r2, r0
100031aa: 9803         	ldr	r0, [sp, #0xc]
100031ac: 9204         	str	r2, [sp, #0x10]
100031ae: 60c2         	str	r2, [r0, #0xc]
100031b0: 6101         	str	r1, [r0, #0x10]
100031b2: a809         	add	r0, sp, #0x24
100031b4: 9006         	str	r0, [sp, #0x18]
100031b6: f7ff fc4f    	bl	0x10002a58 <heapless::vec::Vec<T,_>::new::hc803600c544224c3> @ imm = #-0x762
100031ba: 9805         	ldr	r0, [sp, #0x14]
100031bc: 9906         	ldr	r1, [sp, #0x18]
100031be: f7fd fee9    	bl	0x10000f94 <<T as layout_trait::GetLayout>::get_layout::ha1c1734ec0f71be3> @ imm = #-0x222e
100031c2: 9906         	ldr	r1, [sp, #0x18]
100031c4: 4822         	ldr	r0, [pc, #0x88]         @ 0x10003250 <symex_lib::grant_access::hc4d26217fbfd0ab0+0xb8>
100031c6: 4468         	add	r0, sp, r0
100031c8: 9007         	str	r0, [sp, #0x1c]
100031ca: 4a1b         	ldr	r2, [pc, #0x6c]         @ 0x10003238 <symex_lib::grant_access::hc4d26217fbfd0ab0+0xa0>
100031cc: f00a fbe2    	bl	0x1000d994 <__aeabi_memcpy4> @ imm = #0xa7c4
100031d0: 9907         	ldr	r1, [sp, #0x1c]
100031d2: 481e         	ldr	r0, [pc, #0x78]         @ 0x1000324c <symex_lib::grant_access::hc4d26217fbfd0ab0+0xb4>
100031d4: 4468         	add	r0, sp, r0
100031d6: 9008         	str	r0, [sp, #0x20]
100031d8: f7ff fce8    	bl	0x10002bac <<heapless::vec::Vec<T,_> as core::iter::traits::collect::IntoIterator>::into_iter::hbe9d32a2bf28c854> @ imm = #-0x630
100031dc: 9908         	ldr	r1, [sp, #0x20]
100031de: 481a         	ldr	r0, [pc, #0x68]         @ 0x10003248 <symex_lib::grant_access::hc4d26217fbfd0ab0+0xb0>
100031e0: 4468         	add	r0, sp, r0
100031e2: 4a16         	ldr	r2, [pc, #0x58]         @ 0x1000323c <symex_lib::grant_access::hc4d26217fbfd0ab0+0xa4>
100031e4: f00a fbd6    	bl	0x1000d994 <__aeabi_memcpy4> @ imm = #0xa7ac
100031e8: e7ff         	b	0x100031ea <symex_lib::grant_access::hc4d26217fbfd0ab0+0x52> @ imm = #-0x2
100031ea: 481a         	ldr	r0, [pc, #0x68]         @ 0x10003254 <symex_lib::grant_access::hc4d26217fbfd0ab0+0xbc>
100031ec: 4468         	add	r0, sp, r0
100031ee: 4916         	ldr	r1, [pc, #0x58]         @ 0x10003248 <symex_lib::grant_access::hc4d26217fbfd0ab0+0xb0>
100031f0: 4469         	add	r1, sp, r1
100031f2: f7ff fceb    	bl	0x10002bcc <<heapless::vec::IntoIter<T,_> as core::iter::traits::iterator::Iterator>::next::h06b8b85865aa0b92> @ imm = #-0x62a
100031f6: 9803         	ldr	r0, [sp, #0xc]
100031f8: 6800         	ldr	r0, [r0]
100031fa: 2800         	cmp	r0, #0x0
100031fc: d108         	bne	0x10003210 <symex_lib::grant_access::hc4d26217fbfd0ab0+0x78> @ imm = #0x10
100031fe: e7ff         	b	0x10003200 <symex_lib::grant_access::hc4d26217fbfd0ab0+0x68> @ imm = #-0x2
10003200: 4811         	ldr	r0, [pc, #0x44]         @ 0x10003248 <symex_lib::grant_access::hc4d26217fbfd0ab0+0xb0>
10003202: 4468         	add	r0, sp, r0
10003204: f7fe f920    	bl	0x10001448 <core::ptr::drop_in_place<heapless::vec::IntoIter<layout_trait::Layout,1024_usize>>::h2fd5c7dcb6dad8b8> @ imm = #-0x1dc0
10003208: 1ffe         	subs	r6, r7, #0x7
1000320a: 3e01         	subs	r6, #0x1
1000320c: 46b5         	mov	sp, r6
1000320e: bdd0         	pop	{r4, r6, r7, pc}
10003210: 9a03         	ldr	r2, [sp, #0xc]
10003212: 6851         	ldr	r1, [r2, #0x4]
10003214: 9101         	str	r1, [sp, #0x4]
10003216: 6151         	str	r1, [r2, #0x14]
10003218: 6890         	ldr	r0, [r2, #0x8]
1000321a: 6190         	str	r0, [r2, #0x18]
1000321c: 1808         	adds	r0, r1, r0
1000321e: 9002         	str	r0, [sp, #0x8]
10003220: 4288         	cmp	r0, r1
10003222: d306         	blo	0x10003232 <symex_lib::grant_access::hc4d26217fbfd0ab0+0x9a> @ imm = #0xc
10003224: e7ff         	b	0x10003226 <symex_lib::grant_access::hc4d26217fbfd0ab0+0x8e> @ imm = #-0x2
10003226: 9a02         	ldr	r2, [sp, #0x8]
10003228: 9901         	ldr	r1, [sp, #0x4]
1000322a: 9804         	ldr	r0, [sp, #0x10]
1000322c: f002 fe5a    	bl	0x10005ee4 <__symex_allow_access> @ imm = #0x2cb4
10003230: e7db         	b	0x100031ea <symex_lib::grant_access::hc4d26217fbfd0ab0+0x52> @ imm = #-0x4a
10003232: 4803         	ldr	r0, [pc, #0xc]          @ 0x10003240 <symex_lib::grant_access::hc4d26217fbfd0ab0+0xa8>
10003234: f00a f8fc    	bl	0x1000d430 <core::panicking::panic_const::panic_const_add_overflow::h73b6e802431fc142> @ imm = #0xa1f8
10003238: 04 20 00 00  	.word	0x00002004
1000323c: 08 20 00 00  	.word	0x00002008
10003240: b4 0b 01 10  	.word	0x10010bb4
10003244: a8 7f ff ff  	.word	0xffff7fa8
10003248: 34 60 00 00  	.word	0x00006034
1000324c: 28 20 00 00  	.word	0x00002028
10003250: 30 40 00 00  	.word	0x00004030
10003254: 3c 80 00 00  	.word	0x0000803c

10003258 <symex_lib::grant_access::hf1199542d32ecac7>:
10003258: b5d0         	push	{r4, r6, r7, lr}
1000325a: af02         	add	r7, sp, #0x8
1000325c: 4e29         	ldr	r6, [pc, #0xa4]         @ 0x10003304 <symex_lib::grant_access::hf1199542d32ecac7+0xac>
1000325e: 44b5         	add	sp, r6
10003260: 4a2c         	ldr	r2, [pc, #0xb0]         @ 0x10003314 <symex_lib::grant_access::hf1199542d32ecac7+0xbc>
10003262: 446a         	add	r2, sp, r2
10003264: 9203         	str	r2, [sp, #0xc]
10003266: 9105         	str	r1, [sp, #0x14]
10003268: 4602         	mov	r2, r0
1000326a: 9803         	ldr	r0, [sp, #0xc]
1000326c: 9204         	str	r2, [sp, #0x10]
1000326e: 60c2         	str	r2, [r0, #0xc]
10003270: 6101         	str	r1, [r0, #0x10]
10003272: a809         	add	r0, sp, #0x24
10003274: 9006         	str	r0, [sp, #0x18]
10003276: f7ff fbef    	bl	0x10002a58 <heapless::vec::Vec<T,_>::new::hc803600c544224c3> @ imm = #-0x822
1000327a: 9805         	ldr	r0, [sp, #0x14]
1000327c: 9906         	ldr	r1, [sp, #0x18]
1000327e: f7fd fe5f    	bl	0x10000f40 <<T as layout_trait::GetLayout>::get_layout::h7c5802084d9f9473> @ imm = #-0x2342
10003282: 9906         	ldr	r1, [sp, #0x18]
10003284: 4822         	ldr	r0, [pc, #0x88]         @ 0x10003310 <symex_lib::grant_access::hf1199542d32ecac7+0xb8>
10003286: 4468         	add	r0, sp, r0
10003288: 9007         	str	r0, [sp, #0x1c]
1000328a: 4a1b         	ldr	r2, [pc, #0x6c]         @ 0x100032f8 <symex_lib::grant_access::hf1199542d32ecac7+0xa0>
1000328c: f00a fb82    	bl	0x1000d994 <__aeabi_memcpy4> @ imm = #0xa704
10003290: 9907         	ldr	r1, [sp, #0x1c]
10003292: 481e         	ldr	r0, [pc, #0x78]         @ 0x1000330c <symex_lib::grant_access::hf1199542d32ecac7+0xb4>
10003294: 4468         	add	r0, sp, r0
10003296: 9008         	str	r0, [sp, #0x20]
10003298: f7ff fc88    	bl	0x10002bac <<heapless::vec::Vec<T,_> as core::iter::traits::collect::IntoIterator>::into_iter::hbe9d32a2bf28c854> @ imm = #-0x6f0
1000329c: 9908         	ldr	r1, [sp, #0x20]
1000329e: 481a         	ldr	r0, [pc, #0x68]         @ 0x10003308 <symex_lib::grant_access::hf1199542d32ecac7+0xb0>
100032a0: 4468         	add	r0, sp, r0
100032a2: 4a16         	ldr	r2, [pc, #0x58]         @ 0x100032fc <symex_lib::grant_access::hf1199542d32ecac7+0xa4>
100032a4: f00a fb76    	bl	0x1000d994 <__aeabi_memcpy4> @ imm = #0xa6ec
100032a8: e7ff         	b	0x100032aa <symex_lib::grant_access::hf1199542d32ecac7+0x52> @ imm = #-0x2
100032aa: 481a         	ldr	r0, [pc, #0x68]         @ 0x10003314 <symex_lib::grant_access::hf1199542d32ecac7+0xbc>
100032ac: 4468         	add	r0, sp, r0
100032ae: 4916         	ldr	r1, [pc, #0x58]         @ 0x10003308 <symex_lib::grant_access::hf1199542d32ecac7+0xb0>
100032b0: 4469         	add	r1, sp, r1
100032b2: f7ff fc8b    	bl	0x10002bcc <<heapless::vec::IntoIter<T,_> as core::iter::traits::iterator::Iterator>::next::h06b8b85865aa0b92> @ imm = #-0x6ea
100032b6: 9803         	ldr	r0, [sp, #0xc]
100032b8: 6800         	ldr	r0, [r0]
100032ba: 2800         	cmp	r0, #0x0
100032bc: d108         	bne	0x100032d0 <symex_lib::grant_access::hf1199542d32ecac7+0x78> @ imm = #0x10
100032be: e7ff         	b	0x100032c0 <symex_lib::grant_access::hf1199542d32ecac7+0x68> @ imm = #-0x2
100032c0: 4811         	ldr	r0, [pc, #0x44]         @ 0x10003308 <symex_lib::grant_access::hf1199542d32ecac7+0xb0>
100032c2: 4468         	add	r0, sp, r0
100032c4: f7fe f8c0    	bl	0x10001448 <core::ptr::drop_in_place<heapless::vec::IntoIter<layout_trait::Layout,1024_usize>>::h2fd5c7dcb6dad8b8> @ imm = #-0x1e80
100032c8: 1ffe         	subs	r6, r7, #0x7
100032ca: 3e01         	subs	r6, #0x1
100032cc: 46b5         	mov	sp, r6
100032ce: bdd0         	pop	{r4, r6, r7, pc}
100032d0: 9a03         	ldr	r2, [sp, #0xc]
100032d2: 6851         	ldr	r1, [r2, #0x4]
100032d4: 9101         	str	r1, [sp, #0x4]
100032d6: 6151         	str	r1, [r2, #0x14]
100032d8: 6890         	ldr	r0, [r2, #0x8]
100032da: 6190         	str	r0, [r2, #0x18]
100032dc: 1808         	adds	r0, r1, r0
100032de: 9002         	str	r0, [sp, #0x8]
100032e0: 4288         	cmp	r0, r1
100032e2: d306         	blo	0x100032f2 <symex_lib::grant_access::hf1199542d32ecac7+0x9a> @ imm = #0xc
100032e4: e7ff         	b	0x100032e6 <symex_lib::grant_access::hf1199542d32ecac7+0x8e> @ imm = #-0x2
100032e6: 9a02         	ldr	r2, [sp, #0x8]
100032e8: 9901         	ldr	r1, [sp, #0x4]
100032ea: 9804         	ldr	r0, [sp, #0x10]
100032ec: f002 fdfa    	bl	0x10005ee4 <__symex_allow_access> @ imm = #0x2bf4
100032f0: e7db         	b	0x100032aa <symex_lib::grant_access::hf1199542d32ecac7+0x52> @ imm = #-0x4a
100032f2: 4803         	ldr	r0, [pc, #0xc]          @ 0x10003300 <symex_lib::grant_access::hf1199542d32ecac7+0xa8>
100032f4: f00a f89c    	bl	0x1000d430 <core::panicking::panic_const::panic_const_add_overflow::h73b6e802431fc142> @ imm = #0xa138
100032f8: 04 20 00 00  	.word	0x00002004
100032fc: 08 20 00 00  	.word	0x00002008
10003300: b4 0b 01 10  	.word	0x10010bb4
10003304: a8 7f ff ff  	.word	0xffff7fa8
10003308: 34 60 00 00  	.word	0x00006034
1000330c: 28 20 00 00  	.word	0x00002028
10003310: 30 40 00 00  	.word	0x00004030
10003314: 3c 80 00 00  	.word	0x0000803c

10003318 <symex_lib::symbolic_size::ha31e08f1340434e1>:
10003318: b580         	push	{r7, lr}
1000331a: af00         	add	r7, sp, #0x0
1000331c: b082         	sub	sp, #0x8
1000331e: 9100         	str	r1, [sp]
10003320: 9001         	str	r0, [sp, #0x4]
10003322: f000 f876    	bl	0x10003412 <symex_lib::black_box::h01a8079d4f2e21fe> @ imm = #0xec
10003326: 4668         	mov	r0, sp
10003328: f000 f87e    	bl	0x10003428 <symex_lib::black_box::h1897793976c6130d> @ imm = #0xfc
1000332c: b002         	add	sp, #0x8
1000332e: bd80         	pop	{r7, pc}

10003330 <symex_lib::set_max_priority::hcb1817f6fa0d7417>:
10003330: b5d0         	push	{r4, r6, r7, lr}
10003332: af02         	add	r7, sp, #0x8
10003334: 4e29         	ldr	r6, [pc, #0xa4]         @ 0x100033dc <symex_lib::set_max_priority::hcb1817f6fa0d7417+0xac>
10003336: 44b5         	add	sp, r6
10003338: 4a2c         	ldr	r2, [pc, #0xb0]         @ 0x100033ec <symex_lib::set_max_priority::hcb1817f6fa0d7417+0xbc>
1000333a: 446a         	add	r2, sp, r2
1000333c: 9204         	str	r2, [sp, #0x10]
1000333e: 9103         	str	r1, [sp, #0xc]
10003340: 4602         	mov	r2, r0
10003342: 9804         	ldr	r0, [sp, #0x10]
10003344: 9205         	str	r2, [sp, #0x14]
10003346: 60c2         	str	r2, [r0, #0xc]
10003348: 6101         	str	r1, [r0, #0x10]
1000334a: a809         	add	r0, sp, #0x24
1000334c: 9006         	str	r0, [sp, #0x18]
1000334e: f7ff fb83    	bl	0x10002a58 <heapless::vec::Vec<T,_>::new::hc803600c544224c3> @ imm = #-0x8fa
10003352: 9805         	ldr	r0, [sp, #0x14]
10003354: 9906         	ldr	r1, [sp, #0x18]
10003356: f7fd fdc9    	bl	0x10000eec <<T as layout_trait::GetLayout>::get_layout::h30876be8ccb0ab03> @ imm = #-0x246e
1000335a: 9906         	ldr	r1, [sp, #0x18]
1000335c: 4822         	ldr	r0, [pc, #0x88]         @ 0x100033e8 <symex_lib::set_max_priority::hcb1817f6fa0d7417+0xb8>
1000335e: 4468         	add	r0, sp, r0
10003360: 9007         	str	r0, [sp, #0x1c]
10003362: 4a1b         	ldr	r2, [pc, #0x6c]         @ 0x100033d0 <symex_lib::set_max_priority::hcb1817f6fa0d7417+0xa0>
10003364: f00a fb16    	bl	0x1000d994 <__aeabi_memcpy4> @ imm = #0xa62c
10003368: 9907         	ldr	r1, [sp, #0x1c]
1000336a: 481e         	ldr	r0, [pc, #0x78]         @ 0x100033e4 <symex_lib::set_max_priority::hcb1817f6fa0d7417+0xb4>
1000336c: 4468         	add	r0, sp, r0
1000336e: 9008         	str	r0, [sp, #0x20]
10003370: f7ff fc1c    	bl	0x10002bac <<heapless::vec::Vec<T,_> as core::iter::traits::collect::IntoIterator>::into_iter::hbe9d32a2bf28c854> @ imm = #-0x7c8
10003374: 9908         	ldr	r1, [sp, #0x20]
10003376: 481a         	ldr	r0, [pc, #0x68]         @ 0x100033e0 <symex_lib::set_max_priority::hcb1817f6fa0d7417+0xb0>
10003378: 4468         	add	r0, sp, r0
1000337a: 4a16         	ldr	r2, [pc, #0x58]         @ 0x100033d4 <symex_lib::set_max_priority::hcb1817f6fa0d7417+0xa4>
1000337c: f00a fb0a    	bl	0x1000d994 <__aeabi_memcpy4> @ imm = #0xa614
10003380: e7ff         	b	0x10003382 <symex_lib::set_max_priority::hcb1817f6fa0d7417+0x52> @ imm = #-0x2
10003382: 481a         	ldr	r0, [pc, #0x68]         @ 0x100033ec <symex_lib::set_max_priority::hcb1817f6fa0d7417+0xbc>
10003384: 4468         	add	r0, sp, r0
10003386: 4916         	ldr	r1, [pc, #0x58]         @ 0x100033e0 <symex_lib::set_max_priority::hcb1817f6fa0d7417+0xb0>
10003388: 4469         	add	r1, sp, r1
1000338a: f7ff fc1f    	bl	0x10002bcc <<heapless::vec::IntoIter<T,_> as core::iter::traits::iterator::Iterator>::next::h06b8b85865aa0b92> @ imm = #-0x7c2
1000338e: 9804         	ldr	r0, [sp, #0x10]
10003390: 6800         	ldr	r0, [r0]
10003392: 2800         	cmp	r0, #0x0
10003394: d108         	bne	0x100033a8 <symex_lib::set_max_priority::hcb1817f6fa0d7417+0x78> @ imm = #0x10
10003396: e7ff         	b	0x10003398 <symex_lib::set_max_priority::hcb1817f6fa0d7417+0x68> @ imm = #-0x2
10003398: 4811         	ldr	r0, [pc, #0x44]         @ 0x100033e0 <symex_lib::set_max_priority::hcb1817f6fa0d7417+0xb0>
1000339a: 4468         	add	r0, sp, r0
1000339c: f7fe f854    	bl	0x10001448 <core::ptr::drop_in_place<heapless::vec::IntoIter<layout_trait::Layout,1024_usize>>::h2fd5c7dcb6dad8b8> @ imm = #-0x1f58
100033a0: 1ffe         	subs	r6, r7, #0x7
100033a2: 3e01         	subs	r6, #0x1
100033a4: 46b5         	mov	sp, r6
100033a6: bdd0         	pop	{r4, r6, r7, pc}
100033a8: 9a04         	ldr	r2, [sp, #0x10]
100033aa: 6851         	ldr	r1, [r2, #0x4]
100033ac: 9101         	str	r1, [sp, #0x4]
100033ae: 6151         	str	r1, [r2, #0x14]
100033b0: 6890         	ldr	r0, [r2, #0x8]
100033b2: 6190         	str	r0, [r2, #0x18]
100033b4: 1808         	adds	r0, r1, r0
100033b6: 9002         	str	r0, [sp, #0x8]
100033b8: 4288         	cmp	r0, r1
100033ba: d306         	blo	0x100033ca <symex_lib::set_max_priority::hcb1817f6fa0d7417+0x9a> @ imm = #0xc
100033bc: e7ff         	b	0x100033be <symex_lib::set_max_priority::hcb1817f6fa0d7417+0x8e> @ imm = #-0x2
100033be: 9a03         	ldr	r2, [sp, #0xc]
100033c0: 9902         	ldr	r1, [sp, #0x8]
100033c2: 9801         	ldr	r0, [sp, #0x4]
100033c4: f002 fdbb    	bl	0x10005f3e <__symex_set_priority_of_resource> @ imm = #0x2b76
100033c8: e7db         	b	0x10003382 <symex_lib::set_max_priority::hcb1817f6fa0d7417+0x52> @ imm = #-0x4a
100033ca: 4803         	ldr	r0, [pc, #0xc]          @ 0x100033d8 <symex_lib::set_max_priority::hcb1817f6fa0d7417+0xa8>
100033cc: f00a f830    	bl	0x1000d430 <core::panicking::panic_const::panic_const_add_overflow::h73b6e802431fc142> @ imm = #0xa060
100033d0: 04 20 00 00  	.word	0x00002004
100033d4: 08 20 00 00  	.word	0x00002008
100033d8: c4 0b 01 10  	.word	0x10010bc4
100033dc: a8 7f ff ff  	.word	0xffff7fa8
100033e0: 34 60 00 00  	.word	0x00006034
100033e4: 28 20 00 00  	.word	0x00002028
100033e8: 30 40 00 00  	.word	0x00004030
100033ec: 3c 80 00 00  	.word	0x0000803c

100033f0 <symex_lib::symbolic::hbd2a9a8c2627f3be>:
100033f0: b580         	push	{r7, lr}
100033f2: af00         	add	r7, sp, #0x0
100033f4: b084         	sub	sp, #0x10
100033f6: 9000         	str	r0, [sp]
100033f8: 9003         	str	r0, [sp, #0xc]
100033fa: 2004         	movs	r0, #0x4
100033fc: 9001         	str	r0, [sp, #0x4]
100033fe: 9002         	str	r0, [sp, #0x8]
10003400: a802         	add	r0, sp, #0x8
10003402: f000 f811    	bl	0x10003428 <symex_lib::black_box::h1897793976c6130d> @ imm = #0x22
10003406: 9800         	ldr	r0, [sp]
10003408: 9901         	ldr	r1, [sp, #0x4]
1000340a: f7ff ff85    	bl	0x10003318 <symex_lib::symbolic_size::ha31e08f1340434e1> @ imm = #-0xf6
1000340e: b004         	add	sp, #0x10
10003410: bd80         	pop	{r7, pc}

10003412 <symex_lib::black_box::h01a8079d4f2e21fe>:
10003412: b580         	push	{r7, lr}
10003414: af00         	add	r7, sp, #0x0
10003416: b082         	sub	sp, #0x8
10003418: 9000         	str	r0, [sp]
1000341a: 9001         	str	r0, [sp, #0x4]
1000341c: f008 fe53    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x8ca6
10003420: 9900         	ldr	r1, [sp]
10003422: 6008         	str	r0, [r1]
10003424: b002         	add	sp, #0x8
10003426: bd80         	pop	{r7, pc}

10003428 <symex_lib::black_box::h1897793976c6130d>:
10003428: b580         	push	{r7, lr}
1000342a: af00         	add	r7, sp, #0x0
1000342c: b082         	sub	sp, #0x8
1000342e: 9000         	str	r0, [sp]
10003430: 9001         	str	r0, [sp, #0x4]
10003432: f7fd ff96    	bl	0x10001362 <core::ptr::read_volatile::h76143b1b5a894831> @ imm = #-0x20d4
10003436: 9900         	ldr	r1, [sp]
10003438: 6008         	str	r0, [r1]
1000343a: b002         	add	sp, #0x8
1000343c: bd80         	pop	{r7, pc}
1000343e: d4d4         	bmi	0x100033ea <symex_lib::set_max_priority::hcb1817f6fa0d7417+0xba> @ imm = #-0x58

10003440 <simple_rtic::Systick<_>::time::h68d2b7c79955496f>:
10003440: b580         	push	{r7, lr}
10003442: af00         	add	r7, sp, #0x0
10003444: b08c         	sub	sp, #0x30
10003446: 9007         	str	r0, [sp, #0x1c]
10003448: a802         	add	r0, sp, #0x8
1000344a: 9000         	str	r0, [sp]
1000344c: 490b         	ldr	r1, [pc, #0x2c]         @ 0x1000347c <simple_rtic::Systick<_>::time::h68d2b7c79955496f+0x3c>
1000344e: f7fe f807    	bl	0x10001460 <core::ptr::const_ptr::<impl *const T>::read::h1e6dc54a453b5f23> @ imm = #-0x1ff2
10003452: 9800         	ldr	r0, [sp]
10003454: 9008         	str	r0, [sp, #0x20]
10003456: 3008         	adds	r0, #0x8
10003458: 9009         	str	r0, [sp, #0x24]
1000345a: 900a         	str	r0, [sp, #0x28]
1000345c: 900b         	str	r0, [sp, #0x2c]
1000345e: f008 fe32    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x8c64
10003462: 9006         	str	r0, [sp, #0x18]
10003464: a806         	add	r0, sp, #0x18
10003466: 9001         	str	r0, [sp, #0x4]
10003468: f7ff ffc2    	bl	0x100033f0 <symex_lib::symbolic::hbd2a9a8c2627f3be> @ imm = #-0x7c
1000346c: 9801         	ldr	r0, [sp, #0x4]
1000346e: f7fe f85d    	bl	0x1000152c <core::hint::black_box::hd3c2859a6f29afbf> @ imm = #-0x1f46
10003472: 9806         	ldr	r0, [sp, #0x18]
10003474: f7fe fba7    	bl	0x10001bc6 <fugit::duration::Duration<u32,_,_>::from_ticks::h7f37a5b5a6447ecc> @ imm = #-0x18b2
10003478: b00c         	add	sp, #0x30
1000347a: bd80         	pop	{r7, pc}
1000347c: 10 e0 00 e0  	.word	0xe000e010

10003480 <<simple_rtic::Systick<_> as layout_trait::GetLayout>::get_layout::h27ff8f374eb035a4>:
10003480: b580         	push	{r7, lr}
10003482: af00         	add	r7, sp, #0x0
10003484: b096         	sub	sp, #0x58
10003486: 9104         	str	r1, [sp, #0x10]
10003488: 4602         	mov	r2, r0
1000348a: 920f         	str	r2, [sp, #0x3c]
1000348c: 9110         	str	r1, [sp, #0x40]
1000348e: 9211         	str	r2, [sp, #0x44]
10003490: a805         	add	r0, sp, #0x14
10003492: 2300         	movs	r3, #0x0
10003494: f7ff faf2    	bl	0x10002a7c <heapless::vec::Vec<T,_>::push::h1bc527dcf9fef357> @ imm = #-0xa1c
10003498: 9805         	ldr	r0, [sp, #0x14]
1000349a: 2800         	cmp	r0, #0x0
1000349c: d00c         	beq	0x100034b8 <<simple_rtic::Systick<_> as layout_trait::GetLayout>::get_layout::h27ff8f374eb035a4+0x38> @ imm = #0x18
1000349e: e7ff         	b	0x100034a0 <<simple_rtic::Systick<_> as layout_trait::GetLayout>::get_layout::h27ff8f374eb035a4+0x20> @ imm = #-0x2
100034a0: 9906         	ldr	r1, [sp, #0x18]
100034a2: 9807         	ldr	r0, [sp, #0x1c]
100034a4: 9114         	str	r1, [sp, #0x50]
100034a6: 9015         	str	r0, [sp, #0x54]
100034a8: 4814         	ldr	r0, [pc, #0x50]         @ 0x100034fc <<simple_rtic::Systick<_> as layout_trait::GetLayout>::get_layout::h27ff8f374eb035a4+0x7c>
100034aa: 9000         	str	r0, [sp]
100034ac: 4814         	ldr	r0, [pc, #0x50]         @ 0x10003500 <<simple_rtic::Systick<_> as layout_trait::GetLayout>::get_layout::h27ff8f374eb035a4+0x80>
100034ae: 4b15         	ldr	r3, [pc, #0x54]         @ 0x10003504 <<simple_rtic::Systick<_> as layout_trait::GetLayout>::get_layout::h27ff8f374eb035a4+0x84>
100034b0: 212b         	movs	r1, #0x2b
100034b2: aa14         	add	r2, sp, #0x50
100034b4: f008 fff4    	bl	0x1000c4a0 <core::result::unwrap_failed::hc39ba1cc7ce86577> @ imm = #0x8fe8
100034b8: a808         	add	r0, sp, #0x20
100034ba: 9002         	str	r0, [sp, #0x8]
100034bc: 4912         	ldr	r1, [pc, #0x48]         @ 0x10003508 <<simple_rtic::Systick<_> as layout_trait::GetLayout>::get_layout::h27ff8f374eb035a4+0x88>
100034be: 9103         	str	r1, [sp, #0xc]
100034c0: f7fd ffce    	bl	0x10001460 <core::ptr::const_ptr::<impl *const T>::read::h1e6dc54a453b5f23> @ imm = #-0x2064
100034c4: 9802         	ldr	r0, [sp, #0x8]
100034c6: f7fd ff2b    	bl	0x10001320 <core::mem::size_of_val::he0b11da83ee7ead6> @ imm = #-0x21aa
100034ca: 9904         	ldr	r1, [sp, #0x10]
100034cc: 9a03         	ldr	r2, [sp, #0xc]
100034ce: 4603         	mov	r3, r0
100034d0: a80c         	add	r0, sp, #0x30
100034d2: f7ff fad3    	bl	0x10002a7c <heapless::vec::Vec<T,_>::push::h1bc527dcf9fef357> @ imm = #-0xa5a
100034d6: 980c         	ldr	r0, [sp, #0x30]
100034d8: 2800         	cmp	r0, #0x0
100034da: d00c         	beq	0x100034f6 <<simple_rtic::Systick<_> as layout_trait::GetLayout>::get_layout::h27ff8f374eb035a4+0x76> @ imm = #0x18
100034dc: e7ff         	b	0x100034de <<simple_rtic::Systick<_> as layout_trait::GetLayout>::get_layout::h27ff8f374eb035a4+0x5e> @ imm = #-0x2
100034de: 990d         	ldr	r1, [sp, #0x34]
100034e0: 980e         	ldr	r0, [sp, #0x38]
100034e2: 9112         	str	r1, [sp, #0x48]
100034e4: 9013         	str	r0, [sp, #0x4c]
100034e6: 4809         	ldr	r0, [pc, #0x24]         @ 0x1000350c <<simple_rtic::Systick<_> as layout_trait::GetLayout>::get_layout::h27ff8f374eb035a4+0x8c>
100034e8: 9000         	str	r0, [sp]
100034ea: 4805         	ldr	r0, [pc, #0x14]         @ 0x10003500 <<simple_rtic::Systick<_> as layout_trait::GetLayout>::get_layout::h27ff8f374eb035a4+0x80>
100034ec: 4b05         	ldr	r3, [pc, #0x14]         @ 0x10003504 <<simple_rtic::Systick<_> as layout_trait::GetLayout>::get_layout::h27ff8f374eb035a4+0x84>
100034ee: 212b         	movs	r1, #0x2b
100034f0: aa12         	add	r2, sp, #0x48
100034f2: f008 ffd5    	bl	0x1000c4a0 <core::result::unwrap_failed::hc39ba1cc7ce86577> @ imm = #0x8faa
100034f6: b016         	add	sp, #0x58
100034f8: bd80         	pop	{r7, pc}
100034fa: 46c0         	mov	r8, r8
100034fc: ec 0b 01 10  	.word	0x10010bec
10003500: a4 e4 00 10  	.word	0x1000e4a4
10003504: 94 e4 00 10  	.word	0x1000e494
10003508: 10 e0 00 e0  	.word	0xe000e010
1000350c: fc 0b 01 10  	.word	0x10010bfc

10003510 <simple_rtic::MockLed<_>::set_high::hc6d235af5a8cf6ef>:
10003510: b580         	push	{r7, lr}
10003512: af00         	add	r7, sp, #0x0
10003514: b094         	sub	sp, #0x50
10003516: 9004         	str	r0, [sp, #0x10]
10003518: 4817         	ldr	r0, [pc, #0x5c]         @ 0x10003578 <simple_rtic::MockLed<_>::set_high::hc6d235af5a8cf6ef+0x68>
1000351a: 9005         	str	r0, [sp, #0x14]
1000351c: e7ff         	b	0x1000351e <simple_rtic::MockLed<_>::set_high::hc6d235af5a8cf6ef+0xe> @ imm = #-0x2
1000351e: 4816         	ldr	r0, [pc, #0x58]         @ 0x10003578 <simple_rtic::MockLed<_>::set_high::hc6d235af5a8cf6ef+0x68>
10003520: 900c         	str	r0, [sp, #0x30]
10003522: 200d         	movs	r0, #0xd
10003524: 900d         	str	r0, [sp, #0x34]
10003526: 4815         	ldr	r0, [pc, #0x54]         @ 0x1000357c <simple_rtic::MockLed<_>::set_high::hc6d235af5a8cf6ef+0x6c>
10003528: 9006         	str	r0, [sp, #0x18]
1000352a: 900e         	str	r0, [sp, #0x38]
1000352c: 4814         	ldr	r0, [pc, #0x50]         @ 0x10003580 <simple_rtic::MockLed<_>::set_high::hc6d235af5a8cf6ef+0x70>
1000352e: 9003         	str	r0, [sp, #0xc]
10003530: 9007         	str	r0, [sp, #0x1c]
10003532: 900a         	str	r0, [sp, #0x28]
10003534: 900f         	str	r0, [sp, #0x3c]
10003536: 9010         	str	r0, [sp, #0x40]
10003538: f008 fdc5    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x8b8a
1000353c: 9001         	str	r0, [sp, #0x4]
1000353e: 900b         	str	r0, [sp, #0x2c]
10003540: 9008         	str	r0, [sp, #0x20]
10003542: 2000         	movs	r0, #0x0
10003544: 9002         	str	r0, [sp, #0x8]
10003546: f7fd fca0    	bl	0x10000e8a <<u32 as core::ops::bit::Not>::not::h922d2d19093bc4d3> @ imm = #-0x26c0
1000354a: 4601         	mov	r1, r0
1000354c: 9801         	ldr	r0, [sp, #0x4]
1000354e: f7fd fdd1    	bl	0x100010f4 <<u32 as core::ops::bit::BitAnd>::bitand::ha5903953a49e11fb> @ imm = #-0x245e
10003552: 9902         	ldr	r1, [sp, #0x8]
10003554: f7fd fdc6    	bl	0x100010e4 <<u32 as core::ops::bit::BitOr>::bitor::hc19b6201bc9ccf34> @ imm = #-0x2474
10003558: 9009         	str	r0, [sp, #0x24]
1000355a: a808         	add	r0, sp, #0x20
1000355c: a909         	add	r1, sp, #0x24
1000355e: f000 f811    	bl	0x10003584 <simple_rtic::MockLed<_>::set_high::{{closure}}::h676efda60692b08d> @ imm = #0x22
10003562: 4601         	mov	r1, r0
10003564: 9803         	ldr	r0, [sp, #0xc]
10003566: 6809         	ldr	r1, [r1]
10003568: 9011         	str	r0, [sp, #0x44]
1000356a: 9112         	str	r1, [sp, #0x48]
1000356c: 9013         	str	r0, [sp, #0x4c]
1000356e: f008 fe15    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x8c2a
10003572: b014         	add	sp, #0x50
10003574: bd80         	pop	{r7, pc}
10003576: 46c0         	mov	r8, r8
10003578: 00 40 01 40  	.word	0x40014000
1000357c: 68 40 01 40  	.word	0x40014068
10003580: 6c 40 01 40  	.word	0x4001406c

10003584 <simple_rtic::MockLed<_>::set_high::{{closure}}::h676efda60692b08d>:
10003584: b580         	push	{r7, lr}
10003586: af00         	add	r7, sp, #0x0
10003588: b092         	sub	sp, #0x48
1000358a: 460a         	mov	r2, r1
1000358c: 9005         	str	r0, [sp, #0x14]
1000358e: 9206         	str	r2, [sp, #0x18]
10003590: 920d         	str	r2, [sp, #0x34]
10003592: 920e         	str	r2, [sp, #0x38]
10003594: a80f         	add	r0, sp, #0x3c
10003596: 210c         	movs	r1, #0xc
10003598: 7001         	strb	r1, [r0]
1000359a: ab04         	add	r3, sp, #0x10
1000359c: 2003         	movs	r0, #0x3
1000359e: 7018         	strb	r0, [r3]
100035a0: 9b04         	ldr	r3, [sp, #0x10]
100035a2: 9207         	str	r2, [sp, #0x1c]
100035a4: a807         	add	r0, sp, #0x1c
100035a6: 7101         	strb	r1, [r0, #0x4]
100035a8: a809         	add	r0, sp, #0x24
100035aa: 7003         	strb	r3, [r0]
100035ac: a810         	add	r0, sp, #0x40
100035ae: 7003         	strb	r3, [r0]
100035b0: 7800         	ldrb	r0, [r0]
100035b2: 9002         	str	r0, [sp, #0x8]
100035b4: 920a         	str	r2, [sp, #0x28]
100035b6: aa0a         	add	r2, sp, #0x28
100035b8: 7111         	strb	r1, [r2, #0x4]
100035ba: a90c         	add	r1, sp, #0x30
100035bc: 7008         	strb	r0, [r1]
100035be: 980a         	ldr	r0, [sp, #0x28]
100035c0: 9001         	str	r0, [sp, #0x4]
100035c2: f002 fdaf    	bl	0x10006124 <rp2040_pac::generic::mask_u32::hc7080cfa0562be4f> @ imm = #0x2b5e
100035c6: 990b         	ldr	r1, [sp, #0x2c]
100035c8: f7fe fab8    	bl	0x10001b3c <<u32 as core::ops::bit::Shl<u8>>::shl::h812542cec0b8c163> @ imm = #-0x1a90
100035cc: f7fd fc5d    	bl	0x10000e8a <<u32 as core::ops::bit::Not>::not::h922d2d19093bc4d3> @ imm = #-0x2746
100035d0: 4601         	mov	r1, r0
100035d2: 9801         	ldr	r0, [sp, #0x4]
100035d4: f7fe faa6    	bl	0x10001b24 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h3e991570dd1d70a7> @ imm = #-0x1ab4
100035d8: 9802         	ldr	r0, [sp, #0x8]
100035da: 990a         	ldr	r1, [sp, #0x28]
100035dc: 9103         	str	r1, [sp, #0xc]
100035de: a911         	add	r1, sp, #0x44
100035e0: 7008         	strb	r0, [r1]
100035e2: f002 fd9f    	bl	0x10006124 <rp2040_pac::generic::mask_u32::hc7080cfa0562be4f> @ imm = #0x2b3e
100035e6: 4601         	mov	r1, r0
100035e8: 9802         	ldr	r0, [sp, #0x8]
100035ea: f7fd fd83    	bl	0x100010f4 <<u32 as core::ops::bit::BitAnd>::bitand::ha5903953a49e11fb> @ imm = #-0x24fa
100035ee: 990b         	ldr	r1, [sp, #0x2c]
100035f0: f7fe faa4    	bl	0x10001b3c <<u32 as core::ops::bit::Shl<u8>>::shl::h812542cec0b8c163> @ imm = #-0x1ab8
100035f4: 4601         	mov	r1, r0
100035f6: 9803         	ldr	r0, [sp, #0xc]
100035f8: f7fe fa88    	bl	0x10001b0c <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::h780b01b4b3989778> @ imm = #-0x1af0
100035fc: 980a         	ldr	r0, [sp, #0x28]
100035fe: b012         	add	sp, #0x48
10003600: bd80         	pop	{r7, pc}
10003602: d4d4         	bmi	0x100035ae <simple_rtic::MockLed<_>::set_high::{{closure}}::h676efda60692b08d+0x2a> @ imm = #-0x58

10003604 <simple_rtic::MockLed<_>::set_low::haacc5ef6bc022801>:
10003604: b580         	push	{r7, lr}
10003606: af00         	add	r7, sp, #0x0
10003608: b094         	sub	sp, #0x50
1000360a: 9004         	str	r0, [sp, #0x10]
1000360c: 4817         	ldr	r0, [pc, #0x5c]         @ 0x1000366c <simple_rtic::MockLed<_>::set_low::haacc5ef6bc022801+0x68>
1000360e: 9005         	str	r0, [sp, #0x14]
10003610: e7ff         	b	0x10003612 <simple_rtic::MockLed<_>::set_low::haacc5ef6bc022801+0xe> @ imm = #-0x2
10003612: 4816         	ldr	r0, [pc, #0x58]         @ 0x1000366c <simple_rtic::MockLed<_>::set_low::haacc5ef6bc022801+0x68>
10003614: 900c         	str	r0, [sp, #0x30]
10003616: 200d         	movs	r0, #0xd
10003618: 900d         	str	r0, [sp, #0x34]
1000361a: 4815         	ldr	r0, [pc, #0x54]         @ 0x10003670 <simple_rtic::MockLed<_>::set_low::haacc5ef6bc022801+0x6c>
1000361c: 9006         	str	r0, [sp, #0x18]
1000361e: 900e         	str	r0, [sp, #0x38]
10003620: 4814         	ldr	r0, [pc, #0x50]         @ 0x10003674 <simple_rtic::MockLed<_>::set_low::haacc5ef6bc022801+0x70>
10003622: 9003         	str	r0, [sp, #0xc]
10003624: 9007         	str	r0, [sp, #0x1c]
10003626: 900a         	str	r0, [sp, #0x28]
10003628: 900f         	str	r0, [sp, #0x3c]
1000362a: 9010         	str	r0, [sp, #0x40]
1000362c: f008 fd4b    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x8a96
10003630: 9001         	str	r0, [sp, #0x4]
10003632: 900b         	str	r0, [sp, #0x2c]
10003634: 9008         	str	r0, [sp, #0x20]
10003636: 2000         	movs	r0, #0x0
10003638: 9002         	str	r0, [sp, #0x8]
1000363a: f7fd fc26    	bl	0x10000e8a <<u32 as core::ops::bit::Not>::not::h922d2d19093bc4d3> @ imm = #-0x27b4
1000363e: 4601         	mov	r1, r0
10003640: 9801         	ldr	r0, [sp, #0x4]
10003642: f7fd fd57    	bl	0x100010f4 <<u32 as core::ops::bit::BitAnd>::bitand::ha5903953a49e11fb> @ imm = #-0x2552
10003646: 9902         	ldr	r1, [sp, #0x8]
10003648: f7fd fd4c    	bl	0x100010e4 <<u32 as core::ops::bit::BitOr>::bitor::hc19b6201bc9ccf34> @ imm = #-0x2568
1000364c: 9009         	str	r0, [sp, #0x24]
1000364e: a808         	add	r0, sp, #0x20
10003650: a909         	add	r1, sp, #0x24
10003652: f000 f811    	bl	0x10003678 <simple_rtic::MockLed<_>::set_low::{{closure}}::hebd3bbe43e981e31> @ imm = #0x22
10003656: 4601         	mov	r1, r0
10003658: 9803         	ldr	r0, [sp, #0xc]
1000365a: 6809         	ldr	r1, [r1]
1000365c: 9011         	str	r0, [sp, #0x44]
1000365e: 9112         	str	r1, [sp, #0x48]
10003660: 9013         	str	r0, [sp, #0x4c]
10003662: f008 fd9b    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x8b36
10003666: b014         	add	sp, #0x50
10003668: bd80         	pop	{r7, pc}
1000366a: 46c0         	mov	r8, r8
1000366c: 00 40 01 40  	.word	0x40014000
10003670: 68 40 01 40  	.word	0x40014068
10003674: 6c 40 01 40  	.word	0x4001406c

10003678 <simple_rtic::MockLed<_>::set_low::{{closure}}::hebd3bbe43e981e31>:
10003678: b580         	push	{r7, lr}
1000367a: af00         	add	r7, sp, #0x0
1000367c: b092         	sub	sp, #0x48
1000367e: 460a         	mov	r2, r1
10003680: 9005         	str	r0, [sp, #0x14]
10003682: 9206         	str	r2, [sp, #0x18]
10003684: 920d         	str	r2, [sp, #0x34]
10003686: 920e         	str	r2, [sp, #0x38]
10003688: a80f         	add	r0, sp, #0x3c
1000368a: 210c         	movs	r1, #0xc
1000368c: 7001         	strb	r1, [r0]
1000368e: ab04         	add	r3, sp, #0x10
10003690: 2002         	movs	r0, #0x2
10003692: 7018         	strb	r0, [r3]
10003694: 9b04         	ldr	r3, [sp, #0x10]
10003696: 9207         	str	r2, [sp, #0x1c]
10003698: a807         	add	r0, sp, #0x1c
1000369a: 7101         	strb	r1, [r0, #0x4]
1000369c: a809         	add	r0, sp, #0x24
1000369e: 7003         	strb	r3, [r0]
100036a0: a810         	add	r0, sp, #0x40
100036a2: 7003         	strb	r3, [r0]
100036a4: 7800         	ldrb	r0, [r0]
100036a6: 9002         	str	r0, [sp, #0x8]
100036a8: 920a         	str	r2, [sp, #0x28]
100036aa: aa0a         	add	r2, sp, #0x28
100036ac: 7111         	strb	r1, [r2, #0x4]
100036ae: a90c         	add	r1, sp, #0x30
100036b0: 7008         	strb	r0, [r1]
100036b2: 980a         	ldr	r0, [sp, #0x28]
100036b4: 9001         	str	r0, [sp, #0x4]
100036b6: f002 fd35    	bl	0x10006124 <rp2040_pac::generic::mask_u32::hc7080cfa0562be4f> @ imm = #0x2a6a
100036ba: 990b         	ldr	r1, [sp, #0x2c]
100036bc: f7fe fa3e    	bl	0x10001b3c <<u32 as core::ops::bit::Shl<u8>>::shl::h812542cec0b8c163> @ imm = #-0x1b84
100036c0: f7fd fbe3    	bl	0x10000e8a <<u32 as core::ops::bit::Not>::not::h922d2d19093bc4d3> @ imm = #-0x283a
100036c4: 4601         	mov	r1, r0
100036c6: 9801         	ldr	r0, [sp, #0x4]
100036c8: f7fe fa2c    	bl	0x10001b24 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h3e991570dd1d70a7> @ imm = #-0x1ba8
100036cc: 9802         	ldr	r0, [sp, #0x8]
100036ce: 990a         	ldr	r1, [sp, #0x28]
100036d0: 9103         	str	r1, [sp, #0xc]
100036d2: a911         	add	r1, sp, #0x44
100036d4: 7008         	strb	r0, [r1]
100036d6: f002 fd25    	bl	0x10006124 <rp2040_pac::generic::mask_u32::hc7080cfa0562be4f> @ imm = #0x2a4a
100036da: 4601         	mov	r1, r0
100036dc: 9802         	ldr	r0, [sp, #0x8]
100036de: f7fd fd09    	bl	0x100010f4 <<u32 as core::ops::bit::BitAnd>::bitand::ha5903953a49e11fb> @ imm = #-0x25ee
100036e2: 990b         	ldr	r1, [sp, #0x2c]
100036e4: f7fe fa2a    	bl	0x10001b3c <<u32 as core::ops::bit::Shl<u8>>::shl::h812542cec0b8c163> @ imm = #-0x1bac
100036e8: 4601         	mov	r1, r0
100036ea: 9803         	ldr	r0, [sp, #0xc]
100036ec: f7fe fa0e    	bl	0x10001b0c <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::h780b01b4b3989778> @ imm = #-0x1be4
100036f0: 980a         	ldr	r0, [sp, #0x28]
100036f2: b012         	add	sp, #0x48
100036f4: bd80         	pop	{r7, pc}
100036f6: d4d4         	bmi	0x100036a2 <simple_rtic::MockLed<_>::set_low::{{closure}}::hebd3bbe43e981e31+0x2a> @ imm = #-0x58

100036f8 <<simple_rtic::MockLed<_> as layout_trait::GetLayout>::get_layout::hce2c7b7ff442d2be>:
100036f8: b580         	push	{r7, lr}
100036fa: af00         	add	r7, sp, #0x0
100036fc: b092         	sub	sp, #0x48
100036fe: 9103         	str	r1, [sp, #0xc]
10003700: 4602         	mov	r2, r0
10003702: 920a         	str	r2, [sp, #0x28]
10003704: 910b         	str	r1, [sp, #0x2c]
10003706: 920c         	str	r2, [sp, #0x30]
10003708: a804         	add	r0, sp, #0x10
1000370a: 2300         	movs	r3, #0x0
1000370c: f7ff f9b6    	bl	0x10002a7c <heapless::vec::Vec<T,_>::push::h1bc527dcf9fef357> @ imm = #-0xc94
10003710: 9804         	ldr	r0, [sp, #0x10]
10003712: 2800         	cmp	r0, #0x0
10003714: d00c         	beq	0x10003730 <<simple_rtic::MockLed<_> as layout_trait::GetLayout>::get_layout::hce2c7b7ff442d2be+0x38> @ imm = #0x18
10003716: e7ff         	b	0x10003718 <<simple_rtic::MockLed<_> as layout_trait::GetLayout>::get_layout::hce2c7b7ff442d2be+0x20> @ imm = #-0x2
10003718: 9905         	ldr	r1, [sp, #0x14]
1000371a: 9806         	ldr	r0, [sp, #0x18]
1000371c: 9110         	str	r1, [sp, #0x40]
1000371e: 9011         	str	r0, [sp, #0x44]
10003720: 4812         	ldr	r0, [pc, #0x48]         @ 0x1000376c <<simple_rtic::MockLed<_> as layout_trait::GetLayout>::get_layout::hce2c7b7ff442d2be+0x74>
10003722: 9000         	str	r0, [sp]
10003724: 4812         	ldr	r0, [pc, #0x48]         @ 0x10003770 <<simple_rtic::MockLed<_> as layout_trait::GetLayout>::get_layout::hce2c7b7ff442d2be+0x78>
10003726: 4b13         	ldr	r3, [pc, #0x4c]         @ 0x10003774 <<simple_rtic::MockLed<_> as layout_trait::GetLayout>::get_layout::hce2c7b7ff442d2be+0x7c>
10003728: 212b         	movs	r1, #0x2b
1000372a: aa10         	add	r2, sp, #0x40
1000372c: f008 feb8    	bl	0x1000c4a0 <core::result::unwrap_failed::hc39ba1cc7ce86577> @ imm = #0x8d70
10003730: 4811         	ldr	r0, [pc, #0x44]         @ 0x10003778 <<simple_rtic::MockLed<_> as layout_trait::GetLayout>::get_layout::hce2c7b7ff442d2be+0x80>
10003732: 9002         	str	r0, [sp, #0x8]
10003734: 900d         	str	r0, [sp, #0x34]
10003736: f7fd fdbc    	bl	0x100012b2 <core::mem::size_of_val::h525e65f28ed1fc04> @ imm = #-0x2488
1000373a: 9903         	ldr	r1, [sp, #0xc]
1000373c: 9a02         	ldr	r2, [sp, #0x8]
1000373e: 4603         	mov	r3, r0
10003740: a807         	add	r0, sp, #0x1c
10003742: f7ff f99b    	bl	0x10002a7c <heapless::vec::Vec<T,_>::push::h1bc527dcf9fef357> @ imm = #-0xcca
10003746: 9807         	ldr	r0, [sp, #0x1c]
10003748: 2800         	cmp	r0, #0x0
1000374a: d00c         	beq	0x10003766 <<simple_rtic::MockLed<_> as layout_trait::GetLayout>::get_layout::hce2c7b7ff442d2be+0x6e> @ imm = #0x18
1000374c: e7ff         	b	0x1000374e <<simple_rtic::MockLed<_> as layout_trait::GetLayout>::get_layout::hce2c7b7ff442d2be+0x56> @ imm = #-0x2
1000374e: 9908         	ldr	r1, [sp, #0x20]
10003750: 9809         	ldr	r0, [sp, #0x24]
10003752: 910e         	str	r1, [sp, #0x38]
10003754: 900f         	str	r0, [sp, #0x3c]
10003756: 4809         	ldr	r0, [pc, #0x24]         @ 0x1000377c <<simple_rtic::MockLed<_> as layout_trait::GetLayout>::get_layout::hce2c7b7ff442d2be+0x84>
10003758: 9000         	str	r0, [sp]
1000375a: 4805         	ldr	r0, [pc, #0x14]         @ 0x10003770 <<simple_rtic::MockLed<_> as layout_trait::GetLayout>::get_layout::hce2c7b7ff442d2be+0x78>
1000375c: 4b05         	ldr	r3, [pc, #0x14]         @ 0x10003774 <<simple_rtic::MockLed<_> as layout_trait::GetLayout>::get_layout::hce2c7b7ff442d2be+0x7c>
1000375e: 212b         	movs	r1, #0x2b
10003760: aa0e         	add	r2, sp, #0x38
10003762: f008 fe9d    	bl	0x1000c4a0 <core::result::unwrap_failed::hc39ba1cc7ce86577> @ imm = #0x8d3a
10003766: b012         	add	sp, #0x48
10003768: bd80         	pop	{r7, pc}
1000376a: 46c0         	mov	r8, r8
1000376c: 0c 0c 01 10  	.word	0x10010c0c
10003770: a4 e4 00 10  	.word	0x1000e4a4
10003774: 94 e4 00 10  	.word	0x1000e494
10003778: 00 40 01 40  	.word	0x40014000
1000377c: 1c 0c 01 10  	.word	0x10010c1c

10003780 <__symex_init_shared_resources>:
10003780: b580         	push	{r7, lr}
10003782: af00         	add	r7, sp, #0x0
10003784: b084         	sub	sp, #0x10
10003786: 480b         	ldr	r0, [pc, #0x2c]         @ 0x100037b4 <__symex_init_shared_resources+0x34>
10003788: 9002         	str	r0, [sp, #0x8]
1000378a: 9003         	str	r0, [sp, #0xc]
1000378c: 2800         	cmp	r0, #0x0
1000378e: d005         	beq	0x1000379c <__symex_init_shared_resources+0x1c> @ imm = #0xa
10003790: e7ff         	b	0x10003792 <__symex_init_shared_resources+0x12> @ imm = #-0x2
10003792: 4808         	ldr	r0, [pc, #0x20]         @ 0x100037b4 <__symex_init_shared_resources+0x34>
10003794: 9001         	str	r0, [sp, #0x4]
10003796: 2800         	cmp	r0, #0x0
10003798: d103         	bne	0x100037a2 <__symex_init_shared_resources+0x22> @ imm = #0x6
1000379a: e008         	b	0x100037ae <__symex_init_shared_resources+0x2e> @ imm = #0x10
1000379c: 4806         	ldr	r0, [pc, #0x18]         @ 0x100037b8 <__symex_init_shared_resources+0x38>
1000379e: f008 fe6d    	bl	0x1000c47c <core::panicking::panic_null_pointer_dereference::hbb12e6a8f55b3514> @ imm = #0x8cda
100037a2: 4804         	ldr	r0, [pc, #0x10]         @ 0x100037b4 <__symex_init_shared_resources+0x34>
100037a4: 2103         	movs	r1, #0x3
100037a6: f7ff fdc3    	bl	0x10003330 <symex_lib::set_max_priority::hcb1817f6fa0d7417> @ imm = #-0x47a
100037aa: b004         	add	sp, #0x10
100037ac: bd80         	pop	{r7, pc}
100037ae: 4802         	ldr	r0, [pc, #0x8]          @ 0x100037b8 <__symex_init_shared_resources+0x38>
100037b0: f008 fe64    	bl	0x1000c47c <core::panicking::panic_null_pointer_dereference::hbb12e6a8f55b3514> @ imm = #0x8cc8
100037b4: fc fb 03 20  	.word	0x2003fbfc
100037b8: 2c 0c 01 10  	.word	0x10010c2c

100037bc <__symex_init_TIMER_IRQ_3>:
100037bc: b580         	push	{r7, lr}
100037be: af00         	add	r7, sp, #0x0
100037c0: b088         	sub	sp, #0x20
100037c2: 481d         	ldr	r0, [pc, #0x74]         @ 0x10003838 <__symex_init_TIMER_IRQ_3+0x7c>
100037c4: 9006         	str	r0, [sp, #0x18]
100037c6: 9007         	str	r0, [sp, #0x1c]
100037c8: 2800         	cmp	r0, #0x0
100037ca: d005         	beq	0x100037d8 <__symex_init_TIMER_IRQ_3+0x1c> @ imm = #0xa
100037cc: e7ff         	b	0x100037ce <__symex_init_TIMER_IRQ_3+0x12> @ imm = #-0x2
100037ce: 481a         	ldr	r0, [pc, #0x68]         @ 0x10003838 <__symex_init_TIMER_IRQ_3+0x7c>
100037d0: 9003         	str	r0, [sp, #0xc]
100037d2: 2800         	cmp	r0, #0x0
100037d4: d103         	bne	0x100037de <__symex_init_TIMER_IRQ_3+0x22> @ imm = #0x6
100037d6: e00d         	b	0x100037f4 <__symex_init_TIMER_IRQ_3+0x38> @ imm = #0x1a
100037d8: 4818         	ldr	r0, [pc, #0x60]         @ 0x1000383c <__symex_init_TIMER_IRQ_3+0x80>
100037da: f008 fe4f    	bl	0x1000c47c <core::panicking::panic_null_pointer_dereference::hbb12e6a8f55b3514> @ imm = #0x8c9e
100037de: 4818         	ldr	r0, [pc, #0x60]         @ 0x10003840 <__symex_init_TIMER_IRQ_3+0x84>
100037e0: 4915         	ldr	r1, [pc, #0x54]         @ 0x10003838 <__symex_init_TIMER_IRQ_3+0x7c>
100037e2: 9102         	str	r1, [sp, #0x8]
100037e4: f7ff faf8    	bl	0x10002dd8 <symex_lib::grant_access::h30329ce8e3c8dac9> @ imm = #-0xa10
100037e8: 9802         	ldr	r0, [sp, #0x8]
100037ea: 9004         	str	r0, [sp, #0x10]
100037ec: 9005         	str	r0, [sp, #0x14]
100037ee: 2800         	cmp	r0, #0x0
100037f0: d103         	bne	0x100037fa <__symex_init_TIMER_IRQ_3+0x3e> @ imm = #0x6
100037f2: e01d         	b	0x10003830 <__symex_init_TIMER_IRQ_3+0x74> @ imm = #0x3a
100037f4: 4811         	ldr	r0, [pc, #0x44]         @ 0x1000383c <__symex_init_TIMER_IRQ_3+0x80>
100037f6: f008 fe41    	bl	0x1000c47c <core::panicking::panic_null_pointer_dereference::hbb12e6a8f55b3514> @ imm = #0x8c82
100037fa: 4811         	ldr	r0, [pc, #0x44]         @ 0x10003840 <__symex_init_TIMER_IRQ_3+0x84>
100037fc: 9001         	str	r0, [sp, #0x4]
100037fe: 490e         	ldr	r1, [pc, #0x38]         @ 0x10003838 <__symex_init_TIMER_IRQ_3+0x7c>
10003800: 9100         	str	r1, [sp]
10003802: f7ff fa89    	bl	0x10002d18 <symex_lib::grant_access::h012bf463892480b0> @ imm = #-0xaee
10003806: 9900         	ldr	r1, [sp]
10003808: 9801         	ldr	r0, [sp, #0x4]
1000380a: f7ff fc05    	bl	0x10003018 <symex_lib::grant_access::h801bfedcd992b9cb> @ imm = #-0x7f6
1000380e: 9801         	ldr	r0, [sp, #0x4]
10003810: 2101         	movs	r1, #0x1
10003812: 0709         	lsls	r1, r1, #0x1c
10003814: 4a0b         	ldr	r2, [pc, #0x2c]         @ 0x10003844 <__symex_init_TIMER_IRQ_3+0x88>
10003816: f002 fb65    	bl	0x10005ee4 <__symex_allow_access> @ imm = #0x26ca
1000381a: 9801         	ldr	r0, [sp, #0x4]
1000381c: 2102         	movs	r1, #0x2
1000381e: f002 fb76    	bl	0x10005f0e <__symex_set_priority> @ imm = #0x26ec
10003822: 9801         	ldr	r0, [sp, #0x4]
10003824: f002 fb83    	bl	0x10005f2e <analyze>    @ imm = #0x2706
10003828: f7fd fe76    	bl	0x10001518 <core::hint::black_box::hca14cde926edf4df> @ imm = #-0x2314
1000382c: b008         	add	sp, #0x20
1000382e: bd80         	pop	{r7, pc}
10003830: 4802         	ldr	r0, [pc, #0x8]          @ 0x1000383c <__symex_init_TIMER_IRQ_3+0x80>
10003832: f008 fe23    	bl	0x1000c47c <core::panicking::panic_null_pointer_dereference::hbb12e6a8f55b3514> @ imm = #0x8c46
10003836: 46c0         	mov	r8, r8
10003838: fc fb 03 20  	.word	0x2003fbfc
1000383c: 2c 0c 01 10  	.word	0x10010c2c
10003840: d1 43 00 10  	.word	0x100043d1
10003844: 00 ff 1f 10  	.word	0x101fff00

10003848 <__symex_init_TIMER_IRQ_2>:
10003848: b580         	push	{r7, lr}
1000384a: af00         	add	r7, sp, #0x0
1000384c: b09a         	sub	sp, #0x68
1000384e: 484c         	ldr	r0, [pc, #0x130]        @ 0x10003980 <__symex_init_TIMER_IRQ_2+0x138>
10003850: 9018         	str	r0, [sp, #0x60]
10003852: 9019         	str	r0, [sp, #0x64]
10003854: 2800         	cmp	r0, #0x0
10003856: d005         	beq	0x10003864 <__symex_init_TIMER_IRQ_2+0x1c> @ imm = #0xa
10003858: e7ff         	b	0x1000385a <__symex_init_TIMER_IRQ_2+0x12> @ imm = #-0x2
1000385a: 4849         	ldr	r0, [pc, #0x124]        @ 0x10003980 <__symex_init_TIMER_IRQ_2+0x138>
1000385c: 900d         	str	r0, [sp, #0x34]
1000385e: 2800         	cmp	r0, #0x0
10003860: d103         	bne	0x1000386a <__symex_init_TIMER_IRQ_2+0x22> @ imm = #0x6
10003862: e00d         	b	0x10003880 <__symex_init_TIMER_IRQ_2+0x38> @ imm = #0x1a
10003864: 4847         	ldr	r0, [pc, #0x11c]        @ 0x10003984 <__symex_init_TIMER_IRQ_2+0x13c>
10003866: f008 fe09    	bl	0x1000c47c <core::panicking::panic_null_pointer_dereference::hbb12e6a8f55b3514> @ imm = #0x8c12
1000386a: 4847         	ldr	r0, [pc, #0x11c]        @ 0x10003988 <__symex_init_TIMER_IRQ_2+0x140>
1000386c: 4944         	ldr	r1, [pc, #0x110]        @ 0x10003980 <__symex_init_TIMER_IRQ_2+0x138>
1000386e: 910a         	str	r1, [sp, #0x28]
10003870: f7ff fab2    	bl	0x10002dd8 <symex_lib::grant_access::h30329ce8e3c8dac9> @ imm = #-0xa9c
10003874: 980a         	ldr	r0, [sp, #0x28]
10003876: 9016         	str	r0, [sp, #0x58]
10003878: 9017         	str	r0, [sp, #0x5c]
1000387a: 2800         	cmp	r0, #0x0
1000387c: d103         	bne	0x10003886 <__symex_init_TIMER_IRQ_2+0x3e> @ imm = #0x6
1000387e: e018         	b	0x100038b2 <__symex_init_TIMER_IRQ_2+0x6a> @ imm = #0x30
10003880: 4840         	ldr	r0, [pc, #0x100]        @ 0x10003984 <__symex_init_TIMER_IRQ_2+0x13c>
10003882: f008 fdfb    	bl	0x1000c47c <core::panicking::panic_null_pointer_dereference::hbb12e6a8f55b3514> @ imm = #0x8bf6
10003886: 4840         	ldr	r0, [pc, #0x100]        @ 0x10003988 <__symex_init_TIMER_IRQ_2+0x140>
10003888: 9009         	str	r0, [sp, #0x24]
1000388a: 493d         	ldr	r1, [pc, #0xf4]         @ 0x10003980 <__symex_init_TIMER_IRQ_2+0x138>
1000388c: 9108         	str	r1, [sp, #0x20]
1000388e: f7ff fa43    	bl	0x10002d18 <symex_lib::grant_access::h012bf463892480b0> @ imm = #-0xb7a
10003892: 9908         	ldr	r1, [sp, #0x20]
10003894: 9809         	ldr	r0, [sp, #0x24]
10003896: f7ff fbbf    	bl	0x10003018 <symex_lib::grant_access::h801bfedcd992b9cb> @ imm = #-0x882
1000389a: 9809         	ldr	r0, [sp, #0x24]
1000389c: 2101         	movs	r1, #0x1
1000389e: 0709         	lsls	r1, r1, #0x1c
100038a0: 4a3a         	ldr	r2, [pc, #0xe8]         @ 0x1000398c <__symex_init_TIMER_IRQ_2+0x144>
100038a2: f002 fb1f    	bl	0x10005ee4 <__symex_allow_access> @ imm = #0x263e
100038a6: 483a         	ldr	r0, [pc, #0xe8]         @ 0x10003990 <__symex_init_TIMER_IRQ_2+0x148>
100038a8: 9010         	str	r0, [sp, #0x40]
100038aa: 9011         	str	r0, [sp, #0x44]
100038ac: 2800         	cmp	r0, #0x0
100038ae: d103         	bne	0x100038b8 <__symex_init_TIMER_IRQ_2+0x70> @ imm = #0x6
100038b0: e007         	b	0x100038c2 <__symex_init_TIMER_IRQ_2+0x7a> @ imm = #0xe
100038b2: 4834         	ldr	r0, [pc, #0xd0]         @ 0x10003984 <__symex_init_TIMER_IRQ_2+0x13c>
100038b4: f008 fde2    	bl	0x1000c47c <core::panicking::panic_null_pointer_dereference::hbb12e6a8f55b3514> @ imm = #0x8bc4
100038b8: 4835         	ldr	r0, [pc, #0xd4]         @ 0x10003990 <__symex_init_TIMER_IRQ_2+0x148>
100038ba: 900b         	str	r0, [sp, #0x2c]
100038bc: 2800         	cmp	r0, #0x0
100038be: d103         	bne	0x100038c8 <__symex_init_TIMER_IRQ_2+0x80> @ imm = #0x6
100038c0: e00d         	b	0x100038de <__symex_init_TIMER_IRQ_2+0x96> @ imm = #0x1a
100038c2: 4830         	ldr	r0, [pc, #0xc0]         @ 0x10003984 <__symex_init_TIMER_IRQ_2+0x13c>
100038c4: f008 fdda    	bl	0x1000c47c <core::panicking::panic_null_pointer_dereference::hbb12e6a8f55b3514> @ imm = #0x8bb4
100038c8: 482f         	ldr	r0, [pc, #0xbc]         @ 0x10003988 <__symex_init_TIMER_IRQ_2+0x140>
100038ca: 4931         	ldr	r1, [pc, #0xc4]         @ 0x10003990 <__symex_init_TIMER_IRQ_2+0x148>
100038cc: 9107         	str	r1, [sp, #0x1c]
100038ce: f7ff fb43    	bl	0x10002f58 <symex_lib::grant_access::h73f67e540c78f8fb> @ imm = #-0x97a
100038d2: 9807         	ldr	r0, [sp, #0x1c]
100038d4: 900e         	str	r0, [sp, #0x38]
100038d6: 900f         	str	r0, [sp, #0x3c]
100038d8: 2800         	cmp	r0, #0x0
100038da: d103         	bne	0x100038e4 <__symex_init_TIMER_IRQ_2+0x9c> @ imm = #0x6
100038dc: e018         	b	0x10003910 <__symex_init_TIMER_IRQ_2+0xc8> @ imm = #0x30
100038de: 4829         	ldr	r0, [pc, #0xa4]         @ 0x10003984 <__symex_init_TIMER_IRQ_2+0x13c>
100038e0: f008 fdcc    	bl	0x1000c47c <core::panicking::panic_null_pointer_dereference::hbb12e6a8f55b3514> @ imm = #0x8b98
100038e4: 4828         	ldr	r0, [pc, #0xa0]         @ 0x10003988 <__symex_init_TIMER_IRQ_2+0x140>
100038e6: 9006         	str	r0, [sp, #0x18]
100038e8: 4929         	ldr	r1, [pc, #0xa4]         @ 0x10003990 <__symex_init_TIMER_IRQ_2+0x148>
100038ea: 9105         	str	r1, [sp, #0x14]
100038ec: f7ff fc54    	bl	0x10003198 <symex_lib::grant_access::hc4d26217fbfd0ab0> @ imm = #-0x758
100038f0: 9905         	ldr	r1, [sp, #0x14]
100038f2: 9806         	ldr	r0, [sp, #0x18]
100038f4: f7ff fcb0    	bl	0x10003258 <symex_lib::grant_access::hf1199542d32ecac7> @ imm = #-0x6a0
100038f8: 9806         	ldr	r0, [sp, #0x18]
100038fa: 2101         	movs	r1, #0x1
100038fc: 0709         	lsls	r1, r1, #0x1c
100038fe: 4a23         	ldr	r2, [pc, #0x8c]         @ 0x1000398c <__symex_init_TIMER_IRQ_2+0x144>
10003900: f002 faf0    	bl	0x10005ee4 <__symex_allow_access> @ imm = #0x25e0
10003904: 4823         	ldr	r0, [pc, #0x8c]         @ 0x10003994 <__symex_init_TIMER_IRQ_2+0x14c>
10003906: 9014         	str	r0, [sp, #0x50]
10003908: 9015         	str	r0, [sp, #0x54]
1000390a: 2800         	cmp	r0, #0x0
1000390c: d103         	bne	0x10003916 <__symex_init_TIMER_IRQ_2+0xce> @ imm = #0x6
1000390e: e007         	b	0x10003920 <__symex_init_TIMER_IRQ_2+0xd8> @ imm = #0xe
10003910: 481c         	ldr	r0, [pc, #0x70]         @ 0x10003984 <__symex_init_TIMER_IRQ_2+0x13c>
10003912: f008 fdb3    	bl	0x1000c47c <core::panicking::panic_null_pointer_dereference::hbb12e6a8f55b3514> @ imm = #0x8b66
10003916: 481f         	ldr	r0, [pc, #0x7c]         @ 0x10003994 <__symex_init_TIMER_IRQ_2+0x14c>
10003918: 900c         	str	r0, [sp, #0x30]
1000391a: 2800         	cmp	r0, #0x0
1000391c: d103         	bne	0x10003926 <__symex_init_TIMER_IRQ_2+0xde> @ imm = #0x6
1000391e: e00d         	b	0x1000393c <__symex_init_TIMER_IRQ_2+0xf4> @ imm = #0x1a
10003920: 4818         	ldr	r0, [pc, #0x60]         @ 0x10003984 <__symex_init_TIMER_IRQ_2+0x13c>
10003922: f008 fdab    	bl	0x1000c47c <core::panicking::panic_null_pointer_dereference::hbb12e6a8f55b3514> @ imm = #0x8b56
10003926: 4818         	ldr	r0, [pc, #0x60]         @ 0x10003988 <__symex_init_TIMER_IRQ_2+0x140>
10003928: 491a         	ldr	r1, [pc, #0x68]         @ 0x10003994 <__symex_init_TIMER_IRQ_2+0x14c>
1000392a: 9104         	str	r1, [sp, #0x10]
1000392c: f7ff fa54    	bl	0x10002dd8 <symex_lib::grant_access::h30329ce8e3c8dac9> @ imm = #-0xb58
10003930: 9804         	ldr	r0, [sp, #0x10]
10003932: 9012         	str	r0, [sp, #0x48]
10003934: 9013         	str	r0, [sp, #0x4c]
10003936: 2800         	cmp	r0, #0x0
10003938: d103         	bne	0x10003942 <__symex_init_TIMER_IRQ_2+0xfa> @ imm = #0x6
1000393a: e01e         	b	0x1000397a <__symex_init_TIMER_IRQ_2+0x132> @ imm = #0x3c
1000393c: 4811         	ldr	r0, [pc, #0x44]         @ 0x10003984 <__symex_init_TIMER_IRQ_2+0x13c>
1000393e: f008 fd9d    	bl	0x1000c47c <core::panicking::panic_null_pointer_dereference::hbb12e6a8f55b3514> @ imm = #0x8b3a
10003942: 4811         	ldr	r0, [pc, #0x44]         @ 0x10003988 <__symex_init_TIMER_IRQ_2+0x140>
10003944: 9003         	str	r0, [sp, #0xc]
10003946: 4913         	ldr	r1, [pc, #0x4c]         @ 0x10003994 <__symex_init_TIMER_IRQ_2+0x14c>
10003948: 9101         	str	r1, [sp, #0x4]
1000394a: f7ff f9e5    	bl	0x10002d18 <symex_lib::grant_access::h012bf463892480b0> @ imm = #-0xc36
1000394e: 9901         	ldr	r1, [sp, #0x4]
10003950: 9803         	ldr	r0, [sp, #0xc]
10003952: f7ff fb61    	bl	0x10003018 <symex_lib::grant_access::h801bfedcd992b9cb> @ imm = #-0x93e
10003956: 9803         	ldr	r0, [sp, #0xc]
10003958: 2101         	movs	r1, #0x1
1000395a: 9102         	str	r1, [sp, #0x8]
1000395c: 0709         	lsls	r1, r1, #0x1c
1000395e: 4a0b         	ldr	r2, [pc, #0x2c]         @ 0x1000398c <__symex_init_TIMER_IRQ_2+0x144>
10003960: f002 fac0    	bl	0x10005ee4 <__symex_allow_access> @ imm = #0x2580
10003964: 9902         	ldr	r1, [sp, #0x8]
10003966: 9803         	ldr	r0, [sp, #0xc]
10003968: f002 fad1    	bl	0x10005f0e <__symex_set_priority> @ imm = #0x25a2
1000396c: 9803         	ldr	r0, [sp, #0xc]
1000396e: f002 fade    	bl	0x10005f2e <analyze>    @ imm = #0x25bc
10003972: f7fd fdd6    	bl	0x10001522 <core::hint::black_box::hca50ecabf1603962> @ imm = #-0x2454
10003976: b01a         	add	sp, #0x68
10003978: bd80         	pop	{r7, pc}
1000397a: 4802         	ldr	r0, [pc, #0x8]          @ 0x10003984 <__symex_init_TIMER_IRQ_2+0x13c>
1000397c: f008 fd7e    	bl	0x1000c47c <core::panicking::panic_null_pointer_dereference::hbb12e6a8f55b3514> @ imm = #0x8afc
10003980: fd fb 03 20  	.word	0x2003fbfd
10003984: 2c 0c 01 10  	.word	0x10010c2c
10003988: 09 44 00 10  	.word	0x10004409
1000398c: 00 ff 1f 10  	.word	0x101fff00
10003990: fe fb 03 20  	.word	0x2003fbfe
10003994: fc fb 03 20  	.word	0x2003fbfc

10003998 <__symex_init_IO_IRQ_BANK0>:
10003998: b580         	push	{r7, lr}
1000399a: af00         	add	r7, sp, #0x0
1000399c: b090         	sub	sp, #0x40
1000399e: 4834         	ldr	r0, [pc, #0xd0]         @ 0x10003a70 <__symex_init_IO_IRQ_BANK0+0xd8>
100039a0: 900a         	str	r0, [sp, #0x28]
100039a2: 900b         	str	r0, [sp, #0x2c]
100039a4: 2800         	cmp	r0, #0x0
100039a6: d005         	beq	0x100039b4 <__symex_init_IO_IRQ_BANK0+0x1c> @ imm = #0xa
100039a8: e7ff         	b	0x100039aa <__symex_init_IO_IRQ_BANK0+0x12> @ imm = #-0x2
100039aa: 4831         	ldr	r0, [pc, #0xc4]         @ 0x10003a70 <__symex_init_IO_IRQ_BANK0+0xd8>
100039ac: 9006         	str	r0, [sp, #0x18]
100039ae: 2800         	cmp	r0, #0x0
100039b0: d103         	bne	0x100039ba <__symex_init_IO_IRQ_BANK0+0x22> @ imm = #0x6
100039b2: e00d         	b	0x100039d0 <__symex_init_IO_IRQ_BANK0+0x38> @ imm = #0x1a
100039b4: 482f         	ldr	r0, [pc, #0xbc]         @ 0x10003a74 <__symex_init_IO_IRQ_BANK0+0xdc>
100039b6: f008 fd61    	bl	0x1000c47c <core::panicking::panic_null_pointer_dereference::hbb12e6a8f55b3514> @ imm = #0x8ac2
100039ba: 482f         	ldr	r0, [pc, #0xbc]         @ 0x10003a78 <__symex_init_IO_IRQ_BANK0+0xe0>
100039bc: 492c         	ldr	r1, [pc, #0xb0]         @ 0x10003a70 <__symex_init_IO_IRQ_BANK0+0xd8>
100039be: 9105         	str	r1, [sp, #0x14]
100039c0: f7ff fb8a    	bl	0x100030d8 <symex_lib::grant_access::ha102dfa1f8942e20> @ imm = #-0x8ec
100039c4: 9805         	ldr	r0, [sp, #0x14]
100039c6: 9008         	str	r0, [sp, #0x20]
100039c8: 9009         	str	r0, [sp, #0x24]
100039ca: 2800         	cmp	r0, #0x0
100039cc: d103         	bne	0x100039d6 <__symex_init_IO_IRQ_BANK0+0x3e> @ imm = #0x6
100039ce: e018         	b	0x10003a02 <__symex_init_IO_IRQ_BANK0+0x6a> @ imm = #0x30
100039d0: 4828         	ldr	r0, [pc, #0xa0]         @ 0x10003a74 <__symex_init_IO_IRQ_BANK0+0xdc>
100039d2: f008 fd53    	bl	0x1000c47c <core::panicking::panic_null_pointer_dereference::hbb12e6a8f55b3514> @ imm = #0x8aa6
100039d6: 4828         	ldr	r0, [pc, #0xa0]         @ 0x10003a78 <__symex_init_IO_IRQ_BANK0+0xe0>
100039d8: 9004         	str	r0, [sp, #0x10]
100039da: 4925         	ldr	r1, [pc, #0x94]         @ 0x10003a70 <__symex_init_IO_IRQ_BANK0+0xd8>
100039dc: 9103         	str	r1, [sp, #0xc]
100039de: f7ff fa5b    	bl	0x10002e98 <symex_lib::grant_access::h5db3418f942a639b> @ imm = #-0xb4a
100039e2: 9903         	ldr	r1, [sp, #0xc]
100039e4: 9804         	ldr	r0, [sp, #0x10]
100039e6: f7ff f937    	bl	0x10002c58 <symex_lib::grant_access::h008dbff15bc8e35d> @ imm = #-0xd92
100039ea: 9804         	ldr	r0, [sp, #0x10]
100039ec: 2101         	movs	r1, #0x1
100039ee: 0709         	lsls	r1, r1, #0x1c
100039f0: 4a22         	ldr	r2, [pc, #0x88]         @ 0x10003a7c <__symex_init_IO_IRQ_BANK0+0xe4>
100039f2: f002 fa77    	bl	0x10005ee4 <__symex_allow_access> @ imm = #0x24ee
100039f6: 4822         	ldr	r0, [pc, #0x88]         @ 0x10003a80 <__symex_init_IO_IRQ_BANK0+0xe8>
100039f8: 900e         	str	r0, [sp, #0x38]
100039fa: 900f         	str	r0, [sp, #0x3c]
100039fc: 2800         	cmp	r0, #0x0
100039fe: d103         	bne	0x10003a08 <__symex_init_IO_IRQ_BANK0+0x70> @ imm = #0x6
10003a00: e007         	b	0x10003a12 <__symex_init_IO_IRQ_BANK0+0x7a> @ imm = #0xe
10003a02: 481c         	ldr	r0, [pc, #0x70]         @ 0x10003a74 <__symex_init_IO_IRQ_BANK0+0xdc>
10003a04: f008 fd3a    	bl	0x1000c47c <core::panicking::panic_null_pointer_dereference::hbb12e6a8f55b3514> @ imm = #0x8a74
10003a08: 481d         	ldr	r0, [pc, #0x74]         @ 0x10003a80 <__symex_init_IO_IRQ_BANK0+0xe8>
10003a0a: 9007         	str	r0, [sp, #0x1c]
10003a0c: 2800         	cmp	r0, #0x0
10003a0e: d103         	bne	0x10003a18 <__symex_init_IO_IRQ_BANK0+0x80> @ imm = #0x6
10003a10: e00d         	b	0x10003a2e <__symex_init_IO_IRQ_BANK0+0x96> @ imm = #0x1a
10003a12: 4818         	ldr	r0, [pc, #0x60]         @ 0x10003a74 <__symex_init_IO_IRQ_BANK0+0xdc>
10003a14: f008 fd32    	bl	0x1000c47c <core::panicking::panic_null_pointer_dereference::hbb12e6a8f55b3514> @ imm = #0x8a64
10003a18: 4817         	ldr	r0, [pc, #0x5c]         @ 0x10003a78 <__symex_init_IO_IRQ_BANK0+0xe0>
10003a1a: 4919         	ldr	r1, [pc, #0x64]         @ 0x10003a80 <__symex_init_IO_IRQ_BANK0+0xe8>
10003a1c: 9102         	str	r1, [sp, #0x8]
10003a1e: f7ff f9db    	bl	0x10002dd8 <symex_lib::grant_access::h30329ce8e3c8dac9> @ imm = #-0xc4a
10003a22: 9802         	ldr	r0, [sp, #0x8]
10003a24: 900c         	str	r0, [sp, #0x30]
10003a26: 900d         	str	r0, [sp, #0x34]
10003a28: 2800         	cmp	r0, #0x0
10003a2a: d103         	bne	0x10003a34 <__symex_init_IO_IRQ_BANK0+0x9c> @ imm = #0x6
10003a2c: e01d         	b	0x10003a6a <__symex_init_IO_IRQ_BANK0+0xd2> @ imm = #0x3a
10003a2e: 4811         	ldr	r0, [pc, #0x44]         @ 0x10003a74 <__symex_init_IO_IRQ_BANK0+0xdc>
10003a30: f008 fd24    	bl	0x1000c47c <core::panicking::panic_null_pointer_dereference::hbb12e6a8f55b3514> @ imm = #0x8a48
10003a34: 4810         	ldr	r0, [pc, #0x40]         @ 0x10003a78 <__symex_init_IO_IRQ_BANK0+0xe0>
10003a36: 9001         	str	r0, [sp, #0x4]
10003a38: 4911         	ldr	r1, [pc, #0x44]         @ 0x10003a80 <__symex_init_IO_IRQ_BANK0+0xe8>
10003a3a: 9100         	str	r1, [sp]
10003a3c: f7ff f96c    	bl	0x10002d18 <symex_lib::grant_access::h012bf463892480b0> @ imm = #-0xd28
10003a40: 9900         	ldr	r1, [sp]
10003a42: 9801         	ldr	r0, [sp, #0x4]
10003a44: f7ff fae8    	bl	0x10003018 <symex_lib::grant_access::h801bfedcd992b9cb> @ imm = #-0xa30
10003a48: 9801         	ldr	r0, [sp, #0x4]
10003a4a: 2101         	movs	r1, #0x1
10003a4c: 0709         	lsls	r1, r1, #0x1c
10003a4e: 4a0b         	ldr	r2, [pc, #0x2c]         @ 0x10003a7c <__symex_init_IO_IRQ_BANK0+0xe4>
10003a50: f002 fa48    	bl	0x10005ee4 <__symex_allow_access> @ imm = #0x2490
10003a54: 9801         	ldr	r0, [sp, #0x4]
10003a56: 2103         	movs	r1, #0x3
10003a58: f002 fa59    	bl	0x10005f0e <__symex_set_priority> @ imm = #0x24b2
10003a5c: 9801         	ldr	r0, [sp, #0x4]
10003a5e: f002 fa66    	bl	0x10005f2e <analyze>    @ imm = #0x24cc
10003a62: f7fd fd54    	bl	0x1000150e <core::hint::black_box::h83b709d0e5a7b65b> @ imm = #-0x2558
10003a66: b010         	add	sp, #0x40
10003a68: bd80         	pop	{r7, pc}
10003a6a: 4802         	ldr	r0, [pc, #0x8]          @ 0x10003a74 <__symex_init_IO_IRQ_BANK0+0xdc>
10003a6c: f008 fd06    	bl	0x1000c47c <core::panicking::panic_null_pointer_dereference::hbb12e6a8f55b3514> @ imm = #0x8a0c
10003a70: fd fb 03 20  	.word	0x2003fbfd
10003a74: 2c 0c 01 10  	.word	0x10010c2c
10003a78: 61 44 00 10  	.word	0x10004461
10003a7c: 00 ff 1f 10  	.word	0x101fff00
10003a80: fc fb 03 20  	.word	0x2003fbfc

10003a84 <simple_rtic::app::task_3::h0bf0b30ec96d3034>:
10003a84: b580         	push	{r7, lr}
10003a86: af00         	add	r7, sp, #0x0
10003a88: b0bc         	sub	sp, #0xf0
10003a8a: 9008         	str	r0, [sp, #0x20]
10003a8c: a808         	add	r0, sp, #0x20
10003a8e: 9009         	str	r0, [sp, #0x24]
10003a90: 4975         	ldr	r1, [pc, #0x1d4]        @ 0x10003c68 <simple_rtic::app::task_3::h0bf0b30ec96d3034+0x1e4>
10003a92: 910a         	str	r1, [sp, #0x28]
10003a94: 910b         	str	r1, [sp, #0x2c]
10003a96: 903b         	str	r0, [sp, #0xec]
10003a98: 9808         	ldr	r0, [sp, #0x20]
10003a9a: 9006         	str	r0, [sp, #0x18]
10003a9c: 910c         	str	r1, [sp, #0x30]
10003a9e: 900e         	str	r0, [sp, #0x38]
10003aa0: aa0f         	add	r2, sp, #0x3c
10003aa2: 2103         	movs	r1, #0x3
10003aa4: 7011         	strb	r1, [r2]
10003aa6: aa10         	add	r2, sp, #0x40
10003aa8: 2102         	movs	r1, #0x2
10003aaa: 7011         	strb	r1, [r2]
10003aac: 496f         	ldr	r1, [pc, #0x1bc]        @ 0x10003c6c <simple_rtic::app::task_3::h0bf0b30ec96d3034+0x1e8>
10003aae: 9111         	str	r1, [sp, #0x44]
10003ab0: 9030         	str	r0, [sp, #0xc0]
10003ab2: f7fd fcff    	bl	0x100014b4 <core::cell::Cell<T>::get::h819713353ec39ea2> @ imm = #-0x2602
10003ab6: 4601         	mov	r1, r0
10003ab8: b2c8         	uxtb	r0, r1
10003aba: 460a         	mov	r2, r1
10003abc: 9207         	str	r2, [sp, #0x1c]
10003abe: aa12         	add	r2, sp, #0x48
10003ac0: 7011         	strb	r1, [r2]
10003ac2: 2803         	cmp	r0, #0x3
10003ac4: d304         	blo	0x10003ad0 <simple_rtic::app::task_3::h0bf0b30ec96d3034+0x4c> @ imm = #0x8
10003ac6: e7ff         	b	0x10003ac8 <simple_rtic::app::task_3::h0bf0b30ec96d3034+0x44> @ imm = #-0x2
10003ac8: 980c         	ldr	r0, [sp, #0x30]
10003aca: f000 f8e3    	bl	0x10003c94 <simple_rtic::app::task_3::{{closure}}::h8edd05c598096afc> @ imm = #0x1c6
10003ace: e0c8         	b	0x10003c62 <simple_rtic::app::task_3::h0bf0b30ec96d3034+0x1de> @ imm = #0x190
10003ad0: 9806         	ldr	r0, [sp, #0x18]
10003ad2: 9033         	str	r0, [sp, #0xcc]
10003ad4: aa34         	add	r2, sp, #0xd0
10003ad6: 2103         	movs	r1, #0x3
10003ad8: 9104         	str	r1, [sp, #0x10]
10003ada: 7011         	strb	r1, [r2]
10003adc: f7fd fcf8    	bl	0x100014d0 <core::cell::Cell<T>::set::hd10409ba164119e2> @ imm = #-0x2610
10003ae0: 9907         	ldr	r1, [sp, #0x1c]
10003ae2: 9a04         	ldr	r2, [sp, #0x10]
10003ae4: a81b         	add	r0, sp, #0x6c
10003ae6: 7001         	strb	r1, [r0]
10003ae8: a81c         	add	r0, sp, #0x70
10003aea: 7002         	strb	r2, [r0]
10003aec: 485f         	ldr	r0, [pc, #0x17c]        @ 0x10003c6c <simple_rtic::app::task_3::h0bf0b30ec96d3034+0x1e8>
10003aee: 901d         	str	r0, [sp, #0x74]
10003af0: 2300         	movs	r3, #0x0
10003af2: 9305         	str	r3, [sp, #0x14]
10003af4: 931a         	str	r3, [sp, #0x68]
10003af6: 9b1a         	ldr	r3, [sp, #0x68]
10003af8: 9319         	str	r3, [sp, #0x64]
10003afa: b2c9         	uxtb	r1, r1
10003afc: 4b5c         	ldr	r3, [pc, #0x170]        @ 0x10003c70 <simple_rtic::app::task_3::h0bf0b30ec96d3034+0x1ec>
10003afe: f7fd fd23    	bl	0x10001548 <core::array::<impl core::ops::index::Index<I> for [T; N]>::index::hf8b26490293f2ac7> @ imm = #-0x25ba
10003b02: f7fd fd81    	bl	0x10001608 <core::slice::<impl [T]>::iter::hf02149d412a096dd> @ imm = #-0x24fe
10003b06: aa19         	add	r2, sp, #0x64
10003b08: f7ff f838    	bl	0x10002b7c <<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each::hf0c7599b28330770> @ imm = #-0xf90
10003b0c: 9805         	ldr	r0, [sp, #0x14]
10003b0e: 9919         	ldr	r1, [sp, #0x64]
10003b10: 9118         	str	r1, [sp, #0x60]
10003b12: 9918         	ldr	r1, [sp, #0x60]
10003b14: 9113         	str	r1, [sp, #0x4c]
10003b16: 9913         	ldr	r1, [sp, #0x4c]
10003b18: 910d         	str	r1, [sp, #0x34]
10003b1a: 990d         	ldr	r1, [sp, #0x34]
10003b1c: 9114         	str	r1, [sp, #0x50]
10003b1e: 9914         	ldr	r1, [sp, #0x50]
10003b20: 9115         	str	r1, [sp, #0x54]
10003b22: 9915         	ldr	r1, [sp, #0x54]
10003b24: 9128         	str	r1, [sp, #0xa0]
10003b26: 9928         	ldr	r1, [sp, #0xa0]
10003b28: 9127         	str	r1, [sp, #0x9c]
10003b2a: 2101         	movs	r1, #0x1
10003b2c: f002 fa4a    	bl	0x10005fc4 <<I as core::iter::traits::collect::IntoIterator>::into_iter::hcd2f3c39bb368951> @ imm = #0x2494
10003b30: 9029         	str	r0, [sp, #0xa4]
10003b32: 912a         	str	r1, [sp, #0xa8]
10003b34: e7ff         	b	0x10003b36 <simple_rtic::app::task_3::h0bf0b30ec96d3034+0xb2> @ imm = #-0x2
10003b36: a829         	add	r0, sp, #0xa4
10003b38: f002 fa3c    	bl	0x10005fb4 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next::h3f3b5f6ece6bd4b0> @ imm = #0x2478
10003b3c: 902b         	str	r0, [sp, #0xac]
10003b3e: 912c         	str	r1, [sp, #0xb0]
10003b40: 982b         	ldr	r0, [sp, #0xac]
10003b42: 2800         	cmp	r0, #0x0
10003b44: d035         	beq	0x10003bb2 <simple_rtic::app::task_3::h0bf0b30ec96d3034+0x12e> @ imm = #0x6a
10003b46: e7ff         	b	0x10003b48 <simple_rtic::app::task_3::h0bf0b30ec96d3034+0xc4> @ imm = #-0x2
10003b48: 982c         	ldr	r0, [sp, #0xb0]
10003b4a: 9003         	str	r0, [sp, #0xc]
10003b4c: 902d         	str	r0, [sp, #0xb4]
10003b4e: 2800         	cmp	r0, #0x0
10003b50: d107         	bne	0x10003b62 <simple_rtic::app::task_3::h0bf0b30ec96d3034+0xde> @ imm = #0xe
10003b52: e7ff         	b	0x10003b54 <simple_rtic::app::task_3::h0bf0b30ec96d3034+0xd0> @ imm = #-0x2
10003b54: 9803         	ldr	r0, [sp, #0xc]
10003b56: 0081         	lsls	r1, r0, #0x2
10003b58: a827         	add	r0, sp, #0x9c
10003b5a: 5840         	ldr	r0, [r0, r1]
10003b5c: 2800         	cmp	r0, #0x0
10003b5e: d0ea         	beq	0x10003b36 <simple_rtic::app::task_3::h0bf0b30ec96d3034+0xb2> @ imm = #-0x2c
10003b60: e004         	b	0x10003b6c <simple_rtic::app::task_3::h0bf0b30ec96d3034+0xe8> @ imm = #0x8
10003b62: 9803         	ldr	r0, [sp, #0xc]
10003b64: 4a43         	ldr	r2, [pc, #0x10c]        @ 0x10003c74 <simple_rtic::app::task_3::h0bf0b30ec96d3034+0x1f0>
10003b66: 2101         	movs	r1, #0x1
10003b68: f008 fc6a    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0x88d4
10003b6c: 9803         	ldr	r0, [sp, #0xc]
10003b6e: 280f         	cmp	r0, #0xf
10003b70: d808         	bhi	0x10003b84 <simple_rtic::app::task_3::h0bf0b30ec96d3034+0x100> @ imm = #0x10
10003b72: e7ff         	b	0x10003b74 <simple_rtic::app::task_3::h0bf0b30ec96d3034+0xf0> @ imm = #-0x2
10003b74: 9803         	ldr	r0, [sp, #0xc]
10003b76: 0081         	lsls	r1, r0, #0x2
10003b78: 4a40         	ldr	r2, [pc, #0x100]        @ 0x10003c7c <simple_rtic::app::task_3::h0bf0b30ec96d3034+0x1f8>
10003b7a: 1889         	adds	r1, r1, r2
10003b7c: 9102         	str	r1, [sp, #0x8]
10003b7e: 2800         	cmp	r0, #0x0
10003b80: d005         	beq	0x10003b8e <simple_rtic::app::task_3::h0bf0b30ec96d3034+0x10a> @ imm = #0xa
10003b82: e011         	b	0x10003ba8 <simple_rtic::app::task_3::h0bf0b30ec96d3034+0x124> @ imm = #0x22
10003b84: 9803         	ldr	r0, [sp, #0xc]
10003b86: 4a3c         	ldr	r2, [pc, #0xf0]         @ 0x10003c78 <simple_rtic::app::task_3::h0bf0b30ec96d3034+0x1f4>
10003b88: 2110         	movs	r1, #0x10
10003b8a: f008 fc59    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0x88b2
10003b8e: 9802         	ldr	r0, [sp, #0x8]
10003b90: 9903         	ldr	r1, [sp, #0xc]
10003b92: 008a         	lsls	r2, r1, #0x2
10003b94: a927         	add	r1, sp, #0x9c
10003b96: 5889         	ldr	r1, [r1, r2]
10003b98: 902e         	str	r0, [sp, #0xb8]
10003b9a: 912f         	str	r1, [sp, #0xbc]
10003b9c: 9038         	str	r0, [sp, #0xe0]
10003b9e: 9139         	str	r1, [sp, #0xe4]
10003ba0: 903a         	str	r0, [sp, #0xe8]
10003ba2: f008 fafb    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x85f6
10003ba6: e7c6         	b	0x10003b36 <simple_rtic::app::task_3::h0bf0b30ec96d3034+0xb2> @ imm = #-0x74
10003ba8: 9803         	ldr	r0, [sp, #0xc]
10003baa: 4a35         	ldr	r2, [pc, #0xd4]         @ 0x10003c80 <simple_rtic::app::task_3::h0bf0b30ec96d3034+0x1fc>
10003bac: 2101         	movs	r1, #0x1
10003bae: f008 fc47    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0x888e
10003bb2: 980c         	ldr	r0, [sp, #0x30]
10003bb4: f000 f86e    	bl	0x10003c94 <simple_rtic::app::task_3::{{closure}}::h8edd05c598096afc> @ imm = #0xdc
10003bb8: 980d         	ldr	r0, [sp, #0x34]
10003bba: 9016         	str	r0, [sp, #0x58]
10003bbc: 9816         	ldr	r0, [sp, #0x58]
10003bbe: 9017         	str	r0, [sp, #0x5c]
10003bc0: 9817         	ldr	r0, [sp, #0x5c]
10003bc2: 901f         	str	r0, [sp, #0x7c]
10003bc4: 981f         	ldr	r0, [sp, #0x7c]
10003bc6: 901e         	str	r0, [sp, #0x78]
10003bc8: 2000         	movs	r0, #0x0
10003bca: 2101         	movs	r1, #0x1
10003bcc: f002 f9fa    	bl	0x10005fc4 <<I as core::iter::traits::collect::IntoIterator>::into_iter::hcd2f3c39bb368951> @ imm = #0x23f4
10003bd0: 9020         	str	r0, [sp, #0x80]
10003bd2: 9121         	str	r1, [sp, #0x84]
10003bd4: e7ff         	b	0x10003bd6 <simple_rtic::app::task_3::h0bf0b30ec96d3034+0x152> @ imm = #-0x2
10003bd6: a820         	add	r0, sp, #0x80
10003bd8: f002 f9ec    	bl	0x10005fb4 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next::h3f3b5f6ece6bd4b0> @ imm = #0x23d8
10003bdc: 9022         	str	r0, [sp, #0x88]
10003bde: 9123         	str	r1, [sp, #0x8c]
10003be0: 9822         	ldr	r0, [sp, #0x88]
10003be2: 2800         	cmp	r0, #0x0
10003be4: d035         	beq	0x10003c52 <simple_rtic::app::task_3::h0bf0b30ec96d3034+0x1ce> @ imm = #0x6a
10003be6: e7ff         	b	0x10003be8 <simple_rtic::app::task_3::h0bf0b30ec96d3034+0x164> @ imm = #-0x2
10003be8: 9823         	ldr	r0, [sp, #0x8c]
10003bea: 9001         	str	r0, [sp, #0x4]
10003bec: 9024         	str	r0, [sp, #0x90]
10003bee: 2800         	cmp	r0, #0x0
10003bf0: d107         	bne	0x10003c02 <simple_rtic::app::task_3::h0bf0b30ec96d3034+0x17e> @ imm = #0xe
10003bf2: e7ff         	b	0x10003bf4 <simple_rtic::app::task_3::h0bf0b30ec96d3034+0x170> @ imm = #-0x2
10003bf4: 9801         	ldr	r0, [sp, #0x4]
10003bf6: 0081         	lsls	r1, r0, #0x2
10003bf8: a81e         	add	r0, sp, #0x78
10003bfa: 5840         	ldr	r0, [r0, r1]
10003bfc: 2800         	cmp	r0, #0x0
10003bfe: d0ea         	beq	0x10003bd6 <simple_rtic::app::task_3::h0bf0b30ec96d3034+0x152> @ imm = #-0x2c
10003c00: e004         	b	0x10003c0c <simple_rtic::app::task_3::h0bf0b30ec96d3034+0x188> @ imm = #0x8
10003c02: 9801         	ldr	r0, [sp, #0x4]
10003c04: 4a1f         	ldr	r2, [pc, #0x7c]         @ 0x10003c84 <simple_rtic::app::task_3::h0bf0b30ec96d3034+0x200>
10003c06: 2101         	movs	r1, #0x1
10003c08: f008 fc1a    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0x8834
10003c0c: 9801         	ldr	r0, [sp, #0x4]
10003c0e: 280f         	cmp	r0, #0xf
10003c10: d808         	bhi	0x10003c24 <simple_rtic::app::task_3::h0bf0b30ec96d3034+0x1a0> @ imm = #0x10
10003c12: e7ff         	b	0x10003c14 <simple_rtic::app::task_3::h0bf0b30ec96d3034+0x190> @ imm = #-0x2
10003c14: 9801         	ldr	r0, [sp, #0x4]
10003c16: 0081         	lsls	r1, r0, #0x2
10003c18: 4a1c         	ldr	r2, [pc, #0x70]         @ 0x10003c8c <simple_rtic::app::task_3::h0bf0b30ec96d3034+0x208>
10003c1a: 1889         	adds	r1, r1, r2
10003c1c: 9100         	str	r1, [sp]
10003c1e: 2800         	cmp	r0, #0x0
10003c20: d005         	beq	0x10003c2e <simple_rtic::app::task_3::h0bf0b30ec96d3034+0x1aa> @ imm = #0xa
10003c22: e011         	b	0x10003c48 <simple_rtic::app::task_3::h0bf0b30ec96d3034+0x1c4> @ imm = #0x22
10003c24: 9801         	ldr	r0, [sp, #0x4]
10003c26: 4a18         	ldr	r2, [pc, #0x60]         @ 0x10003c88 <simple_rtic::app::task_3::h0bf0b30ec96d3034+0x204>
10003c28: 2110         	movs	r1, #0x10
10003c2a: f008 fc09    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0x8812
10003c2e: 9800         	ldr	r0, [sp]
10003c30: 9901         	ldr	r1, [sp, #0x4]
10003c32: 008a         	lsls	r2, r1, #0x2
10003c34: a91e         	add	r1, sp, #0x78
10003c36: 5889         	ldr	r1, [r1, r2]
10003c38: 9025         	str	r0, [sp, #0x94]
10003c3a: 9126         	str	r1, [sp, #0x98]
10003c3c: 9035         	str	r0, [sp, #0xd4]
10003c3e: 9136         	str	r1, [sp, #0xd8]
10003c40: 9037         	str	r0, [sp, #0xdc]
10003c42: f008 faab    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x8556
10003c46: e7c6         	b	0x10003bd6 <simple_rtic::app::task_3::h0bf0b30ec96d3034+0x152> @ imm = #-0x74
10003c48: 9801         	ldr	r0, [sp, #0x4]
10003c4a: 4a11         	ldr	r2, [pc, #0x44]         @ 0x10003c90 <simple_rtic::app::task_3::h0bf0b30ec96d3034+0x20c>
10003c4c: 2101         	movs	r1, #0x1
10003c4e: f008 fbf7    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0x87ee
10003c52: 9907         	ldr	r1, [sp, #0x1c]
10003c54: 9806         	ldr	r0, [sp, #0x18]
10003c56: 9031         	str	r0, [sp, #0xc4]
10003c58: aa32         	add	r2, sp, #0xc8
10003c5a: 7011         	strb	r1, [r2]
10003c5c: f7fd fc38    	bl	0x100014d0 <core::cell::Cell<T>::set::hd10409ba164119e2> @ imm = #-0x2790
10003c60: e7ff         	b	0x10003c62 <simple_rtic::app::task_3::h0bf0b30ec96d3034+0x1de> @ imm = #-0x2
10003c62: b03c         	add	sp, #0xf0
10003c64: bd80         	pop	{r7, pc}
10003c66: 46c0         	mov	r8, r8
10003c68: fc fb 03 20  	.word	0x2003fbfc
10003c6c: 7c 0c 01 10  	.word	0x10010c7c
10003c70: 60 e5 00 10  	.word	0x1000e560
10003c74: a0 e5 00 10  	.word	0x1000e5a0
10003c78: b0 e5 00 10  	.word	0x1000e5b0
10003c7c: 80 e1 00 e0  	.word	0xe000e180
10003c80: c0 e5 00 10  	.word	0x1000e5c0
10003c84: 70 e5 00 10  	.word	0x1000e570
10003c88: 80 e5 00 10  	.word	0x1000e580
10003c8c: 00 e1 00 e0  	.word	0xe000e100
10003c90: 90 e5 00 10  	.word	0x1000e590

10003c94 <simple_rtic::app::task_3::{{closure}}::h8edd05c598096afc>:
10003c94: b580         	push	{r7, lr}
10003c96: af00         	add	r7, sp, #0x0
10003c98: b082         	sub	sp, #0x8
10003c9a: 9001         	str	r0, [sp, #0x4]
10003c9c: f7fd fc2e    	bl	0x100014fc <core::hint::black_box::h607f70ec5fc7e824> @ imm = #-0x27a4
10003ca0: b002         	add	sp, #0x8
10003ca2: bd80         	pop	{r7, pc}

10003ca4 <simple_rtic::app::button_handler::h222473973e243e9c>:
10003ca4: b580         	push	{r7, lr}
10003ca6: af00         	add	r7, sp, #0x0
10003ca8: b0c2         	sub	sp, #0x108
10003caa: 900b         	str	r0, [sp, #0x2c]
10003cac: 2000         	movs	r0, #0x0
10003cae: 900c         	str	r0, [sp, #0x30]
10003cb0: e7ff         	b	0x10003cb2 <simple_rtic::app::button_handler::h222473973e243e9c+0xe> @ imm = #-0x2
10003cb2: 980b         	ldr	r0, [sp, #0x2c]
10003cb4: 4602         	mov	r2, r0
10003cb6: 3208         	adds	r2, #0x8
10003cb8: 920d         	str	r2, [sp, #0x34]
10003cba: 498e         	ldr	r1, [pc, #0x238]        @ 0x10003ef4 <simple_rtic::app::button_handler::h222473973e243e9c+0x250>
10003cbc: 910e         	str	r1, [sp, #0x38]
10003cbe: 910f         	str	r1, [sp, #0x3c]
10003cc0: 9241         	str	r2, [sp, #0x104]
10003cc2: 6880         	ldr	r0, [r0, #0x8]
10003cc4: 9009         	str	r0, [sp, #0x24]
10003cc6: 9110         	str	r1, [sp, #0x40]
10003cc8: 9013         	str	r0, [sp, #0x4c]
10003cca: aa14         	add	r2, sp, #0x50
10003ccc: 2103         	movs	r1, #0x3
10003cce: 7011         	strb	r1, [r2]
10003cd0: aa15         	add	r2, sp, #0x54
10003cd2: 2102         	movs	r1, #0x2
10003cd4: 7011         	strb	r1, [r2]
10003cd6: 4988         	ldr	r1, [pc, #0x220]        @ 0x10003ef8 <simple_rtic::app::button_handler::h222473973e243e9c+0x254>
10003cd8: 9116         	str	r1, [sp, #0x58]
10003cda: 9036         	str	r0, [sp, #0xd8]
10003cdc: f7fd fbea    	bl	0x100014b4 <core::cell::Cell<T>::get::h819713353ec39ea2> @ imm = #-0x282c
10003ce0: 4601         	mov	r1, r0
10003ce2: b2c8         	uxtb	r0, r1
10003ce4: 460a         	mov	r2, r1
10003ce6: 920a         	str	r2, [sp, #0x28]
10003ce8: aa17         	add	r2, sp, #0x5c
10003cea: 7011         	strb	r1, [r2]
10003cec: 2803         	cmp	r0, #0x3
10003cee: d306         	blo	0x10003cfe <simple_rtic::app::button_handler::h222473973e243e9c+0x5a> @ imm = #0xc
10003cf0: e7ff         	b	0x10003cf2 <simple_rtic::app::button_handler::h222473973e243e9c+0x4e> @ imm = #-0x2
10003cf2: 9810         	ldr	r0, [sp, #0x40]
10003cf4: f000 f916    	bl	0x10003f24 <simple_rtic::app::button_handler::{{closure}}::h31e32970678d4e91> @ imm = #0x22c
10003cf8: a911         	add	r1, sp, #0x44
10003cfa: 7008         	strb	r0, [r1]
10003cfc: e0d1         	b	0x10003ea2 <simple_rtic::app::button_handler::h222473973e243e9c+0x1fe> @ imm = #0x1a2
10003cfe: 9809         	ldr	r0, [sp, #0x24]
10003d00: 9039         	str	r0, [sp, #0xe4]
10003d02: aa3a         	add	r2, sp, #0xe8
10003d04: 2103         	movs	r1, #0x3
10003d06: 9107         	str	r1, [sp, #0x1c]
10003d08: 7011         	strb	r1, [r2]
10003d0a: f7fd fbe1    	bl	0x100014d0 <core::cell::Cell<T>::set::hd10409ba164119e2> @ imm = #-0x283e
10003d0e: 990a         	ldr	r1, [sp, #0x28]
10003d10: 9a07         	ldr	r2, [sp, #0x1c]
10003d12: a821         	add	r0, sp, #0x84
10003d14: 7001         	strb	r1, [r0]
10003d16: a822         	add	r0, sp, #0x88
10003d18: 7002         	strb	r2, [r0]
10003d1a: 4877         	ldr	r0, [pc, #0x1dc]        @ 0x10003ef8 <simple_rtic::app::button_handler::h222473973e243e9c+0x254>
10003d1c: 9023         	str	r0, [sp, #0x8c]
10003d1e: 2300         	movs	r3, #0x0
10003d20: 9308         	str	r3, [sp, #0x20]
10003d22: 9320         	str	r3, [sp, #0x80]
10003d24: 9b20         	ldr	r3, [sp, #0x80]
10003d26: 931f         	str	r3, [sp, #0x7c]
10003d28: b2c9         	uxtb	r1, r1
10003d2a: 4b74         	ldr	r3, [pc, #0x1d0]        @ 0x10003efc <simple_rtic::app::button_handler::h222473973e243e9c+0x258>
10003d2c: f7fd fc0c    	bl	0x10001548 <core::array::<impl core::ops::index::Index<I> for [T; N]>::index::hf8b26490293f2ac7> @ imm = #-0x27e8
10003d30: f7fd fc6a    	bl	0x10001608 <core::slice::<impl [T]>::iter::hf02149d412a096dd> @ imm = #-0x272c
10003d34: aa1f         	add	r2, sp, #0x7c
10003d36: f7fe ff21    	bl	0x10002b7c <<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each::hf0c7599b28330770> @ imm = #-0x11be
10003d3a: 9808         	ldr	r0, [sp, #0x20]
10003d3c: 991f         	ldr	r1, [sp, #0x7c]
10003d3e: 911e         	str	r1, [sp, #0x78]
10003d40: 991e         	ldr	r1, [sp, #0x78]
10003d42: 9118         	str	r1, [sp, #0x60]
10003d44: 9918         	ldr	r1, [sp, #0x60]
10003d46: 9112         	str	r1, [sp, #0x48]
10003d48: 9912         	ldr	r1, [sp, #0x48]
10003d4a: 9119         	str	r1, [sp, #0x64]
10003d4c: 9919         	ldr	r1, [sp, #0x64]
10003d4e: 911a         	str	r1, [sp, #0x68]
10003d50: 991a         	ldr	r1, [sp, #0x68]
10003d52: 912e         	str	r1, [sp, #0xb8]
10003d54: 992e         	ldr	r1, [sp, #0xb8]
10003d56: 912d         	str	r1, [sp, #0xb4]
10003d58: 2101         	movs	r1, #0x1
10003d5a: f002 f933    	bl	0x10005fc4 <<I as core::iter::traits::collect::IntoIterator>::into_iter::hcd2f3c39bb368951> @ imm = #0x2266
10003d5e: 902f         	str	r0, [sp, #0xbc]
10003d60: 9130         	str	r1, [sp, #0xc0]
10003d62: e7ff         	b	0x10003d64 <simple_rtic::app::button_handler::h222473973e243e9c+0xc0> @ imm = #-0x2
10003d64: a82f         	add	r0, sp, #0xbc
10003d66: f002 f925    	bl	0x10005fb4 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next::h3f3b5f6ece6bd4b0> @ imm = #0x224a
10003d6a: 9031         	str	r0, [sp, #0xc4]
10003d6c: 9132         	str	r1, [sp, #0xc8]
10003d6e: 9831         	ldr	r0, [sp, #0xc4]
10003d70: 2800         	cmp	r0, #0x0
10003d72: d035         	beq	0x10003de0 <simple_rtic::app::button_handler::h222473973e243e9c+0x13c> @ imm = #0x6a
10003d74: e7ff         	b	0x10003d76 <simple_rtic::app::button_handler::h222473973e243e9c+0xd2> @ imm = #-0x2
10003d76: 9832         	ldr	r0, [sp, #0xc8]
10003d78: 9006         	str	r0, [sp, #0x18]
10003d7a: 9033         	str	r0, [sp, #0xcc]
10003d7c: 2800         	cmp	r0, #0x0
10003d7e: d107         	bne	0x10003d90 <simple_rtic::app::button_handler::h222473973e243e9c+0xec> @ imm = #0xe
10003d80: e7ff         	b	0x10003d82 <simple_rtic::app::button_handler::h222473973e243e9c+0xde> @ imm = #-0x2
10003d82: 9806         	ldr	r0, [sp, #0x18]
10003d84: 0081         	lsls	r1, r0, #0x2
10003d86: a82d         	add	r0, sp, #0xb4
10003d88: 5840         	ldr	r0, [r0, r1]
10003d8a: 2800         	cmp	r0, #0x0
10003d8c: d0ea         	beq	0x10003d64 <simple_rtic::app::button_handler::h222473973e243e9c+0xc0> @ imm = #-0x2c
10003d8e: e004         	b	0x10003d9a <simple_rtic::app::button_handler::h222473973e243e9c+0xf6> @ imm = #0x8
10003d90: 9806         	ldr	r0, [sp, #0x18]
10003d92: 4a5b         	ldr	r2, [pc, #0x16c]        @ 0x10003f00 <simple_rtic::app::button_handler::h222473973e243e9c+0x25c>
10003d94: 2101         	movs	r1, #0x1
10003d96: f008 fb53    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0x86a6
10003d9a: 9806         	ldr	r0, [sp, #0x18]
10003d9c: 280f         	cmp	r0, #0xf
10003d9e: d808         	bhi	0x10003db2 <simple_rtic::app::button_handler::h222473973e243e9c+0x10e> @ imm = #0x10
10003da0: e7ff         	b	0x10003da2 <simple_rtic::app::button_handler::h222473973e243e9c+0xfe> @ imm = #-0x2
10003da2: 9806         	ldr	r0, [sp, #0x18]
10003da4: 0081         	lsls	r1, r0, #0x2
10003da6: 4a58         	ldr	r2, [pc, #0x160]        @ 0x10003f08 <simple_rtic::app::button_handler::h222473973e243e9c+0x264>
10003da8: 1889         	adds	r1, r1, r2
10003daa: 9105         	str	r1, [sp, #0x14]
10003dac: 2800         	cmp	r0, #0x0
10003dae: d005         	beq	0x10003dbc <simple_rtic::app::button_handler::h222473973e243e9c+0x118> @ imm = #0xa
10003db0: e011         	b	0x10003dd6 <simple_rtic::app::button_handler::h222473973e243e9c+0x132> @ imm = #0x22
10003db2: 9806         	ldr	r0, [sp, #0x18]
10003db4: 4a53         	ldr	r2, [pc, #0x14c]        @ 0x10003f04 <simple_rtic::app::button_handler::h222473973e243e9c+0x260>
10003db6: 2110         	movs	r1, #0x10
10003db8: f008 fb42    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0x8684
10003dbc: 9805         	ldr	r0, [sp, #0x14]
10003dbe: 9906         	ldr	r1, [sp, #0x18]
10003dc0: 008a         	lsls	r2, r1, #0x2
10003dc2: a92d         	add	r1, sp, #0xb4
10003dc4: 5889         	ldr	r1, [r1, r2]
10003dc6: 9034         	str	r0, [sp, #0xd0]
10003dc8: 9135         	str	r1, [sp, #0xd4]
10003dca: 903e         	str	r0, [sp, #0xf8]
10003dcc: 913f         	str	r1, [sp, #0xfc]
10003dce: 9040         	str	r0, [sp, #0x100]
10003dd0: f008 f9e4    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x83c8
10003dd4: e7c6         	b	0x10003d64 <simple_rtic::app::button_handler::h222473973e243e9c+0xc0> @ imm = #-0x74
10003dd6: 9806         	ldr	r0, [sp, #0x18]
10003dd8: 4a4c         	ldr	r2, [pc, #0x130]        @ 0x10003f0c <simple_rtic::app::button_handler::h222473973e243e9c+0x268>
10003dda: 2101         	movs	r1, #0x1
10003ddc: f008 fb30    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0x8660
10003de0: 9810         	ldr	r0, [sp, #0x40]
10003de2: f000 f89f    	bl	0x10003f24 <simple_rtic::app::button_handler::{{closure}}::h31e32970678d4e91> @ imm = #0x13e
10003de6: 4601         	mov	r1, r0
10003de8: 9104         	str	r1, [sp, #0x10]
10003dea: a91b         	add	r1, sp, #0x6c
10003dec: 7008         	strb	r0, [r1]
10003dee: 9812         	ldr	r0, [sp, #0x48]
10003df0: 901c         	str	r0, [sp, #0x70]
10003df2: 981c         	ldr	r0, [sp, #0x70]
10003df4: 901d         	str	r0, [sp, #0x74]
10003df6: 981d         	ldr	r0, [sp, #0x74]
10003df8: 9025         	str	r0, [sp, #0x94]
10003dfa: 9825         	ldr	r0, [sp, #0x94]
10003dfc: 9024         	str	r0, [sp, #0x90]
10003dfe: 2000         	movs	r0, #0x0
10003e00: 2101         	movs	r1, #0x1
10003e02: f002 f8df    	bl	0x10005fc4 <<I as core::iter::traits::collect::IntoIterator>::into_iter::hcd2f3c39bb368951> @ imm = #0x21be
10003e06: 9026         	str	r0, [sp, #0x98]
10003e08: 9127         	str	r1, [sp, #0x9c]
10003e0a: e7ff         	b	0x10003e0c <simple_rtic::app::button_handler::h222473973e243e9c+0x168> @ imm = #-0x2
10003e0c: a826         	add	r0, sp, #0x98
10003e0e: f002 f8d1    	bl	0x10005fb4 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next::h3f3b5f6ece6bd4b0> @ imm = #0x21a2
10003e12: 9028         	str	r0, [sp, #0xa0]
10003e14: 9129         	str	r1, [sp, #0xa4]
10003e16: 9828         	ldr	r0, [sp, #0xa0]
10003e18: 2800         	cmp	r0, #0x0
10003e1a: d035         	beq	0x10003e88 <simple_rtic::app::button_handler::h222473973e243e9c+0x1e4> @ imm = #0x6a
10003e1c: e7ff         	b	0x10003e1e <simple_rtic::app::button_handler::h222473973e243e9c+0x17a> @ imm = #-0x2
10003e1e: 9829         	ldr	r0, [sp, #0xa4]
10003e20: 9003         	str	r0, [sp, #0xc]
10003e22: 902a         	str	r0, [sp, #0xa8]
10003e24: 2800         	cmp	r0, #0x0
10003e26: d107         	bne	0x10003e38 <simple_rtic::app::button_handler::h222473973e243e9c+0x194> @ imm = #0xe
10003e28: e7ff         	b	0x10003e2a <simple_rtic::app::button_handler::h222473973e243e9c+0x186> @ imm = #-0x2
10003e2a: 9803         	ldr	r0, [sp, #0xc]
10003e2c: 0081         	lsls	r1, r0, #0x2
10003e2e: a824         	add	r0, sp, #0x90
10003e30: 5840         	ldr	r0, [r0, r1]
10003e32: 2800         	cmp	r0, #0x0
10003e34: d0ea         	beq	0x10003e0c <simple_rtic::app::button_handler::h222473973e243e9c+0x168> @ imm = #-0x2c
10003e36: e004         	b	0x10003e42 <simple_rtic::app::button_handler::h222473973e243e9c+0x19e> @ imm = #0x8
10003e38: 9803         	ldr	r0, [sp, #0xc]
10003e3a: 4a35         	ldr	r2, [pc, #0xd4]         @ 0x10003f10 <simple_rtic::app::button_handler::h222473973e243e9c+0x26c>
10003e3c: 2101         	movs	r1, #0x1
10003e3e: f008 faff    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0x85fe
10003e42: 9803         	ldr	r0, [sp, #0xc]
10003e44: 280f         	cmp	r0, #0xf
10003e46: d808         	bhi	0x10003e5a <simple_rtic::app::button_handler::h222473973e243e9c+0x1b6> @ imm = #0x10
10003e48: e7ff         	b	0x10003e4a <simple_rtic::app::button_handler::h222473973e243e9c+0x1a6> @ imm = #-0x2
10003e4a: 9803         	ldr	r0, [sp, #0xc]
10003e4c: 0081         	lsls	r1, r0, #0x2
10003e4e: 4a32         	ldr	r2, [pc, #0xc8]         @ 0x10003f18 <simple_rtic::app::button_handler::h222473973e243e9c+0x274>
10003e50: 1889         	adds	r1, r1, r2
10003e52: 9102         	str	r1, [sp, #0x8]
10003e54: 2800         	cmp	r0, #0x0
10003e56: d005         	beq	0x10003e64 <simple_rtic::app::button_handler::h222473973e243e9c+0x1c0> @ imm = #0xa
10003e58: e011         	b	0x10003e7e <simple_rtic::app::button_handler::h222473973e243e9c+0x1da> @ imm = #0x22
10003e5a: 9803         	ldr	r0, [sp, #0xc]
10003e5c: 4a2d         	ldr	r2, [pc, #0xb4]         @ 0x10003f14 <simple_rtic::app::button_handler::h222473973e243e9c+0x270>
10003e5e: 2110         	movs	r1, #0x10
10003e60: f008 faee    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0x85dc
10003e64: 9802         	ldr	r0, [sp, #0x8]
10003e66: 9903         	ldr	r1, [sp, #0xc]
10003e68: 008a         	lsls	r2, r1, #0x2
10003e6a: a924         	add	r1, sp, #0x90
10003e6c: 5889         	ldr	r1, [r1, r2]
10003e6e: 902b         	str	r0, [sp, #0xac]
10003e70: 912c         	str	r1, [sp, #0xb0]
10003e72: 903b         	str	r0, [sp, #0xec]
10003e74: 913c         	str	r1, [sp, #0xf0]
10003e76: 903d         	str	r0, [sp, #0xf4]
10003e78: f008 f990    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x8320
10003e7c: e7c6         	b	0x10003e0c <simple_rtic::app::button_handler::h222473973e243e9c+0x168> @ imm = #-0x74
10003e7e: 9803         	ldr	r0, [sp, #0xc]
10003e80: 4a26         	ldr	r2, [pc, #0x98]         @ 0x10003f1c <simple_rtic::app::button_handler::h222473973e243e9c+0x278>
10003e82: 2101         	movs	r1, #0x1
10003e84: f008 fadc    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0x85b8
10003e88: 990a         	ldr	r1, [sp, #0x28]
10003e8a: 9809         	ldr	r0, [sp, #0x24]
10003e8c: 9037         	str	r0, [sp, #0xdc]
10003e8e: aa38         	add	r2, sp, #0xe0
10003e90: 7011         	strb	r1, [r2]
10003e92: f7fd fb1d    	bl	0x100014d0 <core::cell::Cell<T>::set::hd10409ba164119e2> @ imm = #-0x29c6
10003e96: 9804         	ldr	r0, [sp, #0x10]
10003e98: 2101         	movs	r1, #0x1
10003e9a: 4008         	ands	r0, r1
10003e9c: a911         	add	r1, sp, #0x44
10003e9e: 7008         	strb	r0, [r1]
10003ea0: e7ff         	b	0x10003ea2 <simple_rtic::app::button_handler::h222473973e243e9c+0x1fe> @ imm = #-0x2
10003ea2: a811         	add	r0, sp, #0x44
10003ea4: 7800         	ldrb	r0, [r0]
10003ea6: 07c0         	lsls	r0, r0, #0x1f
10003ea8: 2800         	cmp	r0, #0x0
10003eaa: d104         	bne	0x10003eb6 <simple_rtic::app::button_handler::h222473973e243e9c+0x212> @ imm = #0x8
10003eac: e7ff         	b	0x10003eae <simple_rtic::app::button_handler::h222473973e243e9c+0x20a> @ imm = #-0x2
10003eae: 980c         	ldr	r0, [sp, #0x30]
10003eb0: 2801         	cmp	r0, #0x1
10003eb2: dc0d         	bgt	0x10003ed0 <simple_rtic::app::button_handler::h222473973e243e9c+0x22c> @ imm = #0x1a
10003eb4: e006         	b	0x10003ec4 <simple_rtic::app::button_handler::h222473973e243e9c+0x220> @ imm = #0xc
10003eb6: 980b         	ldr	r0, [sp, #0x2c]
10003eb8: 6800         	ldr	r0, [r0]
10003eba: 7800         	ldrb	r0, [r0]
10003ebc: 07c0         	lsls	r0, r0, #0x1f
10003ebe: 2800         	cmp	r0, #0x0
10003ec0: d113         	bne	0x10003eea <simple_rtic::app::button_handler::h222473973e243e9c+0x246> @ imm = #0x26
10003ec2: e00d         	b	0x10003ee0 <simple_rtic::app::button_handler::h222473973e243e9c+0x23c> @ imm = #0x1a
10003ec4: 990c         	ldr	r1, [sp, #0x30]
10003ec6: 1c48         	adds	r0, r1, #0x1
10003ec8: 9001         	str	r0, [sp, #0x4]
10003eca: 4288         	cmp	r0, r1
10003ecc: d605         	bvs	0x10003eda <simple_rtic::app::button_handler::h222473973e243e9c+0x236> @ imm = #0xa
10003ece: e001         	b	0x10003ed4 <simple_rtic::app::button_handler::h222473973e243e9c+0x230> @ imm = #0x2
10003ed0: b042         	add	sp, #0x108
10003ed2: bd80         	pop	{r7, pc}
10003ed4: 9801         	ldr	r0, [sp, #0x4]
10003ed6: 900c         	str	r0, [sp, #0x30]
10003ed8: e6eb         	b	0x10003cb2 <simple_rtic::app::button_handler::h222473973e243e9c+0xe> @ imm = #-0x22a
10003eda: 4811         	ldr	r0, [pc, #0x44]         @ 0x10003f20 <simple_rtic::app::button_handler::h222473973e243e9c+0x27c>
10003edc: f009 faa8    	bl	0x1000d430 <core::panicking::panic_const::panic_const_add_overflow::h73b6e802431fc142> @ imm = #0x9550
10003ee0: 980b         	ldr	r0, [sp, #0x2c]
10003ee2: 6840         	ldr	r0, [r0, #0x4]
10003ee4: f7ff fb8e    	bl	0x10003604 <simple_rtic::MockLed<_>::set_low::haacc5ef6bc022801> @ imm = #-0x8e4
10003ee8: e7f2         	b	0x10003ed0 <simple_rtic::app::button_handler::h222473973e243e9c+0x22c> @ imm = #-0x1c
10003eea: 980b         	ldr	r0, [sp, #0x2c]
10003eec: 6840         	ldr	r0, [r0, #0x4]
10003eee: f7ff fb0f    	bl	0x10003510 <simple_rtic::MockLed<_>::set_high::hc6d235af5a8cf6ef> @ imm = #-0x9e2
10003ef2: e7ed         	b	0x10003ed0 <simple_rtic::app::button_handler::h222473973e243e9c+0x22c> @ imm = #-0x26
10003ef4: fc fb 03 20  	.word	0x2003fbfc
10003ef8: 7c 0c 01 10  	.word	0x10010c7c
10003efc: 60 e5 00 10  	.word	0x1000e560
10003f00: a0 e5 00 10  	.word	0x1000e5a0
10003f04: b0 e5 00 10  	.word	0x1000e5b0
10003f08: 80 e1 00 e0  	.word	0xe000e180
10003f0c: c0 e5 00 10  	.word	0x1000e5c0
10003f10: 70 e5 00 10  	.word	0x1000e570
10003f14: 80 e5 00 10  	.word	0x1000e580
10003f18: 00 e1 00 e0  	.word	0xe000e100
10003f1c: 90 e5 00 10  	.word	0x1000e590
10003f20: 5c 0c 01 10  	.word	0x10010c5c

10003f24 <simple_rtic::app::button_handler::{{closure}}::h31e32970678d4e91>:
10003f24: b580         	push	{r7, lr}
10003f26: af00         	add	r7, sp, #0x0
10003f28: b082         	sub	sp, #0x8
10003f2a: 9001         	str	r0, [sp, #0x4]
10003f2c: 7800         	ldrb	r0, [r0]
10003f2e: b002         	add	sp, #0x8
10003f30: bd80         	pop	{r7, pc}
10003f32: d4d4         	bmi	0x10003ede <simple_rtic::app::button_handler::h222473973e243e9c+0x23a> @ imm = #-0x58

10003f34 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72>:
10003f34: b5d0         	push	{r4, r6, r7, lr}
10003f36: af02         	add	r7, sp, #0x8
10003f38: b0ff         	sub	sp, #0x1fc
10003f3a: b085         	sub	sp, #0x14
10003f3c: 9014         	str	r0, [sp, #0x50]
10003f3e: a814         	add	r0, sp, #0x50
10003f40: 1d00         	adds	r0, r0, #0x4
10003f42: 9011         	str	r0, [sp, #0x44]
10003f44: 9115         	str	r1, [sp, #0x54]
10003f46: 9814         	ldr	r0, [sp, #0x50]
10003f48: f7ff fa7a    	bl	0x10003440 <simple_rtic::Systick<_>::time::h68d2b7c79955496f> @ imm = #-0xb0c
10003f4c: 4601         	mov	r1, r0
10003f4e: 4608         	mov	r0, r1
10003f50: 900f         	str	r0, [sp, #0x3c]
10003f52: 911b         	str	r1, [sp, #0x6c]
10003f54: 4608         	mov	r0, r1
10003f56: f7fe fb41    	bl	0x100025dc <<fugit::duration::Duration<u32,_,_> as core::ops::arith::Sub>::sub::hde235045ed6676b8> @ imm = #-0x197e
10003f5a: 9016         	str	r0, [sp, #0x58]
10003f5c: 2000         	movs	r0, #0x0
10003f5e: 9017         	str	r0, [sp, #0x5c]
10003f60: 2002         	movs	r0, #0x2
10003f62: 9010         	str	r0, [sp, #0x40]
10003f64: f7fd fe84    	bl	0x10001c70 <fugit::duration::Duration<u32,_,_>::millis::hdc4af7d6f5ea660d> @ imm = #-0x22f8
10003f68: 9910         	ldr	r1, [sp, #0x40]
10003f6a: 4602         	mov	r2, r0
10003f6c: 9811         	ldr	r0, [sp, #0x44]
10003f6e: 9218         	str	r2, [sp, #0x60]
10003f70: 9051         	str	r0, [sp, #0x144]
10003f72: 4afe         	ldr	r2, [pc, #0x3f8]        @ 0x1000436c <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x438>
10003f74: 9252         	str	r2, [sp, #0x148]
10003f76: 9253         	str	r2, [sp, #0x14c]
10003f78: 9083         	str	r0, [sp, #0x20c]
10003f7a: 9815         	ldr	r0, [sp, #0x54]
10003f7c: 9012         	str	r0, [sp, #0x48]
10003f7e: 9254         	str	r2, [sp, #0x150]
10003f80: 9056         	str	r0, [sp, #0x158]
10003f82: ab57         	add	r3, sp, #0x15c
10003f84: 2203         	movs	r2, #0x3
10003f86: 701a         	strb	r2, [r3]
10003f88: aa58         	add	r2, sp, #0x160
10003f8a: 7011         	strb	r1, [r2]
10003f8c: 49fc         	ldr	r1, [pc, #0x3f0]        @ 0x10004380 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x44c>
10003f8e: 9159         	str	r1, [sp, #0x164]
10003f90: 9078         	str	r0, [sp, #0x1e0]
10003f92: f7fd fa8f    	bl	0x100014b4 <core::cell::Cell<T>::get::h819713353ec39ea2> @ imm = #-0x2ae2
10003f96: 4601         	mov	r1, r0
10003f98: b2c8         	uxtb	r0, r1
10003f9a: 460a         	mov	r2, r1
10003f9c: 9213         	str	r2, [sp, #0x4c]
10003f9e: aa5a         	add	r2, sp, #0x168
10003fa0: 7011         	strb	r1, [r2]
10003fa2: 2803         	cmp	r0, #0x3
10003fa4: d304         	blo	0x10003fb0 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x7c> @ imm = #0x8
10003fa6: e7ff         	b	0x10003fa8 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x74> @ imm = #-0x2
10003fa8: 9854         	ldr	r0, [sp, #0x150]
10003faa: f000 f9ff    	bl	0x100043ac <simple_rtic::app::button_reciever::{{closure}}::h77257ef5f5dfa4cb> @ imm = #0x3fe
10003fae: e0c8         	b	0x10004142 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x20e> @ imm = #0x190
10003fb0: 9812         	ldr	r0, [sp, #0x48]
10003fb2: 907b         	str	r0, [sp, #0x1ec]
10003fb4: aa7c         	add	r2, sp, #0x1f0
10003fb6: 2103         	movs	r1, #0x3
10003fb8: 910d         	str	r1, [sp, #0x34]
10003fba: 7011         	strb	r1, [r2]
10003fbc: f7fd fa88    	bl	0x100014d0 <core::cell::Cell<T>::set::hd10409ba164119e2> @ imm = #-0x2af0
10003fc0: 9913         	ldr	r1, [sp, #0x4c]
10003fc2: 9a0d         	ldr	r2, [sp, #0x34]
10003fc4: a863         	add	r0, sp, #0x18c
10003fc6: 7001         	strb	r1, [r0]
10003fc8: a864         	add	r0, sp, #0x190
10003fca: 7002         	strb	r2, [r0]
10003fcc: 48ec         	ldr	r0, [pc, #0x3b0]        @ 0x10004380 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x44c>
10003fce: 9065         	str	r0, [sp, #0x194]
10003fd0: 2300         	movs	r3, #0x0
10003fd2: 930e         	str	r3, [sp, #0x38]
10003fd4: 9362         	str	r3, [sp, #0x188]
10003fd6: 9b62         	ldr	r3, [sp, #0x188]
10003fd8: 9361         	str	r3, [sp, #0x184]
10003fda: b2c9         	uxtb	r1, r1
10003fdc: 4be9         	ldr	r3, [pc, #0x3a4]        @ 0x10004384 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x450>
10003fde: f7fd fab3    	bl	0x10001548 <core::array::<impl core::ops::index::Index<I> for [T; N]>::index::hf8b26490293f2ac7> @ imm = #-0x2a9a
10003fe2: f7fd fb11    	bl	0x10001608 <core::slice::<impl [T]>::iter::hf02149d412a096dd> @ imm = #-0x29de
10003fe6: aa61         	add	r2, sp, #0x184
10003fe8: f7fe fdc8    	bl	0x10002b7c <<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each::hf0c7599b28330770> @ imm = #-0x1470
10003fec: 980e         	ldr	r0, [sp, #0x38]
10003fee: 9961         	ldr	r1, [sp, #0x184]
10003ff0: 9160         	str	r1, [sp, #0x180]
10003ff2: 9960         	ldr	r1, [sp, #0x180]
10003ff4: 915b         	str	r1, [sp, #0x16c]
10003ff6: 995b         	ldr	r1, [sp, #0x16c]
10003ff8: 9155         	str	r1, [sp, #0x154]
10003ffa: 9955         	ldr	r1, [sp, #0x154]
10003ffc: 915c         	str	r1, [sp, #0x170]
10003ffe: 995c         	ldr	r1, [sp, #0x170]
10004000: 915d         	str	r1, [sp, #0x174]
10004002: 995d         	ldr	r1, [sp, #0x174]
10004004: 9170         	str	r1, [sp, #0x1c0]
10004006: 9970         	ldr	r1, [sp, #0x1c0]
10004008: 916f         	str	r1, [sp, #0x1bc]
1000400a: 2101         	movs	r1, #0x1
1000400c: f001 ffda    	bl	0x10005fc4 <<I as core::iter::traits::collect::IntoIterator>::into_iter::hcd2f3c39bb368951> @ imm = #0x1fb4
10004010: 9071         	str	r0, [sp, #0x1c4]
10004012: 9172         	str	r1, [sp, #0x1c8]
10004014: e7ff         	b	0x10004016 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0xe2> @ imm = #-0x2
10004016: a871         	add	r0, sp, #0x1c4
10004018: f001 ffcc    	bl	0x10005fb4 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next::h3f3b5f6ece6bd4b0> @ imm = #0x1f98
1000401c: 9073         	str	r0, [sp, #0x1cc]
1000401e: 9174         	str	r1, [sp, #0x1d0]
10004020: 9873         	ldr	r0, [sp, #0x1cc]
10004022: 2800         	cmp	r0, #0x0
10004024: d035         	beq	0x10004092 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x15e> @ imm = #0x6a
10004026: e7ff         	b	0x10004028 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0xf4> @ imm = #-0x2
10004028: 9874         	ldr	r0, [sp, #0x1d0]
1000402a: 900c         	str	r0, [sp, #0x30]
1000402c: 9075         	str	r0, [sp, #0x1d4]
1000402e: 2800         	cmp	r0, #0x0
10004030: d107         	bne	0x10004042 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x10e> @ imm = #0xe
10004032: e7ff         	b	0x10004034 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x100> @ imm = #-0x2
10004034: 980c         	ldr	r0, [sp, #0x30]
10004036: 0081         	lsls	r1, r0, #0x2
10004038: a86f         	add	r0, sp, #0x1bc
1000403a: 5840         	ldr	r0, [r0, r1]
1000403c: 2800         	cmp	r0, #0x0
1000403e: d0ea         	beq	0x10004016 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0xe2> @ imm = #-0x2c
10004040: e004         	b	0x1000404c <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x118> @ imm = #0x8
10004042: 980c         	ldr	r0, [sp, #0x30]
10004044: 4ad0         	ldr	r2, [pc, #0x340]        @ 0x10004388 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x454>
10004046: 2101         	movs	r1, #0x1
10004048: f008 f9fa    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0x83f4
1000404c: 980c         	ldr	r0, [sp, #0x30]
1000404e: 280f         	cmp	r0, #0xf
10004050: d808         	bhi	0x10004064 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x130> @ imm = #0x10
10004052: e7ff         	b	0x10004054 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x120> @ imm = #-0x2
10004054: 980c         	ldr	r0, [sp, #0x30]
10004056: 0081         	lsls	r1, r0, #0x2
10004058: 4acd         	ldr	r2, [pc, #0x334]        @ 0x10004390 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x45c>
1000405a: 1889         	adds	r1, r1, r2
1000405c: 910b         	str	r1, [sp, #0x2c]
1000405e: 2800         	cmp	r0, #0x0
10004060: d005         	beq	0x1000406e <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x13a> @ imm = #0xa
10004062: e011         	b	0x10004088 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x154> @ imm = #0x22
10004064: 980c         	ldr	r0, [sp, #0x30]
10004066: 4ac9         	ldr	r2, [pc, #0x324]        @ 0x1000438c <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x458>
10004068: 2110         	movs	r1, #0x10
1000406a: f008 f9e9    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0x83d2
1000406e: 980b         	ldr	r0, [sp, #0x2c]
10004070: 990c         	ldr	r1, [sp, #0x30]
10004072: 008a         	lsls	r2, r1, #0x2
10004074: a96f         	add	r1, sp, #0x1bc
10004076: 5889         	ldr	r1, [r1, r2]
10004078: 9076         	str	r0, [sp, #0x1d8]
1000407a: 9177         	str	r1, [sp, #0x1dc]
1000407c: 9080         	str	r0, [sp, #0x200]
1000407e: 9181         	str	r1, [sp, #0x204]
10004080: 9082         	str	r0, [sp, #0x208]
10004082: f008 f88b    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x8116
10004086: e7c6         	b	0x10004016 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0xe2> @ imm = #-0x74
10004088: 980c         	ldr	r0, [sp, #0x30]
1000408a: 4ac2         	ldr	r2, [pc, #0x308]        @ 0x10004394 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x460>
1000408c: 2101         	movs	r1, #0x1
1000408e: f008 f9d7    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0x83ae
10004092: 9854         	ldr	r0, [sp, #0x150]
10004094: f000 f98a    	bl	0x100043ac <simple_rtic::app::button_reciever::{{closure}}::h77257ef5f5dfa4cb> @ imm = #0x314
10004098: 9855         	ldr	r0, [sp, #0x154]
1000409a: 905e         	str	r0, [sp, #0x178]
1000409c: 985e         	ldr	r0, [sp, #0x178]
1000409e: 905f         	str	r0, [sp, #0x17c]
100040a0: 985f         	ldr	r0, [sp, #0x17c]
100040a2: 9067         	str	r0, [sp, #0x19c]
100040a4: 9867         	ldr	r0, [sp, #0x19c]
100040a6: 9066         	str	r0, [sp, #0x198]
100040a8: 2000         	movs	r0, #0x0
100040aa: 2101         	movs	r1, #0x1
100040ac: f001 ff8a    	bl	0x10005fc4 <<I as core::iter::traits::collect::IntoIterator>::into_iter::hcd2f3c39bb368951> @ imm = #0x1f14
100040b0: 9068         	str	r0, [sp, #0x1a0]
100040b2: 9169         	str	r1, [sp, #0x1a4]
100040b4: e7ff         	b	0x100040b6 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x182> @ imm = #-0x2
100040b6: a868         	add	r0, sp, #0x1a0
100040b8: f001 ff7c    	bl	0x10005fb4 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next::h3f3b5f6ece6bd4b0> @ imm = #0x1ef8
100040bc: 906a         	str	r0, [sp, #0x1a8]
100040be: 916b         	str	r1, [sp, #0x1ac]
100040c0: 986a         	ldr	r0, [sp, #0x1a8]
100040c2: 2800         	cmp	r0, #0x0
100040c4: d035         	beq	0x10004132 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x1fe> @ imm = #0x6a
100040c6: e7ff         	b	0x100040c8 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x194> @ imm = #-0x2
100040c8: 986b         	ldr	r0, [sp, #0x1ac]
100040ca: 900a         	str	r0, [sp, #0x28]
100040cc: 906c         	str	r0, [sp, #0x1b0]
100040ce: 2800         	cmp	r0, #0x0
100040d0: d107         	bne	0x100040e2 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x1ae> @ imm = #0xe
100040d2: e7ff         	b	0x100040d4 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x1a0> @ imm = #-0x2
100040d4: 980a         	ldr	r0, [sp, #0x28]
100040d6: 0081         	lsls	r1, r0, #0x2
100040d8: a866         	add	r0, sp, #0x198
100040da: 5840         	ldr	r0, [r0, r1]
100040dc: 2800         	cmp	r0, #0x0
100040de: d0ea         	beq	0x100040b6 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x182> @ imm = #-0x2c
100040e0: e004         	b	0x100040ec <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x1b8> @ imm = #0x8
100040e2: 980a         	ldr	r0, [sp, #0x28]
100040e4: 4aac         	ldr	r2, [pc, #0x2b0]        @ 0x10004398 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x464>
100040e6: 2101         	movs	r1, #0x1
100040e8: f008 f9aa    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0x8354
100040ec: 980a         	ldr	r0, [sp, #0x28]
100040ee: 280f         	cmp	r0, #0xf
100040f0: d808         	bhi	0x10004104 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x1d0> @ imm = #0x10
100040f2: e7ff         	b	0x100040f4 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x1c0> @ imm = #-0x2
100040f4: 980a         	ldr	r0, [sp, #0x28]
100040f6: 0081         	lsls	r1, r0, #0x2
100040f8: 4aa9         	ldr	r2, [pc, #0x2a4]        @ 0x100043a0 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x46c>
100040fa: 1889         	adds	r1, r1, r2
100040fc: 9109         	str	r1, [sp, #0x24]
100040fe: 2800         	cmp	r0, #0x0
10004100: d005         	beq	0x1000410e <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x1da> @ imm = #0xa
10004102: e011         	b	0x10004128 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x1f4> @ imm = #0x22
10004104: 980a         	ldr	r0, [sp, #0x28]
10004106: 4aa5         	ldr	r2, [pc, #0x294]        @ 0x1000439c <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x468>
10004108: 2110         	movs	r1, #0x10
1000410a: f008 f999    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0x8332
1000410e: 9809         	ldr	r0, [sp, #0x24]
10004110: 990a         	ldr	r1, [sp, #0x28]
10004112: 008a         	lsls	r2, r1, #0x2
10004114: a966         	add	r1, sp, #0x198
10004116: 5889         	ldr	r1, [r1, r2]
10004118: 906d         	str	r0, [sp, #0x1b4]
1000411a: 916e         	str	r1, [sp, #0x1b8]
1000411c: 907d         	str	r0, [sp, #0x1f4]
1000411e: 917e         	str	r1, [sp, #0x1f8]
10004120: 907f         	str	r0, [sp, #0x1fc]
10004122: f008 f83b    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x8076
10004126: e7c6         	b	0x100040b6 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x182> @ imm = #-0x74
10004128: 980a         	ldr	r0, [sp, #0x28]
1000412a: 4a9e         	ldr	r2, [pc, #0x278]        @ 0x100043a4 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x470>
1000412c: 2101         	movs	r1, #0x1
1000412e: f008 f987    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0x830e
10004132: 9913         	ldr	r1, [sp, #0x4c]
10004134: 9812         	ldr	r0, [sp, #0x48]
10004136: 9079         	str	r0, [sp, #0x1e4]
10004138: aa7a         	add	r2, sp, #0x1e8
1000413a: 7011         	strb	r1, [r2]
1000413c: f7fd f9c8    	bl	0x100014d0 <core::cell::Cell<T>::set::hd10409ba164119e2> @ imm = #-0x2c70
10004140: e7ff         	b	0x10004142 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x20e> @ imm = #-0x2
10004142: e7ff         	b	0x10004144 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x210> @ imm = #-0x2
10004144: a816         	add	r0, sp, #0x58
10004146: a918         	add	r1, sp, #0x60
10004148: f7fd f828    	bl	0x1000119c <core::cmp::PartialOrd::lt::hff4ecefc611a2f73> @ imm = #-0x2fb0
1000414c: 2800         	cmp	r0, #0x0
1000414e: d000         	beq	0x10004152 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x21e> @ imm = #0x0
10004150: e0ef         	b	0x10004332 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x3fe> @ imm = #0x1de
10004152: a814         	add	r0, sp, #0x50
10004154: 1d00         	adds	r0, r0, #0x4
10004156: 901e         	str	r0, [sp, #0x78]
10004158: 4988         	ldr	r1, [pc, #0x220]        @ 0x1000437c <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x448>
1000415a: 911f         	str	r1, [sp, #0x7c]
1000415c: 9120         	str	r1, [sp, #0x80]
1000415e: 9050         	str	r0, [sp, #0x140]
10004160: 9815         	ldr	r0, [sp, #0x54]
10004162: 9007         	str	r0, [sp, #0x1c]
10004164: 9121         	str	r1, [sp, #0x84]
10004166: 9023         	str	r0, [sp, #0x8c]
10004168: aa24         	add	r2, sp, #0x90
1000416a: 2103         	movs	r1, #0x3
1000416c: 7011         	strb	r1, [r2]
1000416e: aa25         	add	r2, sp, #0x94
10004170: 2102         	movs	r1, #0x2
10004172: 7011         	strb	r1, [r2]
10004174: 4982         	ldr	r1, [pc, #0x208]        @ 0x10004380 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x44c>
10004176: 9126         	str	r1, [sp, #0x98]
10004178: 9045         	str	r0, [sp, #0x114]
1000417a: f7fd f99b    	bl	0x100014b4 <core::cell::Cell<T>::get::h819713353ec39ea2> @ imm = #-0x2cca
1000417e: 4601         	mov	r1, r0
10004180: b2c8         	uxtb	r0, r1
10004182: 460a         	mov	r2, r1
10004184: 9208         	str	r2, [sp, #0x20]
10004186: aa27         	add	r2, sp, #0x9c
10004188: 7011         	strb	r1, [r2]
1000418a: 2803         	cmp	r0, #0x3
1000418c: d304         	blo	0x10004198 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x264> @ imm = #0x8
1000418e: e7ff         	b	0x10004190 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x25c> @ imm = #-0x2
10004190: 9821         	ldr	r0, [sp, #0x84]
10004192: f000 f914    	bl	0x100043be <simple_rtic::app::button_reciever::{{closure}}::ha3682a55009eff12> @ imm = #0x228
10004196: e0c8         	b	0x1000432a <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x3f6> @ imm = #0x190
10004198: 9807         	ldr	r0, [sp, #0x1c]
1000419a: 9048         	str	r0, [sp, #0x120]
1000419c: aa49         	add	r2, sp, #0x124
1000419e: 2103         	movs	r1, #0x3
100041a0: 9105         	str	r1, [sp, #0x14]
100041a2: 7011         	strb	r1, [r2]
100041a4: f7fd f994    	bl	0x100014d0 <core::cell::Cell<T>::set::hd10409ba164119e2> @ imm = #-0x2cd8
100041a8: 9908         	ldr	r1, [sp, #0x20]
100041aa: 9a05         	ldr	r2, [sp, #0x14]
100041ac: a830         	add	r0, sp, #0xc0
100041ae: 7001         	strb	r1, [r0]
100041b0: a831         	add	r0, sp, #0xc4
100041b2: 7002         	strb	r2, [r0]
100041b4: 4872         	ldr	r0, [pc, #0x1c8]        @ 0x10004380 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x44c>
100041b6: 9032         	str	r0, [sp, #0xc8]
100041b8: 2300         	movs	r3, #0x0
100041ba: 9306         	str	r3, [sp, #0x18]
100041bc: 932f         	str	r3, [sp, #0xbc]
100041be: 9b2f         	ldr	r3, [sp, #0xbc]
100041c0: 932e         	str	r3, [sp, #0xb8]
100041c2: b2c9         	uxtb	r1, r1
100041c4: 4b6f         	ldr	r3, [pc, #0x1bc]        @ 0x10004384 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x450>
100041c6: f7fd f9bf    	bl	0x10001548 <core::array::<impl core::ops::index::Index<I> for [T; N]>::index::hf8b26490293f2ac7> @ imm = #-0x2c82
100041ca: f7fd fa1d    	bl	0x10001608 <core::slice::<impl [T]>::iter::hf02149d412a096dd> @ imm = #-0x2bc6
100041ce: aa2e         	add	r2, sp, #0xb8
100041d0: f7fe fcd4    	bl	0x10002b7c <<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::for_each::hf0c7599b28330770> @ imm = #-0x1658
100041d4: 9806         	ldr	r0, [sp, #0x18]
100041d6: 992e         	ldr	r1, [sp, #0xb8]
100041d8: 912d         	str	r1, [sp, #0xb4]
100041da: 992d         	ldr	r1, [sp, #0xb4]
100041dc: 9128         	str	r1, [sp, #0xa0]
100041de: 9928         	ldr	r1, [sp, #0xa0]
100041e0: 9122         	str	r1, [sp, #0x88]
100041e2: 9922         	ldr	r1, [sp, #0x88]
100041e4: 9129         	str	r1, [sp, #0xa4]
100041e6: 9929         	ldr	r1, [sp, #0xa4]
100041e8: 912a         	str	r1, [sp, #0xa8]
100041ea: 992a         	ldr	r1, [sp, #0xa8]
100041ec: 913d         	str	r1, [sp, #0xf4]
100041ee: 993d         	ldr	r1, [sp, #0xf4]
100041f0: 913c         	str	r1, [sp, #0xf0]
100041f2: 2101         	movs	r1, #0x1
100041f4: f001 fee6    	bl	0x10005fc4 <<I as core::iter::traits::collect::IntoIterator>::into_iter::hcd2f3c39bb368951> @ imm = #0x1dcc
100041f8: 903e         	str	r0, [sp, #0xf8]
100041fa: 913f         	str	r1, [sp, #0xfc]
100041fc: e7ff         	b	0x100041fe <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x2ca> @ imm = #-0x2
100041fe: a83e         	add	r0, sp, #0xf8
10004200: f001 fed8    	bl	0x10005fb4 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next::h3f3b5f6ece6bd4b0> @ imm = #0x1db0
10004204: 9040         	str	r0, [sp, #0x100]
10004206: 9141         	str	r1, [sp, #0x104]
10004208: 9840         	ldr	r0, [sp, #0x100]
1000420a: 2800         	cmp	r0, #0x0
1000420c: d035         	beq	0x1000427a <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x346> @ imm = #0x6a
1000420e: e7ff         	b	0x10004210 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x2dc> @ imm = #-0x2
10004210: 9841         	ldr	r0, [sp, #0x104]
10004212: 9004         	str	r0, [sp, #0x10]
10004214: 9042         	str	r0, [sp, #0x108]
10004216: 2800         	cmp	r0, #0x0
10004218: d107         	bne	0x1000422a <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x2f6> @ imm = #0xe
1000421a: e7ff         	b	0x1000421c <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x2e8> @ imm = #-0x2
1000421c: 9804         	ldr	r0, [sp, #0x10]
1000421e: 0081         	lsls	r1, r0, #0x2
10004220: a83c         	add	r0, sp, #0xf0
10004222: 5840         	ldr	r0, [r0, r1]
10004224: 2800         	cmp	r0, #0x0
10004226: d0ea         	beq	0x100041fe <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x2ca> @ imm = #-0x2c
10004228: e004         	b	0x10004234 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x300> @ imm = #0x8
1000422a: 9804         	ldr	r0, [sp, #0x10]
1000422c: 4a56         	ldr	r2, [pc, #0x158]        @ 0x10004388 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x454>
1000422e: 2101         	movs	r1, #0x1
10004230: f008 f906    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0x820c
10004234: 9804         	ldr	r0, [sp, #0x10]
10004236: 280f         	cmp	r0, #0xf
10004238: d808         	bhi	0x1000424c <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x318> @ imm = #0x10
1000423a: e7ff         	b	0x1000423c <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x308> @ imm = #-0x2
1000423c: 9804         	ldr	r0, [sp, #0x10]
1000423e: 0081         	lsls	r1, r0, #0x2
10004240: 4a53         	ldr	r2, [pc, #0x14c]        @ 0x10004390 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x45c>
10004242: 1889         	adds	r1, r1, r2
10004244: 9103         	str	r1, [sp, #0xc]
10004246: 2800         	cmp	r0, #0x0
10004248: d005         	beq	0x10004256 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x322> @ imm = #0xa
1000424a: e011         	b	0x10004270 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x33c> @ imm = #0x22
1000424c: 9804         	ldr	r0, [sp, #0x10]
1000424e: 4a4f         	ldr	r2, [pc, #0x13c]        @ 0x1000438c <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x458>
10004250: 2110         	movs	r1, #0x10
10004252: f008 f8f5    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0x81ea
10004256: 9803         	ldr	r0, [sp, #0xc]
10004258: 9904         	ldr	r1, [sp, #0x10]
1000425a: 008a         	lsls	r2, r1, #0x2
1000425c: a93c         	add	r1, sp, #0xf0
1000425e: 5889         	ldr	r1, [r1, r2]
10004260: 9043         	str	r0, [sp, #0x10c]
10004262: 9144         	str	r1, [sp, #0x110]
10004264: 904d         	str	r0, [sp, #0x134]
10004266: 914e         	str	r1, [sp, #0x138]
10004268: 904f         	str	r0, [sp, #0x13c]
1000426a: f007 ff97    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x7f2e
1000426e: e7c6         	b	0x100041fe <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x2ca> @ imm = #-0x74
10004270: 9804         	ldr	r0, [sp, #0x10]
10004272: 4a48         	ldr	r2, [pc, #0x120]        @ 0x10004394 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x460>
10004274: 2101         	movs	r1, #0x1
10004276: f008 f8e3    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0x81c6
1000427a: 9821         	ldr	r0, [sp, #0x84]
1000427c: f000 f89f    	bl	0x100043be <simple_rtic::app::button_reciever::{{closure}}::ha3682a55009eff12> @ imm = #0x13e
10004280: 9822         	ldr	r0, [sp, #0x88]
10004282: 902b         	str	r0, [sp, #0xac]
10004284: 982b         	ldr	r0, [sp, #0xac]
10004286: 902c         	str	r0, [sp, #0xb0]
10004288: 982c         	ldr	r0, [sp, #0xb0]
1000428a: 9034         	str	r0, [sp, #0xd0]
1000428c: 9834         	ldr	r0, [sp, #0xd0]
1000428e: 9033         	str	r0, [sp, #0xcc]
10004290: 2000         	movs	r0, #0x0
10004292: 2101         	movs	r1, #0x1
10004294: f001 fe96    	bl	0x10005fc4 <<I as core::iter::traits::collect::IntoIterator>::into_iter::hcd2f3c39bb368951> @ imm = #0x1d2c
10004298: 9035         	str	r0, [sp, #0xd4]
1000429a: 9136         	str	r1, [sp, #0xd8]
1000429c: e7ff         	b	0x1000429e <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x36a> @ imm = #-0x2
1000429e: a835         	add	r0, sp, #0xd4
100042a0: f001 fe88    	bl	0x10005fb4 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next::h3f3b5f6ece6bd4b0> @ imm = #0x1d10
100042a4: 9037         	str	r0, [sp, #0xdc]
100042a6: 9138         	str	r1, [sp, #0xe0]
100042a8: 9837         	ldr	r0, [sp, #0xdc]
100042aa: 2800         	cmp	r0, #0x0
100042ac: d035         	beq	0x1000431a <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x3e6> @ imm = #0x6a
100042ae: e7ff         	b	0x100042b0 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x37c> @ imm = #-0x2
100042b0: 9838         	ldr	r0, [sp, #0xe0]
100042b2: 9002         	str	r0, [sp, #0x8]
100042b4: 9039         	str	r0, [sp, #0xe4]
100042b6: 2800         	cmp	r0, #0x0
100042b8: d107         	bne	0x100042ca <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x396> @ imm = #0xe
100042ba: e7ff         	b	0x100042bc <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x388> @ imm = #-0x2
100042bc: 9802         	ldr	r0, [sp, #0x8]
100042be: 0081         	lsls	r1, r0, #0x2
100042c0: a833         	add	r0, sp, #0xcc
100042c2: 5840         	ldr	r0, [r0, r1]
100042c4: 2800         	cmp	r0, #0x0
100042c6: d0ea         	beq	0x1000429e <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x36a> @ imm = #-0x2c
100042c8: e004         	b	0x100042d4 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x3a0> @ imm = #0x8
100042ca: 9802         	ldr	r0, [sp, #0x8]
100042cc: 4a32         	ldr	r2, [pc, #0xc8]         @ 0x10004398 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x464>
100042ce: 2101         	movs	r1, #0x1
100042d0: f008 f8b6    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0x816c
100042d4: 9802         	ldr	r0, [sp, #0x8]
100042d6: 280f         	cmp	r0, #0xf
100042d8: d808         	bhi	0x100042ec <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x3b8> @ imm = #0x10
100042da: e7ff         	b	0x100042dc <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x3a8> @ imm = #-0x2
100042dc: 9802         	ldr	r0, [sp, #0x8]
100042de: 0081         	lsls	r1, r0, #0x2
100042e0: 4a2f         	ldr	r2, [pc, #0xbc]         @ 0x100043a0 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x46c>
100042e2: 1889         	adds	r1, r1, r2
100042e4: 9101         	str	r1, [sp, #0x4]
100042e6: 2800         	cmp	r0, #0x0
100042e8: d005         	beq	0x100042f6 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x3c2> @ imm = #0xa
100042ea: e011         	b	0x10004310 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x3dc> @ imm = #0x22
100042ec: 9802         	ldr	r0, [sp, #0x8]
100042ee: 4a2b         	ldr	r2, [pc, #0xac]         @ 0x1000439c <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x468>
100042f0: 2110         	movs	r1, #0x10
100042f2: f008 f8a5    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0x814a
100042f6: 9801         	ldr	r0, [sp, #0x4]
100042f8: 9902         	ldr	r1, [sp, #0x8]
100042fa: 008a         	lsls	r2, r1, #0x2
100042fc: a933         	add	r1, sp, #0xcc
100042fe: 5889         	ldr	r1, [r1, r2]
10004300: 903a         	str	r0, [sp, #0xe8]
10004302: 913b         	str	r1, [sp, #0xec]
10004304: 904a         	str	r0, [sp, #0x128]
10004306: 914b         	str	r1, [sp, #0x12c]
10004308: 904c         	str	r0, [sp, #0x130]
1000430a: f007 ff47    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x7e8e
1000430e: e7c6         	b	0x1000429e <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x36a> @ imm = #-0x74
10004310: 9802         	ldr	r0, [sp, #0x8]
10004312: 4a24         	ldr	r2, [pc, #0x90]         @ 0x100043a4 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x470>
10004314: 2101         	movs	r1, #0x1
10004316: f008 f893    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0x8126
1000431a: 9908         	ldr	r1, [sp, #0x20]
1000431c: 9807         	ldr	r0, [sp, #0x1c]
1000431e: 9046         	str	r0, [sp, #0x118]
10004320: aa47         	add	r2, sp, #0x11c
10004322: 7011         	strb	r1, [r2]
10004324: f7fd f8d4    	bl	0x100014d0 <core::cell::Cell<T>::set::hd10409ba164119e2> @ imm = #-0x2e58
10004328: e7ff         	b	0x1000432a <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x3f6> @ imm = #-0x2
1000432a: 1ffe         	subs	r6, r7, #0x7
1000432c: 3e01         	subs	r6, #0x1
1000432e: 46b5         	mov	sp, r6
10004330: bdd0         	pop	{r4, r6, r7, pc}
10004332: 9817         	ldr	r0, [sp, #0x5c]
10004334: 2801         	cmp	r0, #0x1
10004336: dd00         	ble	0x1000433a <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x406> @ imm = #0x0
10004338: e70b         	b	0x10004152 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x21e> @ imm = #-0x1ea
1000433a: f7fe fa5d    	bl	0x100027f8 <cortex_m::asm::nop::h3f7eb3f0d24427f5> @ imm = #-0x1b46
1000433e: 9814         	ldr	r0, [sp, #0x50]
10004340: f7ff f87e    	bl	0x10003440 <simple_rtic::Systick<_>::time::h68d2b7c79955496f> @ imm = #-0xf04
10004344: 990f         	ldr	r1, [sp, #0x3c]
10004346: 901c         	str	r0, [sp, #0x70]
10004348: f7fd fc49    	bl	0x10001bde <fugit::duration::Duration<u32,_,_>::checked_sub::h7132cd7e1372da4e> @ imm = #-0x276e
1000434c: 9019         	str	r0, [sp, #0x64]
1000434e: 911a         	str	r1, [sp, #0x68]
10004350: 9819         	ldr	r0, [sp, #0x64]
10004352: 2801         	cmp	r0, #0x1
10004354: d000         	beq	0x10004358 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x424> @ imm = #0x0
10004356: e6fc         	b	0x10004152 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x21e> @ imm = #-0x208
10004358: 981a         	ldr	r0, [sp, #0x68]
1000435a: 901d         	str	r0, [sp, #0x74]
1000435c: 9016         	str	r0, [sp, #0x58]
1000435e: 9917         	ldr	r1, [sp, #0x5c]
10004360: 1c48         	adds	r0, r1, #0x1
10004362: 9000         	str	r0, [sp]
10004364: 4288         	cmp	r0, r1
10004366: d606         	bvs	0x10004376 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x442> @ imm = #0xc
10004368: e002         	b	0x10004370 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x43c> @ imm = #0x4
1000436a: 46c0         	mov	r8, r8
1000436c: fc fb 03 20  	.word	0x2003fbfc
10004370: 9800         	ldr	r0, [sp]
10004372: 9017         	str	r0, [sp, #0x5c]
10004374: e6e6         	b	0x10004144 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x210> @ imm = #-0x234
10004376: 480c         	ldr	r0, [pc, #0x30]         @ 0x100043a8 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72+0x474>
10004378: f009 f85a    	bl	0x1000d430 <core::panicking::panic_const::panic_const_add_overflow::h73b6e802431fc142> @ imm = #0x90b4
1000437c: fc fb 03 20  	.word	0x2003fbfc
10004380: 7c 0c 01 10  	.word	0x10010c7c
10004384: 60 e5 00 10  	.word	0x1000e560
10004388: a0 e5 00 10  	.word	0x1000e5a0
1000438c: b0 e5 00 10  	.word	0x1000e5b0
10004390: 80 e1 00 e0  	.word	0xe000e180
10004394: c0 e5 00 10  	.word	0x1000e5c0
10004398: 70 e5 00 10  	.word	0x1000e570
1000439c: 80 e5 00 10  	.word	0x1000e580
100043a0: 00 e1 00 e0  	.word	0xe000e100
100043a4: 90 e5 00 10  	.word	0x1000e590
100043a8: 6c 0c 01 10  	.word	0x10010c6c

100043ac <simple_rtic::app::button_reciever::{{closure}}::h77257ef5f5dfa4cb>:
100043ac: b580         	push	{r7, lr}
100043ae: af00         	add	r7, sp, #0x0
100043b0: b082         	sub	sp, #0x8
100043b2: 4601         	mov	r1, r0
100043b4: 9101         	str	r1, [sp, #0x4]
100043b6: 2000         	movs	r0, #0x0
100043b8: 7008         	strb	r0, [r1]
100043ba: b002         	add	sp, #0x8
100043bc: bd80         	pop	{r7, pc}

100043be <simple_rtic::app::button_reciever::{{closure}}::ha3682a55009eff12>:
100043be: b580         	push	{r7, lr}
100043c0: af00         	add	r7, sp, #0x0
100043c2: b082         	sub	sp, #0x8
100043c4: 4601         	mov	r1, r0
100043c6: 9101         	str	r1, [sp, #0x4]
100043c8: 2001         	movs	r0, #0x1
100043ca: 7008         	strb	r0, [r1]
100043cc: b002         	add	sp, #0x8
100043ce: bd80         	pop	{r7, pc}

100043d0 <TIMER_IRQ_3>:
100043d0: b580         	push	{r7, lr}
100043d2: af00         	add	r7, sp, #0x0
100043d4: b082         	sub	sp, #0x8
100043d6: a901         	add	r1, sp, #0x4
100043d8: 2002         	movs	r0, #0x2
100043da: 7008         	strb	r0, [r1]
100043dc: f000 f802    	bl	0x100043e4 <simple_rtic::app::TIMER_IRQ_3::{{closure}}::h2cfbac112392a24b> @ imm = #0x4
100043e0: b002         	add	sp, #0x8
100043e2: bd80         	pop	{r7, pc}

100043e4 <simple_rtic::app::TIMER_IRQ_3::{{closure}}::h2cfbac112392a24b>:
100043e4: b580         	push	{r7, lr}
100043e6: af00         	add	r7, sp, #0x0
100043e8: b086         	sub	sp, #0x18
100043ea: a902         	add	r1, sp, #0x8
100043ec: 2002         	movs	r0, #0x2
100043ee: 7008         	strb	r0, [r1]
100043f0: f7fd f867    	bl	0x100014c2 <core::cell::Cell<T>::new::hd2720efbb8528b48> @ imm = #-0x2f32
100043f4: 4601         	mov	r1, r0
100043f6: a801         	add	r0, sp, #0x4
100043f8: 7001         	strb	r1, [r0]
100043fa: 9003         	str	r0, [sp, #0xc]
100043fc: 9004         	str	r0, [sp, #0x10]
100043fe: 9005         	str	r0, [sp, #0x14]
10004400: f7ff fb40    	bl	0x10003a84 <simple_rtic::app::task_3::h0bf0b30ec96d3034> @ imm = #-0x980
10004404: b006         	add	sp, #0x18
10004406: bd80         	pop	{r7, pc}

10004408 <TIMER_IRQ_2>:
10004408: b580         	push	{r7, lr}
1000440a: af00         	add	r7, sp, #0x0
1000440c: b082         	sub	sp, #0x8
1000440e: a901         	add	r1, sp, #0x4
10004410: 2001         	movs	r0, #0x1
10004412: 7008         	strb	r0, [r1]
10004414: f000 f802    	bl	0x1000441c <simple_rtic::app::TIMER_IRQ_2::{{closure}}::h632ebb6d457234a4> @ imm = #0x4
10004418: b002         	add	sp, #0x8
1000441a: bd80         	pop	{r7, pc}

1000441c <simple_rtic::app::TIMER_IRQ_2::{{closure}}::h632ebb6d457234a4>:
1000441c: b580         	push	{r7, lr}
1000441e: af00         	add	r7, sp, #0x0
10004420: b08e         	sub	sp, #0x38
10004422: a904         	add	r1, sp, #0x10
10004424: 2001         	movs	r0, #0x1
10004426: 7008         	strb	r0, [r1]
10004428: f7fd f84b    	bl	0x100014c2 <core::cell::Cell<T>::new::hd2720efbb8528b48> @ imm = #-0x2f6a
1000442c: 4601         	mov	r1, r0
1000442e: a803         	add	r0, sp, #0xc
10004430: 7001         	strb	r1, [r0]
10004432: 9005         	str	r0, [sp, #0x14]
10004434: 4a08         	ldr	r2, [pc, #0x20]         @ 0x10004458 <simple_rtic::app::TIMER_IRQ_2::{{closure}}::h632ebb6d457234a4+0x3c>
10004436: 920a         	str	r2, [sp, #0x28]
10004438: 920b         	str	r2, [sp, #0x2c]
1000443a: 9206         	str	r2, [sp, #0x18]
1000443c: 4907         	ldr	r1, [pc, #0x1c]         @ 0x1000445c <simple_rtic::app::TIMER_IRQ_2::{{closure}}::h632ebb6d457234a4+0x40>
1000443e: 9108         	str	r1, [sp, #0x20]
10004440: 9109         	str	r1, [sp, #0x24]
10004442: 9107         	str	r1, [sp, #0x1c]
10004444: 900c         	str	r0, [sp, #0x30]
10004446: 900d         	str	r0, [sp, #0x34]
10004448: 9200         	str	r2, [sp]
1000444a: 9101         	str	r1, [sp, #0x4]
1000444c: 9002         	str	r0, [sp, #0x8]
1000444e: 4668         	mov	r0, sp
10004450: f7ff fc28    	bl	0x10003ca4 <simple_rtic::app::button_handler::h222473973e243e9c> @ imm = #-0x7b0
10004454: b00e         	add	sp, #0x38
10004456: bd80         	pop	{r7, pc}
10004458: fd fb 03 20  	.word	0x2003fbfd
1000445c: fe fb 03 20  	.word	0x2003fbfe

10004460 <IO_IRQ_BANK0>:
10004460: b580         	push	{r7, lr}
10004462: af00         	add	r7, sp, #0x0
10004464: b082         	sub	sp, #0x8
10004466: a901         	add	r1, sp, #0x4
10004468: 2003         	movs	r0, #0x3
1000446a: 7008         	strb	r0, [r1]
1000446c: f000 f802    	bl	0x10004474 <simple_rtic::app::IO_IRQ_BANK0::{{closure}}::hebe79263d17ff164> @ imm = #0x4
10004470: b002         	add	sp, #0x8
10004472: bd80         	pop	{r7, pc}

10004474 <simple_rtic::app::IO_IRQ_BANK0::{{closure}}::hebe79263d17ff164>:
10004474: b580         	push	{r7, lr}
10004476: af00         	add	r7, sp, #0x0
10004478: b088         	sub	sp, #0x20
1000447a: a901         	add	r1, sp, #0x4
1000447c: 2003         	movs	r0, #0x3
1000447e: 7008         	strb	r0, [r1]
10004480: f7fd f81f    	bl	0x100014c2 <core::cell::Cell<T>::new::hd2720efbb8528b48> @ imm = #-0x2fc2
10004484: 4669         	mov	r1, sp
10004486: 7008         	strb	r0, [r1]
10004488: 9102         	str	r1, [sp, #0x8]
1000448a: 4805         	ldr	r0, [pc, #0x14]         @ 0x100044a0 <simple_rtic::app::IO_IRQ_BANK0::{{closure}}::hebe79263d17ff164+0x2c>
1000448c: 9004         	str	r0, [sp, #0x10]
1000448e: 9005         	str	r0, [sp, #0x14]
10004490: 9003         	str	r0, [sp, #0xc]
10004492: 9106         	str	r1, [sp, #0x18]
10004494: 9107         	str	r1, [sp, #0x1c]
10004496: f7ff fd4d    	bl	0x10003f34 <simple_rtic::app::button_reciever::h4d6ffcc7766bbc72> @ imm = #-0x566
1000449a: b008         	add	sp, #0x20
1000449c: bd80         	pop	{r7, pc}
1000449e: 46c0         	mov	r8, r8
100044a0: fd fb 03 20  	.word	0x2003fbfd

100044a4 <TIMER_IRQ_0>:
100044a4: b580         	push	{r7, lr}
100044a6: af00         	add	r7, sp, #0x0
100044a8: b082         	sub	sp, #0x8
100044aa: f7fe f9e9    	bl	0x10002880 <cortex_m::interrupt::free::hde7e74f70d23bf53> @ imm = #-0x1c2e
100044ae: 4602         	mov	r2, r0
100044b0: a801         	add	r0, sp, #0x4
100044b2: 7002         	strb	r2, [r0]
100044b4: 7041         	strb	r1, [r0, #0x1]
100044b6: 7800         	ldrb	r0, [r0]
100044b8: 2800         	cmp	r0, #0x0
100044ba: d104         	bne	0x100044c6 <TIMER_IRQ_0+0x22> @ imm = #0x8
100044bc: e7ff         	b	0x100044be <TIMER_IRQ_0+0x1a> @ imm = #-0x2
100044be: f7fe f9c5    	bl	0x1000284c <cortex_m::interrupt::free::hc6324d472d11cc43> @ imm = #-0x1c76
100044c2: b002         	add	sp, #0x8
100044c4: bd80         	pop	{r7, pc}
100044c6: defe         	trap

100044c8 <simple_rtic::app::TIMER_IRQ_0::{{closure}}::hcf033c5e7f32e51a>:
100044c8: b580         	push	{r7, lr}
100044ca: af00         	add	r7, sp, #0x0
100044cc: b08a         	sub	sp, #0x28
100044ce: 9004         	str	r0, [sp, #0x10]
100044d0: 4812         	ldr	r0, [pc, #0x48]         @ 0x1000451c <simple_rtic::app::TIMER_IRQ_0::{{closure}}::hcf033c5e7f32e51a+0x54>
100044d2: 9008         	str	r0, [sp, #0x20]
100044d4: 9009         	str	r0, [sp, #0x24]
100044d6: 2800         	cmp	r0, #0x0
100044d8: d008         	beq	0x100044ec <simple_rtic::app::TIMER_IRQ_0::{{closure}}::hcf033c5e7f32e51a+0x24> @ imm = #0x10
100044da: e7ff         	b	0x100044dc <simple_rtic::app::TIMER_IRQ_0::{{closure}}::hcf033c5e7f32e51a+0x14> @ imm = #-0x2
100044dc: 480f         	ldr	r0, [pc, #0x3c]         @ 0x1000451c <simple_rtic::app::TIMER_IRQ_0::{{closure}}::hcf033c5e7f32e51a+0x54>
100044de: f7fd fa0b    	bl	0x100018f8 <core::option::Option<T>::as_mut::h317fcaf66625bd65> @ imm = #-0x2bea
100044e2: 9002         	str	r0, [sp, #0x8]
100044e4: 9802         	ldr	r0, [sp, #0x8]
100044e6: 2800         	cmp	r0, #0x0
100044e8: d103         	bne	0x100044f2 <simple_rtic::app::TIMER_IRQ_0::{{closure}}::hcf033c5e7f32e51a+0x2a> @ imm = #0x6
100044ea: e00b         	b	0x10004504 <simple_rtic::app::TIMER_IRQ_0::{{closure}}::hcf033c5e7f32e51a+0x3c> @ imm = #0x16
100044ec: 480c         	ldr	r0, [pc, #0x30]         @ 0x10004520 <simple_rtic::app::TIMER_IRQ_0::{{closure}}::hcf033c5e7f32e51a+0x58>
100044ee: f007 ffc5    	bl	0x1000c47c <core::panicking::panic_null_pointer_dereference::hbb12e6a8f55b3514> @ imm = #0x7f8a
100044f2: 9802         	ldr	r0, [sp, #0x8]
100044f4: 9001         	str	r0, [sp, #0x4]
100044f6: 9005         	str	r0, [sp, #0x14]
100044f8: 480a         	ldr	r0, [pc, #0x28]         @ 0x10004524 <simple_rtic::app::TIMER_IRQ_0::{{closure}}::hcf033c5e7f32e51a+0x5c>
100044fa: 9006         	str	r0, [sp, #0x18]
100044fc: 9007         	str	r0, [sp, #0x1c]
100044fe: 2800         	cmp	r0, #0x0
10004500: d102         	bne	0x10004508 <simple_rtic::app::TIMER_IRQ_0::{{closure}}::hcf033c5e7f32e51a+0x40> @ imm = #0x4
10004502: e007         	b	0x10004514 <simple_rtic::app::TIMER_IRQ_0::{{closure}}::hcf033c5e7f32e51a+0x4c> @ imm = #0xe
10004504: f7fc ffed    	bl	0x100014e2 <core::hint::unreachable_unchecked::ha5db41a312eb8c90> @ imm = #-0x3026
10004508: 9901         	ldr	r1, [sp, #0x4]
1000450a: 4806         	ldr	r0, [pc, #0x18]         @ 0x10004524 <simple_rtic::app::TIMER_IRQ_0::{{closure}}::hcf033c5e7f32e51a+0x5c>
1000450c: f7fd fa3c    	bl	0x10001988 <rtic::tq::TimerQueue<Mono,Task,_>::dequeue::h170fc814149e15bd> @ imm = #-0x2b88
10004510: b00a         	add	sp, #0x28
10004512: bd80         	pop	{r7, pc}
10004514: 4802         	ldr	r0, [pc, #0x8]          @ 0x10004520 <simple_rtic::app::TIMER_IRQ_0::{{closure}}::hcf033c5e7f32e51a+0x58>
10004516: f007 ffb1    	bl	0x1000c47c <core::panicking::panic_null_pointer_dereference::hbb12e6a8f55b3514> @ imm = #0x7f62
1000451a: 46c0         	mov	r8, r8
1000451c: f0 fb 03 20  	.word	0x2003fbf0
10004520: 2c 0c 01 10  	.word	0x10010c2c
10004524: b0 fb 03 20  	.word	0x2003fbb0

10004528 <simple_rtic::app::TIMER_IRQ_0::{{closure}}::h9227bce7fa7804ee>:
10004528: b580         	push	{r7, lr}
1000452a: af00         	add	r7, sp, #0x0
1000452c: b086         	sub	sp, #0x18
1000452e: 9002         	str	r0, [sp, #0x8]
10004530: 480b         	ldr	r0, [pc, #0x2c]         @ 0x10004560 <simple_rtic::app::TIMER_IRQ_0::{{closure}}::h9227bce7fa7804ee+0x38>
10004532: 9004         	str	r0, [sp, #0x10]
10004534: 9005         	str	r0, [sp, #0x14]
10004536: 2800         	cmp	r0, #0x0
10004538: d008         	beq	0x1000454c <simple_rtic::app::TIMER_IRQ_0::{{closure}}::h9227bce7fa7804ee+0x24> @ imm = #0x10
1000453a: e7ff         	b	0x1000453c <simple_rtic::app::TIMER_IRQ_0::{{closure}}::h9227bce7fa7804ee+0x14> @ imm = #-0x2
1000453c: 4808         	ldr	r0, [pc, #0x20]         @ 0x10004560 <simple_rtic::app::TIMER_IRQ_0::{{closure}}::h9227bce7fa7804ee+0x38>
1000453e: f7fd f9db    	bl	0x100018f8 <core::option::Option<T>::as_mut::h317fcaf66625bd65> @ imm = #-0x2c4a
10004542: 9000         	str	r0, [sp]
10004544: 9800         	ldr	r0, [sp]
10004546: 2800         	cmp	r0, #0x0
10004548: d103         	bne	0x10004552 <simple_rtic::app::TIMER_IRQ_0::{{closure}}::h9227bce7fa7804ee+0x2a> @ imm = #0x6
1000454a: e007         	b	0x1000455c <simple_rtic::app::TIMER_IRQ_0::{{closure}}::h9227bce7fa7804ee+0x34> @ imm = #0xe
1000454c: 4805         	ldr	r0, [pc, #0x14]         @ 0x10004564 <simple_rtic::app::TIMER_IRQ_0::{{closure}}::h9227bce7fa7804ee+0x3c>
1000454e: f007 ff95    	bl	0x1000c47c <core::panicking::panic_null_pointer_dereference::hbb12e6a8f55b3514> @ imm = #0x7f2a
10004552: 9800         	ldr	r0, [sp]
10004554: 9003         	str	r0, [sp, #0xc]
10004556: f7fc fc80    	bl	0x10000e5a <rtic_monotonic::Monotonic::on_interrupt::h311b9700b730bc05> @ imm = #-0x3700
1000455a: e7ff         	b	0x1000455c <simple_rtic::app::TIMER_IRQ_0::{{closure}}::h9227bce7fa7804ee+0x34> @ imm = #-0x2
1000455c: b006         	add	sp, #0x18
1000455e: bd80         	pop	{r7, pc}
10004560: f0 fb 03 20  	.word	0x2003fbf0
10004564: 2c 0c 01 10  	.word	0x10010c2c

10004568 <main>:
10004568: b580         	push	{r7, lr}
1000456a: af00         	add	r7, sp, #0x0
1000456c: b08e         	sub	sp, #0x38
1000456e: f7fe f9b0    	bl	0x100028d2 <cortex_m::interrupt::disable::h303235e1cf853f1e> @ imm = #-0x1ca0
10004572: f7fe f861    	bl	0x10002638 <cortex_m::peripheral::Peripherals::steal::ha5dcc0c5eb5b4f5c> @ imm = #-0x1f3e
10004576: 482a         	ldr	r0, [pc, #0xa8]         @ 0x10004620 <main+0xb8>
10004578: f7fd fac3    	bl	0x10001b02 <<T as core::convert::Into<U>>::into::h0d24b07b48444121> @ imm = #-0x2a7a
1000457c: a906         	add	r1, sp, #0x18
1000457e: 2003         	movs	r0, #0x3
10004580: 9000         	str	r0, [sp]
10004582: 8008         	strh	r0, [r1]
10004584: 2102         	movs	r1, #0x2
10004586: 9102         	str	r1, [sp, #0x8]
10004588: 4608         	mov	r0, r1
1000458a: f7fd fa69    	bl	0x10001a60 <rtic::export::logical2hw::ha4625f4536969112> @ imm = #-0x2b2e
1000458e: 4602         	mov	r2, r0
10004590: 9906         	ldr	r1, [sp, #0x18]
10004592: a805         	add	r0, sp, #0x14
10004594: 9003         	str	r0, [sp, #0xc]
10004596: f7fe f857    	bl	0x10002648 <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::set_priority::hcb6e282f4580d922> @ imm = #-0x1f52
1000459a: 9800         	ldr	r0, [sp]
1000459c: a907         	add	r1, sp, #0x1c
1000459e: 8008         	strh	r0, [r1]
100045a0: 9807         	ldr	r0, [sp, #0x1c]
100045a2: f7fe f8c5    	bl	0x10002730 <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::unmask::h960bd739fb738cf9> @ imm = #-0x1e76
100045a6: 9902         	ldr	r1, [sp, #0x8]
100045a8: a808         	add	r0, sp, #0x20
100045aa: 8001         	strh	r1, [r0]
100045ac: 2001         	movs	r0, #0x1
100045ae: f7fd fa57    	bl	0x10001a60 <rtic::export::logical2hw::ha4625f4536969112> @ imm = #-0x2b52
100045b2: 4602         	mov	r2, r0
100045b4: 9803         	ldr	r0, [sp, #0xc]
100045b6: 9908         	ldr	r1, [sp, #0x20]
100045b8: f7fe f846    	bl	0x10002648 <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::set_priority::hcb6e282f4580d922> @ imm = #-0x1f74
100045bc: 9802         	ldr	r0, [sp, #0x8]
100045be: a909         	add	r1, sp, #0x24
100045c0: 8008         	strh	r0, [r1]
100045c2: 9809         	ldr	r0, [sp, #0x24]
100045c4: f7fe f8b4    	bl	0x10002730 <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::unmask::h960bd739fb738cf9> @ imm = #-0x1e98
100045c8: 9800         	ldr	r0, [sp]
100045ca: 9902         	ldr	r1, [sp, #0x8]
100045cc: ab0a         	add	r3, sp, #0x28
100045ce: 220d         	movs	r2, #0xd
100045d0: 9201         	str	r2, [sp, #0x4]
100045d2: 801a         	strh	r2, [r3]
100045d4: f7fd fa44    	bl	0x10001a60 <rtic::export::logical2hw::ha4625f4536969112> @ imm = #-0x2b78
100045d8: 4602         	mov	r2, r0
100045da: 9803         	ldr	r0, [sp, #0xc]
100045dc: 990a         	ldr	r1, [sp, #0x28]
100045de: f7fe f833    	bl	0x10002648 <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::set_priority::hcb6e282f4580d922> @ imm = #-0x1f9a
100045e2: 9801         	ldr	r0, [sp, #0x4]
100045e4: a90b         	add	r1, sp, #0x2c
100045e6: 8008         	strh	r0, [r1]
100045e8: 980b         	ldr	r0, [sp, #0x2c]
100045ea: f7fe f8a1    	bl	0x10002730 <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::unmask::h960bd739fb738cf9> @ imm = #-0x1ebe
100045ee: 9902         	ldr	r1, [sp, #0x8]
100045f0: aa0c         	add	r2, sp, #0x30
100045f2: 2000         	movs	r0, #0x0
100045f4: 9004         	str	r0, [sp, #0x10]
100045f6: 8010         	strh	r0, [r2]
100045f8: 2004         	movs	r0, #0x4
100045fa: f7fd fa31    	bl	0x10001a60 <rtic::export::logical2hw::ha4625f4536969112> @ imm = #-0x2b9e
100045fe: 4602         	mov	r2, r0
10004600: 9803         	ldr	r0, [sp, #0xc]
10004602: 990c         	ldr	r1, [sp, #0x30]
10004604: f7fe f820    	bl	0x10002648 <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::set_priority::hcb6e282f4580d922> @ imm = #-0x1fc0
10004608: 9804         	ldr	r0, [sp, #0x10]
1000460a: a90d         	add	r1, sp, #0x34
1000460c: 8008         	strh	r0, [r1]
1000460e: 980d         	ldr	r0, [sp, #0x34]
10004610: f7fe f88e    	bl	0x10002730 <cortex_m::peripheral::nvic::<impl cortex_m::peripheral::NVIC>::unmask::h960bd739fb738cf9> @ imm = #-0x1ee4
10004614: f000 f806    	bl	0x10004624 <simple_rtic::app::rtic_ext::main::__rtic_init_resources::hce6602294ed26cda> @ imm = #0xc
10004618: e7ff         	b	0x1000461a <main+0xb2>  @ imm = #-0x2
1000461a: f7fe f8ed    	bl	0x100027f8 <cortex_m::asm::nop::h3f7eb3f0d24427f5> @ imm = #-0x1e26
1000461e: e7fc         	b	0x1000461a <main+0xb2>  @ imm = #-0x8
10004620: 2c 0c 01 10  	.word	0x10010c2c

10004624 <simple_rtic::app::rtic_ext::main::__rtic_init_resources::hce6602294ed26cda>:
10004624: b580         	push	{r7, lr}
10004626: af00         	add	r7, sp, #0x0
10004628: b082         	sub	sp, #0x8
1000462a: f000 f803    	bl	0x10004634 <simple_rtic::app::rtic_ext::main::{{closure}}::hfebbe9550ec29d0d> @ imm = #0x6
1000462e: b002         	add	sp, #0x8
10004630: bd80         	pop	{r7, pc}
10004632: d4d4         	bmi	0x100045de <main+0x76>  @ imm = #-0x58

10004634 <simple_rtic::app::rtic_ext::main::{{closure}}::hfebbe9550ec29d0d>:
10004634: b5b0         	push	{r4, r5, r7, lr}
10004636: af02         	add	r7, sp, #0x8
10004638: b0c6         	sub	sp, #0x118
1000463a: 484d         	ldr	r0, [pc, #0x134]        @ 0x10004770 <simple_rtic::app::rtic_ext::main::{{closure}}::hfebbe9550ec29d0d+0x13c>
1000463c: f7fd fa61    	bl	0x10001b02 <<T as core::convert::Into<U>>::into::h0d24b07b48444121> @ imm = #-0x2b3e
10004640: f7fc fba8    	bl	0x10000d94 <rp2040_pac::Peripherals::steal::h4be80d3f46a3df04> @ imm = #-0x38b0
10004644: 484b         	ldr	r0, [pc, #0x12c]        @ 0x10004774 <simple_rtic::app::rtic_ext::main::{{closure}}::hfebbe9550ec29d0d+0x140>
10004646: 9044         	str	r0, [sp, #0x110]
10004648: 9045         	str	r0, [sp, #0x114]
1000464a: 901d         	str	r0, [sp, #0x74]
1000464c: f7ff f8b6    	bl	0x100037bc <__symex_init_TIMER_IRQ_3> @ imm = #-0xe94
10004650: f7fc ff75    	bl	0x1000153e <core::hint::black_box::hfedc34f3e4e541aa> @ imm = #-0x3116
10004654: f7ff f8f8    	bl	0x10003848 <__symex_init_TIMER_IRQ_2> @ imm = #-0xe10
10004658: f7fc ff71    	bl	0x1000153e <core::hint::black_box::hfedc34f3e4e541aa> @ imm = #-0x311e
1000465c: f7ff f99c    	bl	0x10003998 <__symex_init_IO_IRQ_BANK0> @ imm = #-0xcc8
10004660: f7fc ff6d    	bl	0x1000153e <core::hint::black_box::hfedc34f3e4e541aa> @ imm = #-0x3126
10004664: f7ff f88c    	bl	0x10003780 <__symex_init_shared_resources> @ imm = #-0xee8
10004668: f7fc ff69    	bl	0x1000153e <core::hint::black_box::hfedc34f3e4e541aa> @ imm = #-0x312e
1000466c: 4842         	ldr	r0, [pc, #0x108]        @ 0x10004778 <simple_rtic::app::rtic_ext::main::{{closure}}::hfebbe9550ec29d0d+0x144>
1000466e: f007 fc93    	bl	0x1000bf98 <defmt::export::make_istr::hdc5301bbf45c9956> @ imm = #0x7926
10004672: 4601         	mov	r1, r0
10004674: a81e         	add	r0, sp, #0x78
10004676: 8001         	strh	r1, [r0]
10004678: f007 fce2    	bl	0x1000c040 <defmt::export::acquire_header_and_release::h2c3ea15bddfdad62> @ imm = #0x79c4
1000467c: f004 fbb7    	bl	0x10008dee <rp2040_hal::watchdog::Watchdog::new::hd2ab81f5040175ec> @ imm = #0x476e
10004680: 901f         	str	r0, [sp, #0x7c]
10004682: a81d         	add	r0, sp, #0x74
10004684: 1d02         	adds	r2, r0, #0x4
10004686: a835         	add	r0, sp, #0xd4
10004688: 9002         	str	r0, [sp, #0x8]
1000468a: 493c         	ldr	r1, [pc, #0xf0]         @ 0x1000477c <simple_rtic::app::rtic_ext::main::{{closure}}::hfebbe9550ec29d0d+0x148>
1000468c: ab1f         	add	r3, sp, #0x7c
1000468e: f003 f88d    	bl	0x100077ac <rp2040_hal::clocks::init_clocks_and_plls::h42efc3d0f44e533f> @ imm = #0x311a
10004692: 9902         	ldr	r1, [sp, #0x8]
10004694: a82a         	add	r0, sp, #0xa8
10004696: f7fd f94b    	bl	0x10001930 <_ZN4core6result19Result$LT$T$C$E$GT$2ok17h37b5575f688d71baE> @ imm = #-0x2d6a
1000469a: 982a         	ldr	r0, [sp, #0xa8]
1000469c: 2800         	cmp	r0, #0x0
1000469e: d103         	bne	0x100046a8 <simple_rtic::app::rtic_ext::main::{{closure}}::hfebbe9550ec29d0d+0x74> @ imm = #0x6
100046a0: e7ff         	b	0x100046a2 <simple_rtic::app::rtic_ext::main::{{closure}}::hfebbe9550ec29d0d+0x6e> @ imm = #-0x2
100046a2: 483d         	ldr	r0, [pc, #0xf4]         @ 0x10004798 <simple_rtic::app::rtic_ext::main::{{closure}}::hfebbe9550ec29d0d+0x164>
100046a4: f007 fe0a    	bl	0x1000c2bc <core::option::unwrap_failed::h7bc9e3204bd3622c> @ imm = #0x7c14
100046a8: a82a         	add	r0, sp, #0xa8
100046aa: 1d01         	adds	r1, r0, #0x4
100046ac: a820         	add	r0, sp, #0x80
100046ae: c91c         	ldm	r1!, {r2, r3, r4}
100046b0: c01c         	stm	r0!, {r2, r3, r4}
100046b2: c91c         	ldm	r1!, {r2, r3, r4}
100046b4: c01c         	stm	r0!, {r2, r3, r4}
100046b6: c93c         	ldm	r1!, {r2, r3, r4, r5}
100046b8: c03c         	stm	r0!, {r2, r3, r4, r5}
100046ba: f004 fb05    	bl	0x10008cc8 <rp2040_hal::sio::Sio::new::he4d0de63e8de376d> @ imm = #0x460a
100046be: a81d         	add	r0, sp, #0x74
100046c0: 1d00         	adds	r0, r0, #0x4
100046c2: f006 ff5b    	bl	0x1000b57c <rp2040_hal::gpio::bank0::Pins::new::he02fec9b5a9b4354> @ imm = #0x6eb6
100046c6: f7fb fe59    	bl	0x1000037c <rp2040_hal::gpio::Pin<I,F,P>::into_push_pull_output::hf3b3ab3a05ab57a6> @ imm = #-0x434e
100046ca: a840         	add	r0, sp, #0x100
100046cc: f7fc fbcb    	bl	0x10000e66 <<rp2040_hal::gpio::Pin<I,rp2040_hal::gpio::func::FunctionSio<rp2040_hal::gpio::func::SioOutput>,P> as embedded_hal::digital::v2::OutputPin>::set_low::h75b76ba797047269> @ imm = #-0x386a
100046d0: 482b         	ldr	r0, [pc, #0xac]         @ 0x10004780 <simple_rtic::app::rtic_ext::main::{{closure}}::hfebbe9550ec29d0d+0x14c>
100046d2: f7fd f926    	bl	0x10001922 <_ZN4core6result19Result$LT$T$C$E$GT$16unwrap_unchecked17h27564fc2ea7c75e3E> @ imm = #-0x2db4
100046d6: f7fb fe48    	bl	0x1000036a <rp2040_hal::gpio::Pin<I,F,P>::into_pull_down_input::h2b79fb9ac69004a8> @ imm = #-0x4370
100046da: a942         	add	r1, sp, #0x108
100046dc: 2003         	movs	r0, #0x3
100046de: 7008         	strb	r0, [r1]
100046e0: 9942         	ldr	r1, [sp, #0x108]
100046e2: a841         	add	r0, sp, #0x104
100046e4: 9000         	str	r0, [sp]
100046e6: 2201         	movs	r2, #0x1
100046e8: 9201         	str	r2, [sp, #0x4]
100046ea: f7fb fe4f    	bl	0x1000038c <rp2040_hal::gpio::Pin<I,F,P>::set_interrupt_enabled::hbade4e9bf7925c69> @ imm = #-0x4362
100046ee: 9800         	ldr	r0, [sp]
100046f0: 9a01         	ldr	r2, [sp, #0x4]
100046f2: ab43         	add	r3, sp, #0x10c
100046f4: 2102         	movs	r1, #0x2
100046f6: 7019         	strb	r1, [r3]
100046f8: 9943         	ldr	r1, [sp, #0x10c]
100046fa: f7fb fe47    	bl	0x1000038c <rp2040_hal::gpio::Pin<I,F,P>::set_interrupt_enabled::hbade4e9bf7925c69> @ imm = #-0x4372
100046fe: f000 fa9f    	bl	0x10004c40 <rp2040_monotonic::Rp2040Monotonic::new::h2954012f9779d03b> @ imm = #0x53e
10004702: a905         	add	r1, sp, #0x14
10004704: 2000         	movs	r0, #0x0
10004706: 7008         	strb	r0, [r1]
10004708: a906         	add	r1, sp, #0x18
1000470a: 7008         	strb	r0, [r1]
1000470c: 4a1d         	ldr	r2, [pc, #0x74]         @ 0x10004784 <simple_rtic::app::rtic_ext::main::{{closure}}::hfebbe9550ec29d0d+0x150>
1000470e: 921b         	str	r2, [sp, #0x6c]
10004710: 921c         	str	r2, [sp, #0x70]
10004712: a90a         	add	r1, sp, #0x28
10004714: 7008         	strb	r0, [r1]
10004716: a909         	add	r1, sp, #0x24
10004718: 7008         	strb	r0, [r1]
1000471a: 9909         	ldr	r1, [sp, #0x24]
1000471c: 920e         	str	r2, [sp, #0x38]
1000471e: ab0f         	add	r3, sp, #0x3c
10004720: 7019         	strb	r1, [r3]
10004722: 7011         	strb	r1, [r2]
10004724: 4918         	ldr	r1, [pc, #0x60]         @ 0x10004788 <simple_rtic::app::rtic_ext::main::{{closure}}::hfebbe9550ec29d0d+0x154>
10004726: 9113         	str	r1, [sp, #0x4c]
10004728: 9114         	str	r1, [sp, #0x50]
1000472a: 910b         	str	r1, [sp, #0x2c]
1000472c: 4917         	ldr	r1, [pc, #0x5c]         @ 0x1000478c <simple_rtic::app::rtic_ext::main::{{closure}}::hfebbe9550ec29d0d+0x158>
1000472e: 9119         	str	r1, [sp, #0x64]
10004730: 911a         	str	r1, [sp, #0x68]
10004732: aa08         	add	r2, sp, #0x20
10004734: 7010         	strb	r0, [r2]
10004736: aa07         	add	r2, sp, #0x1c
10004738: 7010         	strb	r0, [r2]
1000473a: 9807         	ldr	r0, [sp, #0x1c]
1000473c: 910c         	str	r1, [sp, #0x30]
1000473e: aa0d         	add	r2, sp, #0x34
10004740: 7010         	strb	r0, [r2]
10004742: 7008         	strb	r0, [r1]
10004744: 4812         	ldr	r0, [pc, #0x48]         @ 0x10004790 <simple_rtic::app::rtic_ext::main::{{closure}}::hfebbe9550ec29d0d+0x15c>
10004746: 9017         	str	r0, [sp, #0x5c]
10004748: 9018         	str	r0, [sp, #0x60]
1000474a: 9010         	str	r0, [sp, #0x40]
1000474c: a803         	add	r0, sp, #0xc
1000474e: f000 fac9    	bl	0x10004ce4 <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::reset::h870928c354e86025> @ imm = #0x592
10004752: 9801         	ldr	r0, [sp, #0x4]
10004754: 490f         	ldr	r1, [pc, #0x3c]         @ 0x10004794 <simple_rtic::app::rtic_ext::main::{{closure}}::hfebbe9550ec29d0d+0x160>
10004756: 9115         	str	r1, [sp, #0x54]
10004758: 9116         	str	r1, [sp, #0x58]
1000475a: aa04         	add	r2, sp, #0x10
1000475c: 7010         	strb	r0, [r2]
1000475e: 9804         	ldr	r0, [sp, #0x10]
10004760: 9111         	str	r1, [sp, #0x44]
10004762: aa12         	add	r2, sp, #0x48
10004764: 7010         	strb	r0, [r2]
10004766: 7008         	strb	r0, [r1]
10004768: f7fe f8ae    	bl	0x100028c8 <cortex_m::interrupt::enable::h8eff18a931d63b54> @ imm = #-0x1ea4
1000476c: b046         	add	sp, #0x118
1000476e: bdb0         	pop	{r4, r5, r7, pc}
10004770: 2c 0c 01 10  	.word	0x10010c2c
10004774: f0 fb 03 20  	.word	0x2003fbf0
10004778: 02 00 00 00  	.word	0x00000002
1000477c: 00 1b b7 00  	.word	0x00b71b00
10004780: 4c 0c 01 10  	.word	0x10010c4c
10004784: fc fb 03 20  	.word	0x2003fbfc
10004788: fd fb 03 20  	.word	0x2003fbfd
1000478c: fd fb 03 20  	.word	0x2003fbfd
10004790: fe fb 03 20  	.word	0x2003fbfe
10004794: f0 fb 03 20  	.word	0x2003fbf0
10004798: 3c 0c 01 10  	.word	0x10010c3c

1000479c <<&T as core::fmt::Display>::fmt::h7a2ec65dea233608>:
1000479c: b580         	push	{r7, lr}
1000479e: af00         	add	r7, sp, #0x0
100047a0: b082         	sub	sp, #0x8
100047a2: 9000         	str	r0, [sp]
100047a4: 9101         	str	r1, [sp, #0x4]
100047a6: 6800         	ldr	r0, [r0]
100047a8: f007 fd92    	bl	0x1000c2d0 <<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h9f8f508eae04db1a> @ imm = #0x7b24
100047ac: b002         	add	sp, #0x8
100047ae: bd80         	pop	{r7, pc}

100047b0 <core::sync::atomic::AtomicBool::load::hbcbf95262f72b895>:
100047b0: b580         	push	{r7, lr}
100047b2: af00         	add	r7, sp, #0x0
100047b4: b084         	sub	sp, #0x10
100047b6: 9001         	str	r0, [sp, #0x4]
100047b8: aa02         	add	r2, sp, #0x8
100047ba: 7011         	strb	r1, [r2]
100047bc: 9003         	str	r0, [sp, #0xc]
100047be: f000 f813    	bl	0x100047e8 <core::sync::atomic::atomic_load::h9dd88ae402729e67> @ imm = #0x26
100047c2: b2c0         	uxtb	r0, r0
100047c4: 1e41         	subs	r1, r0, #0x1
100047c6: 4188         	sbcs	r0, r1
100047c8: b004         	add	sp, #0x10
100047ca: bd80         	pop	{r7, pc}

100047cc <core::sync::atomic::AtomicBool::store::h350124790701239e>:
100047cc: b580         	push	{r7, lr}
100047ce: af00         	add	r7, sp, #0x0
100047d0: b084         	sub	sp, #0x10
100047d2: 9000         	str	r0, [sp]
100047d4: ab01         	add	r3, sp, #0x4
100047d6: 7019         	strb	r1, [r3]
100047d8: ab02         	add	r3, sp, #0x8
100047da: 701a         	strb	r2, [r3]
100047dc: 9003         	str	r0, [sp, #0xc]
100047de: f000 f85b    	bl	0x10004898 <core::sync::atomic::atomic_store::h4e64410baac247fe> @ imm = #0xb6
100047e2: b004         	add	sp, #0x10
100047e4: bd80         	pop	{r7, pc}
100047e6: d4d4         	bmi	0x10004792 <simple_rtic::app::rtic_ext::main::{{closure}}::hfebbe9550ec29d0d+0x15e> @ imm = #-0x58

100047e8 <core::sync::atomic::atomic_load::h9dd88ae402729e67>:
100047e8: b580         	push	{r7, lr}
100047ea: af00         	add	r7, sp, #0x0
100047ec: b094         	sub	sp, #0x50
100047ee: 460a         	mov	r2, r1
100047f0: 4601         	mov	r1, r0
100047f2: 9101         	str	r1, [sp, #0x4]
100047f4: a803         	add	r0, sp, #0xc
100047f6: 7002         	strb	r2, [r0]
100047f8: 9111         	str	r1, [sp, #0x44]
100047fa: 4923         	ldr	r1, [pc, #0x8c]         @ 0x10004888 <core::sync::atomic::atomic_load::h9dd88ae402729e67+0xa0>
100047fc: 9112         	str	r1, [sp, #0x48]
100047fe: 4923         	ldr	r1, [pc, #0x8c]         @ 0x1000488c <core::sync::atomic::atomic_load::h9dd88ae402729e67+0xa4>
10004800: 9113         	str	r1, [sp, #0x4c]
10004802: 7800         	ldrb	r0, [r0]
10004804: 9002         	str	r0, [sp, #0x8]
10004806: 9802         	ldr	r0, [sp, #0x8]
10004808: 0081         	lsls	r1, r0, #0x2
1000480a: a001         	adr	r0, #4 <core::sync::atomic::atomic_load::h9dd88ae402729e67+0x27>
1000480c: 5840         	ldr	r0, [r0, r1]
1000480e: 4687         	mov	pc, r0
10004810: 27 48 00 10  	.word	0x10004827
10004814: 31 48 00 10  	.word	0x10004831
10004818: 4b 48 00 10  	.word	0x1000484b
1000481c: 59 48 00 10  	.word	0x10004859
10004820: 73 48 00 10  	.word	0x10004873
10004824: defe         	trap
10004826: 9801         	ldr	r0, [sp, #0x4]
10004828: 7800         	ldrb	r0, [r0]
1000482a: a904         	add	r1, sp, #0x10
1000482c: 7008         	strb	r0, [r1]
1000482e: e027         	b	0x10004880 <core::sync::atomic::atomic_load::h9dd88ae402729e67+0x98> @ imm = #0x4e
10004830: 4816         	ldr	r0, [pc, #0x58]         @ 0x1000488c <core::sync::atomic::atomic_load::h9dd88ae402729e67+0xa4>
10004832: 9005         	str	r0, [sp, #0x14]
10004834: 2001         	movs	r0, #0x1
10004836: 9006         	str	r0, [sp, #0x18]
10004838: 2000         	movs	r0, #0x0
1000483a: 9009         	str	r0, [sp, #0x24]
1000483c: 2104         	movs	r1, #0x4
1000483e: 9107         	str	r1, [sp, #0x1c]
10004840: 9008         	str	r0, [sp, #0x20]
10004842: 4914         	ldr	r1, [pc, #0x50]         @ 0x10004894 <core::sync::atomic::atomic_load::h9dd88ae402729e67+0xac>
10004844: a805         	add	r0, sp, #0x14
10004846: f007 fd99    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #0x7b32
1000484a: 9801         	ldr	r0, [sp, #0x4]
1000484c: 7800         	ldrb	r0, [r0]
1000484e: f3bf 8f5f    	dmb	sy
10004852: a904         	add	r1, sp, #0x10
10004854: 7008         	strb	r0, [r1]
10004856: e013         	b	0x10004880 <core::sync::atomic::atomic_load::h9dd88ae402729e67+0x98> @ imm = #0x26
10004858: 480b         	ldr	r0, [pc, #0x2c]         @ 0x10004888 <core::sync::atomic::atomic_load::h9dd88ae402729e67+0xa0>
1000485a: 900b         	str	r0, [sp, #0x2c]
1000485c: 2001         	movs	r0, #0x1
1000485e: 900c         	str	r0, [sp, #0x30]
10004860: 2000         	movs	r0, #0x0
10004862: 900f         	str	r0, [sp, #0x3c]
10004864: 2104         	movs	r1, #0x4
10004866: 910d         	str	r1, [sp, #0x34]
10004868: 900e         	str	r0, [sp, #0x38]
1000486a: 4909         	ldr	r1, [pc, #0x24]         @ 0x10004890 <core::sync::atomic::atomic_load::h9dd88ae402729e67+0xa8>
1000486c: a80b         	add	r0, sp, #0x2c
1000486e: f007 fd85    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #0x7b0a
10004872: 9801         	ldr	r0, [sp, #0x4]
10004874: 7800         	ldrb	r0, [r0]
10004876: f3bf 8f5f    	dmb	sy
1000487a: a904         	add	r1, sp, #0x10
1000487c: 7008         	strb	r0, [r1]
1000487e: e7ff         	b	0x10004880 <core::sync::atomic::atomic_load::h9dd88ae402729e67+0x98> @ imm = #-0x2
10004880: 9804         	ldr	r0, [sp, #0x10]
10004882: b014         	add	sp, #0x50
10004884: bd80         	pop	{r7, pc}
10004886: 46c0         	mov	r8, r8
10004888: bc 0c 01 10  	.word	0x10010cbc
1000488c: ec 0c 01 10  	.word	0x10010cec
10004890: 78 0d 01 10  	.word	0x10010d78
10004894: 68 0d 01 10  	.word	0x10010d68

10004898 <core::sync::atomic::atomic_store::h4e64410baac247fe>:
10004898: b580         	push	{r7, lr}
1000489a: af00         	add	r7, sp, #0x0
1000489c: b094         	sub	sp, #0x50
1000489e: 4613         	mov	r3, r2
100048a0: 4602         	mov	r2, r0
100048a2: 9200         	str	r2, [sp]
100048a4: 4608         	mov	r0, r1
100048a6: 9001         	str	r0, [sp, #0x4]
100048a8: a803         	add	r0, sp, #0xc
100048aa: 7003         	strb	r3, [r0]
100048ac: 9210         	str	r2, [sp, #0x40]
100048ae: aa11         	add	r2, sp, #0x44
100048b0: 7011         	strb	r1, [r2]
100048b2: 4922         	ldr	r1, [pc, #0x88]         @ 0x1000493c <core::sync::atomic::atomic_store::h4e64410baac247fe+0xa4>
100048b4: 9112         	str	r1, [sp, #0x48]
100048b6: 4922         	ldr	r1, [pc, #0x88]         @ 0x10004940 <core::sync::atomic::atomic_store::h4e64410baac247fe+0xa8>
100048b8: 9113         	str	r1, [sp, #0x4c]
100048ba: 7800         	ldrb	r0, [r0]
100048bc: 9002         	str	r0, [sp, #0x8]
100048be: 9802         	ldr	r0, [sp, #0x8]
100048c0: 0081         	lsls	r1, r0, #0x2
100048c2: a001         	adr	r0, #4 <core::sync::atomic::atomic_store::h4e64410baac247fe+0x2f>
100048c4: 5840         	ldr	r0, [r0, r1]
100048c6: 4687         	mov	pc, r0
100048c8: df 48 00 10  	.word	0x100048df
100048cc: e7 48 00 10  	.word	0x100048e7
100048d0: f3 48 00 10  	.word	0x100048f3
100048d4: 0d 49 00 10  	.word	0x1000490d
100048d8: 27 49 00 10  	.word	0x10004927
100048dc: defe         	trap
100048de: 9801         	ldr	r0, [sp, #0x4]
100048e0: 9900         	ldr	r1, [sp]
100048e2: 7008         	strb	r0, [r1]
100048e4: e027         	b	0x10004936 <core::sync::atomic::atomic_store::h4e64410baac247fe+0x9e> @ imm = #0x4e
100048e6: 9801         	ldr	r0, [sp, #0x4]
100048e8: 9900         	ldr	r1, [sp]
100048ea: f3bf 8f5f    	dmb	sy
100048ee: 7008         	strb	r0, [r1]
100048f0: e021         	b	0x10004936 <core::sync::atomic::atomic_store::h4e64410baac247fe+0x9e> @ imm = #0x42
100048f2: 4813         	ldr	r0, [pc, #0x4c]         @ 0x10004940 <core::sync::atomic::atomic_store::h4e64410baac247fe+0xa8>
100048f4: 9004         	str	r0, [sp, #0x10]
100048f6: 2001         	movs	r0, #0x1
100048f8: 9005         	str	r0, [sp, #0x14]
100048fa: 2000         	movs	r0, #0x0
100048fc: 9008         	str	r0, [sp, #0x20]
100048fe: 2104         	movs	r1, #0x4
10004900: 9106         	str	r1, [sp, #0x18]
10004902: 9007         	str	r0, [sp, #0x1c]
10004904: 4910         	ldr	r1, [pc, #0x40]         @ 0x10004948 <core::sync::atomic::atomic_store::h4e64410baac247fe+0xb0>
10004906: a804         	add	r0, sp, #0x10
10004908: f007 fd38    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #0x7a70
1000490c: 480b         	ldr	r0, [pc, #0x2c]         @ 0x1000493c <core::sync::atomic::atomic_store::h4e64410baac247fe+0xa4>
1000490e: 900a         	str	r0, [sp, #0x28]
10004910: 2001         	movs	r0, #0x1
10004912: 900b         	str	r0, [sp, #0x2c]
10004914: 2000         	movs	r0, #0x0
10004916: 900e         	str	r0, [sp, #0x38]
10004918: 2104         	movs	r1, #0x4
1000491a: 910c         	str	r1, [sp, #0x30]
1000491c: 900d         	str	r0, [sp, #0x34]
1000491e: 4909         	ldr	r1, [pc, #0x24]         @ 0x10004944 <core::sync::atomic::atomic_store::h4e64410baac247fe+0xac>
10004920: a80a         	add	r0, sp, #0x28
10004922: f007 fd2b    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #0x7a56
10004926: 9801         	ldr	r0, [sp, #0x4]
10004928: 9900         	ldr	r1, [sp]
1000492a: f3bf 8f5f    	dmb	sy
1000492e: 7008         	strb	r0, [r1]
10004930: f3bf 8f5f    	dmb	sy
10004934: e7ff         	b	0x10004936 <core::sync::atomic::atomic_store::h4e64410baac247fe+0x9e> @ imm = #-0x2
10004936: b014         	add	sp, #0x50
10004938: bd80         	pop	{r7, pc}
1000493a: 46c0         	mov	r8, r8
1000493c: bc 0d 01 10  	.word	0x10010dbc
10004940: f0 0d 01 10  	.word	0x10010df0
10004944: 08 0e 01 10  	.word	0x10010e08
10004948: f8 0d 01 10  	.word	0x10010df8

1000494c <defmt::export::fmt::h07d531c0bd33cc59>:
1000494c: b580         	push	{r7, lr}
1000494e: af00         	add	r7, sp, #0x0
10004950: b084         	sub	sp, #0x10
10004952: 9001         	str	r0, [sp, #0x4]
10004954: 9003         	str	r0, [sp, #0xc]
10004956: f000 f80b    	bl	0x10004970 <<defmt::impls::adapter::Display2Format<T> as defmt::traits::Format>::_format_tag::hc7276c1c0edd7eea> @ imm = #0x16
1000495a: 4601         	mov	r1, r0
1000495c: a802         	add	r0, sp, #0x8
1000495e: 8001         	strh	r1, [r0]
10004960: f007 fb24    	bl	0x1000bfac <defmt::export::istr::hf36cdaa391ec7b8c> @ imm = #0x7648
10004964: 9801         	ldr	r0, [sp, #0x4]
10004966: f000 f80b    	bl	0x10004980 <<defmt::impls::adapter::Display2Format<T> as defmt::traits::Format>::_format_data::he63150be67ab7bd0> @ imm = #0x16
1000496a: b004         	add	sp, #0x10
1000496c: bd80         	pop	{r7, pc}
1000496e: d4d4         	bmi	0x1000491a <core::sync::atomic::atomic_store::h4e64410baac247fe+0x82> @ imm = #-0x58

10004970 <<defmt::impls::adapter::Display2Format<T> as defmt::traits::Format>::_format_tag::hc7276c1c0edd7eea>:
10004970: b580         	push	{r7, lr}
10004972: af00         	add	r7, sp, #0x0
10004974: 4801         	ldr	r0, [pc, #0x4]          @ 0x1000497c <<defmt::impls::adapter::Display2Format<T> as defmt::traits::Format>::_format_tag::hc7276c1c0edd7eea+0xc>
10004976: f007 fb0f    	bl	0x1000bf98 <defmt::export::make_istr::hdc5301bbf45c9956> @ imm = #0x761e
1000497a: bd80         	pop	{r7, pc}
1000497c: 01 00 00 00  	.word	0x00000001

10004980 <<defmt::impls::adapter::Display2Format<T> as defmt::traits::Format>::_format_data::he63150be67ab7bd0>:
10004980: b580         	push	{r7, lr}
10004982: af00         	add	r7, sp, #0x0
10004984: b082         	sub	sp, #0x8
10004986: 9001         	str	r0, [sp, #0x4]
10004988: 4902         	ldr	r1, [pc, #0x8]          @ 0x10004994 <<defmt::impls::adapter::Display2Format<T> as defmt::traits::Format>::_format_data::he63150be67ab7bd0+0x14>
1000498a: f007 fb23    	bl	0x1000bfd4 <defmt::export::display::h417f11bff0b70874> @ imm = #0x7646
1000498e: b002         	add	sp, #0x8
10004990: bd80         	pop	{r7, pc}
10004992: 46c0         	mov	r8, r8
10004994: 18 0e 01 10  	.word	0x10010e18

10004998 <cortex_m::asm::udf::hf70fba03f992f9f5>:
10004998: b580         	push	{r7, lr}
1000499a: af00         	add	r7, sp, #0x0
1000499c: f007 fc78    	bl	0x1000c290 <__udf>      @ imm = #0x78f0

100049a0 <cortex_m::interrupt::disable::h20c625c1c2c977a0>:
100049a0: b580         	push	{r7, lr}
100049a2: af00         	add	r7, sp, #0x0
100049a4: f007 fc66    	bl	0x1000c274 <__cpsid>    @ imm = #0x78cc
100049a8: bd80         	pop	{r7, pc}
100049aa: d4d4         	bmi	0x10004956 <defmt::export::fmt::h07d531c0bd33cc59+0xa> @ imm = #-0x58

100049ac <rust_begin_unwind>:
100049ac: b580         	push	{r7, lr}
100049ae: af00         	add	r7, sp, #0x0
100049b0: b084         	sub	sp, #0x10
100049b2: 9000         	str	r0, [sp]
100049b4: 9003         	str	r0, [sp, #0xc]
100049b6: f7ff fff3    	bl	0x100049a0 <cortex_m::interrupt::disable::h20c625c1c2c977a0> @ imm = #-0x1a
100049ba: a901         	add	r1, sp, #0x4
100049bc: 2000         	movs	r0, #0x0
100049be: 7008         	strb	r0, [r1]
100049c0: 9901         	ldr	r1, [sp, #0x4]
100049c2: 480a         	ldr	r0, [pc, #0x28]         @ 0x100049ec <rust_begin_unwind+0x40>
100049c4: f7ff fef4    	bl	0x100047b0 <core::sync::atomic::AtomicBool::load::hbcbf95262f72b895> @ imm = #-0x218
100049c8: 2800         	cmp	r0, #0x0
100049ca: d10c         	bne	0x100049e6 <rust_begin_unwind+0x3a> @ imm = #0x18
100049cc: e7ff         	b	0x100049ce <rust_begin_unwind+0x22> @ imm = #-0x2
100049ce: a902         	add	r1, sp, #0x8
100049d0: 2000         	movs	r0, #0x0
100049d2: 7008         	strb	r0, [r1]
100049d4: 9a02         	ldr	r2, [sp, #0x8]
100049d6: 4805         	ldr	r0, [pc, #0x14]         @ 0x100049ec <rust_begin_unwind+0x40>
100049d8: 2101         	movs	r1, #0x1
100049da: f7ff fef7    	bl	0x100047cc <core::sync::atomic::AtomicBool::store::h350124790701239e> @ imm = #-0x212
100049de: 9800         	ldr	r0, [sp]
100049e0: f000 f80a    	bl	0x100049f8 <panic_probe::print_defmt::print::h34a50cfd66193880> @ imm = #0x14
100049e4: e7ff         	b	0x100049e6 <rust_begin_unwind+0x3a> @ imm = #-0x2
100049e6: f000 f803    	bl	0x100049f0 <panic_probe::hard_fault::h6e38080c90d947e4> @ imm = #0x6
100049ea: 46c0         	mov	r8, r8
100049ec: f1 fb 03 20  	.word	0x2003fbf1

100049f0 <panic_probe::hard_fault::h6e38080c90d947e4>:
100049f0: b580         	push	{r7, lr}
100049f2: af00         	add	r7, sp, #0x0
100049f4: f7ff ffd0    	bl	0x10004998 <cortex_m::asm::udf::hf70fba03f992f9f5> @ imm = #-0x60

100049f8 <panic_probe::print_defmt::print::h34a50cfd66193880>:
100049f8: b580         	push	{r7, lr}
100049fa: af00         	add	r7, sp, #0x0
100049fc: b086         	sub	sp, #0x18
100049fe: 9004         	str	r0, [sp, #0x10]
10004a00: 9002         	str	r0, [sp, #0x8]
10004a02: a802         	add	r0, sp, #0x8
10004a04: 9001         	str	r0, [sp, #0x4]
10004a06: 9005         	str	r0, [sp, #0x14]
10004a08: 4807         	ldr	r0, [pc, #0x1c]         @ 0x10004a28 <panic_probe::print_defmt::print::h34a50cfd66193880+0x30>
10004a0a: f007 fac5    	bl	0x1000bf98 <defmt::export::make_istr::hdc5301bbf45c9956> @ imm = #0x758a
10004a0e: 4601         	mov	r1, r0
10004a10: a803         	add	r0, sp, #0xc
10004a12: 8001         	strh	r1, [r0]
10004a14: f007 fb04    	bl	0x1000c020 <defmt::export::acquire_and_header::h238bd5e7e1bdce90> @ imm = #0x7608
10004a18: 9801         	ldr	r0, [sp, #0x4]
10004a1a: f7ff ff97    	bl	0x1000494c <defmt::export::fmt::h07d531c0bd33cc59> @ imm = #-0xd2
10004a1e: f001 f9da    	bl	0x10005dd6 <_defmt_release> @ imm = #0x13b4
10004a22: b006         	add	sp, #0x18
10004a24: bd80         	pop	{r7, pc}
10004a26: 46c0         	mov	r8, r8
10004a28: 03 00 00 00  	.word	0x00000003

10004a2c <<u32 as core::ops::bit::Not>::not::h391c484d477de27f>:
10004a2c: b580         	push	{r7, lr}
10004a2e: af00         	add	r7, sp, #0x0
10004a30: b081         	sub	sp, #0x4
10004a32: 9000         	str	r0, [sp]
10004a34: 43c0         	mvns	r0, r0
10004a36: b001         	add	sp, #0x4
10004a38: bd80         	pop	{r7, pc}

10004a3a <<u32 as core::ops::bit::BitOr>::bitor::h4b2059dbe5b7aea4>:
10004a3a: b580         	push	{r7, lr}
10004a3c: af00         	add	r7, sp, #0x0
10004a3e: b082         	sub	sp, #0x8
10004a40: 9000         	str	r0, [sp]
10004a42: 9101         	str	r1, [sp, #0x4]
10004a44: 4308         	orrs	r0, r1
10004a46: b002         	add	sp, #0x8
10004a48: bd80         	pop	{r7, pc}

10004a4a <<u32 as core::ops::bit::BitAnd>::bitand::hd6cd81ce10aca97b>:
10004a4a: b580         	push	{r7, lr}
10004a4c: af00         	add	r7, sp, #0x0
10004a4e: b082         	sub	sp, #0x8
10004a50: 9000         	str	r0, [sp]
10004a52: 9101         	str	r1, [sp, #0x4]
10004a54: 4008         	ands	r0, r1
10004a56: b002         	add	sp, #0x8
10004a58: bd80         	pop	{r7, pc}

10004a5a <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::heabc9c5485a4ee9b>:
10004a5a: b580         	push	{r7, lr}
10004a5c: af00         	add	r7, sp, #0x0
10004a5e: b082         	sub	sp, #0x8
10004a60: 460a         	mov	r2, r1
10004a62: 4601         	mov	r1, r0
10004a64: 9100         	str	r1, [sp]
10004a66: 9201         	str	r2, [sp, #0x4]
10004a68: 6808         	ldr	r0, [r1]
10004a6a: 4310         	orrs	r0, r2
10004a6c: 6008         	str	r0, [r1]
10004a6e: b002         	add	sp, #0x8
10004a70: bd80         	pop	{r7, pc}

10004a72 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h6eccd6a4b518ff6b>:
10004a72: b580         	push	{r7, lr}
10004a74: af00         	add	r7, sp, #0x0
10004a76: b082         	sub	sp, #0x8
10004a78: 460a         	mov	r2, r1
10004a7a: 4601         	mov	r1, r0
10004a7c: 9100         	str	r1, [sp]
10004a7e: 9201         	str	r2, [sp, #0x4]
10004a80: 6808         	ldr	r0, [r1]
10004a82: 4010         	ands	r0, r2
10004a84: 6008         	str	r0, [r1]
10004a86: b002         	add	sp, #0x8
10004a88: bd80         	pop	{r7, pc}
10004a8a: d4d4         	bmi	0x10004a36 <<u32 as core::ops::bit::Not>::not::h391c484d477de27f+0xa> @ imm = #-0x58

10004a8c <<u32 as core::ops::bit::Shl<u8>>::shl::h7695729857aa3f81>:
10004a8c: b580         	push	{r7, lr}
10004a8e: af00         	add	r7, sp, #0x0
10004a90: b084         	sub	sp, #0x10
10004a92: 4602         	mov	r2, r0
10004a94: 9200         	str	r2, [sp]
10004a96: b2c8         	uxtb	r0, r1
10004a98: 460b         	mov	r3, r1
10004a9a: 9301         	str	r3, [sp, #0x4]
10004a9c: 9202         	str	r2, [sp, #0x8]
10004a9e: aa03         	add	r2, sp, #0xc
10004aa0: 7011         	strb	r1, [r2]
10004aa2: 281f         	cmp	r0, #0x1f
10004aa4: d807         	bhi	0x10004ab6 <<u32 as core::ops::bit::Shl<u8>>::shl::h7695729857aa3f81+0x2a> @ imm = #0xe
10004aa6: e7ff         	b	0x10004aa8 <<u32 as core::ops::bit::Shl<u8>>::shl::h7695729857aa3f81+0x1c> @ imm = #-0x2
10004aa8: 9800         	ldr	r0, [sp]
10004aaa: 9901         	ldr	r1, [sp, #0x4]
10004aac: 221f         	movs	r2, #0x1f
10004aae: 4011         	ands	r1, r2
10004ab0: 4088         	lsls	r0, r1
10004ab2: b004         	add	sp, #0x10
10004ab4: bd80         	pop	{r7, pc}
10004ab6: 4801         	ldr	r0, [pc, #0x4]          @ 0x10004abc <<u32 as core::ops::bit::Shl<u8>>::shl::h7695729857aa3f81+0x30>
10004ab8: f008 fcf0    	bl	0x1000d49c <core::panicking::panic_const::panic_const_shl_overflow::h42afea46a5d11e4a> @ imm = #0x89e0
10004abc: 98 0e 01 10  	.word	0x10010e98

10004ac0 <fugit::helpers::greater_than_0::h6ab789731d0d70c8>:
10004ac0: b580         	push	{r7, lr}
10004ac2: af00         	add	r7, sp, #0x0
10004ac4: bd80         	pop	{r7, pc}

10004ac6 <fugit::helpers::greater_than_0::h850506b629501229>:
10004ac6: b580         	push	{r7, lr}
10004ac8: af00         	add	r7, sp, #0x0
10004aca: bd80         	pop	{r7, pc}

10004acc <fugit::instant::Instant<u64,_,_>::from_ticks::h687fd86bc681a771>:
10004acc: b580         	push	{r7, lr}
10004ace: af00         	add	r7, sp, #0x0
10004ad0: b084         	sub	sp, #0x10
10004ad2: 9101         	str	r1, [sp, #0x4]
10004ad4: 9000         	str	r0, [sp]
10004ad6: 9103         	str	r1, [sp, #0xc]
10004ad8: 9002         	str	r0, [sp, #0x8]
10004ada: f7ff fff4    	bl	0x10004ac6 <fugit::helpers::greater_than_0::h850506b629501229> @ imm = #-0x18
10004ade: f7ff ffef    	bl	0x10004ac0 <fugit::helpers::greater_than_0::h6ab789731d0d70c8> @ imm = #-0x22
10004ae2: 9800         	ldr	r0, [sp]
10004ae4: 9901         	ldr	r1, [sp, #0x4]
10004ae6: b004         	add	sp, #0x10
10004ae8: bd80         	pop	{r7, pc}

10004aea <fugit::instant::Instant<u64,_,_>::duration_since_epoch::h14ab67ea7d67a92c>:
10004aea: b580         	push	{r7, lr}
10004aec: af00         	add	r7, sp, #0x0
10004aee: b082         	sub	sp, #0x8
10004af0: 9101         	str	r1, [sp, #0x4]
10004af2: 9000         	str	r0, [sp]
10004af4: 4668         	mov	r0, sp
10004af6: f000 f83f    	bl	0x10004b78 <fugit::instant::Instant<u64,_,_>::ticks::h0bb046e03978e1e3> @ imm = #0x7e
10004afa: f000 f889    	bl	0x10004c10 <fugit::duration::Duration<u64,_,_>::from_ticks::h738927d7af06f3df> @ imm = #0x112
10004afe: b002         	add	sp, #0x8
10004b00: bd80         	pop	{r7, pc}

10004b02 <fugit::instant::Instant<u64,_,_>::checked_duration_since::hf247f06689f4f8cc>:
10004b02: b5d0         	push	{r4, r6, r7, lr}
10004b04: af02         	add	r7, sp, #0x8
10004b06: b090         	sub	sp, #0x40
10004b08: 4619         	mov	r1, r3
10004b0a: 9201         	str	r2, [sp, #0x4]
10004b0c: 4602         	mov	r2, r0
10004b0e: 9801         	ldr	r0, [sp, #0x4]
10004b10: 9202         	str	r2, [sp, #0x8]
10004b12: 68fb         	ldr	r3, [r7, #0xc]
10004b14: 9303         	str	r3, [sp, #0xc]
10004b16: 68ba         	ldr	r2, [r7, #0x8]
10004b18: 9204         	str	r2, [sp, #0x10]
10004b1a: 460c         	mov	r4, r1
10004b1c: 9405         	str	r4, [sp, #0x14]
10004b1e: 4604         	mov	r4, r0
10004b20: 9406         	str	r4, [sp, #0x18]
10004b22: 9109         	str	r1, [sp, #0x24]
10004b24: 9008         	str	r0, [sp, #0x20]
10004b26: 930b         	str	r3, [sp, #0x2c]
10004b28: 920a         	str	r2, [sp, #0x28]
10004b2a: f000 f82f    	bl	0x10004b8c <fugit::instant::Instant<u64,_,_>::const_cmp::h07ab1c0f0301b9ce> @ imm = #0x5e
10004b2e: 4601         	mov	r1, r0
10004b30: a807         	add	r0, sp, #0x1c
10004b32: 7001         	strb	r1, [r0]
10004b34: 7800         	ldrb	r0, [r0]
10004b36: 28ff         	cmp	r0, #0xff
10004b38: d002         	beq	0x10004b40 <fugit::instant::Instant<u64,_,_>::checked_duration_since::hf247f06689f4f8cc+0x3e> @ imm = #0x4
10004b3a: e7ff         	b	0x10004b3c <fugit::instant::Instant<u64,_,_>::checked_duration_since::hf247f06689f4f8cc+0x3a> @ imm = #-0x2
10004b3c: e005         	b	0x10004b4a <fugit::instant::Instant<u64,_,_>::checked_duration_since::hf247f06689f4f8cc+0x48> @ imm = #0xa
10004b3e: defe         	trap
10004b40: 9902         	ldr	r1, [sp, #0x8]
10004b42: 2000         	movs	r0, #0x0
10004b44: 6048         	str	r0, [r1, #0x4]
10004b46: 6008         	str	r0, [r1]
10004b48: e014         	b	0x10004b74 <fugit::instant::Instant<u64,_,_>::checked_duration_since::hf247f06689f4f8cc+0x72> @ imm = #0x28
10004b4a: 9a03         	ldr	r2, [sp, #0xc]
10004b4c: 9905         	ldr	r1, [sp, #0x14]
10004b4e: 9806         	ldr	r0, [sp, #0x18]
10004b50: 9b04         	ldr	r3, [sp, #0x10]
10004b52: 900c         	str	r0, [sp, #0x30]
10004b54: 910d         	str	r1, [sp, #0x34]
10004b56: 920f         	str	r2, [sp, #0x3c]
10004b58: 930e         	str	r3, [sp, #0x38]
10004b5a: 1ac0         	subs	r0, r0, r3
10004b5c: 4191         	sbcs	r1, r2
10004b5e: f000 f857    	bl	0x10004c10 <fugit::duration::Duration<u64,_,_>::from_ticks::h738927d7af06f3df> @ imm = #0xae
10004b62: 460a         	mov	r2, r1
10004b64: 9902         	ldr	r1, [sp, #0x8]
10004b66: 60ca         	str	r2, [r1, #0xc]
10004b68: 6088         	str	r0, [r1, #0x8]
10004b6a: 2000         	movs	r0, #0x0
10004b6c: 6048         	str	r0, [r1, #0x4]
10004b6e: 2001         	movs	r0, #0x1
10004b70: 6008         	str	r0, [r1]
10004b72: e7ff         	b	0x10004b74 <fugit::instant::Instant<u64,_,_>::checked_duration_since::hf247f06689f4f8cc+0x72> @ imm = #-0x2
10004b74: b010         	add	sp, #0x40
10004b76: bdd0         	pop	{r4, r6, r7, pc}

10004b78 <fugit::instant::Instant<u64,_,_>::ticks::h0bb046e03978e1e3>:
10004b78: b580         	push	{r7, lr}
10004b7a: af00         	add	r7, sp, #0x0
10004b7c: b081         	sub	sp, #0x4
10004b7e: 4601         	mov	r1, r0
10004b80: 9100         	str	r1, [sp]
10004b82: 6808         	ldr	r0, [r1]
10004b84: 6849         	ldr	r1, [r1, #0x4]
10004b86: b001         	add	sp, #0x4
10004b88: bd80         	pop	{r7, pc}
10004b8a: d4d4         	bmi	0x10004b36 <fugit::instant::Instant<u64,_,_>::checked_duration_since::hf247f06689f4f8cc+0x34> @ imm = #-0x58

10004b8c <fugit::instant::Instant<u64,_,_>::const_cmp::h07ab1c0f0301b9ce>:
10004b8c: b5d0         	push	{r4, r6, r7, lr}
10004b8e: af02         	add	r7, sp, #0x8
10004b90: b092         	sub	sp, #0x48
10004b92: 461c         	mov	r4, r3
10004b94: 9403         	str	r4, [sp, #0xc]
10004b96: 4614         	mov	r4, r2
10004b98: 9404         	str	r4, [sp, #0x10]
10004b9a: 460c         	mov	r4, r1
10004b9c: 9405         	str	r4, [sp, #0x14]
10004b9e: 4604         	mov	r4, r0
10004ba0: 9406         	str	r4, [sp, #0x18]
10004ba2: 9109         	str	r1, [sp, #0x24]
10004ba4: 9008         	str	r0, [sp, #0x20]
10004ba6: 930b         	str	r3, [sp, #0x2c]
10004ba8: 920a         	str	r2, [sp, #0x28]
10004baa: 4059         	eors	r1, r3
10004bac: 4050         	eors	r0, r2
10004bae: 4308         	orrs	r0, r1
10004bb0: 2800         	cmp	r0, #0x0
10004bb2: d011         	beq	0x10004bd8 <fugit::instant::Instant<u64,_,_>::const_cmp::h07ab1c0f0301b9ce+0x4c> @ imm = #0x22
10004bb4: e7ff         	b	0x10004bb6 <fugit::instant::Instant<u64,_,_>::const_cmp::h07ab1c0f0301b9ce+0x2a> @ imm = #-0x2
10004bb6: 9a03         	ldr	r2, [sp, #0xc]
10004bb8: 9805         	ldr	r0, [sp, #0x14]
10004bba: 9906         	ldr	r1, [sp, #0x18]
10004bbc: 9b04         	ldr	r3, [sp, #0x10]
10004bbe: 910e         	str	r1, [sp, #0x38]
10004bc0: 900f         	str	r0, [sp, #0x3c]
10004bc2: 9211         	str	r2, [sp, #0x44]
10004bc4: 9310         	str	r3, [sp, #0x40]
10004bc6: 1ac9         	subs	r1, r1, r3
10004bc8: 9101         	str	r1, [sp, #0x4]
10004bca: 4190         	sbcs	r0, r2
10004bcc: 9002         	str	r0, [sp, #0x8]
10004bce: 900d         	str	r0, [sp, #0x34]
10004bd0: 910c         	str	r1, [sp, #0x30]
10004bd2: 2800         	cmp	r0, #0x0
10004bd4: d40b         	bmi	0x10004bee <fugit::instant::Instant<u64,_,_>::const_cmp::h07ab1c0f0301b9ce+0x62> @ imm = #0x16
10004bd6: e003         	b	0x10004be0 <fugit::instant::Instant<u64,_,_>::const_cmp::h07ab1c0f0301b9ce+0x54> @ imm = #0x6
10004bd8: a907         	add	r1, sp, #0x1c
10004bda: 2000         	movs	r0, #0x0
10004bdc: 7008         	strb	r0, [r1]
10004bde: e012         	b	0x10004c06 <fugit::instant::Instant<u64,_,_>::const_cmp::h07ab1c0f0301b9ce+0x7a> @ imm = #0x24
10004be0: 9802         	ldr	r0, [sp, #0x8]
10004be2: 9901         	ldr	r1, [sp, #0x4]
10004be4: 1c49         	adds	r1, r1, #0x1
10004be6: 4909         	ldr	r1, [pc, #0x24]         @ 0x10004c0c <fugit::instant::Instant<u64,_,_>::const_cmp::h07ab1c0f0301b9ce+0x80>
10004be8: 4188         	sbcs	r0, r1
10004bea: d308         	blo	0x10004bfe <fugit::instant::Instant<u64,_,_>::const_cmp::h07ab1c0f0301b9ce+0x72> @ imm = #0x10
10004bec: e003         	b	0x10004bf6 <fugit::instant::Instant<u64,_,_>::const_cmp::h07ab1c0f0301b9ce+0x6a> @ imm = #0x6
10004bee: a907         	add	r1, sp, #0x1c
10004bf0: 20ff         	movs	r0, #0xff
10004bf2: 7008         	strb	r0, [r1]
10004bf4: e007         	b	0x10004c06 <fugit::instant::Instant<u64,_,_>::const_cmp::h07ab1c0f0301b9ce+0x7a> @ imm = #0xe
10004bf6: a907         	add	r1, sp, #0x1c
10004bf8: 2000         	movs	r0, #0x0
10004bfa: 7008         	strb	r0, [r1]
10004bfc: e003         	b	0x10004c06 <fugit::instant::Instant<u64,_,_>::const_cmp::h07ab1c0f0301b9ce+0x7a> @ imm = #0x6
10004bfe: a907         	add	r1, sp, #0x1c
10004c00: 2001         	movs	r0, #0x1
10004c02: 7008         	strb	r0, [r1]
10004c04: e7ff         	b	0x10004c06 <fugit::instant::Instant<u64,_,_>::const_cmp::h07ab1c0f0301b9ce+0x7a> @ imm = #-0x2
10004c06: 9807         	ldr	r0, [sp, #0x1c]
10004c08: b012         	add	sp, #0x48
10004c0a: bdd0         	pop	{r4, r6, r7, pc}
10004c0c: ff ff ff 7f  	.word	0x7fffffff

10004c10 <fugit::duration::Duration<u64,_,_>::from_ticks::h738927d7af06f3df>:
10004c10: b580         	push	{r7, lr}
10004c12: af00         	add	r7, sp, #0x0
10004c14: b084         	sub	sp, #0x10
10004c16: 9101         	str	r1, [sp, #0x4]
10004c18: 9000         	str	r0, [sp]
10004c1a: 9103         	str	r1, [sp, #0xc]
10004c1c: 9002         	str	r0, [sp, #0x8]
10004c1e: f7ff ff52    	bl	0x10004ac6 <fugit::helpers::greater_than_0::h850506b629501229> @ imm = #-0x15c
10004c22: f7ff ff4d    	bl	0x10004ac0 <fugit::helpers::greater_than_0::h6ab789731d0d70c8> @ imm = #-0x166
10004c26: 9800         	ldr	r0, [sp]
10004c28: 9901         	ldr	r1, [sp, #0x4]
10004c2a: b004         	add	sp, #0x10
10004c2c: bd80         	pop	{r7, pc}

10004c2e <fugit::duration::Duration<u64,_,_>::ticks::h4990b7ca5e4fb845>:
10004c2e: b580         	push	{r7, lr}
10004c30: af00         	add	r7, sp, #0x0
10004c32: b081         	sub	sp, #0x4
10004c34: 4601         	mov	r1, r0
10004c36: 9100         	str	r1, [sp]
10004c38: 6808         	ldr	r0, [r1]
10004c3a: 6849         	ldr	r1, [r1, #0x4]
10004c3c: b001         	add	sp, #0x4
10004c3e: bd80         	pop	{r7, pc}

10004c40 <rp2040_monotonic::Rp2040Monotonic::new::h2954012f9779d03b>:
10004c40: b580         	push	{r7, lr}
10004c42: af00         	add	r7, sp, #0x0
10004c44: b081         	sub	sp, #0x4
10004c46: b001         	add	sp, #0x4
10004c48: bd80         	pop	{r7, pc}
10004c4a: d4d4         	bmi	0x10004bf6 <fugit::instant::Instant<u64,_,_>::const_cmp::h07ab1c0f0301b9ce+0x6a> @ imm = #-0x58

10004c4c <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::now::h8a49c9d58152d716>:
10004c4c: b580         	push	{r7, lr}
10004c4e: af00         	add	r7, sp, #0x0
10004c50: b0a0         	sub	sp, #0x80
10004c52: 9004         	str	r0, [sp, #0x10]
10004c54: 9009         	str	r0, [sp, #0x24]
10004c56: 901f         	str	r0, [sp, #0x7c]
10004c58: 481f         	ldr	r0, [pc, #0x7c]         @ 0x10004cd8 <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::now::h8a49c9d58152d716+0x8c>
10004c5a: 900d         	str	r0, [sp, #0x34]
10004c5c: 481f         	ldr	r0, [pc, #0x7c]         @ 0x10004cdc <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::now::h8a49c9d58152d716+0x90>
10004c5e: 9011         	str	r0, [sp, #0x44]
10004c60: 9017         	str	r0, [sp, #0x5c]
10004c62: 9018         	str	r0, [sp, #0x60]
10004c64: f007 fa2f    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x745e
10004c68: 9006         	str	r0, [sp, #0x18]
10004c6a: a806         	add	r0, sp, #0x18
10004c6c: 9013         	str	r0, [sp, #0x4c]
10004c6e: 9806         	ldr	r0, [sp, #0x18]
10004c70: 9005         	str	r0, [sp, #0x14]
10004c72: e7ff         	b	0x10004c74 <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::now::h8a49c9d58152d716+0x28> @ imm = #-0x2
10004c74: 9804         	ldr	r0, [sp, #0x10]
10004c76: 901e         	str	r0, [sp, #0x78]
10004c78: 4817         	ldr	r0, [pc, #0x5c]         @ 0x10004cd8 <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::now::h8a49c9d58152d716+0x8c>
10004c7a: 9001         	str	r0, [sp, #0x4]
10004c7c: 900e         	str	r0, [sp, #0x38]
10004c7e: 4818         	ldr	r0, [pc, #0x60]         @ 0x10004ce0 <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::now::h8a49c9d58152d716+0x94>
10004c80: 900f         	str	r0, [sp, #0x3c]
10004c82: 901b         	str	r0, [sp, #0x6c]
10004c84: 901c         	str	r0, [sp, #0x70]
10004c86: f007 fa1e    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x743c
10004c8a: 9904         	ldr	r1, [sp, #0x10]
10004c8c: 4602         	mov	r2, r0
10004c8e: 9801         	ldr	r0, [sp, #0x4]
10004c90: 9207         	str	r2, [sp, #0x1c]
10004c92: aa07         	add	r2, sp, #0x1c
10004c94: 9214         	str	r2, [sp, #0x50]
10004c96: 9a07         	ldr	r2, [sp, #0x1c]
10004c98: 9202         	str	r2, [sp, #0x8]
10004c9a: 920a         	str	r2, [sp, #0x28]
10004c9c: 911d         	str	r1, [sp, #0x74]
10004c9e: 900c         	str	r0, [sp, #0x30]
10004ca0: 480e         	ldr	r0, [pc, #0x38]         @ 0x10004cdc <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::now::h8a49c9d58152d716+0x90>
10004ca2: 9010         	str	r0, [sp, #0x40]
10004ca4: 9019         	str	r0, [sp, #0x64]
10004ca6: 901a         	str	r0, [sp, #0x68]
10004ca8: f007 fa0d    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x741a
10004cac: 9008         	str	r0, [sp, #0x20]
10004cae: a808         	add	r0, sp, #0x20
10004cb0: 9012         	str	r0, [sp, #0x48]
10004cb2: 9908         	ldr	r1, [sp, #0x20]
10004cb4: 9103         	str	r1, [sp, #0xc]
10004cb6: 910b         	str	r1, [sp, #0x2c]
10004cb8: 9805         	ldr	r0, [sp, #0x14]
10004cba: 4288         	cmp	r0, r1
10004cbc: d003         	beq	0x10004cc6 <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::now::h8a49c9d58152d716+0x7a> @ imm = #0x6
10004cbe: e7ff         	b	0x10004cc0 <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::now::h8a49c9d58152d716+0x74> @ imm = #-0x2
10004cc0: 9803         	ldr	r0, [sp, #0xc]
10004cc2: 9005         	str	r0, [sp, #0x14]
10004cc4: e7d6         	b	0x10004c74 <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::now::h8a49c9d58152d716+0x28> @ imm = #-0x54
10004cc6: 9802         	ldr	r0, [sp, #0x8]
10004cc8: 9905         	ldr	r1, [sp, #0x14]
10004cca: 9116         	str	r1, [sp, #0x58]
10004ccc: 9015         	str	r0, [sp, #0x54]
10004cce: f7ff fefd    	bl	0x10004acc <fugit::instant::Instant<u64,_,_>::from_ticks::h687fd86bc681a771> @ imm = #-0x206
10004cd2: b020         	add	sp, #0x80
10004cd4: bd80         	pop	{r7, pc}
10004cd6: 46c0         	mov	r8, r8
10004cd8: 00 40 05 40  	.word	0x40054000
10004cdc: 24 40 05 40  	.word	0x40054024
10004ce0: 28 40 05 40  	.word	0x40054028

10004ce4 <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::reset::h870928c354e86025>:
10004ce4: b580         	push	{r7, lr}
10004ce6: af00         	add	r7, sp, #0x0
10004ce8: b0a8         	sub	sp, #0xa0
10004cea: 9003         	str	r0, [sp, #0xc]
10004cec: 9009         	str	r0, [sp, #0x24]
10004cee: 4833         	ldr	r0, [pc, #0xcc]         @ 0x10004dbc <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::reset::h870928c354e86025+0xd8>
10004cf0: 9006         	str	r0, [sp, #0x18]
10004cf2: 900a         	str	r0, [sp, #0x28]
10004cf4: 900e         	str	r0, [sp, #0x38]
10004cf6: 9012         	str	r0, [sp, #0x48]
10004cf8: 901d         	str	r0, [sp, #0x74]
10004cfa: 901e         	str	r0, [sp, #0x78]
10004cfc: f007 f9e3    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x73c6
10004d00: 9004         	str	r0, [sp, #0x10]
10004d02: 9013         	str	r0, [sp, #0x4c]
10004d04: 9010         	str	r0, [sp, #0x40]
10004d06: 2000         	movs	r0, #0x0
10004d08: 9005         	str	r0, [sp, #0x14]
10004d0a: f7ff fe8f    	bl	0x10004a2c <<u32 as core::ops::bit::Not>::not::h391c484d477de27f> @ imm = #-0x2e2
10004d0e: 4601         	mov	r1, r0
10004d10: 9804         	ldr	r0, [sp, #0x10]
10004d12: f7ff fe9a    	bl	0x10004a4a <<u32 as core::ops::bit::BitAnd>::bitand::hd6cd81ce10aca97b> @ imm = #-0x2cc
10004d16: 9905         	ldr	r1, [sp, #0x14]
10004d18: f7ff fe8f    	bl	0x10004a3a <<u32 as core::ops::bit::BitOr>::bitor::h4b2059dbe5b7aea4> @ imm = #-0x2e2
10004d1c: 9011         	str	r0, [sp, #0x44]
10004d1e: a810         	add	r0, sp, #0x40
10004d20: a911         	add	r1, sp, #0x44
10004d22: f000 f853    	bl	0x10004dcc <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::reset::{{closure}}::h4bc6f3b6a68aaf15> @ imm = #0xa6
10004d26: 4601         	mov	r1, r0
10004d28: 9806         	ldr	r0, [sp, #0x18]
10004d2a: 6809         	ldr	r1, [r1]
10004d2c: 9024         	str	r0, [sp, #0x90]
10004d2e: 9125         	str	r1, [sp, #0x94]
10004d30: 9026         	str	r0, [sp, #0x98]
10004d32: f007 fa33    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x7466
10004d36: e7ff         	b	0x10004d38 <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::reset::h870928c354e86025+0x54> @ imm = #-0x2
10004d38: 4820         	ldr	r0, [pc, #0x80]         @ 0x10004dbc <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::reset::h870928c354e86025+0xd8>
10004d3a: 900d         	str	r0, [sp, #0x34]
10004d3c: 4820         	ldr	r0, [pc, #0x80]         @ 0x10004dc0 <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::reset::h870928c354e86025+0xdc>
10004d3e: 900f         	str	r0, [sp, #0x3c]
10004d40: 901f         	str	r0, [sp, #0x7c]
10004d42: 9020         	str	r0, [sp, #0x80]
10004d44: f007 f9bf    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x737e
10004d48: 9008         	str	r0, [sp, #0x20]
10004d4a: a808         	add	r0, sp, #0x20
10004d4c: 900c         	str	r0, [sp, #0x30]
10004d4e: 9808         	ldr	r0, [sp, #0x20]
10004d50: 0280         	lsls	r0, r0, #0xa
10004d52: 0fc1         	lsrs	r1, r0, #0x1f
10004d54: a818         	add	r0, sp, #0x60
10004d56: 7001         	strb	r1, [r0]
10004d58: a807         	add	r0, sp, #0x1c
10004d5a: 7001         	strb	r1, [r0]
10004d5c: 9019         	str	r0, [sp, #0x64]
10004d5e: 901a         	str	r0, [sp, #0x68]
10004d60: 7800         	ldrb	r0, [r0]
10004d62: 07c0         	lsls	r0, r0, #0x1f
10004d64: 2800         	cmp	r0, #0x0
10004d66: d0e7         	beq	0x10004d38 <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::reset::h870928c354e86025+0x54> @ imm = #-0x32
10004d68: e7ff         	b	0x10004d6a <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::reset::h870928c354e86025+0x86> @ imm = #-0x2
10004d6a: 9803         	ldr	r0, [sp, #0xc]
10004d6c: 9027         	str	r0, [sp, #0x9c]
10004d6e: 4815         	ldr	r0, [pc, #0x54]         @ 0x10004dc4 <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::reset::h870928c354e86025+0xe0>
10004d70: 900b         	str	r0, [sp, #0x2c]
10004d72: 4815         	ldr	r0, [pc, #0x54]         @ 0x10004dc8 <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::reset::h870928c354e86025+0xe4>
10004d74: 9002         	str	r0, [sp, #0x8]
10004d76: 9016         	str	r0, [sp, #0x58]
10004d78: 901b         	str	r0, [sp, #0x6c]
10004d7a: 901c         	str	r0, [sp, #0x70]
10004d7c: f007 f9a3    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x7346
10004d80: 9000         	str	r0, [sp]
10004d82: 9017         	str	r0, [sp, #0x5c]
10004d84: 9014         	str	r0, [sp, #0x50]
10004d86: 2000         	movs	r0, #0x0
10004d88: 9001         	str	r0, [sp, #0x4]
10004d8a: f7ff fe4f    	bl	0x10004a2c <<u32 as core::ops::bit::Not>::not::h391c484d477de27f> @ imm = #-0x362
10004d8e: 4601         	mov	r1, r0
10004d90: 9800         	ldr	r0, [sp]
10004d92: f7ff fe5a    	bl	0x10004a4a <<u32 as core::ops::bit::BitAnd>::bitand::hd6cd81ce10aca97b> @ imm = #-0x34c
10004d96: 9901         	ldr	r1, [sp, #0x4]
10004d98: f7ff fe4f    	bl	0x10004a3a <<u32 as core::ops::bit::BitOr>::bitor::h4b2059dbe5b7aea4> @ imm = #-0x362
10004d9c: 9015         	str	r0, [sp, #0x54]
10004d9e: a814         	add	r0, sp, #0x50
10004da0: a915         	add	r1, sp, #0x54
10004da2: f000 f835    	bl	0x10004e10 <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::reset::{{closure}}::h6e71376768250153> @ imm = #0x6a
10004da6: 4601         	mov	r1, r0
10004da8: 9802         	ldr	r0, [sp, #0x8]
10004daa: 6809         	ldr	r1, [r1]
10004dac: 9021         	str	r0, [sp, #0x84]
10004dae: 9122         	str	r1, [sp, #0x88]
10004db0: 9023         	str	r0, [sp, #0x8c]
10004db2: f007 f9f3    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x73e6
10004db6: b028         	add	sp, #0xa0
10004db8: bd80         	pop	{r7, pc}
10004dba: 46c0         	mov	r8, r8
10004dbc: 00 c0 00 40  	.word	0x4000c000
10004dc0: 08 c0 00 40  	.word	0x4000c008
10004dc4: 00 40 05 40  	.word	0x40054000
10004dc8: 38 40 05 40  	.word	0x40054038

10004dcc <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::reset::{{closure}}::h4bc6f3b6a68aaf15>:
10004dcc: b580         	push	{r7, lr}
10004dce: af00         	add	r7, sp, #0x0
10004dd0: b08a         	sub	sp, #0x28
10004dd2: aa03         	add	r2, sp, #0xc
10004dd4: 9201         	str	r2, [sp, #0x4]
10004dd6: 460a         	mov	r2, r1
10004dd8: 4601         	mov	r1, r0
10004dda: 9801         	ldr	r0, [sp, #0x4]
10004ddc: 6001         	str	r1, [r0]
10004dde: 6042         	str	r2, [r0, #0x4]
10004de0: 6082         	str	r2, [r0, #0x8]
10004de2: 60c2         	str	r2, [r0, #0xc]
10004de4: ab07         	add	r3, sp, #0x1c
10004de6: 2115         	movs	r1, #0x15
10004de8: 7019         	strb	r1, [r3]
10004dea: 6142         	str	r2, [r0, #0x14]
10004dec: aa08         	add	r2, sp, #0x20
10004dee: 7111         	strb	r1, [r2, #0x4]
10004df0: 6941         	ldr	r1, [r0, #0x14]
10004df2: 9100         	str	r1, [sp]
10004df4: 6981         	ldr	r1, [r0, #0x18]
10004df6: 2001         	movs	r0, #0x1
10004df8: f7ff fe48    	bl	0x10004a8c <<u32 as core::ops::bit::Shl<u8>>::shl::h7695729857aa3f81> @ imm = #-0x370
10004dfc: f7ff fe16    	bl	0x10004a2c <<u32 as core::ops::bit::Not>::not::h391c484d477de27f> @ imm = #-0x3d4
10004e00: 4601         	mov	r1, r0
10004e02: 9800         	ldr	r0, [sp]
10004e04: f7ff fe35    	bl	0x10004a72 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h6eccd6a4b518ff6b> @ imm = #-0x396
10004e08: 9801         	ldr	r0, [sp, #0x4]
10004e0a: 6940         	ldr	r0, [r0, #0x14]
10004e0c: b00a         	add	sp, #0x28
10004e0e: bd80         	pop	{r7, pc}

10004e10 <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::reset::{{closure}}::h6e71376768250153>:
10004e10: b580         	push	{r7, lr}
10004e12: af00         	add	r7, sp, #0x0
10004e14: b08a         	sub	sp, #0x28
10004e16: aa03         	add	r2, sp, #0xc
10004e18: 9201         	str	r2, [sp, #0x4]
10004e1a: 460a         	mov	r2, r1
10004e1c: 4601         	mov	r1, r0
10004e1e: 9801         	ldr	r0, [sp, #0x4]
10004e20: 6001         	str	r1, [r0]
10004e22: 6042         	str	r2, [r0, #0x4]
10004e24: 6082         	str	r2, [r0, #0x8]
10004e26: 60c2         	str	r2, [r0, #0xc]
10004e28: ab07         	add	r3, sp, #0x1c
10004e2a: 2100         	movs	r1, #0x0
10004e2c: 7019         	strb	r1, [r3]
10004e2e: 6142         	str	r2, [r0, #0x14]
10004e30: aa08         	add	r2, sp, #0x20
10004e32: 7111         	strb	r1, [r2, #0x4]
10004e34: 6941         	ldr	r1, [r0, #0x14]
10004e36: 9100         	str	r1, [sp]
10004e38: 6981         	ldr	r1, [r0, #0x18]
10004e3a: 2001         	movs	r0, #0x1
10004e3c: f7ff fe26    	bl	0x10004a8c <<u32 as core::ops::bit::Shl<u8>>::shl::h7695729857aa3f81> @ imm = #-0x3b4
10004e40: 4601         	mov	r1, r0
10004e42: 9800         	ldr	r0, [sp]
10004e44: f7ff fe09    	bl	0x10004a5a <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::heabc9c5485a4ee9b> @ imm = #-0x3ee
10004e48: 9801         	ldr	r0, [sp, #0x4]
10004e4a: 6940         	ldr	r0, [r0, #0x14]
10004e4c: b00a         	add	sp, #0x28
10004e4e: bd80         	pop	{r7, pc}

10004e50 <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::set_compare::h3a1f5092ad3092b8>:
10004e50: b5d0         	push	{r4, r6, r7, lr}
10004e52: af02         	add	r7, sp, #0x8
10004e54: b0a6         	sub	sp, #0x98
10004e56: 9309         	str	r3, [sp, #0x24]
10004e58: 9208         	str	r2, [sp, #0x20]
10004e5a: 9005         	str	r0, [sp, #0x14]
10004e5c: 4619         	mov	r1, r3
10004e5e: 9106         	str	r1, [sp, #0x18]
10004e60: 4611         	mov	r1, r2
10004e62: 9107         	str	r1, [sp, #0x1c]
10004e64: 9013         	str	r0, [sp, #0x4c]
10004e66: 9315         	str	r3, [sp, #0x54]
10004e68: 9214         	str	r2, [sp, #0x50]
10004e6a: f7ff feef    	bl	0x10004c4c <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::now::h8a49c9d58152d716> @ imm = #-0x222
10004e6e: 9a08         	ldr	r2, [sp, #0x20]
10004e70: 9b09         	ldr	r3, [sp, #0x24]
10004e72: 9117         	str	r1, [sp, #0x5c]
10004e74: 9016         	str	r0, [sp, #0x58]
10004e76: 2400         	movs	r4, #0x0
10004e78: 9419         	str	r4, [sp, #0x64]
10004e7a: 43e4         	mvns	r4, r4
10004e7c: 9418         	str	r4, [sp, #0x60]
10004e7e: 9101         	str	r1, [sp, #0x4]
10004e80: 9000         	str	r0, [sp]
10004e82: a80c         	add	r0, sp, #0x30
10004e84: f7ff fe3d    	bl	0x10004b02 <fugit::instant::Instant<u64,_,_>::checked_duration_since::hf247f06689f4f8cc> @ imm = #-0x386
10004e88: 980c         	ldr	r0, [sp, #0x30]
10004e8a: 2801         	cmp	r0, #0x1
10004e8c: d108         	bne	0x10004ea0 <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::set_compare::h3a1f5092ad3092b8+0x50> @ imm = #0x10
10004e8e: e7ff         	b	0x10004e90 <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::set_compare::h3a1f5092ad3092b8+0x40> @ imm = #-0x2
10004e90: a80c         	add	r0, sp, #0x30
10004e92: 3008         	adds	r0, #0x8
10004e94: 901b         	str	r0, [sp, #0x6c]
10004e96: f7ff feca    	bl	0x10004c2e <fugit::duration::Duration<u64,_,_>::ticks::h4990b7ca5e4fb845> @ imm = #-0x26c
10004e9a: 2900         	cmp	r1, #0x0
10004e9c: d004         	beq	0x10004ea8 <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::set_compare::h3a1f5092ad3092b8+0x58> @ imm = #0x8
10004e9e: e7ff         	b	0x10004ea0 <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::set_compare::h3a1f5092ad3092b8+0x50> @ imm = #-0x2
10004ea0: 2000         	movs	r0, #0x0
10004ea2: 900b         	str	r0, [sp, #0x2c]
10004ea4: 900a         	str	r0, [sp, #0x28]
10004ea6: e010         	b	0x10004eca <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::set_compare::h3a1f5092ad3092b8+0x7a> @ imm = #0x20
10004ea8: 9906         	ldr	r1, [sp, #0x18]
10004eaa: 9807         	ldr	r0, [sp, #0x1c]
10004eac: 9a0e         	ldr	r2, [sp, #0x38]
10004eae: 9b0f         	ldr	r3, [sp, #0x3c]
10004eb0: 931d         	str	r3, [sp, #0x74]
10004eb2: 921c         	str	r2, [sp, #0x70]
10004eb4: f7ff fe19    	bl	0x10004aea <fugit::instant::Instant<u64,_,_>::duration_since_epoch::h14ab67ea7d67a92c> @ imm = #-0x3ce
10004eb8: 9111         	str	r1, [sp, #0x44]
10004eba: 9010         	str	r0, [sp, #0x40]
10004ebc: a810         	add	r0, sp, #0x40
10004ebe: f7ff feb6    	bl	0x10004c2e <fugit::duration::Duration<u64,_,_>::ticks::h4990b7ca5e4fb845> @ imm = #-0x294
10004ec2: 2100         	movs	r1, #0x0
10004ec4: 910b         	str	r1, [sp, #0x2c]
10004ec6: 900a         	str	r0, [sp, #0x28]
10004ec8: e7ff         	b	0x10004eca <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::set_compare::h3a1f5092ad3092b8+0x7a> @ imm = #-0x2
10004eca: 9805         	ldr	r0, [sp, #0x14]
10004ecc: 9025         	str	r0, [sp, #0x94]
10004ece: 4811         	ldr	r0, [pc, #0x44]         @ 0x10004f14 <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::set_compare::h3a1f5092ad3092b8+0xc4>
10004ed0: 901e         	str	r0, [sp, #0x78]
10004ed2: 4811         	ldr	r0, [pc, #0x44]         @ 0x10004f18 <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::set_compare::h3a1f5092ad3092b8+0xc8>
10004ed4: 9004         	str	r0, [sp, #0x10]
10004ed6: 9020         	str	r0, [sp, #0x80]
10004ed8: a80a         	add	r0, sp, #0x28
10004eda: 9003         	str	r0, [sp, #0xc]
10004edc: 9021         	str	r0, [sp, #0x84]
10004ede: 2000         	movs	r0, #0x0
10004ee0: 9002         	str	r0, [sp, #0x8]
10004ee2: f7ff fda3    	bl	0x10004a2c <<u32 as core::ops::bit::Not>::not::h391c484d477de27f> @ imm = #-0x4ba
10004ee6: 4601         	mov	r1, r0
10004ee8: 9802         	ldr	r0, [sp, #0x8]
10004eea: f7ff fdae    	bl	0x10004a4a <<u32 as core::ops::bit::BitAnd>::bitand::hd6cd81ce10aca97b> @ imm = #-0x4a4
10004eee: 9902         	ldr	r1, [sp, #0x8]
10004ef0: f7ff fda3    	bl	0x10004a3a <<u32 as core::ops::bit::BitOr>::bitor::h4b2059dbe5b7aea4> @ imm = #-0x4ba
10004ef4: 4601         	mov	r1, r0
10004ef6: 9803         	ldr	r0, [sp, #0xc]
10004ef8: 911f         	str	r1, [sp, #0x7c]
10004efa: a91f         	add	r1, sp, #0x7c
10004efc: f000 f80e    	bl	0x10004f1c <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::set_compare::{{closure}}::h4b42cae012507f7a> @ imm = #0x1c
10004f00: 4601         	mov	r1, r0
10004f02: 9804         	ldr	r0, [sp, #0x10]
10004f04: 6809         	ldr	r1, [r1]
10004f06: 9022         	str	r0, [sp, #0x88]
10004f08: 9123         	str	r1, [sp, #0x8c]
10004f0a: 9024         	str	r0, [sp, #0x90]
10004f0c: f007 f946    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x728c
10004f10: b026         	add	sp, #0x98
10004f12: bdd0         	pop	{r4, r6, r7, pc}
10004f14: 00 40 05 40  	.word	0x40054000
10004f18: 10 40 05 40  	.word	0x40054010

10004f1c <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::set_compare::{{closure}}::h4b42cae012507f7a>:
10004f1c: b580         	push	{r7, lr}
10004f1e: af00         	add	r7, sp, #0x0
10004f20: b085         	sub	sp, #0x14
10004f22: 9100         	str	r1, [sp]
10004f24: 4601         	mov	r1, r0
10004f26: 9800         	ldr	r0, [sp]
10004f28: 9101         	str	r1, [sp, #0x4]
10004f2a: 9002         	str	r0, [sp, #0x8]
10004f2c: 9901         	ldr	r1, [sp, #0x4]
10004f2e: 6809         	ldr	r1, [r1]
10004f30: 9003         	str	r0, [sp, #0xc]
10004f32: 9104         	str	r1, [sp, #0x10]
10004f34: 6001         	str	r1, [r0]
10004f36: b005         	add	sp, #0x14
10004f38: bd80         	pop	{r7, pc}
10004f3a: d4d4         	bmi	0x10004ee6 <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::set_compare::h3a1f5092ad3092b8+0x96> @ imm = #-0x58

10004f3c <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::clear_compare_flag::hf9a2a5fb3c3beaf3>:
10004f3c: b580         	push	{r7, lr}
10004f3e: af00         	add	r7, sp, #0x0
10004f40: b08e         	sub	sp, #0x38
10004f42: 9002         	str	r0, [sp, #0x8]
10004f44: 900d         	str	r0, [sp, #0x34]
10004f46: 4812         	ldr	r0, [pc, #0x48]         @ 0x10004f90 <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::clear_compare_flag::hf9a2a5fb3c3beaf3+0x54>
10004f48: 9003         	str	r0, [sp, #0xc]
10004f4a: 4812         	ldr	r0, [pc, #0x48]         @ 0x10004f94 <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::clear_compare_flag::hf9a2a5fb3c3beaf3+0x58>
10004f4c: 9001         	str	r0, [sp, #0x4]
10004f4e: 9006         	str	r0, [sp, #0x18]
10004f50: 9008         	str	r0, [sp, #0x20]
10004f52: 9009         	str	r0, [sp, #0x24]
10004f54: f007 f8b7    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x716e
10004f58: 9000         	str	r0, [sp]
10004f5a: 9007         	str	r0, [sp, #0x1c]
10004f5c: 9004         	str	r0, [sp, #0x10]
10004f5e: 200f         	movs	r0, #0xf
10004f60: f7ff fd64    	bl	0x10004a2c <<u32 as core::ops::bit::Not>::not::h391c484d477de27f> @ imm = #-0x538
10004f64: 4601         	mov	r1, r0
10004f66: 9800         	ldr	r0, [sp]
10004f68: f7ff fd6f    	bl	0x10004a4a <<u32 as core::ops::bit::BitAnd>::bitand::hd6cd81ce10aca97b> @ imm = #-0x522
10004f6c: 2100         	movs	r1, #0x0
10004f6e: f7ff fd64    	bl	0x10004a3a <<u32 as core::ops::bit::BitOr>::bitor::h4b2059dbe5b7aea4> @ imm = #-0x538
10004f72: 9005         	str	r0, [sp, #0x14]
10004f74: a804         	add	r0, sp, #0x10
10004f76: a905         	add	r1, sp, #0x14
10004f78: f000 f80e    	bl	0x10004f98 <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::clear_compare_flag::{{closure}}::h231612a02a69f44d> @ imm = #0x1c
10004f7c: 4601         	mov	r1, r0
10004f7e: 9801         	ldr	r0, [sp, #0x4]
10004f80: 6809         	ldr	r1, [r1]
10004f82: 900a         	str	r0, [sp, #0x28]
10004f84: 910b         	str	r1, [sp, #0x2c]
10004f86: 900c         	str	r0, [sp, #0x30]
10004f88: f007 f908    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x7210
10004f8c: b00e         	add	sp, #0x38
10004f8e: bd80         	pop	{r7, pc}
10004f90: 00 40 05 40  	.word	0x40054000
10004f94: 34 40 05 40  	.word	0x40054034

10004f98 <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::clear_compare_flag::{{closure}}::h231612a02a69f44d>:
10004f98: b580         	push	{r7, lr}
10004f9a: af00         	add	r7, sp, #0x0
10004f9c: b08e         	sub	sp, #0x38
10004f9e: aa05         	add	r2, sp, #0x14
10004fa0: 9203         	str	r2, [sp, #0xc]
10004fa2: 460a         	mov	r2, r1
10004fa4: 9903         	ldr	r1, [sp, #0xc]
10004fa6: 6008         	str	r0, [r1]
10004fa8: 604a         	str	r2, [r1, #0x4]
10004faa: 608a         	str	r2, [r1, #0x8]
10004fac: 60ca         	str	r2, [r1, #0xc]
10004fae: ab09         	add	r3, sp, #0x24
10004fb0: 2000         	movs	r0, #0x0
10004fb2: 7018         	strb	r0, [r3]
10004fb4: 614a         	str	r2, [r1, #0x14]
10004fb6: aa0a         	add	r2, sp, #0x28
10004fb8: 7110         	strb	r0, [r2, #0x4]
10004fba: aa0c         	add	r2, sp, #0x30
10004fbc: 2001         	movs	r0, #0x1
10004fbe: 9001         	str	r0, [sp, #0x4]
10004fc0: 7010         	strb	r0, [r2]
10004fc2: 694a         	ldr	r2, [r1, #0x14]
10004fc4: 9200         	str	r2, [sp]
10004fc6: 6989         	ldr	r1, [r1, #0x18]
10004fc8: f7ff fd60    	bl	0x10004a8c <<u32 as core::ops::bit::Shl<u8>>::shl::h7695729857aa3f81> @ imm = #-0x540
10004fcc: f7ff fd2e    	bl	0x10004a2c <<u32 as core::ops::bit::Not>::not::h391c484d477de27f> @ imm = #-0x5a4
10004fd0: 4601         	mov	r1, r0
10004fd2: 9800         	ldr	r0, [sp]
10004fd4: f7ff fd4d    	bl	0x10004a72 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h6eccd6a4b518ff6b> @ imm = #-0x566
10004fd8: 9901         	ldr	r1, [sp, #0x4]
10004fda: 9803         	ldr	r0, [sp, #0xc]
10004fdc: 6940         	ldr	r0, [r0, #0x14]
10004fde: 9002         	str	r0, [sp, #0x8]
10004fe0: a80d         	add	r0, sp, #0x34
10004fe2: 7001         	strb	r1, [r0]
10004fe4: 4608         	mov	r0, r1
10004fe6: f7ff fd30    	bl	0x10004a4a <<u32 as core::ops::bit::BitAnd>::bitand::hd6cd81ce10aca97b> @ imm = #-0x5a0
10004fea: 9903         	ldr	r1, [sp, #0xc]
10004fec: 6989         	ldr	r1, [r1, #0x18]
10004fee: f7ff fd4d    	bl	0x10004a8c <<u32 as core::ops::bit::Shl<u8>>::shl::h7695729857aa3f81> @ imm = #-0x566
10004ff2: 4601         	mov	r1, r0
10004ff4: 9802         	ldr	r0, [sp, #0x8]
10004ff6: f7ff fd30    	bl	0x10004a5a <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::heabc9c5485a4ee9b> @ imm = #-0x5a0
10004ffa: 9803         	ldr	r0, [sp, #0xc]
10004ffc: 6940         	ldr	r0, [r0, #0x14]
10004ffe: b00e         	add	sp, #0x38
10005000: bd80         	pop	{r7, pc}
10005002: d4d4         	bmi	0x10004fae <<rp2040_monotonic::Rp2040Monotonic as rtic_monotonic::Monotonic>::clear_compare_flag::{{closure}}::h231612a02a69f44d+0x16> @ imm = #-0x58

10005004 <<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check::hf45755023be43f6f>:
10005004: b580         	push	{r7, lr}
10005006: af00         	add	r7, sp, #0x0
10005008: b086         	sub	sp, #0x18
1000500a: 9201         	str	r2, [sp, #0x4]
1000500c: 9102         	str	r1, [sp, #0x8]
1000500e: 9003         	str	r0, [sp, #0xc]
10005010: 9104         	str	r1, [sp, #0x10]
10005012: 9205         	str	r2, [sp, #0x14]
10005014: 4281         	cmp	r1, r0
10005016: d204         	bhs	0x10005022 <<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check::hf45755023be43f6f+0x1e> @ imm = #0x8
10005018: e7ff         	b	0x1000501a <<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check::hf45755023be43f6f+0x16> @ imm = #-0x2
1000501a: 4805         	ldr	r0, [pc, #0x14]         @ 0x10005030 <<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check::hf45755023be43f6f+0x2c>
1000501c: 21d6         	movs	r1, #0xd6
1000501e: f007 f9df    	bl	0x1000c3e0 <core::panicking::panic_nounwind::h6901392fec1083b6> @ imm = #0x73be
10005022: 9802         	ldr	r0, [sp, #0x8]
10005024: 9901         	ldr	r1, [sp, #0x4]
10005026: 4288         	cmp	r0, r1
10005028: d8f7         	bhi	0x1000501a <<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check::hf45755023be43f6f+0x16> @ imm = #-0x12
1000502a: e7ff         	b	0x1000502c <<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check::hf45755023be43f6f+0x28> @ imm = #-0x2
1000502c: b006         	add	sp, #0x18
1000502e: bd80         	pop	{r7, pc}
10005030: a8 0e 01 10  	.word	0x10010ea8

10005034 <<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index::h5b4015eea28eeca6>:
10005034: b580         	push	{r7, lr}
10005036: af00         	add	r7, sp, #0x0
10005038: b08a         	sub	sp, #0x28
1000503a: 9300         	str	r3, [sp]
1000503c: 9201         	str	r2, [sp, #0x4]
1000503e: 9102         	str	r1, [sp, #0x8]
10005040: 9003         	str	r0, [sp, #0xc]
10005042: 9004         	str	r0, [sp, #0x10]
10005044: 9105         	str	r1, [sp, #0x14]
10005046: 9206         	str	r2, [sp, #0x18]
10005048: 9007         	str	r0, [sp, #0x1c]
1000504a: 9208         	str	r2, [sp, #0x20]
1000504c: 4290         	cmp	r0, r2
1000504e: d801         	bhi	0x10005054 <<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index::h5b4015eea28eeca6+0x20> @ imm = #0x2
10005050: e7ff         	b	0x10005052 <<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index::h5b4015eea28eeca6+0x1e> @ imm = #-0x2
10005052: e004         	b	0x1000505e <<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index::h5b4015eea28eeca6+0x2a> @ imm = #0x8
10005054: 9a00         	ldr	r2, [sp]
10005056: 9901         	ldr	r1, [sp, #0x4]
10005058: 9803         	ldr	r0, [sp, #0xc]
1000505a: f007 ff65    	bl	0x1000cf28 <core::slice::index::slice_start_index_len_fail::hb969d35d0a5d5e22> @ imm = #0x7eca
1000505e: 9a01         	ldr	r2, [sp, #0x4]
10005060: 9803         	ldr	r0, [sp, #0xc]
10005062: 4611         	mov	r1, r2
10005064: f7ff ffce    	bl	0x10005004 <<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check::hf45755023be43f6f> @ imm = #-0x64
10005068: e7ff         	b	0x1000506a <<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index::h5b4015eea28eeca6+0x36> @ imm = #-0x2
1000506a: 9802         	ldr	r0, [sp, #0x8]
1000506c: 9a03         	ldr	r2, [sp, #0xc]
1000506e: 9901         	ldr	r1, [sp, #0x4]
10005070: 1a89         	subs	r1, r1, r2
10005072: 9109         	str	r1, [sp, #0x24]
10005074: 1880         	adds	r0, r0, r2
10005076: b00a         	add	sp, #0x28
10005078: bd80         	pop	{r7, pc}
1000507a: d4d4         	bmi	0x10005026 <<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check::hf45755023be43f6f+0x22> @ imm = #-0x58

1000507c <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753>:
1000507c: b5d0         	push	{r4, r6, r7, lr}
1000507e: af02         	add	r7, sp, #0x8
10005080: b0a4         	sub	sp, #0x90
10005082: 9303         	str	r3, [sp, #0xc]
10005084: 9204         	str	r2, [sp, #0x10]
10005086: 9105         	str	r1, [sp, #0x14]
10005088: 4604         	mov	r4, r0
1000508a: 9406         	str	r4, [sp, #0x18]
1000508c: 68b8         	ldr	r0, [r7, #0x8]
1000508e: 9007         	str	r0, [sp, #0x1c]
10005090: 941b         	str	r4, [sp, #0x6c]
10005092: 911c         	str	r1, [sp, #0x70]
10005094: 921d         	str	r2, [sp, #0x74]
10005096: 931e         	str	r3, [sp, #0x78]
10005098: 4963         	ldr	r1, [pc, #0x18c]        @ 0x10005228 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x1ac>
1000509a: 911f         	str	r1, [sp, #0x7c]
1000509c: 9120         	str	r1, [sp, #0x80]
1000509e: 2800         	cmp	r0, #0x0
100050a0: d11e         	bne	0x100050e0 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x64> @ imm = #0x3c
100050a2: e7ff         	b	0x100050a4 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x28> @ imm = #-0x2
100050a4: 9803         	ldr	r0, [sp, #0xc]
100050a6: aa08         	add	r2, sp, #0x20
100050a8: 2101         	movs	r1, #0x1
100050aa: 7011         	strb	r1, [r2]
100050ac: 9009         	str	r0, [sp, #0x24]
100050ae: 9908         	ldr	r1, [sp, #0x20]
100050b0: aa0a         	add	r2, sp, #0x28
100050b2: 7011         	strb	r1, [r2]
100050b4: 0841         	lsrs	r1, r0, #0x1
100050b6: 4a5d         	ldr	r2, [pc, #0x174]        @ 0x1000522c <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x1b0>
100050b8: 4011         	ands	r1, r2
100050ba: 1a41         	subs	r1, r0, r1
100050bc: 4a5c         	ldr	r2, [pc, #0x170]        @ 0x10005230 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x1b4>
100050be: 4608         	mov	r0, r1
100050c0: 4010         	ands	r0, r2
100050c2: 0889         	lsrs	r1, r1, #0x2
100050c4: 4011         	ands	r1, r2
100050c6: 1840         	adds	r0, r0, r1
100050c8: 0901         	lsrs	r1, r0, #0x4
100050ca: 1841         	adds	r1, r0, r1
100050cc: 4859         	ldr	r0, [pc, #0x164]        @ 0x10005234 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x1b8>
100050ce: 4001         	ands	r1, r0
100050d0: 4859         	ldr	r0, [pc, #0x164]        @ 0x10005238 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x1bc>
100050d2: 4348         	muls	r0, r1, r0
100050d4: 0e00         	lsrs	r0, r0, #0x18
100050d6: 9014         	str	r0, [sp, #0x50]
100050d8: 9814         	ldr	r0, [sp, #0x50]
100050da: 2801         	cmp	r0, #0x1
100050dc: d020         	beq	0x10005120 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0xa4> @ imm = #0x40
100050de: e02c         	b	0x1000513a <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0xbe> @ imm = #0x58
100050e0: 9803         	ldr	r0, [sp, #0xc]
100050e2: 9904         	ldr	r1, [sp, #0x10]
100050e4: 424a         	rsbs	r2, r1, #0
100050e6: 4151         	adcs	r1, r2
100050e8: aa08         	add	r2, sp, #0x20
100050ea: 7011         	strb	r1, [r2]
100050ec: 9009         	str	r0, [sp, #0x24]
100050ee: 9908         	ldr	r1, [sp, #0x20]
100050f0: aa0a         	add	r2, sp, #0x28
100050f2: 7011         	strb	r1, [r2]
100050f4: 0841         	lsrs	r1, r0, #0x1
100050f6: 4a4d         	ldr	r2, [pc, #0x134]        @ 0x1000522c <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x1b0>
100050f8: 4011         	ands	r1, r2
100050fa: 1a41         	subs	r1, r0, r1
100050fc: 4a4c         	ldr	r2, [pc, #0x130]        @ 0x10005230 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x1b4>
100050fe: 4608         	mov	r0, r1
10005100: 4010         	ands	r0, r2
10005102: 0889         	lsrs	r1, r1, #0x2
10005104: 4011         	ands	r1, r2
10005106: 1840         	adds	r0, r0, r1
10005108: 0901         	lsrs	r1, r0, #0x4
1000510a: 1841         	adds	r1, r0, r1
1000510c: 4849         	ldr	r0, [pc, #0x124]        @ 0x10005234 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x1b8>
1000510e: 4001         	ands	r1, r0
10005110: 4849         	ldr	r0, [pc, #0x124]        @ 0x10005238 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x1bc>
10005112: 4348         	muls	r0, r1, r0
10005114: 0e00         	lsrs	r0, r0, #0x18
10005116: 9014         	str	r0, [sp, #0x50]
10005118: 9814         	ldr	r0, [sp, #0x50]
1000511a: 2801         	cmp	r0, #0x1
1000511c: d01d         	beq	0x1000515a <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0xde> @ imm = #0x3a
1000511e: e00c         	b	0x1000513a <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0xbe> @ imm = #0x18
10005120: 9803         	ldr	r0, [sp, #0xc]
10005122: 9906         	ldr	r1, [sp, #0x18]
10005124: 9112         	str	r1, [sp, #0x48]
10005126: 1e40         	subs	r0, r0, #0x1
10005128: 9013         	str	r0, [sp, #0x4c]
1000512a: 9812         	ldr	r0, [sp, #0x48]
1000512c: 9913         	ldr	r1, [sp, #0x4c]
1000512e: 4008         	ands	r0, r1
10005130: 9011         	str	r0, [sp, #0x44]
10005132: 9811         	ldr	r0, [sp, #0x44]
10005134: 2800         	cmp	r0, #0x0
10005136: d00d         	beq	0x10005154 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0xd8> @ imm = #0x1a
10005138: e00d         	b	0x10005156 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0xda> @ imm = #0x1a
1000513a: 483b         	ldr	r0, [pc, #0xec]         @ 0x10005228 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x1ac>
1000513c: 900b         	str	r0, [sp, #0x2c]
1000513e: 2001         	movs	r0, #0x1
10005140: 900c         	str	r0, [sp, #0x30]
10005142: 2000         	movs	r0, #0x0
10005144: 900f         	str	r0, [sp, #0x3c]
10005146: 2104         	movs	r1, #0x4
10005148: 910d         	str	r1, [sp, #0x34]
1000514a: 900e         	str	r0, [sp, #0x38]
1000514c: 493b         	ldr	r1, [pc, #0xec]         @ 0x1000523c <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x1c0>
1000514e: a80b         	add	r0, sp, #0x2c
10005150: f007 f914    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #0x7228
10005154: e000         	b	0x10005158 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0xdc> @ imm = #0x0
10005156: e017         	b	0x10005188 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x10c> @ imm = #0x2e
10005158: e017         	b	0x1000518a <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x10e> @ imm = #0x2e
1000515a: 9803         	ldr	r0, [sp, #0xc]
1000515c: 9906         	ldr	r1, [sp, #0x18]
1000515e: 9112         	str	r1, [sp, #0x48]
10005160: 1e40         	subs	r0, r0, #0x1
10005162: 9013         	str	r0, [sp, #0x4c]
10005164: 9812         	ldr	r0, [sp, #0x48]
10005166: 9913         	ldr	r1, [sp, #0x4c]
10005168: 4008         	ands	r0, r1
1000516a: 9011         	str	r0, [sp, #0x44]
1000516c: 9811         	ldr	r0, [sp, #0x44]
1000516e: 2800         	cmp	r0, #0x0
10005170: d1f1         	bne	0x10005156 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0xda> @ imm = #-0x1e
10005172: e7ff         	b	0x10005174 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0xf8> @ imm = #-0x2
10005174: a80a         	add	r0, sp, #0x28
10005176: 7800         	ldrb	r0, [r0]
10005178: 07c0         	lsls	r0, r0, #0x1f
1000517a: 2800         	cmp	r0, #0x0
1000517c: d1ec         	bne	0x10005158 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0xdc> @ imm = #-0x28
1000517e: e7ff         	b	0x10005180 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x104> @ imm = #-0x2
10005180: 9812         	ldr	r0, [sp, #0x48]
10005182: 2800         	cmp	r0, #0x0
10005184: d101         	bne	0x1000518a <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x10e> @ imm = #0x2
10005186: e7ff         	b	0x10005188 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x10c> @ imm = #-0x2
10005188: e04c         	b	0x10005224 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x1a8> @ imm = #0x98
1000518a: 9803         	ldr	r0, [sp, #0xc]
1000518c: 9905         	ldr	r1, [sp, #0x14]
1000518e: 9121         	str	r1, [sp, #0x84]
10005190: 9908         	ldr	r1, [sp, #0x20]
10005192: 9102         	str	r1, [sp, #0x8]
10005194: aa22         	add	r2, sp, #0x88
10005196: 7011         	strb	r1, [r2]
10005198: 0841         	lsrs	r1, r0, #0x1
1000519a: 4a24         	ldr	r2, [pc, #0x90]         @ 0x1000522c <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x1b0>
1000519c: 4011         	ands	r1, r2
1000519e: 1a41         	subs	r1, r0, r1
100051a0: 4a23         	ldr	r2, [pc, #0x8c]         @ 0x10005230 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x1b4>
100051a2: 4608         	mov	r0, r1
100051a4: 4010         	ands	r0, r2
100051a6: 0889         	lsrs	r1, r1, #0x2
100051a8: 4011         	ands	r1, r2
100051aa: 1840         	adds	r0, r0, r1
100051ac: 0901         	lsrs	r1, r0, #0x4
100051ae: 1841         	adds	r1, r0, r1
100051b0: 4820         	ldr	r0, [pc, #0x80]         @ 0x10005234 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x1b8>
100051b2: 4001         	ands	r1, r0
100051b4: 4820         	ldr	r0, [pc, #0x80]         @ 0x10005238 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x1bc>
100051b6: 4348         	muls	r0, r1, r0
100051b8: 0e00         	lsrs	r0, r0, #0x18
100051ba: 9023         	str	r0, [sp, #0x8c]
100051bc: 9823         	ldr	r0, [sp, #0x8c]
100051be: 2801         	cmp	r0, #0x1
100051c0: d107         	bne	0x100051d2 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x156> @ imm = #0xe
100051c2: e7ff         	b	0x100051c4 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x148> @ imm = #-0x2
100051c4: 9805         	ldr	r0, [sp, #0x14]
100051c6: 4601         	mov	r1, r0
100051c8: 9101         	str	r1, [sp, #0x4]
100051ca: 9913         	ldr	r1, [sp, #0x4c]
100051cc: 4208         	tst	r0, r1
100051ce: d00d         	beq	0x100051ec <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x170> @ imm = #0x1a
100051d0: e011         	b	0x100051f6 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x17a> @ imm = #0x22
100051d2: 4815         	ldr	r0, [pc, #0x54]         @ 0x10005228 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x1ac>
100051d4: 9015         	str	r0, [sp, #0x54]
100051d6: 2001         	movs	r0, #0x1
100051d8: 9016         	str	r0, [sp, #0x58]
100051da: 2000         	movs	r0, #0x0
100051dc: 9019         	str	r0, [sp, #0x64]
100051de: 2104         	movs	r1, #0x4
100051e0: 9117         	str	r1, [sp, #0x5c]
100051e2: 9018         	str	r0, [sp, #0x60]
100051e4: 4915         	ldr	r1, [pc, #0x54]         @ 0x1000523c <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x1c0>
100051e6: a815         	add	r0, sp, #0x54
100051e8: f007 f8c8    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #0x7190
100051ec: 9802         	ldr	r0, [sp, #0x8]
100051ee: 07c0         	lsls	r0, r0, #0x1f
100051f0: 2800         	cmp	r0, #0x0
100051f2: d105         	bne	0x10005200 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x184> @ imm = #0xa
100051f4: e000         	b	0x100051f8 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x17c> @ imm = #0x0
100051f6: e004         	b	0x10005202 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x186> @ imm = #0x8
100051f8: 9801         	ldr	r0, [sp, #0x4]
100051fa: 2800         	cmp	r0, #0x0
100051fc: d102         	bne	0x10005204 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x188> @ imm = #0x4
100051fe: e000         	b	0x10005202 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x186> @ imm = #0x0
10005200: e000         	b	0x10005204 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x188> @ imm = #0x0
10005202: e00f         	b	0x10005224 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x1a8> @ imm = #0x1e
10005204: 9b07         	ldr	r3, [sp, #0x1c]
10005206: 9a04         	ldr	r2, [sp, #0x10]
10005208: 9905         	ldr	r1, [sp, #0x14]
1000520a: 9806         	ldr	r0, [sp, #0x18]
1000520c: f000 fa02    	bl	0x10005614 <core::ub_checks::maybe_is_nonoverlapping::runtime::h0a8803d5301eec65> @ imm = #0x404
10005210: 2800         	cmp	r0, #0x0
10005212: d105         	bne	0x10005220 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x1a4> @ imm = #0xa
10005214: e7ff         	b	0x10005216 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x19a> @ imm = #-0x2
10005216: 480a         	ldr	r0, [pc, #0x28]         @ 0x10005240 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x1c4>
10005218: 21ff         	movs	r1, #0xff
1000521a: 311c         	adds	r1, #0x1c
1000521c: f007 f8e0    	bl	0x1000c3e0 <core::panicking::panic_nounwind::h6901392fec1083b6> @ imm = #0x71c0
10005220: b024         	add	sp, #0x90
10005222: bdd0         	pop	{r4, r6, r7, pc}
10005224: e7f7         	b	0x10005216 <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753+0x19a> @ imm = #-0x12
10005226: 46c0         	mov	r8, r8
10005228: a8 0f 01 10  	.word	0x10010fa8
1000522c: 55 55 55 55  	.word	0x55555555
10005230: 33 33 33 33  	.word	0x33333333
10005234: 0f 0f 0f 0f  	.word	0x0f0f0f0f
10005238: 01 01 01 01  	.word	0x01010101
1000523c: 28 10 01 10  	.word	0x10011028
10005240: 38 10 01 10  	.word	0x10011038

10005244 <core::cmp::Ord::min::h28393ae5d5e76290>:
10005244: b580         	push	{r7, lr}
10005246: af00         	add	r7, sp, #0x0
10005248: b085         	sub	sp, #0x14
1000524a: 9000         	str	r0, [sp]
1000524c: 9101         	str	r1, [sp, #0x4]
1000524e: a801         	add	r0, sp, #0x4
10005250: 9003         	str	r0, [sp, #0xc]
10005252: 4668         	mov	r0, sp
10005254: 9004         	str	r0, [sp, #0x10]
10005256: 9801         	ldr	r0, [sp, #0x4]
10005258: 9900         	ldr	r1, [sp]
1000525a: 4288         	cmp	r0, r1
1000525c: d303         	blo	0x10005266 <core::cmp::Ord::min::h28393ae5d5e76290+0x22> @ imm = #0x6
1000525e: e7ff         	b	0x10005260 <core::cmp::Ord::min::h28393ae5d5e76290+0x1c> @ imm = #-0x2
10005260: 9800         	ldr	r0, [sp]
10005262: 9002         	str	r0, [sp, #0x8]
10005264: e002         	b	0x1000526c <core::cmp::Ord::min::h28393ae5d5e76290+0x28> @ imm = #0x4
10005266: 9801         	ldr	r0, [sp, #0x4]
10005268: 9002         	str	r0, [sp, #0x8]
1000526a: e002         	b	0x10005272 <core::cmp::Ord::min::h28393ae5d5e76290+0x2e> @ imm = #0x4
1000526c: 9802         	ldr	r0, [sp, #0x8]
1000526e: b005         	add	sp, #0x14
10005270: bd80         	pop	{r7, pc}
10005272: e7fb         	b	0x1000526c <core::cmp::Ord::min::h28393ae5d5e76290+0x28> @ imm = #-0xa

10005274 <core::fmt::Arguments::new_const::h27364244335e4a43>:
10005274: b580         	push	{r7, lr}
10005276: af00         	add	r7, sp, #0x0
10005278: b082         	sub	sp, #0x8
1000527a: 9100         	str	r1, [sp]
1000527c: 4601         	mov	r1, r0
1000527e: 9800         	ldr	r0, [sp]
10005280: 9001         	str	r0, [sp, #0x4]
10005282: 6008         	str	r0, [r1]
10005284: 2001         	movs	r0, #0x1
10005286: 6048         	str	r0, [r1, #0x4]
10005288: 2000         	movs	r0, #0x0
1000528a: 6108         	str	r0, [r1, #0x10]
1000528c: 2204         	movs	r2, #0x4
1000528e: 608a         	str	r2, [r1, #0x8]
10005290: 60c8         	str	r0, [r1, #0xc]
10005292: b002         	add	sp, #0x8
10005294: bd80         	pop	{r7, pc}

10005296 <core::ops::function::FnMut::call_mut::h049b08565db379fb>:
10005296: b580         	push	{r7, lr}
10005298: af00         	add	r7, sp, #0x0
1000529a: b084         	sub	sp, #0x10
1000529c: 9101         	str	r1, [sp, #0x4]
1000529e: 9202         	str	r2, [sp, #0x8]
100052a0: 9003         	str	r0, [sp, #0xc]
100052a2: 9801         	ldr	r0, [sp, #0x4]
100052a4: 9902         	ldr	r1, [sp, #0x8]
100052a6: f000 fd79    	bl	0x10005d9c <defmt_rtt::do_write::h58ea7ec8d85eff39> @ imm = #0xaf2
100052aa: b004         	add	sp, #0x10
100052ac: bd80         	pop	{r7, pc}

100052ae <core::sync::atomic::AtomicBool::load::h99717df63a382aa3>:
100052ae: b580         	push	{r7, lr}
100052b0: af00         	add	r7, sp, #0x0
100052b2: b084         	sub	sp, #0x10
100052b4: 9001         	str	r0, [sp, #0x4]
100052b6: aa02         	add	r2, sp, #0x8
100052b8: 7011         	strb	r1, [r2]
100052ba: 9003         	str	r0, [sp, #0xc]
100052bc: f000 f87e    	bl	0x100053bc <core::sync::atomic::atomic_load::ha9588deffe42a667> @ imm = #0xfc
100052c0: b2c0         	uxtb	r0, r0
100052c2: 1e41         	subs	r1, r0, #0x1
100052c4: 4188         	sbcs	r0, r1
100052c6: b004         	add	sp, #0x10
100052c8: bd80         	pop	{r7, pc}

100052ca <core::sync::atomic::AtomicBool::store::hb7ef6fd955d99cf8>:
100052ca: b580         	push	{r7, lr}
100052cc: af00         	add	r7, sp, #0x0
100052ce: b084         	sub	sp, #0x10
100052d0: 9000         	str	r0, [sp]
100052d2: ab01         	add	r3, sp, #0x4
100052d4: 7019         	strb	r1, [r3]
100052d6: ab02         	add	r3, sp, #0x8
100052d8: 701a         	strb	r2, [r3]
100052da: 9003         	str	r0, [sp, #0xc]
100052dc: f000 f8c6    	bl	0x1000546c <core::sync::atomic::atomic_store::h61898c4ec84bc965> @ imm = #0x18c
100052e0: b004         	add	sp, #0x10
100052e2: bd80         	pop	{r7, pc}

100052e4 <core::sync::atomic::AtomicUsize::load::h9f3dd6aabe9c35a6>:
100052e4: b580         	push	{r7, lr}
100052e6: af00         	add	r7, sp, #0x0
100052e8: b084         	sub	sp, #0x10
100052ea: 9001         	str	r0, [sp, #0x4]
100052ec: aa02         	add	r2, sp, #0x8
100052ee: 7011         	strb	r1, [r2]
100052f0: 9003         	str	r0, [sp, #0xc]
100052f2: f000 f80f    	bl	0x10005314 <core::sync::atomic::atomic_load::h0be89737b0733c39> @ imm = #0x1e
100052f6: b004         	add	sp, #0x10
100052f8: bd80         	pop	{r7, pc}

100052fa <core::sync::atomic::AtomicUsize::store::h1f3848c0870d12ee>:
100052fa: b580         	push	{r7, lr}
100052fc: af00         	add	r7, sp, #0x0
100052fe: b084         	sub	sp, #0x10
10005300: 9000         	str	r0, [sp]
10005302: 9101         	str	r1, [sp, #0x4]
10005304: ab02         	add	r3, sp, #0x8
10005306: 701a         	strb	r2, [r3]
10005308: 9003         	str	r0, [sp, #0xc]
1000530a: f000 f909    	bl	0x10005520 <core::sync::atomic::atomic_store::he7ecbe1758fb12ea> @ imm = #0x212
1000530e: b004         	add	sp, #0x10
10005310: bd80         	pop	{r7, pc}
10005312: d4d4         	bmi	0x100052be <core::sync::atomic::AtomicBool::load::h99717df63a382aa3+0x10> @ imm = #-0x58

10005314 <core::sync::atomic::atomic_load::h0be89737b0733c39>:
10005314: b580         	push	{r7, lr}
10005316: af00         	add	r7, sp, #0x0
10005318: b094         	sub	sp, #0x50
1000531a: 460a         	mov	r2, r1
1000531c: 4601         	mov	r1, r0
1000531e: 9101         	str	r1, [sp, #0x4]
10005320: a803         	add	r0, sp, #0xc
10005322: 7002         	strb	r2, [r0]
10005324: 9111         	str	r1, [sp, #0x44]
10005326: 4921         	ldr	r1, [pc, #0x84]         @ 0x100053ac <core::sync::atomic::atomic_load::h0be89737b0733c39+0x98>
10005328: 9112         	str	r1, [sp, #0x48]
1000532a: 4921         	ldr	r1, [pc, #0x84]         @ 0x100053b0 <core::sync::atomic::atomic_load::h0be89737b0733c39+0x9c>
1000532c: 9113         	str	r1, [sp, #0x4c]
1000532e: 7800         	ldrb	r0, [r0]
10005330: 9002         	str	r0, [sp, #0x8]
10005332: 9802         	ldr	r0, [sp, #0x8]
10005334: 0081         	lsls	r1, r0, #0x2
10005336: a001         	adr	r0, #4 <core::sync::atomic::atomic_load::h0be89737b0733c39+0x27>
10005338: 5840         	ldr	r0, [r0, r1]
1000533a: 4687         	mov	pc, r0
1000533c: 53 53 00 10  	.word	0x10005353
10005340: 5b 53 00 10  	.word	0x1000535b
10005344: 75 53 00 10  	.word	0x10005375
10005348: 81 53 00 10  	.word	0x10005381
1000534c: 9b 53 00 10  	.word	0x1000539b
10005350: defe         	trap
10005352: 9801         	ldr	r0, [sp, #0x4]
10005354: 6800         	ldr	r0, [r0]
10005356: 9004         	str	r0, [sp, #0x10]
10005358: e025         	b	0x100053a6 <core::sync::atomic::atomic_load::h0be89737b0733c39+0x92> @ imm = #0x4a
1000535a: 4815         	ldr	r0, [pc, #0x54]         @ 0x100053b0 <core::sync::atomic::atomic_load::h0be89737b0733c39+0x9c>
1000535c: 9005         	str	r0, [sp, #0x14]
1000535e: 2001         	movs	r0, #0x1
10005360: 9006         	str	r0, [sp, #0x18]
10005362: 2000         	movs	r0, #0x0
10005364: 9009         	str	r0, [sp, #0x24]
10005366: 2104         	movs	r1, #0x4
10005368: 9107         	str	r1, [sp, #0x1c]
1000536a: 9008         	str	r0, [sp, #0x20]
1000536c: 4912         	ldr	r1, [pc, #0x48]         @ 0x100053b8 <core::sync::atomic::atomic_load::h0be89737b0733c39+0xa4>
1000536e: a805         	add	r0, sp, #0x14
10005370: f007 f804    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #0x7008
10005374: 9801         	ldr	r0, [sp, #0x4]
10005376: 6800         	ldr	r0, [r0]
10005378: f3bf 8f5f    	dmb	sy
1000537c: 9004         	str	r0, [sp, #0x10]
1000537e: e012         	b	0x100053a6 <core::sync::atomic::atomic_load::h0be89737b0733c39+0x92> @ imm = #0x24
10005380: 480a         	ldr	r0, [pc, #0x28]         @ 0x100053ac <core::sync::atomic::atomic_load::h0be89737b0733c39+0x98>
10005382: 900b         	str	r0, [sp, #0x2c]
10005384: 2001         	movs	r0, #0x1
10005386: 900c         	str	r0, [sp, #0x30]
10005388: 2000         	movs	r0, #0x0
1000538a: 900f         	str	r0, [sp, #0x3c]
1000538c: 2104         	movs	r1, #0x4
1000538e: 910d         	str	r1, [sp, #0x34]
10005390: 900e         	str	r0, [sp, #0x38]
10005392: 4908         	ldr	r1, [pc, #0x20]         @ 0x100053b4 <core::sync::atomic::atomic_load::h0be89737b0733c39+0xa0>
10005394: a80b         	add	r0, sp, #0x2c
10005396: f006 fff1    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #0x6fe2
1000539a: 9801         	ldr	r0, [sp, #0x4]
1000539c: 6800         	ldr	r0, [r0]
1000539e: f3bf 8f5f    	dmb	sy
100053a2: 9004         	str	r0, [sp, #0x10]
100053a4: e7ff         	b	0x100053a6 <core::sync::atomic::atomic_load::h0be89737b0733c39+0x92> @ imm = #-0x2
100053a6: 9804         	ldr	r0, [sp, #0x10]
100053a8: b014         	add	sp, #0x50
100053aa: bd80         	pop	{r7, pc}
100053ac: 84 11 01 10  	.word	0x10011184
100053b0: b4 11 01 10  	.word	0x100111b4
100053b4: 40 12 01 10  	.word	0x10011240
100053b8: 30 12 01 10  	.word	0x10011230

100053bc <core::sync::atomic::atomic_load::ha9588deffe42a667>:
100053bc: b580         	push	{r7, lr}
100053be: af00         	add	r7, sp, #0x0
100053c0: b094         	sub	sp, #0x50
100053c2: 460a         	mov	r2, r1
100053c4: 4601         	mov	r1, r0
100053c6: 9101         	str	r1, [sp, #0x4]
100053c8: a803         	add	r0, sp, #0xc
100053ca: 7002         	strb	r2, [r0]
100053cc: 9111         	str	r1, [sp, #0x44]
100053ce: 4923         	ldr	r1, [pc, #0x8c]         @ 0x1000545c <core::sync::atomic::atomic_load::ha9588deffe42a667+0xa0>
100053d0: 9112         	str	r1, [sp, #0x48]
100053d2: 4923         	ldr	r1, [pc, #0x8c]         @ 0x10005460 <core::sync::atomic::atomic_load::ha9588deffe42a667+0xa4>
100053d4: 9113         	str	r1, [sp, #0x4c]
100053d6: 7800         	ldrb	r0, [r0]
100053d8: 9002         	str	r0, [sp, #0x8]
100053da: 9802         	ldr	r0, [sp, #0x8]
100053dc: 0081         	lsls	r1, r0, #0x2
100053de: a001         	adr	r0, #4 <core::sync::atomic::atomic_load::ha9588deffe42a667+0x27>
100053e0: 5840         	ldr	r0, [r0, r1]
100053e2: 4687         	mov	pc, r0
100053e4: fb 53 00 10  	.word	0x100053fb
100053e8: 05 54 00 10  	.word	0x10005405
100053ec: 1f 54 00 10  	.word	0x1000541f
100053f0: 2d 54 00 10  	.word	0x1000542d
100053f4: 47 54 00 10  	.word	0x10005447
100053f8: defe         	trap
100053fa: 9801         	ldr	r0, [sp, #0x4]
100053fc: 7800         	ldrb	r0, [r0]
100053fe: a904         	add	r1, sp, #0x10
10005400: 7008         	strb	r0, [r1]
10005402: e027         	b	0x10005454 <core::sync::atomic::atomic_load::ha9588deffe42a667+0x98> @ imm = #0x4e
10005404: 4816         	ldr	r0, [pc, #0x58]         @ 0x10005460 <core::sync::atomic::atomic_load::ha9588deffe42a667+0xa4>
10005406: 9005         	str	r0, [sp, #0x14]
10005408: 2001         	movs	r0, #0x1
1000540a: 9006         	str	r0, [sp, #0x18]
1000540c: 2000         	movs	r0, #0x0
1000540e: 9009         	str	r0, [sp, #0x24]
10005410: 2104         	movs	r1, #0x4
10005412: 9107         	str	r1, [sp, #0x1c]
10005414: 9008         	str	r0, [sp, #0x20]
10005416: 4914         	ldr	r1, [pc, #0x50]         @ 0x10005468 <core::sync::atomic::atomic_load::ha9588deffe42a667+0xac>
10005418: a805         	add	r0, sp, #0x14
1000541a: f006 ffaf    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #0x6f5e
1000541e: 9801         	ldr	r0, [sp, #0x4]
10005420: 7800         	ldrb	r0, [r0]
10005422: f3bf 8f5f    	dmb	sy
10005426: a904         	add	r1, sp, #0x10
10005428: 7008         	strb	r0, [r1]
1000542a: e013         	b	0x10005454 <core::sync::atomic::atomic_load::ha9588deffe42a667+0x98> @ imm = #0x26
1000542c: 480b         	ldr	r0, [pc, #0x2c]         @ 0x1000545c <core::sync::atomic::atomic_load::ha9588deffe42a667+0xa0>
1000542e: 900b         	str	r0, [sp, #0x2c]
10005430: 2001         	movs	r0, #0x1
10005432: 900c         	str	r0, [sp, #0x30]
10005434: 2000         	movs	r0, #0x0
10005436: 900f         	str	r0, [sp, #0x3c]
10005438: 2104         	movs	r1, #0x4
1000543a: 910d         	str	r1, [sp, #0x34]
1000543c: 900e         	str	r0, [sp, #0x38]
1000543e: 4909         	ldr	r1, [pc, #0x24]         @ 0x10005464 <core::sync::atomic::atomic_load::ha9588deffe42a667+0xa8>
10005440: a80b         	add	r0, sp, #0x2c
10005442: f006 ff9b    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #0x6f36
10005446: 9801         	ldr	r0, [sp, #0x4]
10005448: 7800         	ldrb	r0, [r0]
1000544a: f3bf 8f5f    	dmb	sy
1000544e: a904         	add	r1, sp, #0x10
10005450: 7008         	strb	r0, [r1]
10005452: e7ff         	b	0x10005454 <core::sync::atomic::atomic_load::ha9588deffe42a667+0x98> @ imm = #-0x2
10005454: 9804         	ldr	r0, [sp, #0x10]
10005456: b014         	add	sp, #0x50
10005458: bd80         	pop	{r7, pc}
1000545a: 46c0         	mov	r8, r8
1000545c: 84 11 01 10  	.word	0x10011184
10005460: b4 11 01 10  	.word	0x100111b4
10005464: 40 12 01 10  	.word	0x10011240
10005468: 30 12 01 10  	.word	0x10011230

1000546c <core::sync::atomic::atomic_store::h61898c4ec84bc965>:
1000546c: b580         	push	{r7, lr}
1000546e: af00         	add	r7, sp, #0x0
10005470: b094         	sub	sp, #0x50
10005472: 4613         	mov	r3, r2
10005474: 4602         	mov	r2, r0
10005476: 9200         	str	r2, [sp]
10005478: 4608         	mov	r0, r1
1000547a: 9001         	str	r0, [sp, #0x4]
1000547c: a803         	add	r0, sp, #0xc
1000547e: 7003         	strb	r3, [r0]
10005480: 9210         	str	r2, [sp, #0x40]
10005482: aa11         	add	r2, sp, #0x44
10005484: 7011         	strb	r1, [r2]
10005486: 4922         	ldr	r1, [pc, #0x88]         @ 0x10005510 <core::sync::atomic::atomic_store::h61898c4ec84bc965+0xa4>
10005488: 9112         	str	r1, [sp, #0x48]
1000548a: 4922         	ldr	r1, [pc, #0x88]         @ 0x10005514 <core::sync::atomic::atomic_store::h61898c4ec84bc965+0xa8>
1000548c: 9113         	str	r1, [sp, #0x4c]
1000548e: 7800         	ldrb	r0, [r0]
10005490: 9002         	str	r0, [sp, #0x8]
10005492: 9802         	ldr	r0, [sp, #0x8]
10005494: 0081         	lsls	r1, r0, #0x2
10005496: a001         	adr	r0, #4 <core::sync::atomic::atomic_store::h61898c4ec84bc965+0x2f>
10005498: 5840         	ldr	r0, [r0, r1]
1000549a: 4687         	mov	pc, r0
1000549c: b3 54 00 10  	.word	0x100054b3
100054a0: bb 54 00 10  	.word	0x100054bb
100054a4: c7 54 00 10  	.word	0x100054c7
100054a8: e1 54 00 10  	.word	0x100054e1
100054ac: fb 54 00 10  	.word	0x100054fb
100054b0: defe         	trap
100054b2: 9801         	ldr	r0, [sp, #0x4]
100054b4: 9900         	ldr	r1, [sp]
100054b6: 7008         	strb	r0, [r1]
100054b8: e027         	b	0x1000550a <core::sync::atomic::atomic_store::h61898c4ec84bc965+0x9e> @ imm = #0x4e
100054ba: 9801         	ldr	r0, [sp, #0x4]
100054bc: 9900         	ldr	r1, [sp]
100054be: f3bf 8f5f    	dmb	sy
100054c2: 7008         	strb	r0, [r1]
100054c4: e021         	b	0x1000550a <core::sync::atomic::atomic_store::h61898c4ec84bc965+0x9e> @ imm = #0x42
100054c6: 4813         	ldr	r0, [pc, #0x4c]         @ 0x10005514 <core::sync::atomic::atomic_store::h61898c4ec84bc965+0xa8>
100054c8: 9004         	str	r0, [sp, #0x10]
100054ca: 2001         	movs	r0, #0x1
100054cc: 9005         	str	r0, [sp, #0x14]
100054ce: 2000         	movs	r0, #0x0
100054d0: 9008         	str	r0, [sp, #0x20]
100054d2: 2104         	movs	r1, #0x4
100054d4: 9106         	str	r1, [sp, #0x18]
100054d6: 9007         	str	r0, [sp, #0x1c]
100054d8: 4910         	ldr	r1, [pc, #0x40]         @ 0x1000551c <core::sync::atomic::atomic_store::h61898c4ec84bc965+0xb0>
100054da: a804         	add	r0, sp, #0x10
100054dc: f006 ff4e    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #0x6e9c
100054e0: 480b         	ldr	r0, [pc, #0x2c]         @ 0x10005510 <core::sync::atomic::atomic_store::h61898c4ec84bc965+0xa4>
100054e2: 900a         	str	r0, [sp, #0x28]
100054e4: 2001         	movs	r0, #0x1
100054e6: 900b         	str	r0, [sp, #0x2c]
100054e8: 2000         	movs	r0, #0x0
100054ea: 900e         	str	r0, [sp, #0x38]
100054ec: 2104         	movs	r1, #0x4
100054ee: 910c         	str	r1, [sp, #0x30]
100054f0: 900d         	str	r0, [sp, #0x34]
100054f2: 4909         	ldr	r1, [pc, #0x24]         @ 0x10005518 <core::sync::atomic::atomic_store::h61898c4ec84bc965+0xac>
100054f4: a80a         	add	r0, sp, #0x28
100054f6: f006 ff41    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #0x6e82
100054fa: 9801         	ldr	r0, [sp, #0x4]
100054fc: 9900         	ldr	r1, [sp]
100054fe: f3bf 8f5f    	dmb	sy
10005502: 7008         	strb	r0, [r1]
10005504: f3bf 8f5f    	dmb	sy
10005508: e7ff         	b	0x1000550a <core::sync::atomic::atomic_store::h61898c4ec84bc965+0x9e> @ imm = #-0x2
1000550a: b014         	add	sp, #0x50
1000550c: bd80         	pop	{r7, pc}
1000550e: 46c0         	mov	r8, r8
10005510: 84 12 01 10  	.word	0x10011284
10005514: b8 12 01 10  	.word	0x100112b8
10005518: d0 12 01 10  	.word	0x100112d0
1000551c: c0 12 01 10  	.word	0x100112c0

10005520 <core::sync::atomic::atomic_store::he7ecbe1758fb12ea>:
10005520: b580         	push	{r7, lr}
10005522: af00         	add	r7, sp, #0x0
10005524: b094         	sub	sp, #0x50
10005526: 4613         	mov	r3, r2
10005528: 9100         	str	r1, [sp]
1000552a: 4602         	mov	r2, r0
1000552c: 9201         	str	r2, [sp, #0x4]
1000552e: a803         	add	r0, sp, #0xc
10005530: 7003         	strb	r3, [r0]
10005532: 9210         	str	r2, [sp, #0x40]
10005534: 9111         	str	r1, [sp, #0x44]
10005536: 4922         	ldr	r1, [pc, #0x88]         @ 0x100055c0 <core::sync::atomic::atomic_store::he7ecbe1758fb12ea+0xa0>
10005538: 9112         	str	r1, [sp, #0x48]
1000553a: 4922         	ldr	r1, [pc, #0x88]         @ 0x100055c4 <core::sync::atomic::atomic_store::he7ecbe1758fb12ea+0xa4>
1000553c: 9113         	str	r1, [sp, #0x4c]
1000553e: 7800         	ldrb	r0, [r0]
10005540: 9002         	str	r0, [sp, #0x8]
10005542: 9802         	ldr	r0, [sp, #0x8]
10005544: 0081         	lsls	r1, r0, #0x2
10005546: a001         	adr	r0, #4 <core::sync::atomic::atomic_store::he7ecbe1758fb12ea+0x2b>
10005548: 5840         	ldr	r0, [r0, r1]
1000554a: 4687         	mov	pc, r0
1000554c: 63 55 00 10  	.word	0x10005563
10005550: 6b 55 00 10  	.word	0x1000556b
10005554: 77 55 00 10  	.word	0x10005577
10005558: 91 55 00 10  	.word	0x10005591
1000555c: ab 55 00 10  	.word	0x100055ab
10005560: defe         	trap
10005562: 9800         	ldr	r0, [sp]
10005564: 9901         	ldr	r1, [sp, #0x4]
10005566: 6008         	str	r0, [r1]
10005568: e027         	b	0x100055ba <core::sync::atomic::atomic_store::he7ecbe1758fb12ea+0x9a> @ imm = #0x4e
1000556a: 9800         	ldr	r0, [sp]
1000556c: 9901         	ldr	r1, [sp, #0x4]
1000556e: f3bf 8f5f    	dmb	sy
10005572: 6008         	str	r0, [r1]
10005574: e021         	b	0x100055ba <core::sync::atomic::atomic_store::he7ecbe1758fb12ea+0x9a> @ imm = #0x42
10005576: 4813         	ldr	r0, [pc, #0x4c]         @ 0x100055c4 <core::sync::atomic::atomic_store::he7ecbe1758fb12ea+0xa4>
10005578: 9004         	str	r0, [sp, #0x10]
1000557a: 2001         	movs	r0, #0x1
1000557c: 9005         	str	r0, [sp, #0x14]
1000557e: 2000         	movs	r0, #0x0
10005580: 9008         	str	r0, [sp, #0x20]
10005582: 2104         	movs	r1, #0x4
10005584: 9106         	str	r1, [sp, #0x18]
10005586: 9007         	str	r0, [sp, #0x1c]
10005588: 4910         	ldr	r1, [pc, #0x40]         @ 0x100055cc <core::sync::atomic::atomic_store::he7ecbe1758fb12ea+0xac>
1000558a: a804         	add	r0, sp, #0x10
1000558c: f006 fef6    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #0x6dec
10005590: 480b         	ldr	r0, [pc, #0x2c]         @ 0x100055c0 <core::sync::atomic::atomic_store::he7ecbe1758fb12ea+0xa0>
10005592: 900a         	str	r0, [sp, #0x28]
10005594: 2001         	movs	r0, #0x1
10005596: 900b         	str	r0, [sp, #0x2c]
10005598: 2000         	movs	r0, #0x0
1000559a: 900e         	str	r0, [sp, #0x38]
1000559c: 2104         	movs	r1, #0x4
1000559e: 910c         	str	r1, [sp, #0x30]
100055a0: 900d         	str	r0, [sp, #0x34]
100055a2: 4909         	ldr	r1, [pc, #0x24]         @ 0x100055c8 <core::sync::atomic::atomic_store::he7ecbe1758fb12ea+0xa8>
100055a4: a80a         	add	r0, sp, #0x28
100055a6: f006 fee9    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #0x6dd2
100055aa: 9800         	ldr	r0, [sp]
100055ac: 9901         	ldr	r1, [sp, #0x4]
100055ae: f3bf 8f5f    	dmb	sy
100055b2: 6008         	str	r0, [r1]
100055b4: f3bf 8f5f    	dmb	sy
100055b8: e7ff         	b	0x100055ba <core::sync::atomic::atomic_store::he7ecbe1758fb12ea+0x9a> @ imm = #-0x2
100055ba: b014         	add	sp, #0x50
100055bc: bd80         	pop	{r7, pc}
100055be: 46c0         	mov	r8, r8
100055c0: 84 12 01 10  	.word	0x10011284
100055c4: b8 12 01 10  	.word	0x100112b8
100055c8: d0 12 01 10  	.word	0x100112d0
100055cc: c0 12 01 10  	.word	0x100112c0

100055d0 <core::slice::<impl [T]>::is_empty::h9861257ba149bd7e>:
100055d0: b580         	push	{r7, lr}
100055d2: af00         	add	r7, sp, #0x0
100055d4: b083         	sub	sp, #0xc
100055d6: 9100         	str	r1, [sp]
100055d8: 4601         	mov	r1, r0
100055da: 9800         	ldr	r0, [sp]
100055dc: 9101         	str	r1, [sp, #0x4]
100055de: 9002         	str	r0, [sp, #0x8]
100055e0: 4241         	rsbs	r1, r0, #0
100055e2: 4148         	adcs	r0, r1
100055e4: b003         	add	sp, #0xc
100055e6: bd80         	pop	{r7, pc}

100055e8 <core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter::h1c38fd4eafd0f8ba>:
100055e8: b580         	push	{r7, lr}
100055ea: af00         	add	r7, sp, #0x0
100055ec: b08a         	sub	sp, #0x28
100055ee: 9100         	str	r1, [sp]
100055f0: 9001         	str	r0, [sp, #0x4]
100055f2: 9003         	str	r0, [sp, #0xc]
100055f4: 9104         	str	r1, [sp, #0x10]
100055f6: 9105         	str	r1, [sp, #0x14]
100055f8: 9006         	str	r0, [sp, #0x18]
100055fa: 9107         	str	r1, [sp, #0x1c]
100055fc: 9008         	str	r0, [sp, #0x20]
100055fe: e7ff         	b	0x10005600 <core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter::h1c38fd4eafd0f8ba+0x18> @ imm = #-0x2
10005600: 9801         	ldr	r0, [sp, #0x4]
10005602: 9900         	ldr	r1, [sp]
10005604: 9009         	str	r0, [sp, #0x24]
10005606: 1840         	adds	r0, r0, r1
10005608: 9002         	str	r0, [sp, #0x8]
1000560a: e7ff         	b	0x1000560c <core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter::h1c38fd4eafd0f8ba+0x24> @ imm = #-0x2
1000560c: 9801         	ldr	r0, [sp, #0x4]
1000560e: 9902         	ldr	r1, [sp, #0x8]
10005610: b00a         	add	sp, #0x28
10005612: bd80         	pop	{r7, pc}

10005614 <core::ub_checks::maybe_is_nonoverlapping::runtime::h0a8803d5301eec65>:
10005614: b5d0         	push	{r4, r6, r7, lr}
10005616: af02         	add	r7, sp, #0x8
10005618: b094         	sub	sp, #0x50
1000561a: 9303         	str	r3, [sp, #0xc]
1000561c: 4613         	mov	r3, r2
1000561e: 9a03         	ldr	r2, [sp, #0xc]
10005620: 9304         	str	r3, [sp, #0x10]
10005622: 4603         	mov	r3, r0
10005624: 9804         	ldr	r0, [sp, #0x10]
10005626: 930b         	str	r3, [sp, #0x2c]
10005628: 910c         	str	r1, [sp, #0x30]
1000562a: 900d         	str	r0, [sp, #0x34]
1000562c: 920e         	str	r2, [sp, #0x38]
1000562e: 461c         	mov	r4, r3
10005630: 9405         	str	r4, [sp, #0x14]
10005632: 930f         	str	r3, [sp, #0x3c]
10005634: 460b         	mov	r3, r1
10005636: 9306         	str	r3, [sp, #0x18]
10005638: 9110         	str	r1, [sp, #0x40]
1000563a: 2300         	movs	r3, #0x0
1000563c: 4619         	mov	r1, r3
1000563e: f008 f984    	bl	0x1000d94a <__aeabi_lmul> @ imm = #0x8308
10005642: 1e4a         	subs	r2, r1, #0x1
10005644: 4191         	sbcs	r1, r2
10005646: 4602         	mov	r2, r0
10005648: 9207         	str	r2, [sp, #0x1c]
1000564a: aa11         	add	r2, sp, #0x44
1000564c: 7011         	strb	r1, [r2]
1000564e: 9012         	str	r0, [sp, #0x48]
10005650: 2900         	cmp	r1, #0x0
10005652: d10c         	bne	0x1000566e <core::ub_checks::maybe_is_nonoverlapping::runtime::h0a8803d5301eec65+0x5a> @ imm = #0x18
10005654: e7ff         	b	0x10005656 <core::ub_checks::maybe_is_nonoverlapping::runtime::h0a8803d5301eec65+0x42> @ imm = #-0x2
10005656: 9805         	ldr	r0, [sp, #0x14]
10005658: 9906         	ldr	r1, [sp, #0x18]
1000565a: 9a07         	ldr	r2, [sp, #0x1c]
1000565c: 9209         	str	r2, [sp, #0x24]
1000565e: 2201         	movs	r2, #0x1
10005660: 9208         	str	r2, [sp, #0x20]
10005662: 9a09         	ldr	r2, [sp, #0x24]
10005664: 9202         	str	r2, [sp, #0x8]
10005666: 9213         	str	r2, [sp, #0x4c]
10005668: 4288         	cmp	r0, r1
1000566a: d309         	blo	0x10005680 <core::ub_checks::maybe_is_nonoverlapping::runtime::h0a8803d5301eec65+0x6c> @ imm = #0x12
1000566c: e003         	b	0x10005676 <core::ub_checks::maybe_is_nonoverlapping::runtime::h0a8803d5301eec65+0x62> @ imm = #0x6
1000566e: 480d         	ldr	r0, [pc, #0x34]         @ 0x100056a4 <core::ub_checks::maybe_is_nonoverlapping::runtime::h0a8803d5301eec65+0x90>
10005670: 213d         	movs	r1, #0x3d
10005672: f006 feb5    	bl	0x1000c3e0 <core::panicking::panic_nounwind::h6901392fec1083b6> @ imm = #0x6d6a
10005676: 9805         	ldr	r0, [sp, #0x14]
10005678: 9906         	ldr	r1, [sp, #0x18]
1000567a: 1a40         	subs	r0, r0, r1
1000567c: 900a         	str	r0, [sp, #0x28]
1000567e: e004         	b	0x1000568a <core::ub_checks::maybe_is_nonoverlapping::runtime::h0a8803d5301eec65+0x76> @ imm = #0x8
10005680: 9806         	ldr	r0, [sp, #0x18]
10005682: 9905         	ldr	r1, [sp, #0x14]
10005684: 1a40         	subs	r0, r0, r1
10005686: 900a         	str	r0, [sp, #0x28]
10005688: e7ff         	b	0x1000568a <core::ub_checks::maybe_is_nonoverlapping::runtime::h0a8803d5301eec65+0x76> @ imm = #-0x2
1000568a: 9a02         	ldr	r2, [sp, #0x8]
1000568c: 990a         	ldr	r1, [sp, #0x28]
1000568e: 2000         	movs	r0, #0x0
10005690: 9000         	str	r0, [sp]
10005692: 2001         	movs	r0, #0x1
10005694: 4291         	cmp	r1, r2
10005696: 9001         	str	r0, [sp, #0x4]
10005698: d201         	bhs	0x1000569e <core::ub_checks::maybe_is_nonoverlapping::runtime::h0a8803d5301eec65+0x8a> @ imm = #0x2
1000569a: 9800         	ldr	r0, [sp]
1000569c: 9001         	str	r0, [sp, #0x4]
1000569e: 9801         	ldr	r0, [sp, #0x4]
100056a0: b014         	add	sp, #0x50
100056a2: bdd0         	pop	{r4, r6, r7, pc}
100056a4: e0 12 01 10  	.word	0x100112e0

100056a8 <defmt::encoding::inner::Encoder::start_frame::h503219efb577cc8a>:
100056a8: b580         	push	{r7, lr}
100056aa: af00         	add	r7, sp, #0x0
100056ac: b084         	sub	sp, #0x10
100056ae: 9000         	str	r0, [sp]
100056b0: 9002         	str	r0, [sp, #0x8]
100056b2: 7800         	ldrb	r0, [r0]
100056b4: 07c0         	lsls	r0, r0, #0x1f
100056b6: 2800         	cmp	r0, #0x0
100056b8: d108         	bne	0x100056cc <defmt::encoding::inner::Encoder::start_frame::h503219efb577cc8a+0x24> @ imm = #0x10
100056ba: e7ff         	b	0x100056bc <defmt::encoding::inner::Encoder::start_frame::h503219efb577cc8a+0x14> @ imm = #-0x2
100056bc: 9900         	ldr	r1, [sp]
100056be: 2001         	movs	r0, #0x1
100056c0: 7008         	strb	r0, [r1]
100056c2: a801         	add	r0, sp, #0x4
100056c4: 2100         	movs	r1, #0x0
100056c6: f000 f803    	bl	0x100056d0 <defmt::encoding::inner::Encoder::start_frame::{{closure}}::h996e5bd9f67861ef> @ imm = #0x6
100056ca: e7ff         	b	0x100056cc <defmt::encoding::inner::Encoder::start_frame::h503219efb577cc8a+0x24> @ imm = #-0x2
100056cc: b004         	add	sp, #0x10
100056ce: bd80         	pop	{r7, pc}

100056d0 <defmt::encoding::inner::Encoder::start_frame::{{closure}}::h996e5bd9f67861ef>:
100056d0: b580         	push	{r7, lr}
100056d2: af00         	add	r7, sp, #0x0
100056d4: b084         	sub	sp, #0x10
100056d6: 460a         	mov	r2, r1
100056d8: 9002         	str	r0, [sp, #0x8]
100056da: a903         	add	r1, sp, #0xc
100056dc: 700a         	strb	r2, [r1]
100056de: a901         	add	r1, sp, #0x4
100056e0: 700a         	strb	r2, [r1]
100056e2: 2201         	movs	r2, #0x1
100056e4: f7ff fdd7    	bl	0x10005296 <core::ops::function::FnMut::call_mut::h049b08565db379fb> @ imm = #-0x452
100056e8: b004         	add	sp, #0x10
100056ea: bd80         	pop	{r7, pc}

100056ec <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18>:
100056ec: b580         	push	{r7, lr}
100056ee: af00         	add	r7, sp, #0x0
100056f0: b092         	sub	sp, #0x48
100056f2: 9206         	str	r2, [sp, #0x18]
100056f4: 460a         	mov	r2, r1
100056f6: 9906         	ldr	r1, [sp, #0x18]
100056f8: 9207         	str	r2, [sp, #0x1c]
100056fa: 4602         	mov	r2, r0
100056fc: 9807         	ldr	r0, [sp, #0x1c]
100056fe: 9208         	str	r2, [sp, #0x20]
10005700: 920d         	str	r2, [sp, #0x34]
10005702: 900e         	str	r0, [sp, #0x38]
10005704: 910f         	str	r1, [sp, #0x3c]
10005706: f7ff ff6f    	bl	0x100055e8 <core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter::h1c38fd4eafd0f8ba> @ imm = #-0x122
1000570a: 900a         	str	r0, [sp, #0x28]
1000570c: 910b         	str	r1, [sp, #0x2c]
1000570e: e7ff         	b	0x10005710 <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18+0x24> @ imm = #-0x2
10005710: a80a         	add	r0, sp, #0x28
10005712: f000 f915    	bl	0x10005940 <<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next::haa2683fc09c58428> @ imm = #0x22a
10005716: 900c         	str	r0, [sp, #0x30]
10005718: 980c         	ldr	r0, [sp, #0x30]
1000571a: 2800         	cmp	r0, #0x0
1000571c: d102         	bne	0x10005724 <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18+0x38> @ imm = #0x4
1000571e: e7ff         	b	0x10005720 <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18+0x34> @ imm = #-0x2
10005720: b012         	add	sp, #0x48
10005722: bd80         	pop	{r7, pc}
10005724: 9808         	ldr	r0, [sp, #0x20]
10005726: 990c         	ldr	r1, [sp, #0x30]
10005728: 7809         	ldrb	r1, [r1]
1000572a: 9105         	str	r1, [sp, #0x14]
1000572c: aa11         	add	r2, sp, #0x44
1000572e: 7011         	strb	r1, [r2]
10005730: 7840         	ldrb	r0, [r0, #0x1]
10005732: 2807         	cmp	r0, #0x7
10005734: d305         	blo	0x10005742 <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18+0x56> @ imm = #0xa
10005736: e7ff         	b	0x10005738 <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18+0x4c> @ imm = #-0x2
10005738: 9805         	ldr	r0, [sp, #0x14]
1000573a: 0600         	lsls	r0, r0, #0x18
1000573c: 2800         	cmp	r0, #0x0
1000573e: d005         	beq	0x1000574c <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18+0x60> @ imm = #0xa
10005740: e00b         	b	0x1000575a <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18+0x6e> @ imm = #0x16
10005742: 9805         	ldr	r0, [sp, #0x14]
10005744: 0600         	lsls	r0, r0, #0x18
10005746: 2800         	cmp	r0, #0x0
10005748: d035         	beq	0x100057b6 <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18+0xca> @ imm = #0x6a
1000574a: e03a         	b	0x100057c2 <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18+0xd6> @ imm = #0x74
1000574c: 9808         	ldr	r0, [sp, #0x20]
1000574e: 7840         	ldrb	r0, [r0, #0x1]
10005750: 1fc1         	subs	r1, r0, #0x7
10005752: 9104         	str	r1, [sp, #0x10]
10005754: 2807         	cmp	r0, #0x7
10005756: d318         	blo	0x1000578a <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18+0x9e> @ imm = #0x30
10005758: e00b         	b	0x10005772 <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18+0x86> @ imm = #0x16
1000575a: 9905         	ldr	r1, [sp, #0x14]
1000575c: a809         	add	r0, sp, #0x24
1000575e: f000 f86b    	bl	0x10005838 <defmt::encoding::inner::Encoder::write::{{closure}}::hcdec6ab69b44646a> @ imm = #0xd6
10005762: 9808         	ldr	r0, [sp, #0x20]
10005764: 7840         	ldrb	r0, [r0, #0x1]
10005766: 1c41         	adds	r1, r0, #0x1
10005768: 9103         	str	r1, [sp, #0xc]
1000576a: b2c8         	uxtb	r0, r1
1000576c: 4288         	cmp	r0, r1
1000576e: d116         	bne	0x1000579e <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18+0xb2> @ imm = #0x2c
10005770: e00e         	b	0x10005790 <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18+0xa4> @ imm = #0x1c
10005772: 9904         	ldr	r1, [sp, #0x10]
10005774: 207f         	movs	r0, #0x7f
10005776: 43c0         	mvns	r0, r0
10005778: 4301         	orrs	r1, r0
1000577a: a809         	add	r0, sp, #0x24
1000577c: f000 f85c    	bl	0x10005838 <defmt::encoding::inner::Encoder::write::{{closure}}::hcdec6ab69b44646a> @ imm = #0xb8
10005780: 9908         	ldr	r1, [sp, #0x20]
10005782: 2000         	movs	r0, #0x0
10005784: 7048         	strb	r0, [r1, #0x1]
10005786: 7088         	strb	r0, [r1, #0x2]
10005788: e7c2         	b	0x10005710 <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18+0x24> @ imm = #-0x7c
1000578a: 4828         	ldr	r0, [pc, #0xa0]         @ 0x1000582c <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18+0x140>
1000578c: f007 fe62    	bl	0x1000d454 <core::panicking::panic_const::panic_const_sub_overflow::hcef9c8e46a564551> @ imm = #0x7cc4
10005790: 9808         	ldr	r0, [sp, #0x20]
10005792: 9903         	ldr	r1, [sp, #0xc]
10005794: 7041         	strb	r1, [r0, #0x1]
10005796: 7840         	ldrb	r0, [r0, #0x1]
10005798: 2886         	cmp	r0, #0x86
1000579a: d003         	beq	0x100057a4 <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18+0xb8> @ imm = #0x6
1000579c: e7b8         	b	0x10005710 <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18+0x24> @ imm = #-0x90
1000579e: 4822         	ldr	r0, [pc, #0x88]         @ 0x10005828 <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18+0x13c>
100057a0: f007 fe46    	bl	0x1000d430 <core::panicking::panic_const::panic_const_add_overflow::h73b6e802431fc142> @ imm = #0x7c8c
100057a4: a809         	add	r0, sp, #0x24
100057a6: 21ff         	movs	r1, #0xff
100057a8: f000 f846    	bl	0x10005838 <defmt::encoding::inner::Encoder::write::{{closure}}::hcdec6ab69b44646a> @ imm = #0x8c
100057ac: 9908         	ldr	r1, [sp, #0x20]
100057ae: 2000         	movs	r0, #0x0
100057b0: 7048         	strb	r0, [r1, #0x1]
100057b2: 7088         	strb	r0, [r1, #0x2]
100057b4: e7ac         	b	0x10005710 <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18+0x24> @ imm = #-0xa8
100057b6: 9808         	ldr	r0, [sp, #0x20]
100057b8: 7840         	ldrb	r0, [r0, #0x1]
100057ba: 9002         	str	r0, [sp, #0x8]
100057bc: 2808         	cmp	r0, #0x8
100057be: d305         	blo	0x100057cc <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18+0xe0> @ imm = #0xa
100057c0: e00e         	b	0x100057e0 <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18+0xf4> @ imm = #0x1c
100057c2: 9905         	ldr	r1, [sp, #0x14]
100057c4: a809         	add	r0, sp, #0x24
100057c6: f000 f837    	bl	0x10005838 <defmt::encoding::inner::Encoder::write::{{closure}}::hcdec6ab69b44646a> @ imm = #0x6e
100057ca: e00c         	b	0x100057e6 <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18+0xfa> @ imm = #0x18
100057cc: 9908         	ldr	r1, [sp, #0x20]
100057ce: 9802         	ldr	r0, [sp, #0x8]
100057d0: 2207         	movs	r2, #0x7
100057d2: 4010         	ands	r0, r2
100057d4: 2201         	movs	r2, #0x1
100057d6: 4082         	lsls	r2, r0
100057d8: 7888         	ldrb	r0, [r1, #0x2]
100057da: 4310         	orrs	r0, r2
100057dc: 7088         	strb	r0, [r1, #0x2]
100057de: e002         	b	0x100057e6 <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18+0xfa> @ imm = #0x4
100057e0: 4813         	ldr	r0, [pc, #0x4c]         @ 0x10005830 <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18+0x144>
100057e2: f007 fe5b    	bl	0x1000d49c <core::panicking::panic_const::panic_const_shl_overflow::h42afea46a5d11e4a> @ imm = #0x7cb6
100057e6: 9808         	ldr	r0, [sp, #0x20]
100057e8: 7840         	ldrb	r0, [r0, #0x1]
100057ea: 1c41         	adds	r1, r0, #0x1
100057ec: 9101         	str	r1, [sp, #0x4]
100057ee: b2c8         	uxtb	r0, r1
100057f0: 4288         	cmp	r0, r1
100057f2: d107         	bne	0x10005804 <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18+0x118> @ imm = #0xe
100057f4: e7ff         	b	0x100057f6 <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18+0x10a> @ imm = #-0x2
100057f6: 9808         	ldr	r0, [sp, #0x20]
100057f8: 9901         	ldr	r1, [sp, #0x4]
100057fa: 7041         	strb	r1, [r0, #0x1]
100057fc: 7840         	ldrb	r0, [r0, #0x1]
100057fe: 2807         	cmp	r0, #0x7
10005800: d003         	beq	0x1000580a <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18+0x11e> @ imm = #0x6
10005802: e785         	b	0x10005710 <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18+0x24> @ imm = #-0xf6
10005804: 480b         	ldr	r0, [pc, #0x2c]         @ 0x10005834 <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18+0x148>
10005806: f007 fe13    	bl	0x1000d430 <core::panicking::panic_const::panic_const_add_overflow::h73b6e802431fc142> @ imm = #0x7c26
1000580a: 9808         	ldr	r0, [sp, #0x20]
1000580c: 7880         	ldrb	r0, [r0, #0x2]
1000580e: 2800         	cmp	r0, #0x0
10005810: d100         	bne	0x10005814 <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18+0x128> @ imm = #0x0
10005812: e77d         	b	0x10005710 <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18+0x24> @ imm = #-0x106
10005814: 9808         	ldr	r0, [sp, #0x20]
10005816: 7881         	ldrb	r1, [r0, #0x2]
10005818: a809         	add	r0, sp, #0x24
1000581a: f000 f80d    	bl	0x10005838 <defmt::encoding::inner::Encoder::write::{{closure}}::hcdec6ab69b44646a> @ imm = #0x1a
1000581e: 9908         	ldr	r1, [sp, #0x20]
10005820: 2000         	movs	r0, #0x0
10005822: 7048         	strb	r0, [r1, #0x1]
10005824: 7088         	strb	r0, [r1, #0x2]
10005826: e773         	b	0x10005710 <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18+0x24> @ imm = #-0x11a
10005828: 90 13 01 10  	.word	0x10011390
1000582c: 80 13 01 10  	.word	0x10011380
10005830: a0 13 01 10  	.word	0x100113a0
10005834: b0 13 01 10  	.word	0x100113b0

10005838 <defmt::encoding::inner::Encoder::write::{{closure}}::hcdec6ab69b44646a>:
10005838: b580         	push	{r7, lr}
1000583a: af00         	add	r7, sp, #0x0
1000583c: b084         	sub	sp, #0x10
1000583e: 460a         	mov	r2, r1
10005840: 9002         	str	r0, [sp, #0x8]
10005842: a903         	add	r1, sp, #0xc
10005844: 700a         	strb	r2, [r1]
10005846: a901         	add	r1, sp, #0x4
10005848: 700a         	strb	r2, [r1]
1000584a: 2201         	movs	r2, #0x1
1000584c: f7ff fd23    	bl	0x10005296 <core::ops::function::FnMut::call_mut::h049b08565db379fb> @ imm = #-0x5ba
10005850: b004         	add	sp, #0x10
10005852: bd80         	pop	{r7, pc}

10005854 <defmt::encoding::inner::Encoder::end_frame::h53b5d4bd311fad43>:
10005854: b580         	push	{r7, lr}
10005856: af00         	add	r7, sp, #0x0
10005858: b088         	sub	sp, #0x20
1000585a: 9004         	str	r0, [sp, #0x10]
1000585c: 9006         	str	r0, [sp, #0x18]
1000585e: 7840         	ldrb	r0, [r0, #0x1]
10005860: 2800         	cmp	r0, #0x0
10005862: d10b         	bne	0x1000587c <defmt::encoding::inner::Encoder::end_frame::h53b5d4bd311fad43+0x28> @ imm = #0x16
10005864: e7ff         	b	0x10005866 <defmt::encoding::inner::Encoder::end_frame::h53b5d4bd311fad43+0x12> @ imm = #-0x2
10005866: a805         	add	r0, sp, #0x14
10005868: 2100         	movs	r1, #0x0
1000586a: 9103         	str	r1, [sp, #0xc]
1000586c: f000 f840    	bl	0x100058f0 <defmt::encoding::inner::Encoder::end_frame::{{closure}}::h4db6ab81eb8cb0fe> @ imm = #0x80
10005870: 9904         	ldr	r1, [sp, #0x10]
10005872: 9803         	ldr	r0, [sp, #0xc]
10005874: 7048         	strb	r0, [r1, #0x1]
10005876: 7088         	strb	r0, [r1, #0x2]
10005878: b008         	add	sp, #0x20
1000587a: bd80         	pop	{r7, pc}
1000587c: 9804         	ldr	r0, [sp, #0x10]
1000587e: 7840         	ldrb	r0, [r0, #0x1]
10005880: 2800         	cmp	r0, #0x0
10005882: d107         	bne	0x10005894 <defmt::encoding::inner::Encoder::end_frame::h53b5d4bd311fad43+0x40> @ imm = #0xe
10005884: e7ff         	b	0x10005886 <defmt::encoding::inner::Encoder::end_frame::h53b5d4bd311fad43+0x32> @ imm = #-0x2
10005886: 9804         	ldr	r0, [sp, #0x10]
10005888: 7840         	ldrb	r0, [r0, #0x1]
1000588a: 1fc1         	subs	r1, r0, #0x7
1000588c: 9102         	str	r1, [sp, #0x8]
1000588e: 2807         	cmp	r0, #0x7
10005890: d315         	blo	0x100058be <defmt::encoding::inner::Encoder::end_frame::h53b5d4bd311fad43+0x6a> @ imm = #0x2a
10005892: e00c         	b	0x100058ae <defmt::encoding::inner::Encoder::end_frame::h53b5d4bd311fad43+0x5a> @ imm = #0x18
10005894: 9804         	ldr	r0, [sp, #0x10]
10005896: 7840         	ldrb	r0, [r0, #0x1]
10005898: 2806         	cmp	r0, #0x6
1000589a: d8f4         	bhi	0x10005886 <defmt::encoding::inner::Encoder::end_frame::h53b5d4bd311fad43+0x32> @ imm = #-0x18
1000589c: e7ff         	b	0x1000589e <defmt::encoding::inner::Encoder::end_frame::h53b5d4bd311fad43+0x4a> @ imm = #-0x2
1000589e: 9804         	ldr	r0, [sp, #0x10]
100058a0: 7881         	ldrb	r1, [r0, #0x2]
100058a2: 9100         	str	r1, [sp]
100058a4: 7840         	ldrb	r0, [r0, #0x1]
100058a6: 9001         	str	r0, [sp, #0x4]
100058a8: 2808         	cmp	r0, #0x8
100058aa: d30b         	blo	0x100058c4 <defmt::encoding::inner::Encoder::end_frame::h53b5d4bd311fad43+0x70> @ imm = #0x16
100058ac: e018         	b	0x100058e0 <defmt::encoding::inner::Encoder::end_frame::h53b5d4bd311fad43+0x8c> @ imm = #0x30
100058ae: 9902         	ldr	r1, [sp, #0x8]
100058b0: 207f         	movs	r0, #0x7f
100058b2: 43c0         	mvns	r0, r0
100058b4: 4301         	orrs	r1, r0
100058b6: a805         	add	r0, sp, #0x14
100058b8: f000 f81a    	bl	0x100058f0 <defmt::encoding::inner::Encoder::end_frame::{{closure}}::h4db6ab81eb8cb0fe> @ imm = #0x34
100058bc: e7d3         	b	0x10005866 <defmt::encoding::inner::Encoder::end_frame::h53b5d4bd311fad43+0x12> @ imm = #-0x5a
100058be: 480a         	ldr	r0, [pc, #0x28]         @ 0x100058e8 <defmt::encoding::inner::Encoder::end_frame::h53b5d4bd311fad43+0x94>
100058c0: f007 fdc8    	bl	0x1000d454 <core::panicking::panic_const::panic_const_sub_overflow::hcef9c8e46a564551> @ imm = #0x7b90
100058c4: 9900         	ldr	r1, [sp]
100058c6: 9a01         	ldr	r2, [sp, #0x4]
100058c8: 2007         	movs	r0, #0x7
100058ca: 4002         	ands	r2, r0
100058cc: 2000         	movs	r0, #0x0
100058ce: 43c0         	mvns	r0, r0
100058d0: 4090         	lsls	r0, r2
100058d2: 4301         	orrs	r1, r0
100058d4: 207f         	movs	r0, #0x7f
100058d6: 4001         	ands	r1, r0
100058d8: a805         	add	r0, sp, #0x14
100058da: f000 f809    	bl	0x100058f0 <defmt::encoding::inner::Encoder::end_frame::{{closure}}::h4db6ab81eb8cb0fe> @ imm = #0x12
100058de: e7c2         	b	0x10005866 <defmt::encoding::inner::Encoder::end_frame::h53b5d4bd311fad43+0x12> @ imm = #-0x7c
100058e0: 4802         	ldr	r0, [pc, #0x8]          @ 0x100058ec <defmt::encoding::inner::Encoder::end_frame::h53b5d4bd311fad43+0x98>
100058e2: f007 fddb    	bl	0x1000d49c <core::panicking::panic_const::panic_const_shl_overflow::h42afea46a5d11e4a> @ imm = #0x7bb6
100058e6: 46c0         	mov	r8, r8
100058e8: c0 13 01 10  	.word	0x100113c0
100058ec: d0 13 01 10  	.word	0x100113d0

100058f0 <defmt::encoding::inner::Encoder::end_frame::{{closure}}::h4db6ab81eb8cb0fe>:
100058f0: b580         	push	{r7, lr}
100058f2: af00         	add	r7, sp, #0x0
100058f4: b084         	sub	sp, #0x10
100058f6: 460a         	mov	r2, r1
100058f8: 9002         	str	r0, [sp, #0x8]
100058fa: a903         	add	r1, sp, #0xc
100058fc: 700a         	strb	r2, [r1]
100058fe: a901         	add	r1, sp, #0x4
10005900: 700a         	strb	r2, [r1]
10005902: 2201         	movs	r2, #0x1
10005904: f7ff fcc7    	bl	0x10005296 <core::ops::function::FnMut::call_mut::h049b08565db379fb> @ imm = #-0x672
10005908: b004         	add	sp, #0x10
1000590a: bd80         	pop	{r7, pc}

1000590c <defmt::encoding::Encoder::start_frame::haab4a654ee65a674>:
1000590c: b580         	push	{r7, lr}
1000590e: af00         	add	r7, sp, #0x0
10005910: b082         	sub	sp, #0x8
10005912: 9000         	str	r0, [sp]
10005914: f7ff fec8    	bl	0x100056a8 <defmt::encoding::inner::Encoder::start_frame::h503219efb577cc8a> @ imm = #-0x270
10005918: b002         	add	sp, #0x8
1000591a: bd80         	pop	{r7, pc}

1000591c <defmt::encoding::Encoder::write::h940a070c4392d4df>:
1000591c: b580         	push	{r7, lr}
1000591e: af00         	add	r7, sp, #0x0
10005920: b084         	sub	sp, #0x10
10005922: 9000         	str	r0, [sp]
10005924: 9101         	str	r1, [sp, #0x4]
10005926: 9202         	str	r2, [sp, #0x8]
10005928: f7ff fee0    	bl	0x100056ec <defmt::encoding::inner::Encoder::write::hbd73c309e3209c18> @ imm = #-0x240
1000592c: b004         	add	sp, #0x10
1000592e: bd80         	pop	{r7, pc}

10005930 <defmt::encoding::Encoder::end_frame::h144f2804374066d7>:
10005930: b580         	push	{r7, lr}
10005932: af00         	add	r7, sp, #0x0
10005934: b082         	sub	sp, #0x8
10005936: 9000         	str	r0, [sp]
10005938: f7ff ff8c    	bl	0x10005854 <defmt::encoding::inner::Encoder::end_frame::h53b5d4bd311fad43> @ imm = #-0xe8
1000593c: b002         	add	sp, #0x8
1000593e: bd80         	pop	{r7, pc}

10005940 <<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next::haa2683fc09c58428>:
10005940: b580         	push	{r7, lr}
10005942: af00         	add	r7, sp, #0x0
10005944: b08d         	sub	sp, #0x34
10005946: 9000         	str	r0, [sp]
10005948: 9006         	str	r0, [sp, #0x18]
1000594a: 2101         	movs	r1, #0x1
1000594c: 9107         	str	r1, [sp, #0x1c]
1000594e: 9108         	str	r1, [sp, #0x20]
10005950: 6801         	ldr	r1, [r0]
10005952: 9103         	str	r1, [sp, #0xc]
10005954: 6840         	ldr	r0, [r0, #0x4]
10005956: 9001         	str	r0, [sp, #0x4]
10005958: 9009         	str	r0, [sp, #0x24]
1000595a: e7ff         	b	0x1000595c <<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next::haa2683fc09c58428+0x1c> @ imm = #-0x2
1000595c: 9801         	ldr	r0, [sp, #0x4]
1000595e: a903         	add	r1, sp, #0xc
10005960: 910a         	str	r1, [sp, #0x28]
10005962: 9004         	str	r0, [sp, #0x10]
10005964: a804         	add	r0, sp, #0x10
10005966: 900b         	str	r0, [sp, #0x2c]
10005968: 9803         	ldr	r0, [sp, #0xc]
1000596a: 9904         	ldr	r1, [sp, #0x10]
1000596c: 4288         	cmp	r0, r1
1000596e: d005         	beq	0x1000597c <<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next::haa2683fc09c58428+0x3c> @ imm = #0xa
10005970: e7ff         	b	0x10005972 <<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next::haa2683fc09c58428+0x32> @ imm = #-0x2
10005972: 9900         	ldr	r1, [sp]
10005974: 9803         	ldr	r0, [sp, #0xc]
10005976: 1c40         	adds	r0, r0, #0x1
10005978: 6008         	str	r0, [r1]
1000597a: e002         	b	0x10005982 <<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next::haa2683fc09c58428+0x42> @ imm = #0x4
1000597c: 2000         	movs	r0, #0x0
1000597e: 9002         	str	r0, [sp, #0x8]
10005980: e009         	b	0x10005996 <<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next::haa2683fc09c58428+0x56> @ imm = #0x12
10005982: 9803         	ldr	r0, [sp, #0xc]
10005984: 9005         	str	r0, [sp, #0x14]
10005986: a805         	add	r0, sp, #0x14
10005988: 900c         	str	r0, [sp, #0x30]
1000598a: 9803         	ldr	r0, [sp, #0xc]
1000598c: 9002         	str	r0, [sp, #0x8]
1000598e: e7ff         	b	0x10005990 <<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next::haa2683fc09c58428+0x50> @ imm = #-0x2
10005990: 9802         	ldr	r0, [sp, #0x8]
10005992: b00d         	add	sp, #0x34
10005994: bd80         	pop	{r7, pc}
10005996: e7fb         	b	0x10005990 <<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next::haa2683fc09c58428+0x50> @ imm = #-0xa

10005998 <defmt_rtt::channel::Channel::write_all::h86d60f022f4ba872>:
10005998: b580         	push	{r7, lr}
1000599a: af00         	add	r7, sp, #0x0
1000599c: b08a         	sub	sp, #0x28
1000599e: 9001         	str	r0, [sp, #0x4]
100059a0: 9102         	str	r1, [sp, #0x8]
100059a2: 9203         	str	r2, [sp, #0xc]
100059a4: 9005         	str	r0, [sp, #0x14]
100059a6: f000 f933    	bl	0x10005c10 <defmt_rtt::channel::Channel::host_is_connected::h9da36693195bd6a7> @ imm = #0x266
100059aa: 2800         	cmp	r0, #0x0
100059ac: d103         	bne	0x100059b6 <defmt_rtt::channel::Channel::write_all::h86d60f022f4ba872+0x1e> @ imm = #0x6
100059ae: e7ff         	b	0x100059b0 <defmt_rtt::channel::Channel::write_all::h86d60f022f4ba872+0x18> @ imm = #-0x2
100059b0: 4812         	ldr	r0, [pc, #0x48]         @ 0x100059fc <defmt_rtt::channel::Channel::write_all::h86d60f022f4ba872+0x64>
100059b2: 9004         	str	r0, [sp, #0x10]
100059b4: e002         	b	0x100059bc <defmt_rtt::channel::Channel::write_all::h86d60f022f4ba872+0x24> @ imm = #0x4
100059b6: 4812         	ldr	r0, [pc, #0x48]         @ 0x10005a00 <defmt_rtt::channel::Channel::write_all::h86d60f022f4ba872+0x68>
100059b8: 9004         	str	r0, [sp, #0x10]
100059ba: e7ff         	b	0x100059bc <defmt_rtt::channel::Channel::write_all::h86d60f022f4ba872+0x24> @ imm = #-0x2
100059bc: 9802         	ldr	r0, [sp, #0x8]
100059be: 9903         	ldr	r1, [sp, #0xc]
100059c0: f7ff fe06    	bl	0x100055d0 <core::slice::<impl [T]>::is_empty::h9861257ba149bd7e> @ imm = #-0x3f4
100059c4: 2800         	cmp	r0, #0x0
100059c6: d10b         	bne	0x100059e0 <defmt_rtt::channel::Channel::write_all::h86d60f022f4ba872+0x48> @ imm = #0x16
100059c8: e7ff         	b	0x100059ca <defmt_rtt::channel::Channel::write_all::h86d60f022f4ba872+0x32> @ imm = #-0x2
100059ca: 9801         	ldr	r0, [sp, #0x4]
100059cc: 9b04         	ldr	r3, [sp, #0x10]
100059ce: 9902         	ldr	r1, [sp, #0x8]
100059d0: 9a03         	ldr	r2, [sp, #0xc]
100059d2: 4798         	blx	r3
100059d4: 4601         	mov	r1, r0
100059d6: 9100         	str	r1, [sp]
100059d8: 9006         	str	r0, [sp, #0x18]
100059da: 2800         	cmp	r0, #0x0
100059dc: d0ee         	beq	0x100059bc <defmt_rtt::channel::Channel::write_all::h86d60f022f4ba872+0x24> @ imm = #-0x24
100059de: e001         	b	0x100059e4 <defmt_rtt::channel::Channel::write_all::h86d60f022f4ba872+0x4c> @ imm = #0x2
100059e0: b00a         	add	sp, #0x28
100059e2: bd80         	pop	{r7, pc}
100059e4: 9800         	ldr	r0, [sp]
100059e6: 9902         	ldr	r1, [sp, #0x8]
100059e8: 9a03         	ldr	r2, [sp, #0xc]
100059ea: 9107         	str	r1, [sp, #0x1c]
100059ec: 9208         	str	r2, [sp, #0x20]
100059ee: 9009         	str	r0, [sp, #0x24]
100059f0: 4b04         	ldr	r3, [pc, #0x10]         @ 0x10005a04 <defmt_rtt::channel::Channel::write_all::h86d60f022f4ba872+0x6c>
100059f2: f7ff fb1f    	bl	0x10005034 <<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index::h5b4015eea28eeca6> @ imm = #-0x9c2
100059f6: 9002         	str	r0, [sp, #0x8]
100059f8: 9103         	str	r1, [sp, #0xc]
100059fa: e7df         	b	0x100059bc <defmt_rtt::channel::Channel::write_all::h86d60f022f4ba872+0x24> @ imm = #-0x42
100059fc: 93 5a 00 10  	.word	0x10005a93
10005a00: 09 5a 00 10  	.word	0x10005a09
10005a04: 40 14 01 10  	.word	0x10011440

10005a08 <defmt_rtt::channel::Channel::blocking_write::hc60da5b3e1e2bce6>:
10005a08: b5d0         	push	{r4, r6, r7, lr}
10005a0a: af02         	add	r7, sp, #0x8
10005a0c: b090         	sub	sp, #0x40
10005a0e: 9204         	str	r2, [sp, #0x10]
10005a10: 460a         	mov	r2, r1
10005a12: 9904         	ldr	r1, [sp, #0x10]
10005a14: 9205         	str	r2, [sp, #0x14]
10005a16: 4602         	mov	r2, r0
10005a18: 9805         	ldr	r0, [sp, #0x14]
10005a1a: 9206         	str	r2, [sp, #0x18]
10005a1c: 920a         	str	r2, [sp, #0x28]
10005a1e: 900b         	str	r0, [sp, #0x2c]
10005a20: 910c         	str	r1, [sp, #0x30]
10005a22: f7ff fdd5    	bl	0x100055d0 <core::slice::<impl [T]>::is_empty::h9861257ba149bd7e> @ imm = #-0x456
10005a26: 2800         	cmp	r0, #0x0
10005a28: d120         	bne	0x10005a6c <defmt_rtt::channel::Channel::blocking_write::hc60da5b3e1e2bce6+0x64> @ imm = #0x40
10005a2a: e7ff         	b	0x10005a2c <defmt_rtt::channel::Channel::blocking_write::hc60da5b3e1e2bce6+0x24> @ imm = #-0x2
10005a2c: 9806         	ldr	r0, [sp, #0x18]
10005a2e: 3010         	adds	r0, #0x10
10005a30: aa08         	add	r2, sp, #0x20
10005a32: 2100         	movs	r1, #0x0
10005a34: 7011         	strb	r1, [r2]
10005a36: 9908         	ldr	r1, [sp, #0x20]
10005a38: f7ff fc54    	bl	0x100052e4 <core::sync::atomic::AtomicUsize::load::h9f3dd6aabe9c35a6> @ imm = #-0x758
10005a3c: 4601         	mov	r1, r0
10005a3e: 9806         	ldr	r0, [sp, #0x18]
10005a40: 9101         	str	r1, [sp, #0x4]
10005a42: 910d         	str	r1, [sp, #0x34]
10005a44: 300c         	adds	r0, #0xc
10005a46: aa09         	add	r2, sp, #0x24
10005a48: 2102         	movs	r1, #0x2
10005a4a: 7011         	strb	r1, [r2]
10005a4c: 9909         	ldr	r1, [sp, #0x24]
10005a4e: f7ff fc49    	bl	0x100052e4 <core::sync::atomic::AtomicUsize::load::h9f3dd6aabe9c35a6> @ imm = #-0x76e
10005a52: 4601         	mov	r1, r0
10005a54: 9801         	ldr	r0, [sp, #0x4]
10005a56: 460a         	mov	r2, r1
10005a58: 9202         	str	r2, [sp, #0x8]
10005a5a: 910e         	str	r1, [sp, #0x38]
10005a5c: f000 f8ea    	bl	0x10005c34 <defmt_rtt::channel::available_buffer_size::hdc89fcdf433072b0> @ imm = #0x1d4
10005a60: 4601         	mov	r1, r0
10005a62: 9103         	str	r1, [sp, #0xc]
10005a64: 900f         	str	r0, [sp, #0x3c]
10005a66: 2800         	cmp	r0, #0x0
10005a68: d003         	beq	0x10005a72 <defmt_rtt::channel::Channel::blocking_write::hc60da5b3e1e2bce6+0x6a> @ imm = #0x6
10005a6a: e005         	b	0x10005a78 <defmt_rtt::channel::Channel::blocking_write::hc60da5b3e1e2bce6+0x70> @ imm = #0xa
10005a6c: 2000         	movs	r0, #0x0
10005a6e: 9007         	str	r0, [sp, #0x1c]
10005a70: e00c         	b	0x10005a8c <defmt_rtt::channel::Channel::blocking_write::hc60da5b3e1e2bce6+0x84> @ imm = #0x18
10005a72: 2000         	movs	r0, #0x0
10005a74: 9007         	str	r0, [sp, #0x1c]
10005a76: e009         	b	0x10005a8c <defmt_rtt::channel::Channel::blocking_write::hc60da5b3e1e2bce6+0x84> @ imm = #0x12
10005a78: 9b02         	ldr	r3, [sp, #0x8]
10005a7a: 9a04         	ldr	r2, [sp, #0x10]
10005a7c: 9905         	ldr	r1, [sp, #0x14]
10005a7e: 9806         	ldr	r0, [sp, #0x18]
10005a80: 9c03         	ldr	r4, [sp, #0xc]
10005a82: 9400         	str	r4, [sp]
10005a84: f000 f822    	bl	0x10005acc <defmt_rtt::channel::Channel::write_impl::h81dd427b2e29357d> @ imm = #0x44
10005a88: 9007         	str	r0, [sp, #0x1c]
10005a8a: e7ff         	b	0x10005a8c <defmt_rtt::channel::Channel::blocking_write::hc60da5b3e1e2bce6+0x84> @ imm = #-0x2
10005a8c: 9807         	ldr	r0, [sp, #0x1c]
10005a8e: b010         	add	sp, #0x40
10005a90: bdd0         	pop	{r4, r6, r7, pc}

10005a92 <defmt_rtt::channel::Channel::nonblocking_write::h9ed2321999250fe3>:
10005a92: b5d0         	push	{r4, r6, r7, lr}
10005a94: af02         	add	r7, sp, #0x8
10005a96: b08a         	sub	sp, #0x28
10005a98: 9203         	str	r2, [sp, #0xc]
10005a9a: 9102         	str	r1, [sp, #0x8]
10005a9c: 9004         	str	r0, [sp, #0x10]
10005a9e: 9006         	str	r0, [sp, #0x18]
10005aa0: 9107         	str	r1, [sp, #0x1c]
10005aa2: 9208         	str	r2, [sp, #0x20]
10005aa4: 300c         	adds	r0, #0xc
10005aa6: aa05         	add	r2, sp, #0x14
10005aa8: 2102         	movs	r1, #0x2
10005aaa: 7011         	strb	r1, [r2]
10005aac: 9905         	ldr	r1, [sp, #0x14]
10005aae: f7ff fc19    	bl	0x100052e4 <core::sync::atomic::AtomicUsize::load::h9f3dd6aabe9c35a6> @ imm = #-0x7ce
10005ab2: 9902         	ldr	r1, [sp, #0x8]
10005ab4: 9a03         	ldr	r2, [sp, #0xc]
10005ab6: 4603         	mov	r3, r0
10005ab8: 9804         	ldr	r0, [sp, #0x10]
10005aba: 9309         	str	r3, [sp, #0x24]
10005abc: 2401         	movs	r4, #0x1
10005abe: 02a4         	lsls	r4, r4, #0xa
10005ac0: 9400         	str	r4, [sp]
10005ac2: f000 f803    	bl	0x10005acc <defmt_rtt::channel::Channel::write_impl::h81dd427b2e29357d> @ imm = #0x6
10005ac6: b00a         	add	sp, #0x28
10005ac8: bdd0         	pop	{r4, r6, r7, pc}
10005aca: d4d4         	bmi	0x10005a76 <defmt_rtt::channel::Channel::blocking_write::hc60da5b3e1e2bce6+0x6e> @ imm = #-0x58

10005acc <defmt_rtt::channel::Channel::write_impl::h81dd427b2e29357d>:
10005acc: b5b0         	push	{r4, r5, r7, lr}
10005ace: af02         	add	r7, sp, #0x8
10005ad0: b0ac         	sub	sp, #0xb0
10005ad2: 930b         	str	r3, [sp, #0x2c]
10005ad4: 9209         	str	r2, [sp, #0x24]
10005ad6: 460a         	mov	r2, r1
10005ad8: 9208         	str	r2, [sp, #0x20]
10005ada: 4604         	mov	r4, r0
10005adc: 9809         	ldr	r0, [sp, #0x24]
10005ade: 940a         	str	r4, [sp, #0x28]
10005ae0: 68b9         	ldr	r1, [r7, #0x8]
10005ae2: 940f         	str	r4, [sp, #0x3c]
10005ae4: 9210         	str	r2, [sp, #0x40]
10005ae6: 9011         	str	r0, [sp, #0x44]
10005ae8: 9312         	str	r3, [sp, #0x48]
10005aea: f7ff fbab    	bl	0x10005244 <core::cmp::Ord::min::h28393ae5d5e76290> @ imm = #-0x8aa
10005aee: 9b0b         	ldr	r3, [sp, #0x2c]
10005af0: 4601         	mov	r1, r0
10005af2: 910c         	str	r1, [sp, #0x30]
10005af4: 9013         	str	r0, [sp, #0x4c]
10005af6: 1818         	adds	r0, r3, r0
10005af8: 900d         	str	r0, [sp, #0x34]
10005afa: 4298         	cmp	r0, r3
10005afc: d306         	blo	0x10005b0c <defmt_rtt::channel::Channel::write_impl::h81dd427b2e29357d+0x40> @ imm = #0xc
10005afe: e7ff         	b	0x10005b00 <defmt_rtt::channel::Channel::write_impl::h81dd427b2e29357d+0x34> @ imm = #-0x2
10005b00: 980d         	ldr	r0, [sp, #0x34]
10005b02: 2101         	movs	r1, #0x1
10005b04: 0289         	lsls	r1, r1, #0xa
10005b06: 4288         	cmp	r0, r1
10005b08: d81d         	bhi	0x10005b46 <defmt_rtt::channel::Channel::write_impl::h81dd427b2e29357d+0x7a> @ imm = #0x3a
10005b0a: e002         	b	0x10005b12 <defmt_rtt::channel::Channel::write_impl::h81dd427b2e29357d+0x46> @ imm = #0x4
10005b0c: 483f         	ldr	r0, [pc, #0xfc]         @ 0x10005c0c <defmt_rtt::channel::Channel::write_impl::h81dd427b2e29357d+0x140>
10005b0e: f007 fc8f    	bl	0x1000d430 <core::panicking::panic_const::panic_const_add_overflow::h73b6e802431fc142> @ imm = #0x791e
10005b12: 9a0c         	ldr	r2, [sp, #0x30]
10005b14: 9808         	ldr	r0, [sp, #0x20]
10005b16: 9b0b         	ldr	r3, [sp, #0x2c]
10005b18: 990a         	ldr	r1, [sp, #0x28]
10005b1a: 9c09         	ldr	r4, [sp, #0x24]
10005b1c: 902a         	str	r0, [sp, #0xa8]
10005b1e: 942b         	str	r4, [sp, #0xac]
10005b20: 6849         	ldr	r1, [r1, #0x4]
10005b22: 9122         	str	r1, [sp, #0x88]
10005b24: 9323         	str	r3, [sp, #0x8c]
10005b26: 18c9         	adds	r1, r1, r3
10005b28: 9107         	str	r1, [sp, #0x1c]
10005b2a: 901b         	str	r0, [sp, #0x6c]
10005b2c: 911c         	str	r1, [sp, #0x70]
10005b2e: 921d         	str	r2, [sp, #0x74]
10005b30: 9200         	str	r2, [sp]
10005b32: 2301         	movs	r3, #0x1
10005b34: 461a         	mov	r2, r3
10005b36: f7ff faa1    	bl	0x1000507c <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753> @ imm = #-0xabe
10005b3a: 9807         	ldr	r0, [sp, #0x1c]
10005b3c: 9908         	ldr	r1, [sp, #0x20]
10005b3e: 9a0c         	ldr	r2, [sp, #0x30]
10005b40: f008 f831    	bl	0x1000dba6 <__aeabi_memcpy> @ imm = #0x8062
10005b44: e007         	b	0x10005b56 <defmt_rtt::channel::Channel::write_impl::h81dd427b2e29357d+0x8a> @ imm = #0xe
10005b46: 980b         	ldr	r0, [sp, #0x2c]
10005b48: 2101         	movs	r1, #0x1
10005b4a: 0289         	lsls	r1, r1, #0xa
10005b4c: 1a0a         	subs	r2, r1, r0
10005b4e: 9206         	str	r2, [sp, #0x18]
10005b50: 4288         	cmp	r0, r1
10005b52: d83d         	bhi	0x10005bd0 <defmt_rtt::channel::Channel::write_impl::h81dd427b2e29357d+0x104> @ imm = #0x7a
10005b54: e011         	b	0x10005b7a <defmt_rtt::channel::Channel::write_impl::h81dd427b2e29357d+0xae> @ imm = #0x22
10005b56: 9a0c         	ldr	r2, [sp, #0x30]
10005b58: 990b         	ldr	r1, [sp, #0x2c]
10005b5a: 980a         	ldr	r0, [sp, #0x28]
10005b5c: 300c         	adds	r0, #0xc
10005b5e: 911e         	str	r1, [sp, #0x78]
10005b60: 921f         	str	r2, [sp, #0x7c]
10005b62: 1889         	adds	r1, r1, r2
10005b64: 4a26         	ldr	r2, [pc, #0x98]         @ 0x10005c00 <defmt_rtt::channel::Channel::write_impl::h81dd427b2e29357d+0x134>
10005b66: 4011         	ands	r1, r2
10005b68: ab0e         	add	r3, sp, #0x38
10005b6a: 2201         	movs	r2, #0x1
10005b6c: 701a         	strb	r2, [r3]
10005b6e: 9a0e         	ldr	r2, [sp, #0x38]
10005b70: f7ff fbc3    	bl	0x100052fa <core::sync::atomic::AtomicUsize::store::h1f3848c0870d12ee> @ imm = #-0x87a
10005b74: 980c         	ldr	r0, [sp, #0x30]
10005b76: b02c         	add	sp, #0xb0
10005b78: bdb0         	pop	{r4, r5, r7, pc}
10005b7a: 9a06         	ldr	r2, [sp, #0x18]
10005b7c: 990a         	ldr	r1, [sp, #0x28]
10005b7e: 9808         	ldr	r0, [sp, #0x20]
10005b80: 9c09         	ldr	r4, [sp, #0x24]
10005b82: 9b0b         	ldr	r3, [sp, #0x2c]
10005b84: 9214         	str	r2, [sp, #0x50]
10005b86: 9028         	str	r0, [sp, #0xa0]
10005b88: 9429         	str	r4, [sp, #0xa4]
10005b8a: 6849         	ldr	r1, [r1, #0x4]
10005b8c: 9120         	str	r1, [sp, #0x80]
10005b8e: 9321         	str	r3, [sp, #0x84]
10005b90: 18c9         	adds	r1, r1, r3
10005b92: 9102         	str	r1, [sp, #0x8]
10005b94: 9018         	str	r0, [sp, #0x60]
10005b96: 9119         	str	r1, [sp, #0x64]
10005b98: 921a         	str	r2, [sp, #0x68]
10005b9a: 9200         	str	r2, [sp]
10005b9c: 2301         	movs	r3, #0x1
10005b9e: 461a         	mov	r2, r3
10005ba0: f7ff fa6c    	bl	0x1000507c <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753> @ imm = #-0xb28
10005ba4: 9802         	ldr	r0, [sp, #0x8]
10005ba6: 9908         	ldr	r1, [sp, #0x20]
10005ba8: 9a06         	ldr	r2, [sp, #0x18]
10005baa: f007 fffc    	bl	0x1000dba6 <__aeabi_memcpy> @ imm = #0x7ff8
10005bae: 9b08         	ldr	r3, [sp, #0x20]
10005bb0: 9a0a         	ldr	r2, [sp, #0x28]
10005bb2: 9906         	ldr	r1, [sp, #0x18]
10005bb4: 980c         	ldr	r0, [sp, #0x30]
10005bb6: 9326         	str	r3, [sp, #0x98]
10005bb8: 9427         	str	r4, [sp, #0x9c]
10005bba: 9324         	str	r3, [sp, #0x90]
10005bbc: 9125         	str	r1, [sp, #0x94]
10005bbe: 185b         	adds	r3, r3, r1
10005bc0: 9303         	str	r3, [sp, #0xc]
10005bc2: 6852         	ldr	r2, [r2, #0x4]
10005bc4: 9204         	str	r2, [sp, #0x10]
10005bc6: 1a42         	subs	r2, r0, r1
10005bc8: 9205         	str	r2, [sp, #0x14]
10005bca: 4288         	cmp	r0, r1
10005bcc: d314         	blo	0x10005bf8 <defmt_rtt::channel::Channel::write_impl::h81dd427b2e29357d+0x12c> @ imm = #0x28
10005bce: e002         	b	0x10005bd6 <defmt_rtt::channel::Channel::write_impl::h81dd427b2e29357d+0x10a> @ imm = #0x4
10005bd0: 480d         	ldr	r0, [pc, #0x34]         @ 0x10005c08 <defmt_rtt::channel::Channel::write_impl::h81dd427b2e29357d+0x13c>
10005bd2: f007 fc3f    	bl	0x1000d454 <core::panicking::panic_const::panic_const_sub_overflow::hcef9c8e46a564551> @ imm = #0x787e
10005bd6: 9a05         	ldr	r2, [sp, #0x14]
10005bd8: 9803         	ldr	r0, [sp, #0xc]
10005bda: 9904         	ldr	r1, [sp, #0x10]
10005bdc: 9015         	str	r0, [sp, #0x54]
10005bde: 9116         	str	r1, [sp, #0x58]
10005be0: 9217         	str	r2, [sp, #0x5c]
10005be2: 9200         	str	r2, [sp]
10005be4: 2301         	movs	r3, #0x1
10005be6: 461a         	mov	r2, r3
10005be8: f7ff fa48    	bl	0x1000507c <core::intrinsics::copy_nonoverlapping::precondition_check::hed0f7a6f43e68753> @ imm = #-0xb70
10005bec: 9804         	ldr	r0, [sp, #0x10]
10005bee: 9903         	ldr	r1, [sp, #0xc]
10005bf0: 9a05         	ldr	r2, [sp, #0x14]
10005bf2: f007 ffd8    	bl	0x1000dba6 <__aeabi_memcpy> @ imm = #0x7fb0
10005bf6: e7ae         	b	0x10005b56 <defmt_rtt::channel::Channel::write_impl::h81dd427b2e29357d+0x8a> @ imm = #-0xa4
10005bf8: 4802         	ldr	r0, [pc, #0x8]          @ 0x10005c04 <defmt_rtt::channel::Channel::write_impl::h81dd427b2e29357d+0x138>
10005bfa: f007 fc2b    	bl	0x1000d454 <core::panicking::panic_const::panic_const_sub_overflow::hcef9c8e46a564551> @ imm = #0x7856
10005bfe: 46c0         	mov	r8, r8
10005c00: ff 03 00 00  	.word	0x000003ff
10005c04: 70 14 01 10  	.word	0x10011470
10005c08: 60 14 01 10  	.word	0x10011460
10005c0c: 50 14 01 10  	.word	0x10011450

10005c10 <defmt_rtt::channel::Channel::host_is_connected::h9da36693195bd6a7>:
10005c10: b580         	push	{r7, lr}
10005c12: af00         	add	r7, sp, #0x0
10005c14: b082         	sub	sp, #0x8
10005c16: 9001         	str	r0, [sp, #0x4]
10005c18: 3014         	adds	r0, #0x14
10005c1a: 466a         	mov	r2, sp
10005c1c: 2100         	movs	r1, #0x0
10005c1e: 7011         	strb	r1, [r2]
10005c20: 9900         	ldr	r1, [sp]
10005c22: f7ff fb5f    	bl	0x100052e4 <core::sync::atomic::AtomicUsize::load::h9f3dd6aabe9c35a6> @ imm = #-0x942
10005c26: 2103         	movs	r1, #0x3
10005c28: 4008         	ands	r0, r1
10005c2a: 1e80         	subs	r0, r0, #0x2
10005c2c: 4241         	rsbs	r1, r0, #0
10005c2e: 4148         	adcs	r0, r1
10005c30: b002         	add	sp, #0x8
10005c32: bd80         	pop	{r7, pc}

10005c34 <defmt_rtt::channel::available_buffer_size::hdc89fcdf433072b0>:
10005c34: b580         	push	{r7, lr}
10005c36: af00         	add	r7, sp, #0x0
10005c38: b08a         	sub	sp, #0x28
10005c3a: 9105         	str	r1, [sp, #0x14]
10005c3c: 9006         	str	r0, [sp, #0x18]
10005c3e: 9008         	str	r0, [sp, #0x20]
10005c40: 9109         	str	r1, [sp, #0x24]
10005c42: 4288         	cmp	r0, r1
10005c44: d804         	bhi	0x10005c50 <defmt_rtt::channel::available_buffer_size::hdc89fcdf433072b0+0x1c> @ imm = #0x8
10005c46: e7ff         	b	0x10005c48 <defmt_rtt::channel::available_buffer_size::hdc89fcdf433072b0+0x14> @ imm = #-0x2
10005c48: 9806         	ldr	r0, [sp, #0x18]
10005c4a: 2800         	cmp	r0, #0x0
10005c4c: d007         	beq	0x10005c5e <defmt_rtt::channel::available_buffer_size::hdc89fcdf433072b0+0x2a> @ imm = #0xe
10005c4e: e00e         	b	0x10005c6e <defmt_rtt::channel::available_buffer_size::hdc89fcdf433072b0+0x3a> @ imm = #0x1c
10005c50: 9806         	ldr	r0, [sp, #0x18]
10005c52: 9905         	ldr	r1, [sp, #0x14]
10005c54: 1a42         	subs	r2, r0, r1
10005c56: 9204         	str	r2, [sp, #0x10]
10005c58: 4288         	cmp	r0, r1
10005c5a: d32e         	blo	0x10005cba <defmt_rtt::channel::available_buffer_size::hdc89fcdf433072b0+0x86> @ imm = #0x5c
10005c5c: e027         	b	0x10005cae <defmt_rtt::channel::available_buffer_size::hdc89fcdf433072b0+0x7a> @ imm = #0x4e
10005c5e: 9805         	ldr	r0, [sp, #0x14]
10005c60: 2101         	movs	r1, #0x1
10005c62: 0289         	lsls	r1, r1, #0xa
10005c64: 1a0a         	subs	r2, r1, r0
10005c66: 9203         	str	r2, [sp, #0xc]
10005c68: 4288         	cmp	r0, r1
10005c6a: d80e         	bhi	0x10005c8a <defmt_rtt::channel::available_buffer_size::hdc89fcdf433072b0+0x56> @ imm = #0x1c
10005c6c: e007         	b	0x10005c7e <defmt_rtt::channel::available_buffer_size::hdc89fcdf433072b0+0x4a> @ imm = #0xe
10005c6e: 9805         	ldr	r0, [sp, #0x14]
10005c70: 2101         	movs	r1, #0x1
10005c72: 0289         	lsls	r1, r1, #0xa
10005c74: 1a0a         	subs	r2, r1, r0
10005c76: 9202         	str	r2, [sp, #0x8]
10005c78: 4288         	cmp	r0, r1
10005c7a: d815         	bhi	0x10005ca8 <defmt_rtt::channel::available_buffer_size::hdc89fcdf433072b0+0x74> @ imm = #0x2a
10005c7c: e011         	b	0x10005ca2 <defmt_rtt::channel::available_buffer_size::hdc89fcdf433072b0+0x6e> @ imm = #0x22
10005c7e: 9803         	ldr	r0, [sp, #0xc]
10005c80: 1e41         	subs	r1, r0, #0x1
10005c82: 9101         	str	r1, [sp, #0x4]
10005c84: 2800         	cmp	r0, #0x0
10005c86: d006         	beq	0x10005c96 <defmt_rtt::channel::available_buffer_size::hdc89fcdf433072b0+0x62> @ imm = #0xc
10005c88: e002         	b	0x10005c90 <defmt_rtt::channel::available_buffer_size::hdc89fcdf433072b0+0x5c> @ imm = #0x4
10005c8a: 4811         	ldr	r0, [pc, #0x44]         @ 0x10005cd0 <defmt_rtt::channel::available_buffer_size::hdc89fcdf433072b0+0x9c>
10005c8c: f007 fbe2    	bl	0x1000d454 <core::panicking::panic_const::panic_const_sub_overflow::hcef9c8e46a564551> @ imm = #0x77c4
10005c90: 9801         	ldr	r0, [sp, #0x4]
10005c92: 9007         	str	r0, [sp, #0x1c]
10005c94: e002         	b	0x10005c9c <defmt_rtt::channel::available_buffer_size::hdc89fcdf433072b0+0x68> @ imm = #0x4
10005c96: 480e         	ldr	r0, [pc, #0x38]         @ 0x10005cd0 <defmt_rtt::channel::available_buffer_size::hdc89fcdf433072b0+0x9c>
10005c98: f007 fbdc    	bl	0x1000d454 <core::panicking::panic_const::panic_const_sub_overflow::hcef9c8e46a564551> @ imm = #0x77b8
10005c9c: 9807         	ldr	r0, [sp, #0x1c]
10005c9e: b00a         	add	sp, #0x28
10005ca0: bd80         	pop	{r7, pc}
10005ca2: 9802         	ldr	r0, [sp, #0x8]
10005ca4: 9007         	str	r0, [sp, #0x1c]
10005ca6: e7f9         	b	0x10005c9c <defmt_rtt::channel::available_buffer_size::hdc89fcdf433072b0+0x68> @ imm = #-0xe
10005ca8: 4808         	ldr	r0, [pc, #0x20]         @ 0x10005ccc <defmt_rtt::channel::available_buffer_size::hdc89fcdf433072b0+0x98>
10005caa: f007 fbd3    	bl	0x1000d454 <core::panicking::panic_const::panic_const_sub_overflow::hcef9c8e46a564551> @ imm = #0x77a6
10005cae: 9804         	ldr	r0, [sp, #0x10]
10005cb0: 1e41         	subs	r1, r0, #0x1
10005cb2: 9100         	str	r1, [sp]
10005cb4: 2800         	cmp	r0, #0x0
10005cb6: d006         	beq	0x10005cc6 <defmt_rtt::channel::available_buffer_size::hdc89fcdf433072b0+0x92> @ imm = #0xc
10005cb8: e002         	b	0x10005cc0 <defmt_rtt::channel::available_buffer_size::hdc89fcdf433072b0+0x8c> @ imm = #0x4
10005cba: 4806         	ldr	r0, [pc, #0x18]         @ 0x10005cd4 <defmt_rtt::channel::available_buffer_size::hdc89fcdf433072b0+0xa0>
10005cbc: f007 fbca    	bl	0x1000d454 <core::panicking::panic_const::panic_const_sub_overflow::hcef9c8e46a564551> @ imm = #0x7794
10005cc0: 9800         	ldr	r0, [sp]
10005cc2: 9007         	str	r0, [sp, #0x1c]
10005cc4: e7ea         	b	0x10005c9c <defmt_rtt::channel::available_buffer_size::hdc89fcdf433072b0+0x68> @ imm = #-0x2c
10005cc6: 4803         	ldr	r0, [pc, #0xc]          @ 0x10005cd4 <defmt_rtt::channel::available_buffer_size::hdc89fcdf433072b0+0xa0>
10005cc8: f007 fbc4    	bl	0x1000d454 <core::panicking::panic_const::panic_const_sub_overflow::hcef9c8e46a564551> @ imm = #0x7788
10005ccc: 90 14 01 10  	.word	0x10011490
10005cd0: 80 14 01 10  	.word	0x10011480
10005cd4: a0 14 01 10  	.word	0x100114a0

10005cd8 <<defmt_rtt::Logger as defmt::traits::Logger>::acquire::hd62025c7e860b8d5>:
10005cd8: b580         	push	{r7, lr}
10005cda: af00         	add	r7, sp, #0x0
10005cdc: b08c         	sub	sp, #0x30
10005cde: f005 fc1f    	bl	0x1000b520 <_critical_section_1_0_acquire> @ imm = #0x583e
10005ce2: 4601         	mov	r1, r0
10005ce4: 9102         	str	r1, [sp, #0x8]
10005ce6: a90b         	add	r1, sp, #0x2c
10005ce8: 7008         	strb	r0, [r1]
10005cea: a903         	add	r1, sp, #0xc
10005cec: 2000         	movs	r0, #0x0
10005cee: 7008         	strb	r0, [r1]
10005cf0: 9903         	ldr	r1, [sp, #0xc]
10005cf2: 480f         	ldr	r0, [pc, #0x3c]         @ 0x10005d30 <<defmt_rtt::Logger as defmt::traits::Logger>::acquire::hd62025c7e860b8d5+0x58>
10005cf4: f7ff fadb    	bl	0x100052ae <core::sync::atomic::AtomicBool::load::h99717df63a382aa3> @ imm = #-0xa4a
10005cf8: 2800         	cmp	r0, #0x0
10005cfa: d110         	bne	0x10005d1e <<defmt_rtt::Logger as defmt::traits::Logger>::acquire::hd62025c7e860b8d5+0x46> @ imm = #0x20
10005cfc: e7ff         	b	0x10005cfe <<defmt_rtt::Logger as defmt::traits::Logger>::acquire::hd62025c7e860b8d5+0x26> @ imm = #-0x2
10005cfe: a90a         	add	r1, sp, #0x28
10005d00: 2000         	movs	r0, #0x0
10005d02: 7008         	strb	r0, [r1]
10005d04: 9a0a         	ldr	r2, [sp, #0x28]
10005d06: 480a         	ldr	r0, [pc, #0x28]         @ 0x10005d30 <<defmt_rtt::Logger as defmt::traits::Logger>::acquire::hd62025c7e860b8d5+0x58>
10005d08: 2101         	movs	r1, #0x1
10005d0a: f7ff fade    	bl	0x100052ca <core::sync::atomic::AtomicBool::store::hb7ef6fd955d99cf8> @ imm = #-0xa44
10005d0e: 9802         	ldr	r0, [sp, #0x8]
10005d10: 4908         	ldr	r1, [pc, #0x20]         @ 0x10005d34 <<defmt_rtt::Logger as defmt::traits::Logger>::acquire::hd62025c7e860b8d5+0x5c>
10005d12: 7008         	strb	r0, [r1]
10005d14: 4808         	ldr	r0, [pc, #0x20]         @ 0x10005d38 <<defmt_rtt::Logger as defmt::traits::Logger>::acquire::hd62025c7e860b8d5+0x60>
10005d16: f7ff fdf9    	bl	0x1000590c <defmt::encoding::Encoder::start_frame::haab4a654ee65a674> @ imm = #-0x40e
10005d1a: b00c         	add	sp, #0x30
10005d1c: bd80         	pop	{r7, pc}
10005d1e: 4907         	ldr	r1, [pc, #0x1c]         @ 0x10005d3c <<defmt_rtt::Logger as defmt::traits::Logger>::acquire::hd62025c7e860b8d5+0x64>
10005d20: a804         	add	r0, sp, #0x10
10005d22: 9001         	str	r0, [sp, #0x4]
10005d24: f7ff faa6    	bl	0x10005274 <core::fmt::Arguments::new_const::h27364244335e4a43> @ imm = #-0xab4
10005d28: 9801         	ldr	r0, [sp, #0x4]
10005d2a: 4905         	ldr	r1, [pc, #0x14]         @ 0x10005d40 <<defmt_rtt::Logger as defmt::traits::Logger>::acquire::hd62025c7e860b8d5+0x68>
10005d2c: f006 fb26    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #0x664c
10005d30: f2 fb 03 20  	.word	0x2003fbf2
10005d34: f3 fb 03 20  	.word	0x2003fbf3
10005d38: f4 fb 03 20  	.word	0x2003fbf4
10005d3c: d0 14 01 10  	.word	0x100114d0
10005d40: 34 15 01 10  	.word	0x10011534

10005d44 <<defmt_rtt::Logger as defmt::traits::Logger>::release::h2ef48d431a383cfd>:
10005d44: b580         	push	{r7, lr}
10005d46: af00         	add	r7, sp, #0x0
10005d48: b084         	sub	sp, #0x10
10005d4a: 480a         	ldr	r0, [pc, #0x28]         @ 0x10005d74 <<defmt_rtt::Logger as defmt::traits::Logger>::release::h2ef48d431a383cfd+0x30>
10005d4c: f7ff fdf0    	bl	0x10005930 <defmt::encoding::Encoder::end_frame::h144f2804374066d7> @ imm = #-0x420
10005d50: a801         	add	r0, sp, #0x4
10005d52: 2100         	movs	r1, #0x0
10005d54: 7001         	strb	r1, [r0]
10005d56: 9a01         	ldr	r2, [sp, #0x4]
10005d58: 4807         	ldr	r0, [pc, #0x1c]         @ 0x10005d78 <<defmt_rtt::Logger as defmt::traits::Logger>::release::h2ef48d431a383cfd+0x34>
10005d5a: f7ff fab6    	bl	0x100052ca <core::sync::atomic::AtomicBool::store::hb7ef6fd955d99cf8> @ imm = #-0xa94
10005d5e: 4807         	ldr	r0, [pc, #0x1c]         @ 0x10005d7c <<defmt_rtt::Logger as defmt::traits::Logger>::release::h2ef48d431a383cfd+0x38>
10005d60: 7800         	ldrb	r0, [r0]
10005d62: a902         	add	r1, sp, #0x8
10005d64: 7008         	strb	r0, [r1]
10005d66: a903         	add	r1, sp, #0xc
10005d68: 7008         	strb	r0, [r1]
10005d6a: f005 fbde    	bl	0x1000b52a <_critical_section_1_0_release> @ imm = #0x57bc
10005d6e: b004         	add	sp, #0x10
10005d70: bd80         	pop	{r7, pc}
10005d72: 46c0         	mov	r8, r8
10005d74: f4 fb 03 20  	.word	0x2003fbf4
10005d78: f2 fb 03 20  	.word	0x2003fbf2
10005d7c: f3 fb 03 20  	.word	0x2003fbf3

10005d80 <<defmt_rtt::Logger as defmt::traits::Logger>::write::h8dc3e74530465d73>:
10005d80: b580         	push	{r7, lr}
10005d82: af00         	add	r7, sp, #0x0
10005d84: b082         	sub	sp, #0x8
10005d86: 460a         	mov	r2, r1
10005d88: 4601         	mov	r1, r0
10005d8a: 9100         	str	r1, [sp]
10005d8c: 9201         	str	r2, [sp, #0x4]
10005d8e: 4802         	ldr	r0, [pc, #0x8]          @ 0x10005d98 <<defmt_rtt::Logger as defmt::traits::Logger>::write::h8dc3e74530465d73+0x18>
10005d90: f7ff fdc4    	bl	0x1000591c <defmt::encoding::Encoder::write::h940a070c4392d4df> @ imm = #-0x478
10005d94: b002         	add	sp, #0x8
10005d96: bd80         	pop	{r7, pc}
10005d98: f4 fb 03 20  	.word	0x2003fbf4

10005d9c <defmt_rtt::do_write::h58ea7ec8d85eff39>:
10005d9c: b580         	push	{r7, lr}
10005d9e: af00         	add	r7, sp, #0x0
10005da0: b084         	sub	sp, #0x10
10005da2: 9101         	str	r1, [sp, #0x4]
10005da4: 9000         	str	r0, [sp]
10005da6: 9002         	str	r0, [sp, #0x8]
10005da8: 9103         	str	r1, [sp, #0xc]
10005daa: f000 f807    	bl	0x10005dbc <defmt_rtt::handle::h7e02694eb368df92> @ imm = #0xe
10005dae: 9900         	ldr	r1, [sp]
10005db0: 9a01         	ldr	r2, [sp, #0x4]
10005db2: f7ff fdf1    	bl	0x10005998 <defmt_rtt::channel::Channel::write_all::h86d60f022f4ba872> @ imm = #-0x41e
10005db6: b004         	add	sp, #0x10
10005db8: bd80         	pop	{r7, pc}
10005dba: d4d4         	bmi	0x10005d66 <<defmt_rtt::Logger as defmt::traits::Logger>::release::h2ef48d431a383cfd+0x22> @ imm = #-0x58

10005dbc <defmt_rtt::handle::h7e02694eb368df92>:
10005dbc: b580         	push	{r7, lr}
10005dbe: af00         	add	r7, sp, #0x0
10005dc0: 4801         	ldr	r0, [pc, #0x4]          @ 0x10005dc8 <defmt_rtt::handle::h7e02694eb368df92+0xc>
10005dc2: 3018         	adds	r0, #0x18
10005dc4: bd80         	pop	{r7, pc}
10005dc6: 46c0         	mov	r8, r8
10005dc8: b8 fb 03 20  	.word	0x2003fbb8

10005dcc <_defmt_acquire>:
10005dcc: b580         	push	{r7, lr}
10005dce: af00         	add	r7, sp, #0x0
10005dd0: f7ff ff82    	bl	0x10005cd8 <<defmt_rtt::Logger as defmt::traits::Logger>::acquire::hd62025c7e860b8d5> @ imm = #-0xfc
10005dd4: bd80         	pop	{r7, pc}

10005dd6 <_defmt_release>:
10005dd6: b580         	push	{r7, lr}
10005dd8: af00         	add	r7, sp, #0x0
10005dda: f7ff ffb3    	bl	0x10005d44 <<defmt_rtt::Logger as defmt::traits::Logger>::release::h2ef48d431a383cfd> @ imm = #-0x9a
10005dde: bd80         	pop	{r7, pc}

10005de0 <_defmt_write>:
10005de0: b580         	push	{r7, lr}
10005de2: af00         	add	r7, sp, #0x0
10005de4: b082         	sub	sp, #0x8
10005de6: 9000         	str	r0, [sp]
10005de8: 9101         	str	r1, [sp, #0x4]
10005dea: f7ff ffc9    	bl	0x10005d80 <<defmt_rtt::Logger as defmt::traits::Logger>::write::h8dc3e74530465d73> @ imm = #-0x6e
10005dee: b002         	add	sp, #0x8
10005df0: bd80         	pop	{r7, pc}

10005df2 <core::ptr::read_volatile::h06f76b9e58422cde>:
10005df2: b580         	push	{r7, lr}
10005df4: af00         	add	r7, sp, #0x0
10005df6: b082         	sub	sp, #0x8
10005df8: 9000         	str	r0, [sp]
10005dfa: 9001         	str	r0, [sp, #0x4]
10005dfc: e7ff         	b	0x10005dfe <core::ptr::read_volatile::h06f76b9e58422cde+0xc> @ imm = #-0x2
10005dfe: 9800         	ldr	r0, [sp]
10005e00: 2201         	movs	r2, #0x1
10005e02: 4611         	mov	r1, r2
10005e04: f000 f804    	bl	0x10005e10 <core::ptr::read_volatile::precondition_check::h6df137c13ea3eff3> @ imm = #0x8
10005e08: e7ff         	b	0x10005e0a <core::ptr::read_volatile::h06f76b9e58422cde+0x18> @ imm = #-0x2
10005e0a: b002         	add	sp, #0x8
10005e0c: bd80         	pop	{r7, pc}
10005e0e: d4d4         	bmi	0x10005dba <defmt_rtt::do_write::h58ea7ec8d85eff39+0x1e> @ imm = #-0x58

10005e10 <core::ptr::read_volatile::precondition_check::h6df137c13ea3eff3>:
10005e10: b580         	push	{r7, lr}
10005e12: af00         	add	r7, sp, #0x0
10005e14: b090         	sub	sp, #0x40
10005e16: 9102         	str	r1, [sp, #0x8]
10005e18: 9003         	str	r0, [sp, #0xc]
10005e1a: 4613         	mov	r3, r2
10005e1c: 9304         	str	r3, [sp, #0x10]
10005e1e: 900b         	str	r0, [sp, #0x2c]
10005e20: 910c         	str	r1, [sp, #0x30]
10005e22: a80d         	add	r0, sp, #0x34
10005e24: 7002         	strb	r2, [r0]
10005e26: 481f         	ldr	r0, [pc, #0x7c]         @ 0x10005ea4 <core::ptr::read_volatile::precondition_check::h6df137c13ea3eff3+0x94>
10005e28: 900e         	str	r0, [sp, #0x38]
10005e2a: 0848         	lsrs	r0, r1, #0x1
10005e2c: 4a1e         	ldr	r2, [pc, #0x78]         @ 0x10005ea8 <core::ptr::read_volatile::precondition_check::h6df137c13ea3eff3+0x98>
10005e2e: 4010         	ands	r0, r2
10005e30: 1a09         	subs	r1, r1, r0
10005e32: 4a1e         	ldr	r2, [pc, #0x78]         @ 0x10005eac <core::ptr::read_volatile::precondition_check::h6df137c13ea3eff3+0x9c>
10005e34: 4608         	mov	r0, r1
10005e36: 4010         	ands	r0, r2
10005e38: 0889         	lsrs	r1, r1, #0x2
10005e3a: 4011         	ands	r1, r2
10005e3c: 1840         	adds	r0, r0, r1
10005e3e: 0901         	lsrs	r1, r0, #0x4
10005e40: 1841         	adds	r1, r0, r1
10005e42: 481b         	ldr	r0, [pc, #0x6c]         @ 0x10005eb0 <core::ptr::read_volatile::precondition_check::h6df137c13ea3eff3+0xa0>
10005e44: 4001         	ands	r1, r0
10005e46: 481b         	ldr	r0, [pc, #0x6c]         @ 0x10005eb4 <core::ptr::read_volatile::precondition_check::h6df137c13ea3eff3+0xa4>
10005e48: 4348         	muls	r0, r1, r0
10005e4a: 0e00         	lsrs	r0, r0, #0x18
10005e4c: 900f         	str	r0, [sp, #0x3c]
10005e4e: 980f         	ldr	r0, [sp, #0x3c]
10005e50: 2801         	cmp	r0, #0x1
10005e52: d108         	bne	0x10005e66 <core::ptr::read_volatile::precondition_check::h6df137c13ea3eff3+0x56> @ imm = #0x10
10005e54: e7ff         	b	0x10005e56 <core::ptr::read_volatile::precondition_check::h6df137c13ea3eff3+0x46> @ imm = #-0x2
10005e56: 9803         	ldr	r0, [sp, #0xc]
10005e58: 9902         	ldr	r1, [sp, #0x8]
10005e5a: 4602         	mov	r2, r0
10005e5c: 9201         	str	r2, [sp, #0x4]
10005e5e: 1e49         	subs	r1, r1, #0x1
10005e60: 4208         	tst	r0, r1
10005e62: d00d         	beq	0x10005e80 <core::ptr::read_volatile::precondition_check::h6df137c13ea3eff3+0x70> @ imm = #0x1a
10005e64: e011         	b	0x10005e8a <core::ptr::read_volatile::precondition_check::h6df137c13ea3eff3+0x7a> @ imm = #0x22
10005e66: 480f         	ldr	r0, [pc, #0x3c]         @ 0x10005ea4 <core::ptr::read_volatile::precondition_check::h6df137c13ea3eff3+0x94>
10005e68: 9005         	str	r0, [sp, #0x14]
10005e6a: 2001         	movs	r0, #0x1
10005e6c: 9006         	str	r0, [sp, #0x18]
10005e6e: 2000         	movs	r0, #0x0
10005e70: 9009         	str	r0, [sp, #0x24]
10005e72: 2104         	movs	r1, #0x4
10005e74: 9107         	str	r1, [sp, #0x1c]
10005e76: 9008         	str	r0, [sp, #0x20]
10005e78: 490f         	ldr	r1, [pc, #0x3c]         @ 0x10005eb8 <core::ptr::read_volatile::precondition_check::h6df137c13ea3eff3+0xa8>
10005e7a: a805         	add	r0, sp, #0x14
10005e7c: f006 fa7e    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #0x64fc
10005e80: 9804         	ldr	r0, [sp, #0x10]
10005e82: 07c0         	lsls	r0, r0, #0x1f
10005e84: 2800         	cmp	r0, #0x0
10005e86: d105         	bne	0x10005e94 <core::ptr::read_volatile::precondition_check::h6df137c13ea3eff3+0x84> @ imm = #0xa
10005e88: e000         	b	0x10005e8c <core::ptr::read_volatile::precondition_check::h6df137c13ea3eff3+0x7c> @ imm = #0x0
10005e8a: e004         	b	0x10005e96 <core::ptr::read_volatile::precondition_check::h6df137c13ea3eff3+0x86> @ imm = #0x8
10005e8c: 9801         	ldr	r0, [sp, #0x4]
10005e8e: 2800         	cmp	r0, #0x0
10005e90: d105         	bne	0x10005e9e <core::ptr::read_volatile::precondition_check::h6df137c13ea3eff3+0x8e> @ imm = #0xa
10005e92: e000         	b	0x10005e96 <core::ptr::read_volatile::precondition_check::h6df137c13ea3eff3+0x86> @ imm = #0x0
10005e94: e003         	b	0x10005e9e <core::ptr::read_volatile::precondition_check::h6df137c13ea3eff3+0x8e> @ imm = #0x6
10005e96: 4809         	ldr	r0, [pc, #0x24]         @ 0x10005ebc <core::ptr::read_volatile::precondition_check::h6df137c13ea3eff3+0xac>
10005e98: 21e3         	movs	r1, #0xe3
10005e9a: f006 faa1    	bl	0x1000c3e0 <core::panicking::panic_nounwind::h6901392fec1083b6> @ imm = #0x6542
10005e9e: b010         	add	sp, #0x40
10005ea0: bd80         	pop	{r7, pc}
10005ea2: 46c0         	mov	r8, r8
10005ea4: 70 15 01 10  	.word	0x10011570
10005ea8: 55 55 55 55  	.word	0x55555555
10005eac: 33 33 33 33  	.word	0x33333333
10005eb0: 0f 0f 0f 0f  	.word	0x0f0f0f0f
10005eb4: 01 01 01 01  	.word	0x01010101
10005eb8: d0 16 01 10  	.word	0x100116d0
10005ebc: 78 15 01 10  	.word	0x10011578

10005ec0 <core::hint::black_box::h329c228bb1cd2dac>:
10005ec0: b580         	push	{r7, lr}
10005ec2: af00         	add	r7, sp, #0x0
10005ec4: b082         	sub	sp, #0x8
10005ec6: 9000         	str	r0, [sp]
10005ec8: 9001         	str	r0, [sp, #0x4]
10005eca: a801         	add	r0, sp, #0x4
10005ecc: 9801         	ldr	r0, [sp, #0x4]
10005ece: b002         	add	sp, #0x8
10005ed0: bd80         	pop	{r7, pc}

10005ed2 <core::hint::black_box::hec00eeda9df6ca30>:
10005ed2: b580         	push	{r7, lr}
10005ed4: af00         	add	r7, sp, #0x0
10005ed6: b082         	sub	sp, #0x8
10005ed8: 9000         	str	r0, [sp]
10005eda: 9001         	str	r0, [sp, #0x4]
10005edc: a801         	add	r0, sp, #0x4
10005ede: 9801         	ldr	r0, [sp, #0x4]
10005ee0: b002         	add	sp, #0x8
10005ee2: bd80         	pop	{r7, pc}

10005ee4 <__symex_allow_access>:
10005ee4: b580         	push	{r7, lr}
10005ee6: af00         	add	r7, sp, #0x0
10005ee8: b086         	sub	sp, #0x18
10005eea: 9202         	str	r2, [sp, #0x8]
10005eec: 9101         	str	r1, [sp, #0x4]
10005eee: 9003         	str	r0, [sp, #0xc]
10005ef0: 9104         	str	r1, [sp, #0x10]
10005ef2: 9205         	str	r2, [sp, #0x14]
10005ef4: f7ff ffe4    	bl	0x10005ec0 <core::hint::black_box::h329c228bb1cd2dac> @ imm = #-0x38
10005ef8: 9801         	ldr	r0, [sp, #0x4]
10005efa: f7ff ffea    	bl	0x10005ed2 <core::hint::black_box::hec00eeda9df6ca30> @ imm = #-0x2c
10005efe: 9802         	ldr	r0, [sp, #0x8]
10005f00: f7ff ffe7    	bl	0x10005ed2 <core::hint::black_box::hec00eeda9df6ca30> @ imm = #-0x32
10005f04: 2000         	movs	r0, #0x0
10005f06: f7ff ff74    	bl	0x10005df2 <core::ptr::read_volatile::h06f76b9e58422cde> @ imm = #-0x118
10005f0a: b006         	add	sp, #0x18
10005f0c: bd80         	pop	{r7, pc}

10005f0e <__symex_set_priority>:
10005f0e: b580         	push	{r7, lr}
10005f10: af00         	add	r7, sp, #0x0
10005f12: b084         	sub	sp, #0x10
10005f14: 9101         	str	r1, [sp, #0x4]
10005f16: 9002         	str	r0, [sp, #0x8]
10005f18: 9103         	str	r1, [sp, #0xc]
10005f1a: f7ff ffd1    	bl	0x10005ec0 <core::hint::black_box::h329c228bb1cd2dac> @ imm = #-0x5e
10005f1e: 9801         	ldr	r0, [sp, #0x4]
10005f20: f7ff ffd7    	bl	0x10005ed2 <core::hint::black_box::hec00eeda9df6ca30> @ imm = #-0x52
10005f24: 2000         	movs	r0, #0x0
10005f26: f7ff ff64    	bl	0x10005df2 <core::ptr::read_volatile::h06f76b9e58422cde> @ imm = #-0x138
10005f2a: b004         	add	sp, #0x10
10005f2c: bd80         	pop	{r7, pc}

10005f2e <analyze>:
10005f2e: b580         	push	{r7, lr}
10005f30: af00         	add	r7, sp, #0x0
10005f32: b082         	sub	sp, #0x8
10005f34: 9001         	str	r0, [sp, #0x4]
10005f36: f7ff ffc3    	bl	0x10005ec0 <core::hint::black_box::h329c228bb1cd2dac> @ imm = #-0x7a
10005f3a: b002         	add	sp, #0x8
10005f3c: bd80         	pop	{r7, pc}

10005f3e <__symex_set_priority_of_resource>:
10005f3e: b580         	push	{r7, lr}
10005f40: af00         	add	r7, sp, #0x0
10005f42: b086         	sub	sp, #0x18
10005f44: 9202         	str	r2, [sp, #0x8]
10005f46: 9101         	str	r1, [sp, #0x4]
10005f48: 9003         	str	r0, [sp, #0xc]
10005f4a: 9104         	str	r1, [sp, #0x10]
10005f4c: 9205         	str	r2, [sp, #0x14]
10005f4e: f7ff ffc0    	bl	0x10005ed2 <core::hint::black_box::hec00eeda9df6ca30> @ imm = #-0x80
10005f52: 9801         	ldr	r0, [sp, #0x4]
10005f54: f7ff ffbd    	bl	0x10005ed2 <core::hint::black_box::hec00eeda9df6ca30> @ imm = #-0x86
10005f58: 9802         	ldr	r0, [sp, #0x8]
10005f5a: f7ff ffba    	bl	0x10005ed2 <core::hint::black_box::hec00eeda9df6ca30> @ imm = #-0x8c
10005f5e: 2000         	movs	r0, #0x0
10005f60: f7ff ff47    	bl	0x10005df2 <core::ptr::read_volatile::h06f76b9e58422cde> @ imm = #-0x172
10005f64: b006         	add	sp, #0x18
10005f66: bd80         	pop	{r7, pc}

10005f68 <<usize as core::iter::range::Step>::forward_unchecked::he10ad1022a796cca>:
10005f68: b580         	push	{r7, lr}
10005f6a: af00         	add	r7, sp, #0x0
10005f6c: b084         	sub	sp, #0x10
10005f6e: 9100         	str	r1, [sp]
10005f70: 9001         	str	r0, [sp, #0x4]
10005f72: 9002         	str	r0, [sp, #0x8]
10005f74: 9103         	str	r1, [sp, #0xc]
10005f76: e7ff         	b	0x10005f78 <<usize as core::iter::range::Step>::forward_unchecked::he10ad1022a796cca+0x10> @ imm = #-0x2
10005f78: 9900         	ldr	r1, [sp]
10005f7a: 9801         	ldr	r0, [sp, #0x4]
10005f7c: f000 f806    	bl	0x10005f8c <core::num::<impl usize>::unchecked_add::precondition_check::hf1c6ceb5ba3c2eda> @ imm = #0xc
10005f80: e7ff         	b	0x10005f82 <<usize as core::iter::range::Step>::forward_unchecked::he10ad1022a796cca+0x1a> @ imm = #-0x2
10005f82: 9801         	ldr	r0, [sp, #0x4]
10005f84: 9900         	ldr	r1, [sp]
10005f86: 1840         	adds	r0, r0, r1
10005f88: b004         	add	sp, #0x10
10005f8a: bd80         	pop	{r7, pc}

10005f8c <core::num::<impl usize>::unchecked_add::precondition_check::hf1c6ceb5ba3c2eda>:
10005f8c: b580         	push	{r7, lr}
10005f8e: af00         	add	r7, sp, #0x0
10005f90: b084         	sub	sp, #0x10
10005f92: 9101         	str	r1, [sp, #0x4]
10005f94: 4601         	mov	r1, r0
10005f96: 9801         	ldr	r0, [sp, #0x4]
10005f98: 9102         	str	r1, [sp, #0x8]
10005f9a: 9003         	str	r0, [sp, #0xc]
10005f9c: 1808         	adds	r0, r1, r0
10005f9e: 4288         	cmp	r0, r1
10005fa0: d302         	blo	0x10005fa8 <core::num::<impl usize>::unchecked_add::precondition_check::hf1c6ceb5ba3c2eda+0x1c> @ imm = #0x4
10005fa2: e7ff         	b	0x10005fa4 <core::num::<impl usize>::unchecked_add::precondition_check::hf1c6ceb5ba3c2eda+0x18> @ imm = #-0x2
10005fa4: b004         	add	sp, #0x10
10005fa6: bd80         	pop	{r7, pc}
10005fa8: 4801         	ldr	r0, [pc, #0x4]          @ 0x10005fb0 <core::num::<impl usize>::unchecked_add::precondition_check::hf1c6ceb5ba3c2eda+0x24>
10005faa: 21ba         	movs	r1, #0xba
10005fac: f006 fa18    	bl	0x1000c3e0 <core::panicking::panic_nounwind::h6901392fec1083b6> @ imm = #0x6430
10005fb0: e0 16 01 10  	.word	0x100116e0

10005fb4 <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next::h3f3b5f6ece6bd4b0>:
10005fb4: b580         	push	{r7, lr}
10005fb6: af00         	add	r7, sp, #0x0
10005fb8: b082         	sub	sp, #0x8
10005fba: 9001         	str	r0, [sp, #0x4]
10005fbc: f000 f809    	bl	0x10005fd2 <<core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next::h117edf4aea5fb6b8> @ imm = #0x12
10005fc0: b002         	add	sp, #0x8
10005fc2: bd80         	pop	{r7, pc}

10005fc4 <<I as core::iter::traits::collect::IntoIterator>::into_iter::hcd2f3c39bb368951>:
10005fc4: b580         	push	{r7, lr}
10005fc6: af00         	add	r7, sp, #0x0
10005fc8: b082         	sub	sp, #0x8
10005fca: 9000         	str	r0, [sp]
10005fcc: 9101         	str	r1, [sp, #0x4]
10005fce: b002         	add	sp, #0x8
10005fd0: bd80         	pop	{r7, pc}

10005fd2 <<core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next::h117edf4aea5fb6b8>:
10005fd2: b580         	push	{r7, lr}
10005fd4: af00         	add	r7, sp, #0x0
10005fd6: b08a         	sub	sp, #0x28
10005fd8: 4601         	mov	r1, r0
10005fda: 9103         	str	r1, [sp, #0xc]
10005fdc: 9106         	str	r1, [sp, #0x18]
10005fde: 1d08         	adds	r0, r1, #0x4
10005fe0: 9108         	str	r1, [sp, #0x20]
10005fe2: 9009         	str	r0, [sp, #0x24]
10005fe4: 6808         	ldr	r0, [r1]
10005fe6: 6849         	ldr	r1, [r1, #0x4]
10005fe8: 4288         	cmp	r0, r1
10005fea: d303         	blo	0x10005ff4 <<core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next::h117edf4aea5fb6b8+0x22> @ imm = #0x6
10005fec: e7ff         	b	0x10005fee <<core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next::h117edf4aea5fb6b8+0x1c> @ imm = #-0x2
10005fee: 2000         	movs	r0, #0x0
10005ff0: 9004         	str	r0, [sp, #0x10]
10005ff2: e00f         	b	0x10006014 <<core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next::h117edf4aea5fb6b8+0x42> @ imm = #0x1e
10005ff4: 9803         	ldr	r0, [sp, #0xc]
10005ff6: 6800         	ldr	r0, [r0]
10005ff8: 9001         	str	r0, [sp, #0x4]
10005ffa: 9007         	str	r0, [sp, #0x1c]
10005ffc: 2101         	movs	r1, #0x1
10005ffe: 9102         	str	r1, [sp, #0x8]
10006000: f7ff ffb2    	bl	0x10005f68 <<usize as core::iter::range::Step>::forward_unchecked::he10ad1022a796cca> @ imm = #-0x9c
10006004: 9b03         	ldr	r3, [sp, #0xc]
10006006: 9901         	ldr	r1, [sp, #0x4]
10006008: 4602         	mov	r2, r0
1000600a: 9802         	ldr	r0, [sp, #0x8]
1000600c: 601a         	str	r2, [r3]
1000600e: 9105         	str	r1, [sp, #0x14]
10006010: 9004         	str	r0, [sp, #0x10]
10006012: e7ff         	b	0x10006014 <<core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next::h117edf4aea5fb6b8+0x42> @ imm = #-0x2
10006014: 9804         	ldr	r0, [sp, #0x10]
10006016: 9905         	ldr	r1, [sp, #0x14]
10006018: b00a         	add	sp, #0x28
1000601a: bd80         	pop	{r7, pc}

1000601c <<core::ops::range::RangeInclusive<T> as core::ops::range::RangeBounds<T>>::start_bound::h5cd4638a835c4ab1>:
1000601c: b580         	push	{r7, lr}
1000601e: af00         	add	r7, sp, #0x0
10006020: b083         	sub	sp, #0xc
10006022: 9002         	str	r0, [sp, #0x8]
10006024: 9001         	str	r0, [sp, #0x4]
10006026: 2000         	movs	r0, #0x0
10006028: 9000         	str	r0, [sp]
1000602a: 9800         	ldr	r0, [sp]
1000602c: 9901         	ldr	r1, [sp, #0x4]
1000602e: b003         	add	sp, #0xc
10006030: bd80         	pop	{r7, pc}

10006032 <<core::ops::range::RangeInclusive<T> as core::ops::range::RangeBounds<T>>::end_bound::h85b8289ea6886fd7>:
10006032: b580         	push	{r7, lr}
10006034: af00         	add	r7, sp, #0x0
10006036: b084         	sub	sp, #0x10
10006038: 9000         	str	r0, [sp]
1000603a: 9003         	str	r0, [sp, #0xc]
1000603c: 7a00         	ldrb	r0, [r0, #0x8]
1000603e: 07c0         	lsls	r0, r0, #0x1f
10006040: 2800         	cmp	r0, #0x0
10006042: d106         	bne	0x10006052 <<core::ops::range::RangeInclusive<T> as core::ops::range::RangeBounds<T>>::end_bound::h85b8289ea6886fd7+0x20> @ imm = #0xc
10006044: e7ff         	b	0x10006046 <<core::ops::range::RangeInclusive<T> as core::ops::range::RangeBounds<T>>::end_bound::h85b8289ea6886fd7+0x14> @ imm = #-0x2
10006046: 9800         	ldr	r0, [sp]
10006048: 1d00         	adds	r0, r0, #0x4
1000604a: 9002         	str	r0, [sp, #0x8]
1000604c: 2000         	movs	r0, #0x0
1000604e: 9001         	str	r0, [sp, #0x4]
10006050: e005         	b	0x1000605e <<core::ops::range::RangeInclusive<T> as core::ops::range::RangeBounds<T>>::end_bound::h85b8289ea6886fd7+0x2c> @ imm = #0xa
10006052: 9800         	ldr	r0, [sp]
10006054: 1d00         	adds	r0, r0, #0x4
10006056: 9002         	str	r0, [sp, #0x8]
10006058: 2001         	movs	r0, #0x1
1000605a: 9001         	str	r0, [sp, #0x4]
1000605c: e7ff         	b	0x1000605e <<core::ops::range::RangeInclusive<T> as core::ops::range::RangeBounds<T>>::end_bound::h85b8289ea6886fd7+0x2c> @ imm = #-0x2
1000605e: 9801         	ldr	r0, [sp, #0x4]
10006060: 9902         	ldr	r1, [sp, #0x8]
10006062: b004         	add	sp, #0x10
10006064: bd80         	pop	{r7, pc}

10006066 <<core::ops::range::RangeInclusive<T> as core::iter::range::RangeInclusiveIteratorImpl>::spec_next::h03bd5da6a1722700>:
10006066: b580         	push	{r7, lr}
10006068: af00         	add	r7, sp, #0x0
1000606a: b090         	sub	sp, #0x40
1000606c: 9004         	str	r0, [sp, #0x10]
1000606e: 9008         	str	r0, [sp, #0x20]
10006070: 7a00         	ldrb	r0, [r0, #0x8]
10006072: 07c0         	lsls	r0, r0, #0x1f
10006074: 2800         	cmp	r0, #0x0
10006076: d109         	bne	0x1000608c <<core::ops::range::RangeInclusive<T> as core::iter::range::RangeInclusiveIteratorImpl>::spec_next::h03bd5da6a1722700+0x26> @ imm = #0x12
10006078: e7ff         	b	0x1000607a <<core::ops::range::RangeInclusive<T> as core::iter::range::RangeInclusiveIteratorImpl>::spec_next::h03bd5da6a1722700+0x14> @ imm = #-0x2
1000607a: 9904         	ldr	r1, [sp, #0x10]
1000607c: 1d08         	adds	r0, r1, #0x4
1000607e: 910c         	str	r1, [sp, #0x30]
10006080: 900d         	str	r0, [sp, #0x34]
10006082: 6808         	ldr	r0, [r1]
10006084: 6849         	ldr	r1, [r1, #0x4]
10006086: 4288         	cmp	r0, r1
10006088: d816         	bhi	0x100060b8 <<core::ops::range::RangeInclusive<T> as core::iter::range::RangeInclusiveIteratorImpl>::spec_next::h03bd5da6a1722700+0x52> @ imm = #0x2c
1000608a: e000         	b	0x1000608e <<core::ops::range::RangeInclusive<T> as core::iter::range::RangeInclusiveIteratorImpl>::spec_next::h03bd5da6a1722700+0x28> @ imm = #0x0
1000608c: e014         	b	0x100060b8 <<core::ops::range::RangeInclusive<T> as core::iter::range::RangeInclusiveIteratorImpl>::spec_next::h03bd5da6a1722700+0x52> @ imm = #0x28
1000608e: 9804         	ldr	r0, [sp, #0x10]
10006090: 1d01         	adds	r1, r0, #0x4
10006092: 900e         	str	r0, [sp, #0x38]
10006094: 910f         	str	r1, [sp, #0x3c]
10006096: 6801         	ldr	r1, [r0]
10006098: 6842         	ldr	r2, [r0, #0x4]
1000609a: a809         	add	r0, sp, #0x24
1000609c: 9001         	str	r0, [sp, #0x4]
1000609e: 2000         	movs	r0, #0x0
100060a0: 9002         	str	r0, [sp, #0x8]
100060a2: 2001         	movs	r0, #0x1
100060a4: 4291         	cmp	r1, r2
100060a6: 9003         	str	r0, [sp, #0xc]
100060a8: d301         	blo	0x100060ae <<core::ops::range::RangeInclusive<T> as core::iter::range::RangeInclusiveIteratorImpl>::spec_next::h03bd5da6a1722700+0x48> @ imm = #0x2
100060aa: 9802         	ldr	r0, [sp, #0x8]
100060ac: 9003         	str	r0, [sp, #0xc]
100060ae: 9901         	ldr	r1, [sp, #0x4]
100060b0: 9803         	ldr	r0, [sp, #0xc]
100060b2: 7008         	strb	r0, [r1]
100060b4: d309         	blo	0x100060ca <<core::ops::range::RangeInclusive<T> as core::iter::range::RangeInclusiveIteratorImpl>::spec_next::h03bd5da6a1722700+0x64> @ imm = #0x12
100060b6: e002         	b	0x100060be <<core::ops::range::RangeInclusive<T> as core::iter::range::RangeInclusiveIteratorImpl>::spec_next::h03bd5da6a1722700+0x58> @ imm = #0x4
100060b8: 2000         	movs	r0, #0x0
100060ba: 9005         	str	r0, [sp, #0x14]
100060bc: e016         	b	0x100060ec <<core::ops::range::RangeInclusive<T> as core::iter::range::RangeInclusiveIteratorImpl>::spec_next::h03bd5da6a1722700+0x86> @ imm = #0x2c
100060be: 9804         	ldr	r0, [sp, #0x10]
100060c0: 2101         	movs	r1, #0x1
100060c2: 7201         	strb	r1, [r0, #0x8]
100060c4: 6800         	ldr	r0, [r0]
100060c6: 9007         	str	r0, [sp, #0x1c]
100060c8: e00b         	b	0x100060e2 <<core::ops::range::RangeInclusive<T> as core::iter::range::RangeInclusiveIteratorImpl>::spec_next::h03bd5da6a1722700+0x7c> @ imm = #0x16
100060ca: 9804         	ldr	r0, [sp, #0x10]
100060cc: 6800         	ldr	r0, [r0]
100060ce: 2101         	movs	r1, #0x1
100060d0: f000 f8ef    	bl	0x100062b2 <<usize as core::iter::range::Step>::forward_unchecked::h6a9cbfccde490c7c> @ imm = #0x1de
100060d4: 9904         	ldr	r1, [sp, #0x10]
100060d6: 900a         	str	r0, [sp, #0x28]
100060d8: 910b         	str	r1, [sp, #0x2c]
100060da: 680a         	ldr	r2, [r1]
100060dc: 9207         	str	r2, [sp, #0x1c]
100060de: 6008         	str	r0, [r1]
100060e0: e7ff         	b	0x100060e2 <<core::ops::range::RangeInclusive<T> as core::iter::range::RangeInclusiveIteratorImpl>::spec_next::h03bd5da6a1722700+0x7c> @ imm = #-0x2
100060e2: 9807         	ldr	r0, [sp, #0x1c]
100060e4: 9006         	str	r0, [sp, #0x18]
100060e6: 2001         	movs	r0, #0x1
100060e8: 9005         	str	r0, [sp, #0x14]
100060ea: e7ff         	b	0x100060ec <<core::ops::range::RangeInclusive<T> as core::iter::range::RangeInclusiveIteratorImpl>::spec_next::h03bd5da6a1722700+0x86> @ imm = #-0x2
100060ec: 9805         	ldr	r0, [sp, #0x14]
100060ee: 9906         	ldr	r1, [sp, #0x18]
100060f0: b010         	add	sp, #0x40
100060f2: bd80         	pop	{r7, pc}

100060f4 <rp2040_pac::generic::mask_u32::h03ba998ad65de185>:
100060f4: b580         	push	{r7, lr}
100060f6: af00         	add	r7, sp, #0x0
100060f8: 203f         	movs	r0, #0x3f
100060fa: bd80         	pop	{r7, pc}

100060fc <rp2040_pac::generic::mask_u32::h410e8909533cdbf5>:
100060fc: b580         	push	{r7, lr}
100060fe: af00         	add	r7, sp, #0x0
10006100: 4800         	ldr	r0, [pc, #0x0]          @ 0x10006104 <rp2040_pac::generic::mask_u32::h410e8909533cdbf5+0x8>
10006102: bd80         	pop	{r7, pc}
10006104: ff 3f 00 00  	.word	0x00003fff

10006108 <rp2040_pac::generic::mask_u32::h42ec560ca9ea22d1>:
10006108: b580         	push	{r7, lr}
1000610a: af00         	add	r7, sp, #0x0
1000610c: 2007         	movs	r0, #0x7
1000610e: bd80         	pop	{r7, pc}

10006110 <rp2040_pac::generic::mask_u32::h67ab29530e716b7a>:
10006110: b580         	push	{r7, lr}
10006112: af00         	add	r7, sp, #0x0
10006114: 201f         	movs	r0, #0x1f
10006116: bd80         	pop	{r7, pc}

10006118 <rp2040_pac::generic::mask_u32::hac8ad933706b19ca>:
10006118: b580         	push	{r7, lr}
1000611a: af00         	add	r7, sp, #0x0
1000611c: 4800         	ldr	r0, [pc, #0x0]          @ 0x10006120 <rp2040_pac::generic::mask_u32::hac8ad933706b19ca+0x8>
1000611e: bd80         	pop	{r7, pc}
10006120: ff 0f 00 00  	.word	0x00000fff

10006124 <rp2040_pac::generic::mask_u32::hc7080cfa0562be4f>:
10006124: b580         	push	{r7, lr}
10006126: af00         	add	r7, sp, #0x0
10006128: 2003         	movs	r0, #0x3
1000612a: bd80         	pop	{r7, pc}

1000612c <<fugit::rate::Rate<u32,_,_> as core::cmp::PartialOrd<fugit::rate::Rate<u32,_,_>>>::partial_cmp::h329b7cfb4ca576c6>:
1000612c: b580         	push	{r7, lr}
1000612e: af00         	add	r7, sp, #0x0
10006130: b082         	sub	sp, #0x8
10006132: 9000         	str	r0, [sp]
10006134: 9101         	str	r1, [sp, #0x4]
10006136: 6800         	ldr	r0, [r0]
10006138: 6809         	ldr	r1, [r1]
1000613a: f000 fec0    	bl	0x10006ebe <fugit::rate::Rate<u32,_,_>::const_partial_cmp::hc14c35c8b428e827> @ imm = #0xd80
1000613e: b002         	add	sp, #0x8
10006140: bd80         	pop	{r7, pc}

10006142 <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h24be1ce1371007d6E>:
10006142: b580         	push	{r7, lr}
10006144: af00         	add	r7, sp, #0x0
10006146: b084         	sub	sp, #0x10
10006148: 9100         	str	r1, [sp]
1000614a: 4601         	mov	r1, r0
1000614c: 9800         	ldr	r0, [sp]
1000614e: aa01         	add	r2, sp, #0x4
10006150: 7010         	strb	r0, [r2]
10006152: 9801         	ldr	r0, [sp, #0x4]
10006154: aa02         	add	r2, sp, #0x8
10006156: 7010         	strb	r0, [r2]
10006158: aa03         	add	r2, sp, #0xc
1000615a: 7010         	strb	r0, [r2]
1000615c: 7048         	strb	r0, [r1, #0x1]
1000615e: 2001         	movs	r0, #0x1
10006160: 7008         	strb	r0, [r1]
10006162: b004         	add	sp, #0x10
10006164: bd80         	pop	{r7, pc}

10006166 <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h286b0f2a9ab54df0E>:
10006166: b580         	push	{r7, lr}
10006168: af00         	add	r7, sp, #0x0
1000616a: b084         	sub	sp, #0x10
1000616c: 9100         	str	r1, [sp]
1000616e: 4601         	mov	r1, r0
10006170: 9800         	ldr	r0, [sp]
10006172: aa01         	add	r2, sp, #0x4
10006174: 7010         	strb	r0, [r2]
10006176: 9801         	ldr	r0, [sp, #0x4]
10006178: aa02         	add	r2, sp, #0x8
1000617a: 7010         	strb	r0, [r2]
1000617c: aa03         	add	r2, sp, #0xc
1000617e: 7010         	strb	r0, [r2]
10006180: 7048         	strb	r0, [r1, #0x1]
10006182: 2001         	movs	r0, #0x1
10006184: 7008         	strb	r0, [r1]
10006186: b004         	add	sp, #0x10
10006188: bd80         	pop	{r7, pc}

1000618a <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4782261a30384dafE>:
1000618a: b580         	push	{r7, lr}
1000618c: af00         	add	r7, sp, #0x0
1000618e: b084         	sub	sp, #0x10
10006190: 9100         	str	r1, [sp]
10006192: 4601         	mov	r1, r0
10006194: 9800         	ldr	r0, [sp]
10006196: aa01         	add	r2, sp, #0x4
10006198: 7010         	strb	r0, [r2]
1000619a: 9801         	ldr	r0, [sp, #0x4]
1000619c: aa02         	add	r2, sp, #0x8
1000619e: 7010         	strb	r0, [r2]
100061a0: aa03         	add	r2, sp, #0xc
100061a2: 7010         	strb	r0, [r2]
100061a4: 7048         	strb	r0, [r1, #0x1]
100061a6: 2001         	movs	r0, #0x1
100061a8: 7008         	strb	r0, [r1]
100061aa: b004         	add	sp, #0x10
100061ac: bd80         	pop	{r7, pc}

100061ae <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4d80d59e43eeb34cE>:
100061ae: b580         	push	{r7, lr}
100061b0: af00         	add	r7, sp, #0x0
100061b2: b084         	sub	sp, #0x10
100061b4: 4669         	mov	r1, sp
100061b6: 7008         	strb	r0, [r1]
100061b8: 9800         	ldr	r0, [sp]
100061ba: a902         	add	r1, sp, #0x8
100061bc: 7008         	strb	r0, [r1]
100061be: a903         	add	r1, sp, #0xc
100061c0: 7008         	strb	r0, [r1]
100061c2: a901         	add	r1, sp, #0x4
100061c4: 7008         	strb	r0, [r1]
100061c6: 9801         	ldr	r0, [sp, #0x4]
100061c8: b004         	add	sp, #0x10
100061ca: bd80         	pop	{r7, pc}

100061cc <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h7e50eab45757e124E>:
100061cc: b580         	push	{r7, lr}
100061ce: af00         	add	r7, sp, #0x0
100061d0: b084         	sub	sp, #0x10
100061d2: 9100         	str	r1, [sp]
100061d4: 4601         	mov	r1, r0
100061d6: 9800         	ldr	r0, [sp]
100061d8: aa01         	add	r2, sp, #0x4
100061da: 7010         	strb	r0, [r2]
100061dc: 9801         	ldr	r0, [sp, #0x4]
100061de: aa02         	add	r2, sp, #0x8
100061e0: 7010         	strb	r0, [r2]
100061e2: aa03         	add	r2, sp, #0xc
100061e4: 7010         	strb	r0, [r2]
100061e6: 7048         	strb	r0, [r1, #0x1]
100061e8: 2001         	movs	r0, #0x1
100061ea: 7008         	strb	r0, [r1]
100061ec: b004         	add	sp, #0x10
100061ee: bd80         	pop	{r7, pc}

100061f0 <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc2d2a418d9d712d5E>:
100061f0: b580         	push	{r7, lr}
100061f2: af00         	add	r7, sp, #0x0
100061f4: b084         	sub	sp, #0x10
100061f6: 9100         	str	r1, [sp]
100061f8: 4601         	mov	r1, r0
100061fa: 9800         	ldr	r0, [sp]
100061fc: aa01         	add	r2, sp, #0x4
100061fe: 7010         	strb	r0, [r2]
10006200: 9801         	ldr	r0, [sp, #0x4]
10006202: aa02         	add	r2, sp, #0x8
10006204: 7010         	strb	r0, [r2]
10006206: aa03         	add	r2, sp, #0xc
10006208: 7010         	strb	r0, [r2]
1000620a: 7048         	strb	r0, [r1, #0x1]
1000620c: 2001         	movs	r0, #0x1
1000620e: 7008         	strb	r0, [r1]
10006210: b004         	add	sp, #0x10
10006212: bd80         	pop	{r7, pc}

10006214 <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hf1f825079e99d042E>:
10006214: b580         	push	{r7, lr}
10006216: af00         	add	r7, sp, #0x0
10006218: b083         	sub	sp, #0xc
1000621a: 460b         	mov	r3, r1
1000621c: 4601         	mov	r1, r0
1000621e: 4668         	mov	r0, sp
10006220: 7003         	strb	r3, [r0]
10006222: 7042         	strb	r2, [r0, #0x1]
10006224: 9a00         	ldr	r2, [sp]
10006226: 7840         	ldrb	r0, [r0, #0x1]
10006228: ab01         	add	r3, sp, #0x4
1000622a: 701a         	strb	r2, [r3]
1000622c: 7058         	strb	r0, [r3, #0x1]
1000622e: ab02         	add	r3, sp, #0x8
10006230: 701a         	strb	r2, [r3]
10006232: 7058         	strb	r0, [r3, #0x1]
10006234: 704a         	strb	r2, [r1, #0x1]
10006236: 7088         	strb	r0, [r1, #0x2]
10006238: 2001         	movs	r0, #0x1
1000623a: 7008         	strb	r0, [r1]
1000623c: b003         	add	sp, #0xc
1000623e: bd80         	pop	{r7, pc}

10006240 <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hfdbba5a1a6741dd5E>:
10006240: b580         	push	{r7, lr}
10006242: af00         	add	r7, sp, #0x0
10006244: b084         	sub	sp, #0x10
10006246: 9100         	str	r1, [sp]
10006248: 4601         	mov	r1, r0
1000624a: 9800         	ldr	r0, [sp]
1000624c: aa01         	add	r2, sp, #0x4
1000624e: 7010         	strb	r0, [r2]
10006250: 9801         	ldr	r0, [sp, #0x4]
10006252: aa02         	add	r2, sp, #0x8
10006254: 7010         	strb	r0, [r2]
10006256: aa03         	add	r2, sp, #0xc
10006258: 7010         	strb	r0, [r2]
1000625a: 7048         	strb	r0, [r1, #0x1]
1000625c: 2001         	movs	r0, #0x1
1000625e: 7008         	strb	r0, [r1]
10006260: b004         	add	sp, #0x10
10006262: bd80         	pop	{r7, pc}

10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746>:
10006264: b580         	push	{r7, lr}
10006266: af00         	add	r7, sp, #0x0
10006268: b081         	sub	sp, #0x4
1000626a: 9000         	str	r0, [sp]
1000626c: 43c0         	mvns	r0, r0
1000626e: b001         	add	sp, #0x4
10006270: bd80         	pop	{r7, pc}

10006272 <<u32 as fugit::rate::ExtU32>::Hz::ha421d0a6a3793ef2>:
10006272: b580         	push	{r7, lr}
10006274: af00         	add	r7, sp, #0x0
10006276: b082         	sub	sp, #0x8
10006278: 9001         	str	r0, [sp, #0x4]
1000627a: f000 fe47    	bl	0x10006f0c <fugit::rate::Rate<u32,_,_>::Hz::hf33f06883bd1b051> @ imm = #0xc8e
1000627e: b002         	add	sp, #0x8
10006280: bd80         	pop	{r7, pc}

10006282 <<u32 as fugit::rate::ExtU32>::MHz::h808bfa1dcebc2205>:
10006282: b580         	push	{r7, lr}
10006284: af00         	add	r7, sp, #0x0
10006286: b082         	sub	sp, #0x8
10006288: 9001         	str	r0, [sp, #0x4]
1000628a: f000 fe53    	bl	0x10006f34 <fugit::rate::Rate<u32,_,_>::MHz::h9ff0be67f59ed89b> @ imm = #0xca6
1000628e: b002         	add	sp, #0x8
10006290: bd80         	pop	{r7, pc}

10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757>:
10006292: b580         	push	{r7, lr}
10006294: af00         	add	r7, sp, #0x0
10006296: b082         	sub	sp, #0x8
10006298: 9000         	str	r0, [sp]
1000629a: 9101         	str	r1, [sp, #0x4]
1000629c: 4308         	orrs	r0, r1
1000629e: b002         	add	sp, #0x8
100062a0: bd80         	pop	{r7, pc}

100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a>:
100062a2: b580         	push	{r7, lr}
100062a4: af00         	add	r7, sp, #0x0
100062a6: b082         	sub	sp, #0x8
100062a8: 9000         	str	r0, [sp]
100062aa: 9101         	str	r1, [sp, #0x4]
100062ac: 4008         	ands	r0, r1
100062ae: b002         	add	sp, #0x8
100062b0: bd80         	pop	{r7, pc}

100062b2 <<usize as core::iter::range::Step>::forward_unchecked::h6a9cbfccde490c7c>:
100062b2: b580         	push	{r7, lr}
100062b4: af00         	add	r7, sp, #0x0
100062b6: b084         	sub	sp, #0x10
100062b8: 9100         	str	r1, [sp]
100062ba: 9001         	str	r0, [sp, #0x4]
100062bc: 9002         	str	r0, [sp, #0x8]
100062be: 9103         	str	r1, [sp, #0xc]
100062c0: e7ff         	b	0x100062c2 <<usize as core::iter::range::Step>::forward_unchecked::h6a9cbfccde490c7c+0x10> @ imm = #-0x2
100062c2: 9900         	ldr	r1, [sp]
100062c4: 9801         	ldr	r0, [sp, #0x4]
100062c6: f000 f8cb    	bl	0x10006460 <core::num::<impl usize>::unchecked_add::precondition_check::h7f06eba353734459> @ imm = #0x196
100062ca: e7ff         	b	0x100062cc <<usize as core::iter::range::Step>::forward_unchecked::h6a9cbfccde490c7c+0x1a> @ imm = #-0x2
100062cc: 9801         	ldr	r0, [sp, #0x4]
100062ce: 9900         	ldr	r1, [sp]
100062d0: 1840         	adds	r0, r0, r1
100062d2: b004         	add	sp, #0x10
100062d4: bd80         	pop	{r7, pc}

100062d6 <core::cmp::PartialOrd::gt::hda2a2854aba77a5e>:
100062d6: b580         	push	{r7, lr}
100062d8: af00         	add	r7, sp, #0x0
100062da: b084         	sub	sp, #0x10
100062dc: 9002         	str	r0, [sp, #0x8]
100062de: 9103         	str	r1, [sp, #0xc]
100062e0: f7ff ff24    	bl	0x1000612c <<fugit::rate::Rate<u32,_,_> as core::cmp::PartialOrd<fugit::rate::Rate<u32,_,_>>>::partial_cmp::h329b7cfb4ca576c6> @ imm = #-0x1b8
100062e4: 4601         	mov	r1, r0
100062e6: a801         	add	r0, sp, #0x4
100062e8: 7001         	strb	r1, [r0]
100062ea: 7800         	ldrb	r0, [r0]
100062ec: 2802         	cmp	r0, #0x2
100062ee: d008         	beq	0x10006302 <core::cmp::PartialOrd::gt::hda2a2854aba77a5e+0x2c> @ imm = #0x10
100062f0: e7ff         	b	0x100062f2 <core::cmp::PartialOrd::gt::hda2a2854aba77a5e+0x1c> @ imm = #-0x2
100062f2: a801         	add	r0, sp, #0x4
100062f4: 7800         	ldrb	r0, [r0]
100062f6: 1e40         	subs	r0, r0, #0x1
100062f8: 4241         	rsbs	r1, r0, #0
100062fa: 4148         	adcs	r0, r1
100062fc: 4669         	mov	r1, sp
100062fe: 7008         	strb	r0, [r1]
10006300: e003         	b	0x1000630a <core::cmp::PartialOrd::gt::hda2a2854aba77a5e+0x34> @ imm = #0x6
10006302: 4669         	mov	r1, sp
10006304: 2000         	movs	r0, #0x0
10006306: 7008         	strb	r0, [r1]
10006308: e7ff         	b	0x1000630a <core::cmp::PartialOrd::gt::hda2a2854aba77a5e+0x34> @ imm = #-0x2
1000630a: 4668         	mov	r0, sp
1000630c: 7800         	ldrb	r0, [r0]
1000630e: b004         	add	sp, #0x10
10006310: bd80         	pop	{r7, pc}

10006312 <core::cmp::PartialOrd::le::hc20d10daa3abe420>:
10006312: b580         	push	{r7, lr}
10006314: af00         	add	r7, sp, #0x0
10006316: b084         	sub	sp, #0x10
10006318: 9002         	str	r0, [sp, #0x8]
1000631a: 9103         	str	r1, [sp, #0xc]
1000631c: f7ff ff06    	bl	0x1000612c <<fugit::rate::Rate<u32,_,_> as core::cmp::PartialOrd<fugit::rate::Rate<u32,_,_>>>::partial_cmp::h329b7cfb4ca576c6> @ imm = #-0x1f4
10006320: 4601         	mov	r1, r0
10006322: a801         	add	r0, sp, #0x4
10006324: 7001         	strb	r1, [r0]
10006326: 7800         	ldrb	r0, [r0]
10006328: 2802         	cmp	r0, #0x2
1000632a: d007         	beq	0x1000633c <core::cmp::PartialOrd::le::hc20d10daa3abe420+0x2a> @ imm = #0xe
1000632c: e7ff         	b	0x1000632e <core::cmp::PartialOrd::le::hc20d10daa3abe420+0x1c> @ imm = #-0x2
1000632e: a801         	add	r0, sp, #0x4
10006330: 7800         	ldrb	r0, [r0]
10006332: 1c40         	adds	r0, r0, #0x1
10006334: b2c0         	uxtb	r0, r0
10006336: 2802         	cmp	r0, #0x2
10006338: d305         	blo	0x10006346 <core::cmp::PartialOrd::le::hc20d10daa3abe420+0x34> @ imm = #0xa
1000633a: e7ff         	b	0x1000633c <core::cmp::PartialOrd::le::hc20d10daa3abe420+0x2a> @ imm = #-0x2
1000633c: 4669         	mov	r1, sp
1000633e: 2000         	movs	r0, #0x0
10006340: 7008         	strb	r0, [r1]
10006342: e004         	b	0x1000634e <core::cmp::PartialOrd::le::hc20d10daa3abe420+0x3c> @ imm = #0x8
10006344: defe         	trap
10006346: 4669         	mov	r1, sp
10006348: 2001         	movs	r0, #0x1
1000634a: 7008         	strb	r0, [r1]
1000634c: e7ff         	b	0x1000634e <core::cmp::PartialOrd::le::hc20d10daa3abe420+0x3c> @ imm = #-0x2
1000634e: 4668         	mov	r0, sp
10006350: 7800         	ldrb	r0, [r0]
10006352: b004         	add	sp, #0x10
10006354: bd80         	pop	{r7, pc}

10006356 <core::cmp::PartialOrd::lt::h6e256477957cd09a>:
10006356: b580         	push	{r7, lr}
10006358: af00         	add	r7, sp, #0x0
1000635a: b084         	sub	sp, #0x10
1000635c: 9002         	str	r0, [sp, #0x8]
1000635e: 9103         	str	r1, [sp, #0xc]
10006360: f7ff fee4    	bl	0x1000612c <<fugit::rate::Rate<u32,_,_> as core::cmp::PartialOrd<fugit::rate::Rate<u32,_,_>>>::partial_cmp::h329b7cfb4ca576c6> @ imm = #-0x238
10006364: 4601         	mov	r1, r0
10006366: a801         	add	r0, sp, #0x4
10006368: 7001         	strb	r1, [r0]
1000636a: 7800         	ldrb	r0, [r0]
1000636c: 2802         	cmp	r0, #0x2
1000636e: d008         	beq	0x10006382 <core::cmp::PartialOrd::lt::h6e256477957cd09a+0x2c> @ imm = #0x10
10006370: e7ff         	b	0x10006372 <core::cmp::PartialOrd::lt::h6e256477957cd09a+0x1c> @ imm = #-0x2
10006372: a801         	add	r0, sp, #0x4
10006374: 7800         	ldrb	r0, [r0]
10006376: 38ff         	subs	r0, #0xff
10006378: 4241         	rsbs	r1, r0, #0
1000637a: 4148         	adcs	r0, r1
1000637c: 4669         	mov	r1, sp
1000637e: 7008         	strb	r0, [r1]
10006380: e003         	b	0x1000638a <core::cmp::PartialOrd::lt::h6e256477957cd09a+0x34> @ imm = #0x6
10006382: 4669         	mov	r1, sp
10006384: 2000         	movs	r0, #0x0
10006386: 7008         	strb	r0, [r1]
10006388: e7ff         	b	0x1000638a <core::cmp::PartialOrd::lt::h6e256477957cd09a+0x34> @ imm = #-0x2
1000638a: 4668         	mov	r0, sp
1000638c: 7800         	ldrb	r0, [r0]
1000638e: b004         	add	sp, #0x10
10006390: bd80         	pop	{r7, pc}

10006392 <core::cmp::impls::<impl core::cmp::PartialEq for u32>::eq::h123d2dadff4d0744>:
10006392: b580         	push	{r7, lr}
10006394: af00         	add	r7, sp, #0x0
10006396: b082         	sub	sp, #0x8
10006398: 9000         	str	r0, [sp]
1000639a: 9101         	str	r1, [sp, #0x4]
1000639c: 6800         	ldr	r0, [r0]
1000639e: 6809         	ldr	r1, [r1]
100063a0: 1a40         	subs	r0, r0, r1
100063a2: 4241         	rsbs	r1, r0, #0
100063a4: 4148         	adcs	r0, r1
100063a6: b002         	add	sp, #0x8
100063a8: bd80         	pop	{r7, pc}

100063aa <core::fmt::rt::Argument::none::h82ccfbffa6d2b9d1>:
100063aa: b580         	push	{r7, lr}
100063ac: af00         	add	r7, sp, #0x0
100063ae: bd80         	pop	{r7, pc}

100063b0 <core::fmt::Arguments::new_v1::hbda2e269fb3c02c4>:
100063b0: b580         	push	{r7, lr}
100063b2: af00         	add	r7, sp, #0x0
100063b4: b083         	sub	sp, #0xc
100063b6: 9100         	str	r1, [sp]
100063b8: 4601         	mov	r1, r0
100063ba: 9800         	ldr	r0, [sp]
100063bc: 9001         	str	r0, [sp, #0x4]
100063be: 9202         	str	r2, [sp, #0x8]
100063c0: 6008         	str	r0, [r1]
100063c2: 2001         	movs	r0, #0x1
100063c4: 6048         	str	r0, [r1, #0x4]
100063c6: 2000         	movs	r0, #0x0
100063c8: 6108         	str	r0, [r1, #0x10]
100063ca: 608a         	str	r2, [r1, #0x8]
100063cc: 60c8         	str	r0, [r1, #0xc]
100063ce: b003         	add	sp, #0xc
100063d0: bd80         	pop	{r7, pc}

100063d2 <core::mem::forget::hde0ad32334bb0e8d>:
100063d2: b580         	push	{r7, lr}
100063d4: af00         	add	r7, sp, #0x0
100063d6: b081         	sub	sp, #0x4
100063d8: b001         	add	sp, #0x4
100063da: bd80         	pop	{r7, pc}

100063dc <core::num::<impl u32>::checked_div::h75503584a2445bab>:
100063dc: b580         	push	{r7, lr}
100063de: af00         	add	r7, sp, #0x0
100063e0: b088         	sub	sp, #0x20
100063e2: 9101         	str	r1, [sp, #0x4]
100063e4: 9002         	str	r0, [sp, #0x8]
100063e6: 9005         	str	r0, [sp, #0x14]
100063e8: 9106         	str	r1, [sp, #0x18]
100063ea: 424a         	rsbs	r2, r1, #0
100063ec: 4608         	mov	r0, r1
100063ee: 4150         	adcs	r0, r2
100063f0: aa07         	add	r2, sp, #0x1c
100063f2: 7010         	strb	r0, [r2]
100063f4: 2900         	cmp	r1, #0x0
100063f6: d103         	bne	0x10006400 <core::num::<impl u32>::checked_div::h75503584a2445bab+0x24> @ imm = #0x6
100063f8: e7ff         	b	0x100063fa <core::num::<impl u32>::checked_div::h75503584a2445bab+0x1e> @ imm = #-0x2
100063fa: 2000         	movs	r0, #0x0
100063fc: 9003         	str	r0, [sp, #0xc]
100063fe: e007         	b	0x10006410 <core::num::<impl u32>::checked_div::h75503584a2445bab+0x34> @ imm = #0xe
10006400: 9901         	ldr	r1, [sp, #0x4]
10006402: 9802         	ldr	r0, [sp, #0x8]
10006404: f007 f9ca    	bl	0x1000d79c <__aeabi_uidiv> @ imm = #0x7394
10006408: 9004         	str	r0, [sp, #0x10]
1000640a: 2001         	movs	r0, #0x1
1000640c: 9003         	str	r0, [sp, #0xc]
1000640e: e7ff         	b	0x10006410 <core::num::<impl u32>::checked_div::h75503584a2445bab+0x34> @ imm = #-0x2
10006410: 9803         	ldr	r0, [sp, #0xc]
10006412: 9904         	ldr	r1, [sp, #0x10]
10006414: b008         	add	sp, #0x20
10006416: bd80         	pop	{r7, pc}

10006418 <core::num::<impl u32>::saturating_mul::h0da888bc9d19634e>:
10006418: b580         	push	{r7, lr}
1000641a: af00         	add	r7, sp, #0x0
1000641c: b08a         	sub	sp, #0x28
1000641e: 460a         	mov	r2, r1
10006420: 9005         	str	r0, [sp, #0x14]
10006422: 9206         	str	r2, [sp, #0x18]
10006424: 2300         	movs	r3, #0x0
10006426: 4619         	mov	r1, r3
10006428: f007 fa8f    	bl	0x1000d94a <__aeabi_lmul> @ imm = #0x751e
1000642c: 1e4a         	subs	r2, r1, #0x1
1000642e: 4191         	sbcs	r1, r2
10006430: 4602         	mov	r2, r0
10006432: 9201         	str	r2, [sp, #0x4]
10006434: 9007         	str	r0, [sp, #0x1c]
10006436: a808         	add	r0, sp, #0x20
10006438: 7001         	strb	r1, [r0]
1000643a: 2900         	cmp	r1, #0x0
1000643c: d108         	bne	0x10006450 <core::num::<impl u32>::saturating_mul::h0da888bc9d19634e+0x38> @ imm = #0x10
1000643e: e7ff         	b	0x10006440 <core::num::<impl u32>::saturating_mul::h0da888bc9d19634e+0x28> @ imm = #-0x2
10006440: 9801         	ldr	r0, [sp, #0x4]
10006442: 9004         	str	r0, [sp, #0x10]
10006444: 2001         	movs	r0, #0x1
10006446: 9003         	str	r0, [sp, #0xc]
10006448: 9804         	ldr	r0, [sp, #0x10]
1000644a: 9009         	str	r0, [sp, #0x24]
1000644c: 9002         	str	r0, [sp, #0x8]
1000644e: e003         	b	0x10006458 <core::num::<impl u32>::saturating_mul::h0da888bc9d19634e+0x40> @ imm = #0x6
10006450: 2000         	movs	r0, #0x0
10006452: 43c0         	mvns	r0, r0
10006454: 9002         	str	r0, [sp, #0x8]
10006456: e7ff         	b	0x10006458 <core::num::<impl u32>::saturating_mul::h0da888bc9d19634e+0x40> @ imm = #-0x2
10006458: 9802         	ldr	r0, [sp, #0x8]
1000645a: b00a         	add	sp, #0x28
1000645c: bd80         	pop	{r7, pc}
1000645e: d4d4         	bmi	0x1000640a <core::num::<impl u32>::checked_div::h75503584a2445bab+0x2e> @ imm = #-0x58

10006460 <core::num::<impl usize>::unchecked_add::precondition_check::h7f06eba353734459>:
10006460: b580         	push	{r7, lr}
10006462: af00         	add	r7, sp, #0x0
10006464: b084         	sub	sp, #0x10
10006466: 9101         	str	r1, [sp, #0x4]
10006468: 4601         	mov	r1, r0
1000646a: 9801         	ldr	r0, [sp, #0x4]
1000646c: 9102         	str	r1, [sp, #0x8]
1000646e: 9003         	str	r0, [sp, #0xc]
10006470: 1808         	adds	r0, r1, r0
10006472: 4288         	cmp	r0, r1
10006474: d302         	blo	0x1000647c <core::num::<impl usize>::unchecked_add::precondition_check::h7f06eba353734459+0x1c> @ imm = #0x4
10006476: e7ff         	b	0x10006478 <core::num::<impl usize>::unchecked_add::precondition_check::h7f06eba353734459+0x18> @ imm = #-0x2
10006478: b004         	add	sp, #0x10
1000647a: bd80         	pop	{r7, pc}
1000647c: 4801         	ldr	r0, [pc, #0x4]          @ 0x10006484 <core::num::<impl usize>::unchecked_add::precondition_check::h7f06eba353734459+0x24>
1000647e: 21ba         	movs	r1, #0xba
10006480: f005 ffae    	bl	0x1000c3e0 <core::panicking::panic_nounwind::h6901392fec1083b6> @ imm = #0x5f5c
10006484: 0c 18 01 10  	.word	0x1001180c

10006488 <core::ops::range::RangeBounds::contains::h2e3d3a082aa356d1>:
10006488: b580         	push	{r7, lr}
1000648a: af00         	add	r7, sp, #0x0
1000648c: b09c         	sub	sp, #0x70
1000648e: 9002         	str	r0, [sp, #0x8]
10006490: 9104         	str	r1, [sp, #0x10]
10006492: 9011         	str	r0, [sp, #0x44]
10006494: f7ff fdc2    	bl	0x1000601c <<core::ops::range::RangeInclusive<T> as core::ops::range::RangeBounds<T>>::start_bound::h5cd4638a835c4ab1> @ imm = #-0x47c
10006498: 9007         	str	r0, [sp, #0x1c]
1000649a: 9108         	str	r1, [sp, #0x20]
1000649c: 9807         	ldr	r0, [sp, #0x1c]
1000649e: 9003         	str	r0, [sp, #0xc]
100064a0: 2800         	cmp	r0, #0x0
100064a2: d006         	beq	0x100064b2 <core::ops::range::RangeBounds::contains::h2e3d3a082aa356d1+0x2a> @ imm = #0xc
100064a4: e7ff         	b	0x100064a6 <core::ops::range::RangeBounds::contains::h2e3d3a082aa356d1+0x1e> @ imm = #-0x2
100064a6: 9803         	ldr	r0, [sp, #0xc]
100064a8: 2801         	cmp	r0, #0x1
100064aa: d011         	beq	0x100064d0 <core::ops::range::RangeBounds::contains::h2e3d3a082aa356d1+0x48> @ imm = #0x22
100064ac: e7ff         	b	0x100064ae <core::ops::range::RangeBounds::contains::h2e3d3a082aa356d1+0x26> @ imm = #-0x2
100064ae: e01e         	b	0x100064ee <core::ops::range::RangeBounds::contains::h2e3d3a082aa356d1+0x66> @ imm = #0x3c
100064b0: defe         	trap
100064b2: 9808         	ldr	r0, [sp, #0x20]
100064b4: 9009         	str	r0, [sp, #0x24]
100064b6: a809         	add	r0, sp, #0x24
100064b8: 9012         	str	r0, [sp, #0x48]
100064ba: 9804         	ldr	r0, [sp, #0x10]
100064bc: 900a         	str	r0, [sp, #0x28]
100064be: a80a         	add	r0, sp, #0x28
100064c0: 9013         	str	r0, [sp, #0x4c]
100064c2: 9809         	ldr	r0, [sp, #0x24]
100064c4: 9904         	ldr	r1, [sp, #0x10]
100064c6: f7ff ff24    	bl	0x10006312 <core::cmp::PartialOrd::le::hc20d10daa3abe420> @ imm = #-0x1b8
100064ca: a906         	add	r1, sp, #0x18
100064cc: 7008         	strb	r0, [r1]
100064ce: e00f         	b	0x100064f0 <core::ops::range::RangeBounds::contains::h2e3d3a082aa356d1+0x68> @ imm = #0x1e
100064d0: 9808         	ldr	r0, [sp, #0x20]
100064d2: 900b         	str	r0, [sp, #0x2c]
100064d4: a80b         	add	r0, sp, #0x2c
100064d6: 9014         	str	r0, [sp, #0x50]
100064d8: 9804         	ldr	r0, [sp, #0x10]
100064da: 900c         	str	r0, [sp, #0x30]
100064dc: a80c         	add	r0, sp, #0x30
100064de: 9015         	str	r0, [sp, #0x54]
100064e0: 980b         	ldr	r0, [sp, #0x2c]
100064e2: 9904         	ldr	r1, [sp, #0x10]
100064e4: f7ff ff37    	bl	0x10006356 <core::cmp::PartialOrd::lt::h6e256477957cd09a> @ imm = #-0x192
100064e8: a906         	add	r1, sp, #0x18
100064ea: 7008         	strb	r0, [r1]
100064ec: e000         	b	0x100064f0 <core::ops::range::RangeBounds::contains::h2e3d3a082aa356d1+0x68> @ imm = #0x0
100064ee: e009         	b	0x10006504 <core::ops::range::RangeBounds::contains::h2e3d3a082aa356d1+0x7c> @ imm = #0x12
100064f0: a806         	add	r0, sp, #0x18
100064f2: 7800         	ldrb	r0, [r0]
100064f4: 07c0         	lsls	r0, r0, #0x1f
100064f6: 2800         	cmp	r0, #0x0
100064f8: d104         	bne	0x10006504 <core::ops::range::RangeBounds::contains::h2e3d3a082aa356d1+0x7c> @ imm = #0x8
100064fa: e7ff         	b	0x100064fc <core::ops::range::RangeBounds::contains::h2e3d3a082aa356d1+0x74> @ imm = #-0x2
100064fc: a905         	add	r1, sp, #0x14
100064fe: 2000         	movs	r0, #0x0
10006500: 7008         	strb	r0, [r1]
10006502: e00e         	b	0x10006522 <core::ops::range::RangeBounds::contains::h2e3d3a082aa356d1+0x9a> @ imm = #0x1c
10006504: 9802         	ldr	r0, [sp, #0x8]
10006506: f7ff fd94    	bl	0x10006032 <<core::ops::range::RangeInclusive<T> as core::ops::range::RangeBounds<T>>::end_bound::h85b8289ea6886fd7> @ imm = #-0x4d8
1000650a: 900d         	str	r0, [sp, #0x34]
1000650c: 910e         	str	r1, [sp, #0x38]
1000650e: 980d         	ldr	r0, [sp, #0x34]
10006510: 9001         	str	r0, [sp, #0x4]
10006512: 2800         	cmp	r0, #0x0
10006514: d009         	beq	0x1000652a <core::ops::range::RangeBounds::contains::h2e3d3a082aa356d1+0xa2> @ imm = #0x12
10006516: e7ff         	b	0x10006518 <core::ops::range::RangeBounds::contains::h2e3d3a082aa356d1+0x90> @ imm = #-0x2
10006518: 9801         	ldr	r0, [sp, #0x4]
1000651a: 2801         	cmp	r0, #0x1
1000651c: d012         	beq	0x10006544 <core::ops::range::RangeBounds::contains::h2e3d3a082aa356d1+0xbc> @ imm = #0x24
1000651e: e7ff         	b	0x10006520 <core::ops::range::RangeBounds::contains::h2e3d3a082aa356d1+0x98> @ imm = #-0x2
10006520: e01d         	b	0x1000655e <core::ops::range::RangeBounds::contains::h2e3d3a082aa356d1+0xd6> @ imm = #0x3a
10006522: a805         	add	r0, sp, #0x14
10006524: 7800         	ldrb	r0, [r0]
10006526: b01c         	add	sp, #0x70
10006528: bd80         	pop	{r7, pc}
1000652a: 990e         	ldr	r1, [sp, #0x38]
1000652c: 9116         	str	r1, [sp, #0x58]
1000652e: a804         	add	r0, sp, #0x10
10006530: 9017         	str	r0, [sp, #0x5c]
10006532: 910f         	str	r1, [sp, #0x3c]
10006534: a80f         	add	r0, sp, #0x3c
10006536: 9018         	str	r0, [sp, #0x60]
10006538: 9804         	ldr	r0, [sp, #0x10]
1000653a: f7ff feea    	bl	0x10006312 <core::cmp::PartialOrd::le::hc20d10daa3abe420> @ imm = #-0x22c
1000653e: a905         	add	r1, sp, #0x14
10006540: 7008         	strb	r0, [r1]
10006542: e010         	b	0x10006566 <core::ops::range::RangeBounds::contains::h2e3d3a082aa356d1+0xde> @ imm = #0x20
10006544: 990e         	ldr	r1, [sp, #0x38]
10006546: 9119         	str	r1, [sp, #0x64]
10006548: a804         	add	r0, sp, #0x10
1000654a: 901a         	str	r0, [sp, #0x68]
1000654c: 9110         	str	r1, [sp, #0x40]
1000654e: a810         	add	r0, sp, #0x40
10006550: 901b         	str	r0, [sp, #0x6c]
10006552: 9804         	ldr	r0, [sp, #0x10]
10006554: f7ff feff    	bl	0x10006356 <core::cmp::PartialOrd::lt::h6e256477957cd09a> @ imm = #-0x202
10006558: a905         	add	r1, sp, #0x14
1000655a: 7008         	strb	r0, [r1]
1000655c: e003         	b	0x10006566 <core::ops::range::RangeBounds::contains::h2e3d3a082aa356d1+0xde> @ imm = #0x6
1000655e: a905         	add	r1, sp, #0x14
10006560: 2001         	movs	r0, #0x1
10006562: 7008         	strb	r0, [r1]
10006564: e7ff         	b	0x10006566 <core::ops::range::RangeBounds::contains::h2e3d3a082aa356d1+0xde> @ imm = #-0x2
10006566: e7dc         	b	0x10006522 <core::ops::range::RangeBounds::contains::h2e3d3a082aa356d1+0x9a> @ imm = #-0x48

10006568 <core::ops::range::RangeBounds::contains::h816cc2130c05cb42>:
10006568: b580         	push	{r7, lr}
1000656a: af00         	add	r7, sp, #0x0
1000656c: b09c         	sub	sp, #0x70
1000656e: 9002         	str	r0, [sp, #0x8]
10006570: 9104         	str	r1, [sp, #0x10]
10006572: 9011         	str	r0, [sp, #0x44]
10006574: f000 ffc2    	bl	0x100074fc <<core::ops::range::Range<T> as core::ops::range::RangeBounds<T>>::start_bound::h19aa7569b96dede3> @ imm = #0xf84
10006578: 9007         	str	r0, [sp, #0x1c]
1000657a: 9108         	str	r1, [sp, #0x20]
1000657c: 9807         	ldr	r0, [sp, #0x1c]
1000657e: 9003         	str	r0, [sp, #0xc]
10006580: 2800         	cmp	r0, #0x0
10006582: d006         	beq	0x10006592 <core::ops::range::RangeBounds::contains::h816cc2130c05cb42+0x2a> @ imm = #0xc
10006584: e7ff         	b	0x10006586 <core::ops::range::RangeBounds::contains::h816cc2130c05cb42+0x1e> @ imm = #-0x2
10006586: 9803         	ldr	r0, [sp, #0xc]
10006588: 2801         	cmp	r0, #0x1
1000658a: d011         	beq	0x100065b0 <core::ops::range::RangeBounds::contains::h816cc2130c05cb42+0x48> @ imm = #0x22
1000658c: e7ff         	b	0x1000658e <core::ops::range::RangeBounds::contains::h816cc2130c05cb42+0x26> @ imm = #-0x2
1000658e: e01e         	b	0x100065ce <core::ops::range::RangeBounds::contains::h816cc2130c05cb42+0x66> @ imm = #0x3c
10006590: defe         	trap
10006592: 9808         	ldr	r0, [sp, #0x20]
10006594: 9009         	str	r0, [sp, #0x24]
10006596: a809         	add	r0, sp, #0x24
10006598: 9012         	str	r0, [sp, #0x48]
1000659a: 9804         	ldr	r0, [sp, #0x10]
1000659c: 900a         	str	r0, [sp, #0x28]
1000659e: a80a         	add	r0, sp, #0x28
100065a0: 9013         	str	r0, [sp, #0x4c]
100065a2: 9809         	ldr	r0, [sp, #0x24]
100065a4: 9904         	ldr	r1, [sp, #0x10]
100065a6: f7ff feb4    	bl	0x10006312 <core::cmp::PartialOrd::le::hc20d10daa3abe420> @ imm = #-0x298
100065aa: a906         	add	r1, sp, #0x18
100065ac: 7008         	strb	r0, [r1]
100065ae: e00f         	b	0x100065d0 <core::ops::range::RangeBounds::contains::h816cc2130c05cb42+0x68> @ imm = #0x1e
100065b0: 9808         	ldr	r0, [sp, #0x20]
100065b2: 900b         	str	r0, [sp, #0x2c]
100065b4: a80b         	add	r0, sp, #0x2c
100065b6: 9014         	str	r0, [sp, #0x50]
100065b8: 9804         	ldr	r0, [sp, #0x10]
100065ba: 900c         	str	r0, [sp, #0x30]
100065bc: a80c         	add	r0, sp, #0x30
100065be: 9015         	str	r0, [sp, #0x54]
100065c0: 980b         	ldr	r0, [sp, #0x2c]
100065c2: 9904         	ldr	r1, [sp, #0x10]
100065c4: f7ff fec7    	bl	0x10006356 <core::cmp::PartialOrd::lt::h6e256477957cd09a> @ imm = #-0x272
100065c8: a906         	add	r1, sp, #0x18
100065ca: 7008         	strb	r0, [r1]
100065cc: e000         	b	0x100065d0 <core::ops::range::RangeBounds::contains::h816cc2130c05cb42+0x68> @ imm = #0x0
100065ce: e009         	b	0x100065e4 <core::ops::range::RangeBounds::contains::h816cc2130c05cb42+0x7c> @ imm = #0x12
100065d0: a806         	add	r0, sp, #0x18
100065d2: 7800         	ldrb	r0, [r0]
100065d4: 07c0         	lsls	r0, r0, #0x1f
100065d6: 2800         	cmp	r0, #0x0
100065d8: d104         	bne	0x100065e4 <core::ops::range::RangeBounds::contains::h816cc2130c05cb42+0x7c> @ imm = #0x8
100065da: e7ff         	b	0x100065dc <core::ops::range::RangeBounds::contains::h816cc2130c05cb42+0x74> @ imm = #-0x2
100065dc: a905         	add	r1, sp, #0x14
100065de: 2000         	movs	r0, #0x0
100065e0: 7008         	strb	r0, [r1]
100065e2: e00e         	b	0x10006602 <core::ops::range::RangeBounds::contains::h816cc2130c05cb42+0x9a> @ imm = #0x1c
100065e4: 9802         	ldr	r0, [sp, #0x8]
100065e6: f000 ffb6    	bl	0x10007556 <<core::ops::range::Range<T> as core::ops::range::RangeBounds<T>>::end_bound::h6d6b2da2300b0872> @ imm = #0xf6c
100065ea: 900d         	str	r0, [sp, #0x34]
100065ec: 910e         	str	r1, [sp, #0x38]
100065ee: 980d         	ldr	r0, [sp, #0x34]
100065f0: 9001         	str	r0, [sp, #0x4]
100065f2: 2800         	cmp	r0, #0x0
100065f4: d009         	beq	0x1000660a <core::ops::range::RangeBounds::contains::h816cc2130c05cb42+0xa2> @ imm = #0x12
100065f6: e7ff         	b	0x100065f8 <core::ops::range::RangeBounds::contains::h816cc2130c05cb42+0x90> @ imm = #-0x2
100065f8: 9801         	ldr	r0, [sp, #0x4]
100065fa: 2801         	cmp	r0, #0x1
100065fc: d012         	beq	0x10006624 <core::ops::range::RangeBounds::contains::h816cc2130c05cb42+0xbc> @ imm = #0x24
100065fe: e7ff         	b	0x10006600 <core::ops::range::RangeBounds::contains::h816cc2130c05cb42+0x98> @ imm = #-0x2
10006600: e01d         	b	0x1000663e <core::ops::range::RangeBounds::contains::h816cc2130c05cb42+0xd6> @ imm = #0x3a
10006602: a805         	add	r0, sp, #0x14
10006604: 7800         	ldrb	r0, [r0]
10006606: b01c         	add	sp, #0x70
10006608: bd80         	pop	{r7, pc}
1000660a: 990e         	ldr	r1, [sp, #0x38]
1000660c: 9116         	str	r1, [sp, #0x58]
1000660e: a804         	add	r0, sp, #0x10
10006610: 9017         	str	r0, [sp, #0x5c]
10006612: 910f         	str	r1, [sp, #0x3c]
10006614: a80f         	add	r0, sp, #0x3c
10006616: 9018         	str	r0, [sp, #0x60]
10006618: 9804         	ldr	r0, [sp, #0x10]
1000661a: f7ff fe7a    	bl	0x10006312 <core::cmp::PartialOrd::le::hc20d10daa3abe420> @ imm = #-0x30c
1000661e: a905         	add	r1, sp, #0x14
10006620: 7008         	strb	r0, [r1]
10006622: e010         	b	0x10006646 <core::ops::range::RangeBounds::contains::h816cc2130c05cb42+0xde> @ imm = #0x20
10006624: 990e         	ldr	r1, [sp, #0x38]
10006626: 9119         	str	r1, [sp, #0x64]
10006628: a804         	add	r0, sp, #0x10
1000662a: 901a         	str	r0, [sp, #0x68]
1000662c: 9110         	str	r1, [sp, #0x40]
1000662e: a810         	add	r0, sp, #0x40
10006630: 901b         	str	r0, [sp, #0x6c]
10006632: 9804         	ldr	r0, [sp, #0x10]
10006634: f7ff fe8f    	bl	0x10006356 <core::cmp::PartialOrd::lt::h6e256477957cd09a> @ imm = #-0x2e2
10006638: a905         	add	r1, sp, #0x14
1000663a: 7008         	strb	r0, [r1]
1000663c: e003         	b	0x10006646 <core::ops::range::RangeBounds::contains::h816cc2130c05cb42+0xde> @ imm = #0x6
1000663e: a905         	add	r1, sp, #0x14
10006640: 2001         	movs	r0, #0x1
10006642: 7008         	strb	r0, [r1]
10006644: e7ff         	b	0x10006646 <core::ops::range::RangeBounds::contains::h816cc2130c05cb42+0xde> @ imm = #-0x2
10006646: e7dc         	b	0x10006602 <core::ops::range::RangeBounds::contains::h816cc2130c05cb42+0x9a> @ imm = #-0x48

10006648 <core::ops::range::RangeBounds::contains::ha1ea0210d9e05dbb>:
10006648: b580         	push	{r7, lr}
1000664a: af00         	add	r7, sp, #0x0
1000664c: b0ac         	sub	sp, #0xb0
1000664e: 900a         	str	r0, [sp, #0x28]
10006650: 910c         	str	r1, [sp, #0x30]
10006652: 9019         	str	r0, [sp, #0x64]
10006654: f000 ff68    	bl	0x10007528 <<core::ops::range::Range<T> as core::ops::range::RangeBounds<T>>::start_bound::h6e4870419bd92bc2> @ imm = #0xed0
10006658: 900f         	str	r0, [sp, #0x3c]
1000665a: 9110         	str	r1, [sp, #0x40]
1000665c: 980f         	ldr	r0, [sp, #0x3c]
1000665e: 900b         	str	r0, [sp, #0x2c]
10006660: 2800         	cmp	r0, #0x0
10006662: d006         	beq	0x10006672 <core::ops::range::RangeBounds::contains::ha1ea0210d9e05dbb+0x2a> @ imm = #0xc
10006664: e7ff         	b	0x10006666 <core::ops::range::RangeBounds::contains::ha1ea0210d9e05dbb+0x1e> @ imm = #-0x2
10006666: 980b         	ldr	r0, [sp, #0x2c]
10006668: 2801         	cmp	r0, #0x1
1000666a: d01c         	beq	0x100066a6 <core::ops::range::RangeBounds::contains::ha1ea0210d9e05dbb+0x5e> @ imm = #0x38
1000666c: e7ff         	b	0x1000666e <core::ops::range::RangeBounds::contains::ha1ea0210d9e05dbb+0x26> @ imm = #-0x2
1000666e: e034         	b	0x100066da <core::ops::range::RangeBounds::contains::ha1ea0210d9e05dbb+0x92> @ imm = #0x68
10006670: defe         	trap
10006672: 9810         	ldr	r0, [sp, #0x40]
10006674: 9011         	str	r0, [sp, #0x44]
10006676: a811         	add	r0, sp, #0x44
10006678: 901a         	str	r0, [sp, #0x68]
1000667a: 980c         	ldr	r0, [sp, #0x30]
1000667c: 9012         	str	r0, [sp, #0x48]
1000667e: a812         	add	r0, sp, #0x48
10006680: 901b         	str	r0, [sp, #0x6c]
10006682: 9911         	ldr	r1, [sp, #0x44]
10006684: 980c         	ldr	r0, [sp, #0x30]
10006686: 9126         	str	r1, [sp, #0x98]
10006688: 9027         	str	r0, [sp, #0x9c]
1000668a: 7809         	ldrb	r1, [r1]
1000668c: 7802         	ldrb	r2, [r0]
1000668e: 2000         	movs	r0, #0x0
10006690: 9008         	str	r0, [sp, #0x20]
10006692: 2001         	movs	r0, #0x1
10006694: 4291         	cmp	r1, r2
10006696: 9009         	str	r0, [sp, #0x24]
10006698: d901         	bls	0x1000669e <core::ops::range::RangeBounds::contains::ha1ea0210d9e05dbb+0x56> @ imm = #0x2
1000669a: 9808         	ldr	r0, [sp, #0x20]
1000669c: 9009         	str	r0, [sp, #0x24]
1000669e: 9809         	ldr	r0, [sp, #0x24]
100066a0: a90e         	add	r1, sp, #0x38
100066a2: 7008         	strb	r0, [r1]
100066a4: e01a         	b	0x100066dc <core::ops::range::RangeBounds::contains::ha1ea0210d9e05dbb+0x94> @ imm = #0x34
100066a6: 9810         	ldr	r0, [sp, #0x40]
100066a8: 9013         	str	r0, [sp, #0x4c]
100066aa: a813         	add	r0, sp, #0x4c
100066ac: 901c         	str	r0, [sp, #0x70]
100066ae: 980c         	ldr	r0, [sp, #0x30]
100066b0: 9014         	str	r0, [sp, #0x50]
100066b2: a814         	add	r0, sp, #0x50
100066b4: 901d         	str	r0, [sp, #0x74]
100066b6: 9913         	ldr	r1, [sp, #0x4c]
100066b8: 980c         	ldr	r0, [sp, #0x30]
100066ba: 912a         	str	r1, [sp, #0xa8]
100066bc: 902b         	str	r0, [sp, #0xac]
100066be: 7809         	ldrb	r1, [r1]
100066c0: 7802         	ldrb	r2, [r0]
100066c2: 2000         	movs	r0, #0x0
100066c4: 9006         	str	r0, [sp, #0x18]
100066c6: 2001         	movs	r0, #0x1
100066c8: 4291         	cmp	r1, r2
100066ca: 9007         	str	r0, [sp, #0x1c]
100066cc: d301         	blo	0x100066d2 <core::ops::range::RangeBounds::contains::ha1ea0210d9e05dbb+0x8a> @ imm = #0x2
100066ce: 9806         	ldr	r0, [sp, #0x18]
100066d0: 9007         	str	r0, [sp, #0x1c]
100066d2: 9807         	ldr	r0, [sp, #0x1c]
100066d4: a90e         	add	r1, sp, #0x38
100066d6: 7008         	strb	r0, [r1]
100066d8: e000         	b	0x100066dc <core::ops::range::RangeBounds::contains::ha1ea0210d9e05dbb+0x94> @ imm = #0x0
100066da: e009         	b	0x100066f0 <core::ops::range::RangeBounds::contains::ha1ea0210d9e05dbb+0xa8> @ imm = #0x12
100066dc: a80e         	add	r0, sp, #0x38
100066de: 7800         	ldrb	r0, [r0]
100066e0: 07c0         	lsls	r0, r0, #0x1f
100066e2: 2800         	cmp	r0, #0x0
100066e4: d104         	bne	0x100066f0 <core::ops::range::RangeBounds::contains::ha1ea0210d9e05dbb+0xa8> @ imm = #0x8
100066e6: e7ff         	b	0x100066e8 <core::ops::range::RangeBounds::contains::ha1ea0210d9e05dbb+0xa0> @ imm = #-0x2
100066e8: a90d         	add	r1, sp, #0x34
100066ea: 2000         	movs	r0, #0x0
100066ec: 7008         	strb	r0, [r1]
100066ee: e00e         	b	0x1000670e <core::ops::range::RangeBounds::contains::ha1ea0210d9e05dbb+0xc6> @ imm = #0x1c
100066f0: 980a         	ldr	r0, [sp, #0x28]
100066f2: f000 ff3c    	bl	0x1000756e <<core::ops::range::Range<T> as core::ops::range::RangeBounds<T>>::end_bound::h6f41e694768c3841> @ imm = #0xe78
100066f6: 9015         	str	r0, [sp, #0x54]
100066f8: 9116         	str	r1, [sp, #0x58]
100066fa: 9815         	ldr	r0, [sp, #0x54]
100066fc: 9005         	str	r0, [sp, #0x14]
100066fe: 2800         	cmp	r0, #0x0
10006700: d009         	beq	0x10006716 <core::ops::range::RangeBounds::contains::ha1ea0210d9e05dbb+0xce> @ imm = #0x12
10006702: e7ff         	b	0x10006704 <core::ops::range::RangeBounds::contains::ha1ea0210d9e05dbb+0xbc> @ imm = #-0x2
10006704: 9805         	ldr	r0, [sp, #0x14]
10006706: 2801         	cmp	r0, #0x1
10006708: d01d         	beq	0x10006746 <core::ops::range::RangeBounds::contains::ha1ea0210d9e05dbb+0xfe> @ imm = #0x3a
1000670a: e7ff         	b	0x1000670c <core::ops::range::RangeBounds::contains::ha1ea0210d9e05dbb+0xc4> @ imm = #-0x2
1000670c: e033         	b	0x10006776 <core::ops::range::RangeBounds::contains::ha1ea0210d9e05dbb+0x12e> @ imm = #0x66
1000670e: a80d         	add	r0, sp, #0x34
10006710: 7800         	ldrb	r0, [r0]
10006712: b02c         	add	sp, #0xb0
10006714: bd80         	pop	{r7, pc}
10006716: 9816         	ldr	r0, [sp, #0x58]
10006718: 901e         	str	r0, [sp, #0x78]
1000671a: a90c         	add	r1, sp, #0x30
1000671c: 911f         	str	r1, [sp, #0x7c]
1000671e: 9017         	str	r0, [sp, #0x5c]
10006720: a917         	add	r1, sp, #0x5c
10006722: 9120         	str	r1, [sp, #0x80]
10006724: 990c         	ldr	r1, [sp, #0x30]
10006726: 9124         	str	r1, [sp, #0x90]
10006728: 9025         	str	r0, [sp, #0x94]
1000672a: 7809         	ldrb	r1, [r1]
1000672c: 7802         	ldrb	r2, [r0]
1000672e: 2000         	movs	r0, #0x0
10006730: 9003         	str	r0, [sp, #0xc]
10006732: 2001         	movs	r0, #0x1
10006734: 4291         	cmp	r1, r2
10006736: 9004         	str	r0, [sp, #0x10]
10006738: d901         	bls	0x1000673e <core::ops::range::RangeBounds::contains::ha1ea0210d9e05dbb+0xf6> @ imm = #0x2
1000673a: 9803         	ldr	r0, [sp, #0xc]
1000673c: 9004         	str	r0, [sp, #0x10]
1000673e: 9804         	ldr	r0, [sp, #0x10]
10006740: a90d         	add	r1, sp, #0x34
10006742: 7008         	strb	r0, [r1]
10006744: e01b         	b	0x1000677e <core::ops::range::RangeBounds::contains::ha1ea0210d9e05dbb+0x136> @ imm = #0x36
10006746: 9816         	ldr	r0, [sp, #0x58]
10006748: 9021         	str	r0, [sp, #0x84]
1000674a: a90c         	add	r1, sp, #0x30
1000674c: 9122         	str	r1, [sp, #0x88]
1000674e: 9018         	str	r0, [sp, #0x60]
10006750: a918         	add	r1, sp, #0x60
10006752: 9123         	str	r1, [sp, #0x8c]
10006754: 990c         	ldr	r1, [sp, #0x30]
10006756: 9128         	str	r1, [sp, #0xa0]
10006758: 9029         	str	r0, [sp, #0xa4]
1000675a: 7809         	ldrb	r1, [r1]
1000675c: 7802         	ldrb	r2, [r0]
1000675e: 2000         	movs	r0, #0x0
10006760: 9001         	str	r0, [sp, #0x4]
10006762: 2001         	movs	r0, #0x1
10006764: 4291         	cmp	r1, r2
10006766: 9002         	str	r0, [sp, #0x8]
10006768: d301         	blo	0x1000676e <core::ops::range::RangeBounds::contains::ha1ea0210d9e05dbb+0x126> @ imm = #0x2
1000676a: 9801         	ldr	r0, [sp, #0x4]
1000676c: 9002         	str	r0, [sp, #0x8]
1000676e: 9802         	ldr	r0, [sp, #0x8]
10006770: a90d         	add	r1, sp, #0x34
10006772: 7008         	strb	r0, [r1]
10006774: e003         	b	0x1000677e <core::ops::range::RangeBounds::contains::ha1ea0210d9e05dbb+0x136> @ imm = #0x6
10006776: a90d         	add	r1, sp, #0x34
10006778: 2001         	movs	r0, #0x1
1000677a: 7008         	strb	r0, [r1]
1000677c: e7ff         	b	0x1000677e <core::ops::range::RangeBounds::contains::ha1ea0210d9e05dbb+0x136> @ imm = #-0x2
1000677e: e7c6         	b	0x1000670e <core::ops::range::RangeBounds::contains::ha1ea0210d9e05dbb+0xc6> @ imm = #-0x74

10006780 <core::ops::range::RangeBounds::contains::hcb2932444c543d36>:
10006780: b580         	push	{r7, lr}
10006782: af00         	add	r7, sp, #0x0
10006784: b0ac         	sub	sp, #0xb0
10006786: 900a         	str	r0, [sp, #0x28]
10006788: 910c         	str	r1, [sp, #0x30]
1000678a: 9019         	str	r0, [sp, #0x64]
1000678c: f000 fec1    	bl	0x10007512 <<core::ops::range::Range<T> as core::ops::range::RangeBounds<T>>::start_bound::h6b409a9aa95703e5> @ imm = #0xd82
10006790: 900f         	str	r0, [sp, #0x3c]
10006792: 9110         	str	r1, [sp, #0x40]
10006794: 980f         	ldr	r0, [sp, #0x3c]
10006796: 900b         	str	r0, [sp, #0x2c]
10006798: 2800         	cmp	r0, #0x0
1000679a: d006         	beq	0x100067aa <core::ops::range::RangeBounds::contains::hcb2932444c543d36+0x2a> @ imm = #0xc
1000679c: e7ff         	b	0x1000679e <core::ops::range::RangeBounds::contains::hcb2932444c543d36+0x1e> @ imm = #-0x2
1000679e: 980b         	ldr	r0, [sp, #0x2c]
100067a0: 2801         	cmp	r0, #0x1
100067a2: d01c         	beq	0x100067de <core::ops::range::RangeBounds::contains::hcb2932444c543d36+0x5e> @ imm = #0x38
100067a4: e7ff         	b	0x100067a6 <core::ops::range::RangeBounds::contains::hcb2932444c543d36+0x26> @ imm = #-0x2
100067a6: e034         	b	0x10006812 <core::ops::range::RangeBounds::contains::hcb2932444c543d36+0x92> @ imm = #0x68
100067a8: defe         	trap
100067aa: 9810         	ldr	r0, [sp, #0x40]
100067ac: 9011         	str	r0, [sp, #0x44]
100067ae: a811         	add	r0, sp, #0x44
100067b0: 901a         	str	r0, [sp, #0x68]
100067b2: 980c         	ldr	r0, [sp, #0x30]
100067b4: 9012         	str	r0, [sp, #0x48]
100067b6: a812         	add	r0, sp, #0x48
100067b8: 901b         	str	r0, [sp, #0x6c]
100067ba: 9911         	ldr	r1, [sp, #0x44]
100067bc: 980c         	ldr	r0, [sp, #0x30]
100067be: 9126         	str	r1, [sp, #0x98]
100067c0: 9027         	str	r0, [sp, #0x9c]
100067c2: 8809         	ldrh	r1, [r1]
100067c4: 8802         	ldrh	r2, [r0]
100067c6: 2000         	movs	r0, #0x0
100067c8: 9008         	str	r0, [sp, #0x20]
100067ca: 2001         	movs	r0, #0x1
100067cc: 4291         	cmp	r1, r2
100067ce: 9009         	str	r0, [sp, #0x24]
100067d0: d901         	bls	0x100067d6 <core::ops::range::RangeBounds::contains::hcb2932444c543d36+0x56> @ imm = #0x2
100067d2: 9808         	ldr	r0, [sp, #0x20]
100067d4: 9009         	str	r0, [sp, #0x24]
100067d6: 9809         	ldr	r0, [sp, #0x24]
100067d8: a90e         	add	r1, sp, #0x38
100067da: 7008         	strb	r0, [r1]
100067dc: e01a         	b	0x10006814 <core::ops::range::RangeBounds::contains::hcb2932444c543d36+0x94> @ imm = #0x34
100067de: 9810         	ldr	r0, [sp, #0x40]
100067e0: 9013         	str	r0, [sp, #0x4c]
100067e2: a813         	add	r0, sp, #0x4c
100067e4: 901c         	str	r0, [sp, #0x70]
100067e6: 980c         	ldr	r0, [sp, #0x30]
100067e8: 9014         	str	r0, [sp, #0x50]
100067ea: a814         	add	r0, sp, #0x50
100067ec: 901d         	str	r0, [sp, #0x74]
100067ee: 9913         	ldr	r1, [sp, #0x4c]
100067f0: 980c         	ldr	r0, [sp, #0x30]
100067f2: 912a         	str	r1, [sp, #0xa8]
100067f4: 902b         	str	r0, [sp, #0xac]
100067f6: 8809         	ldrh	r1, [r1]
100067f8: 8802         	ldrh	r2, [r0]
100067fa: 2000         	movs	r0, #0x0
100067fc: 9006         	str	r0, [sp, #0x18]
100067fe: 2001         	movs	r0, #0x1
10006800: 4291         	cmp	r1, r2
10006802: 9007         	str	r0, [sp, #0x1c]
10006804: d301         	blo	0x1000680a <core::ops::range::RangeBounds::contains::hcb2932444c543d36+0x8a> @ imm = #0x2
10006806: 9806         	ldr	r0, [sp, #0x18]
10006808: 9007         	str	r0, [sp, #0x1c]
1000680a: 9807         	ldr	r0, [sp, #0x1c]
1000680c: a90e         	add	r1, sp, #0x38
1000680e: 7008         	strb	r0, [r1]
10006810: e000         	b	0x10006814 <core::ops::range::RangeBounds::contains::hcb2932444c543d36+0x94> @ imm = #0x0
10006812: e009         	b	0x10006828 <core::ops::range::RangeBounds::contains::hcb2932444c543d36+0xa8> @ imm = #0x12
10006814: a80e         	add	r0, sp, #0x38
10006816: 7800         	ldrb	r0, [r0]
10006818: 07c0         	lsls	r0, r0, #0x1f
1000681a: 2800         	cmp	r0, #0x0
1000681c: d104         	bne	0x10006828 <core::ops::range::RangeBounds::contains::hcb2932444c543d36+0xa8> @ imm = #0x8
1000681e: e7ff         	b	0x10006820 <core::ops::range::RangeBounds::contains::hcb2932444c543d36+0xa0> @ imm = #-0x2
10006820: a90d         	add	r1, sp, #0x34
10006822: 2000         	movs	r0, #0x0
10006824: 7008         	strb	r0, [r1]
10006826: e00e         	b	0x10006846 <core::ops::range::RangeBounds::contains::hcb2932444c543d36+0xc6> @ imm = #0x1c
10006828: 980a         	ldr	r0, [sp, #0x28]
1000682a: f000 fe88    	bl	0x1000753e <<core::ops::range::Range<T> as core::ops::range::RangeBounds<T>>::end_bound::h510a37537bd561cf> @ imm = #0xd10
1000682e: 9015         	str	r0, [sp, #0x54]
10006830: 9116         	str	r1, [sp, #0x58]
10006832: 9815         	ldr	r0, [sp, #0x54]
10006834: 9005         	str	r0, [sp, #0x14]
10006836: 2800         	cmp	r0, #0x0
10006838: d009         	beq	0x1000684e <core::ops::range::RangeBounds::contains::hcb2932444c543d36+0xce> @ imm = #0x12
1000683a: e7ff         	b	0x1000683c <core::ops::range::RangeBounds::contains::hcb2932444c543d36+0xbc> @ imm = #-0x2
1000683c: 9805         	ldr	r0, [sp, #0x14]
1000683e: 2801         	cmp	r0, #0x1
10006840: d01d         	beq	0x1000687e <core::ops::range::RangeBounds::contains::hcb2932444c543d36+0xfe> @ imm = #0x3a
10006842: e7ff         	b	0x10006844 <core::ops::range::RangeBounds::contains::hcb2932444c543d36+0xc4> @ imm = #-0x2
10006844: e033         	b	0x100068ae <core::ops::range::RangeBounds::contains::hcb2932444c543d36+0x12e> @ imm = #0x66
10006846: a80d         	add	r0, sp, #0x34
10006848: 7800         	ldrb	r0, [r0]
1000684a: b02c         	add	sp, #0xb0
1000684c: bd80         	pop	{r7, pc}
1000684e: 9816         	ldr	r0, [sp, #0x58]
10006850: 901e         	str	r0, [sp, #0x78]
10006852: a90c         	add	r1, sp, #0x30
10006854: 911f         	str	r1, [sp, #0x7c]
10006856: 9017         	str	r0, [sp, #0x5c]
10006858: a917         	add	r1, sp, #0x5c
1000685a: 9120         	str	r1, [sp, #0x80]
1000685c: 990c         	ldr	r1, [sp, #0x30]
1000685e: 9124         	str	r1, [sp, #0x90]
10006860: 9025         	str	r0, [sp, #0x94]
10006862: 8809         	ldrh	r1, [r1]
10006864: 8802         	ldrh	r2, [r0]
10006866: 2000         	movs	r0, #0x0
10006868: 9003         	str	r0, [sp, #0xc]
1000686a: 2001         	movs	r0, #0x1
1000686c: 4291         	cmp	r1, r2
1000686e: 9004         	str	r0, [sp, #0x10]
10006870: d901         	bls	0x10006876 <core::ops::range::RangeBounds::contains::hcb2932444c543d36+0xf6> @ imm = #0x2
10006872: 9803         	ldr	r0, [sp, #0xc]
10006874: 9004         	str	r0, [sp, #0x10]
10006876: 9804         	ldr	r0, [sp, #0x10]
10006878: a90d         	add	r1, sp, #0x34
1000687a: 7008         	strb	r0, [r1]
1000687c: e01b         	b	0x100068b6 <core::ops::range::RangeBounds::contains::hcb2932444c543d36+0x136> @ imm = #0x36
1000687e: 9816         	ldr	r0, [sp, #0x58]
10006880: 9021         	str	r0, [sp, #0x84]
10006882: a90c         	add	r1, sp, #0x30
10006884: 9122         	str	r1, [sp, #0x88]
10006886: 9018         	str	r0, [sp, #0x60]
10006888: a918         	add	r1, sp, #0x60
1000688a: 9123         	str	r1, [sp, #0x8c]
1000688c: 990c         	ldr	r1, [sp, #0x30]
1000688e: 9128         	str	r1, [sp, #0xa0]
10006890: 9029         	str	r0, [sp, #0xa4]
10006892: 8809         	ldrh	r1, [r1]
10006894: 8802         	ldrh	r2, [r0]
10006896: 2000         	movs	r0, #0x0
10006898: 9001         	str	r0, [sp, #0x4]
1000689a: 2001         	movs	r0, #0x1
1000689c: 4291         	cmp	r1, r2
1000689e: 9002         	str	r0, [sp, #0x8]
100068a0: d301         	blo	0x100068a6 <core::ops::range::RangeBounds::contains::hcb2932444c543d36+0x126> @ imm = #0x2
100068a2: 9801         	ldr	r0, [sp, #0x4]
100068a4: 9002         	str	r0, [sp, #0x8]
100068a6: 9802         	ldr	r0, [sp, #0x8]
100068a8: a90d         	add	r1, sp, #0x34
100068aa: 7008         	strb	r0, [r1]
100068ac: e003         	b	0x100068b6 <core::ops::range::RangeBounds::contains::hcb2932444c543d36+0x136> @ imm = #0x6
100068ae: a90d         	add	r1, sp, #0x34
100068b0: 2001         	movs	r0, #0x1
100068b2: 7008         	strb	r0, [r1]
100068b4: e7ff         	b	0x100068b6 <core::ops::range::RangeBounds::contains::hcb2932444c543d36+0x136> @ imm = #-0x2
100068b6: e7c6         	b	0x10006846 <core::ops::range::RangeBounds::contains::hcb2932444c543d36+0xc6> @ imm = #-0x74

100068b8 <core::ops::range::Range<Idx>::contains::h0e305a4135904b9b>:
100068b8: b580         	push	{r7, lr}
100068ba: af00         	add	r7, sp, #0x0
100068bc: b082         	sub	sp, #0x8
100068be: 9000         	str	r0, [sp]
100068c0: 9101         	str	r1, [sp, #0x4]
100068c2: f7ff fe51    	bl	0x10006568 <core::ops::range::RangeBounds::contains::h816cc2130c05cb42> @ imm = #-0x35e
100068c6: b002         	add	sp, #0x8
100068c8: bd80         	pop	{r7, pc}

100068ca <core::ops::range::Range<Idx>::contains::h466edda8b7915d56>:
100068ca: b580         	push	{r7, lr}
100068cc: af00         	add	r7, sp, #0x0
100068ce: b082         	sub	sp, #0x8
100068d0: 9000         	str	r0, [sp]
100068d2: 9101         	str	r1, [sp, #0x4]
100068d4: f7ff ff54    	bl	0x10006780 <core::ops::range::RangeBounds::contains::hcb2932444c543d36> @ imm = #-0x158
100068d8: b002         	add	sp, #0x8
100068da: bd80         	pop	{r7, pc}

100068dc <core::ops::range::Range<Idx>::contains::h7667663c9e3b648d>:
100068dc: b580         	push	{r7, lr}
100068de: af00         	add	r7, sp, #0x0
100068e0: b082         	sub	sp, #0x8
100068e2: 9000         	str	r0, [sp]
100068e4: 9101         	str	r1, [sp, #0x4]
100068e6: f7ff feaf    	bl	0x10006648 <core::ops::range::RangeBounds::contains::ha1ea0210d9e05dbb> @ imm = #-0x2a2
100068ea: b002         	add	sp, #0x8
100068ec: bd80         	pop	{r7, pc}

100068ee <core::ops::range::RangeInclusive<Idx>::new::hb333347fec324ac4>:
100068ee: b580         	push	{r7, lr}
100068f0: af00         	add	r7, sp, #0x0
100068f2: b083         	sub	sp, #0xc
100068f4: 9100         	str	r1, [sp]
100068f6: 4601         	mov	r1, r0
100068f8: 9800         	ldr	r0, [sp]
100068fa: 9001         	str	r0, [sp, #0x4]
100068fc: 9202         	str	r2, [sp, #0x8]
100068fe: 6008         	str	r0, [r1]
10006900: 604a         	str	r2, [r1, #0x4]
10006902: 2000         	movs	r0, #0x0
10006904: 7208         	strb	r0, [r1, #0x8]
10006906: b003         	add	sp, #0xc
10006908: bd80         	pop	{r7, pc}

1000690a <core::ops::range::RangeInclusive<Idx>::contains::h616873688289eeed>:
1000690a: b580         	push	{r7, lr}
1000690c: af00         	add	r7, sp, #0x0
1000690e: b082         	sub	sp, #0x8
10006910: 9000         	str	r0, [sp]
10006912: 9101         	str	r1, [sp, #0x4]
10006914: f7ff fdb8    	bl	0x10006488 <core::ops::range::RangeBounds::contains::h2e3d3a082aa356d1> @ imm = #-0x490
10006918: b002         	add	sp, #0x8
1000691a: bd80         	pop	{r7, pc}

1000691c <core::ops::function::FnOnce::call_once::h2a6deea7607c505b>:
1000691c: b580         	push	{r7, lr}
1000691e: af00         	add	r7, sp, #0x0
10006920: b082         	sub	sp, #0x8
10006922: a901         	add	r1, sp, #0x4
10006924: 7008         	strb	r0, [r1]
10006926: 9801         	ldr	r0, [sp, #0x4]
10006928: f004 fdec    	bl	0x1000b504 <rp2040_hal::clocks::InitError::ClockError::h068304f60d6b59cc> @ imm = #0x4bd8
1000692c: b002         	add	sp, #0x8
1000692e: bd80         	pop	{r7, pc}

10006930 <core::ops::function::FnOnce::call_once::h965c4a6460a060da>:
10006930: b580         	push	{r7, lr}
10006932: af00         	add	r7, sp, #0x0
10006934: b082         	sub	sp, #0x8
10006936: 4601         	mov	r1, r0
10006938: a801         	add	r0, sp, #0x4
1000693a: 7001         	strb	r1, [r0]
1000693c: 7800         	ldrb	r0, [r0]
1000693e: f004 fdc5    	bl	0x1000b4cc <rp2040_hal::clocks::InitError::XoscErr::h22520728be2cfe7b> @ imm = #0x4b8a
10006942: b002         	add	sp, #0x8
10006944: bd80         	pop	{r7, pc}

10006946 <core::ops::function::FnOnce::call_once::hc52631d7e0ec3364>:
10006946: b580         	push	{r7, lr}
10006948: af00         	add	r7, sp, #0x0
1000694a: b082         	sub	sp, #0x8
1000694c: a901         	add	r1, sp, #0x4
1000694e: 7008         	strb	r0, [r1]
10006950: 9801         	ldr	r0, [sp, #0x4]
10006952: f004 fdc9    	bl	0x1000b4e8 <rp2040_hal::clocks::InitError::PllError::hbdfa688b1c849207> @ imm = #0x4b92
10006956: b002         	add	sp, #0x8
10006958: bd80         	pop	{r7, pc}

1000695a <core::ptr::drop_in_place<rp2040_hal::sio::Spinlock<31_usize>>::h47a4933c798b61e5>:
1000695a: b580         	push	{r7, lr}
1000695c: af00         	add	r7, sp, #0x0
1000695e: b082         	sub	sp, #0x8
10006960: 9001         	str	r0, [sp, #0x4]
10006962: f002 fa3c    	bl	0x10008dde <<rp2040_hal::sio::Spinlock<_> as core::ops::drop::Drop>::drop::h5c98883ba3d7edde> @ imm = #0x2478
10006966: b002         	add	sp, #0x8
10006968: bd80         	pop	{r7, pc}

1000696a <core::ptr::drop_in_place<core::option::Option<rp2040_hal::sio::Spinlock<31_usize>>>::h38813bd545f348d3>:
1000696a: b580         	push	{r7, lr}
1000696c: af00         	add	r7, sp, #0x0
1000696e: b082         	sub	sp, #0x8
10006970: 9000         	str	r0, [sp]
10006972: 9001         	str	r0, [sp, #0x4]
10006974: 7800         	ldrb	r0, [r0]
10006976: 07c0         	lsls	r0, r0, #0x1f
10006978: 2800         	cmp	r0, #0x0
1000697a: d102         	bne	0x10006982 <core::ptr::drop_in_place<core::option::Option<rp2040_hal::sio::Spinlock<31_usize>>>::h38813bd545f348d3+0x18> @ imm = #0x4
1000697c: e7ff         	b	0x1000697e <core::ptr::drop_in_place<core::option::Option<rp2040_hal::sio::Spinlock<31_usize>>>::h38813bd545f348d3+0x14> @ imm = #-0x2
1000697e: b002         	add	sp, #0x8
10006980: bd80         	pop	{r7, pc}
10006982: 9800         	ldr	r0, [sp]
10006984: 1c40         	adds	r0, r0, #0x1
10006986: f7ff ffe8    	bl	0x1000695a <core::ptr::drop_in_place<rp2040_hal::sio::Spinlock<31_usize>>::h47a4933c798b61e5> @ imm = #-0x30
1000698a: e7f8         	b	0x1000697e <core::ptr::drop_in_place<core::option::Option<rp2040_hal::sio::Spinlock<31_usize>>>::h38813bd545f348d3+0x14> @ imm = #-0x10

1000698c <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive<A>>::next::h3917bafb1c641006>:
1000698c: b580         	push	{r7, lr}
1000698e: af00         	add	r7, sp, #0x0
10006990: b082         	sub	sp, #0x8
10006992: 9001         	str	r0, [sp, #0x4]
10006994: f7ff fb67    	bl	0x10006066 <<core::ops::range::RangeInclusive<T> as core::iter::range::RangeInclusiveIteratorImpl>::spec_next::h03bd5da6a1722700> @ imm = #-0x932
10006998: b002         	add	sp, #0x8
1000699a: bd80         	pop	{r7, pc}

1000699c <core::sync::atomic::atomic_load::hd3133317aca0523a>:
1000699c: b580         	push	{r7, lr}
1000699e: af00         	add	r7, sp, #0x0
100069a0: b094         	sub	sp, #0x50
100069a2: 460a         	mov	r2, r1
100069a4: 4601         	mov	r1, r0
100069a6: 9101         	str	r1, [sp, #0x4]
100069a8: a803         	add	r0, sp, #0xc
100069aa: 7002         	strb	r2, [r0]
100069ac: 9111         	str	r1, [sp, #0x44]
100069ae: 4923         	ldr	r1, [pc, #0x8c]         @ 0x10006a3c <core::sync::atomic::atomic_load::hd3133317aca0523a+0xa0>
100069b0: 9112         	str	r1, [sp, #0x48]
100069b2: 4923         	ldr	r1, [pc, #0x8c]         @ 0x10006a40 <core::sync::atomic::atomic_load::hd3133317aca0523a+0xa4>
100069b4: 9113         	str	r1, [sp, #0x4c]
100069b6: 7800         	ldrb	r0, [r0]
100069b8: 9002         	str	r0, [sp, #0x8]
100069ba: 9802         	ldr	r0, [sp, #0x8]
100069bc: 0081         	lsls	r1, r0, #0x2
100069be: a001         	adr	r0, #4 <core::sync::atomic::atomic_load::hd3133317aca0523a+0x27>
100069c0: 5840         	ldr	r0, [r0, r1]
100069c2: 4687         	mov	pc, r0
100069c4: db 69 00 10  	.word	0x100069db
100069c8: e5 69 00 10  	.word	0x100069e5
100069cc: ff 69 00 10  	.word	0x100069ff
100069d0: 0d 6a 00 10  	.word	0x10006a0d
100069d4: 27 6a 00 10  	.word	0x10006a27
100069d8: defe         	trap
100069da: 9801         	ldr	r0, [sp, #0x4]
100069dc: 7800         	ldrb	r0, [r0]
100069de: a904         	add	r1, sp, #0x10
100069e0: 7008         	strb	r0, [r1]
100069e2: e027         	b	0x10006a34 <core::sync::atomic::atomic_load::hd3133317aca0523a+0x98> @ imm = #0x4e
100069e4: 4816         	ldr	r0, [pc, #0x58]         @ 0x10006a40 <core::sync::atomic::atomic_load::hd3133317aca0523a+0xa4>
100069e6: 9005         	str	r0, [sp, #0x14]
100069e8: 2001         	movs	r0, #0x1
100069ea: 9006         	str	r0, [sp, #0x18]
100069ec: 2000         	movs	r0, #0x0
100069ee: 9009         	str	r0, [sp, #0x24]
100069f0: 2104         	movs	r1, #0x4
100069f2: 9107         	str	r1, [sp, #0x1c]
100069f4: 9008         	str	r0, [sp, #0x20]
100069f6: 4914         	ldr	r1, [pc, #0x50]         @ 0x10006a48 <core::sync::atomic::atomic_load::hd3133317aca0523a+0xac>
100069f8: a805         	add	r0, sp, #0x14
100069fa: f005 fcbf    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #0x597e
100069fe: 9801         	ldr	r0, [sp, #0x4]
10006a00: 7800         	ldrb	r0, [r0]
10006a02: f3bf 8f5f    	dmb	sy
10006a06: a904         	add	r1, sp, #0x10
10006a08: 7008         	strb	r0, [r1]
10006a0a: e013         	b	0x10006a34 <core::sync::atomic::atomic_load::hd3133317aca0523a+0x98> @ imm = #0x26
10006a0c: 480b         	ldr	r0, [pc, #0x2c]         @ 0x10006a3c <core::sync::atomic::atomic_load::hd3133317aca0523a+0xa0>
10006a0e: 900b         	str	r0, [sp, #0x2c]
10006a10: 2001         	movs	r0, #0x1
10006a12: 900c         	str	r0, [sp, #0x30]
10006a14: 2000         	movs	r0, #0x0
10006a16: 900f         	str	r0, [sp, #0x3c]
10006a18: 2104         	movs	r1, #0x4
10006a1a: 910d         	str	r1, [sp, #0x34]
10006a1c: 900e         	str	r0, [sp, #0x38]
10006a1e: 4909         	ldr	r1, [pc, #0x24]         @ 0x10006a44 <core::sync::atomic::atomic_load::hd3133317aca0523a+0xa8>
10006a20: a80b         	add	r0, sp, #0x2c
10006a22: f005 fcab    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #0x5956
10006a26: 9801         	ldr	r0, [sp, #0x4]
10006a28: 7800         	ldrb	r0, [r0]
10006a2a: f3bf 8f5f    	dmb	sy
10006a2e: a904         	add	r1, sp, #0x10
10006a30: 7008         	strb	r0, [r1]
10006a32: e7ff         	b	0x10006a34 <core::sync::atomic::atomic_load::hd3133317aca0523a+0x98> @ imm = #-0x2
10006a34: 9804         	ldr	r0, [sp, #0x10]
10006a36: b014         	add	sp, #0x50
10006a38: bd80         	pop	{r7, pc}
10006a3a: 46c0         	mov	r8, r8
10006a3c: f8 18 01 10  	.word	0x100118f8
10006a40: 28 19 01 10  	.word	0x10011928
10006a44: b4 19 01 10  	.word	0x100119b4
10006a48: a4 19 01 10  	.word	0x100119a4

10006a4c <core::sync::atomic::atomic_store::he05fc7eb76262da2>:
10006a4c: b580         	push	{r7, lr}
10006a4e: af00         	add	r7, sp, #0x0
10006a50: b094         	sub	sp, #0x50
10006a52: 4613         	mov	r3, r2
10006a54: 4602         	mov	r2, r0
10006a56: 9200         	str	r2, [sp]
10006a58: 4608         	mov	r0, r1
10006a5a: 9001         	str	r0, [sp, #0x4]
10006a5c: a803         	add	r0, sp, #0xc
10006a5e: 7003         	strb	r3, [r0]
10006a60: 9210         	str	r2, [sp, #0x40]
10006a62: aa11         	add	r2, sp, #0x44
10006a64: 7011         	strb	r1, [r2]
10006a66: 4922         	ldr	r1, [pc, #0x88]         @ 0x10006af0 <core::sync::atomic::atomic_store::he05fc7eb76262da2+0xa4>
10006a68: 9112         	str	r1, [sp, #0x48]
10006a6a: 4922         	ldr	r1, [pc, #0x88]         @ 0x10006af4 <core::sync::atomic::atomic_store::he05fc7eb76262da2+0xa8>
10006a6c: 9113         	str	r1, [sp, #0x4c]
10006a6e: 7800         	ldrb	r0, [r0]
10006a70: 9002         	str	r0, [sp, #0x8]
10006a72: 9802         	ldr	r0, [sp, #0x8]
10006a74: 0081         	lsls	r1, r0, #0x2
10006a76: a001         	adr	r0, #4 <core::sync::atomic::atomic_store::he05fc7eb76262da2+0x2f>
10006a78: 5840         	ldr	r0, [r0, r1]
10006a7a: 4687         	mov	pc, r0
10006a7c: 93 6a 00 10  	.word	0x10006a93
10006a80: 9b 6a 00 10  	.word	0x10006a9b
10006a84: a7 6a 00 10  	.word	0x10006aa7
10006a88: c1 6a 00 10  	.word	0x10006ac1
10006a8c: db 6a 00 10  	.word	0x10006adb
10006a90: defe         	trap
10006a92: 9801         	ldr	r0, [sp, #0x4]
10006a94: 9900         	ldr	r1, [sp]
10006a96: 7008         	strb	r0, [r1]
10006a98: e027         	b	0x10006aea <core::sync::atomic::atomic_store::he05fc7eb76262da2+0x9e> @ imm = #0x4e
10006a9a: 9801         	ldr	r0, [sp, #0x4]
10006a9c: 9900         	ldr	r1, [sp]
10006a9e: f3bf 8f5f    	dmb	sy
10006aa2: 7008         	strb	r0, [r1]
10006aa4: e021         	b	0x10006aea <core::sync::atomic::atomic_store::he05fc7eb76262da2+0x9e> @ imm = #0x42
10006aa6: 4813         	ldr	r0, [pc, #0x4c]         @ 0x10006af4 <core::sync::atomic::atomic_store::he05fc7eb76262da2+0xa8>
10006aa8: 9004         	str	r0, [sp, #0x10]
10006aaa: 2001         	movs	r0, #0x1
10006aac: 9005         	str	r0, [sp, #0x14]
10006aae: 2000         	movs	r0, #0x0
10006ab0: 9008         	str	r0, [sp, #0x20]
10006ab2: 2104         	movs	r1, #0x4
10006ab4: 9106         	str	r1, [sp, #0x18]
10006ab6: 9007         	str	r0, [sp, #0x1c]
10006ab8: 4910         	ldr	r1, [pc, #0x40]         @ 0x10006afc <core::sync::atomic::atomic_store::he05fc7eb76262da2+0xb0>
10006aba: a804         	add	r0, sp, #0x10
10006abc: f005 fc5e    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #0x58bc
10006ac0: 480b         	ldr	r0, [pc, #0x2c]         @ 0x10006af0 <core::sync::atomic::atomic_store::he05fc7eb76262da2+0xa4>
10006ac2: 900a         	str	r0, [sp, #0x28]
10006ac4: 2001         	movs	r0, #0x1
10006ac6: 900b         	str	r0, [sp, #0x2c]
10006ac8: 2000         	movs	r0, #0x0
10006aca: 900e         	str	r0, [sp, #0x38]
10006acc: 2104         	movs	r1, #0x4
10006ace: 910c         	str	r1, [sp, #0x30]
10006ad0: 900d         	str	r0, [sp, #0x34]
10006ad2: 4909         	ldr	r1, [pc, #0x24]         @ 0x10006af8 <core::sync::atomic::atomic_store::he05fc7eb76262da2+0xac>
10006ad4: a80a         	add	r0, sp, #0x28
10006ad6: f005 fc51    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #0x58a2
10006ada: 9801         	ldr	r0, [sp, #0x4]
10006adc: 9900         	ldr	r1, [sp]
10006ade: f3bf 8f5f    	dmb	sy
10006ae2: 7008         	strb	r0, [r1]
10006ae4: f3bf 8f5f    	dmb	sy
10006ae8: e7ff         	b	0x10006aea <core::sync::atomic::atomic_store::he05fc7eb76262da2+0x9e> @ imm = #-0x2
10006aea: b014         	add	sp, #0x50
10006aec: bd80         	pop	{r7, pc}
10006aee: 46c0         	mov	r8, r8
10006af0: f8 19 01 10  	.word	0x100119f8
10006af4: 2c 1a 01 10  	.word	0x10011a2c
10006af8: 44 1a 01 10  	.word	0x10011a44
10006afc: 34 1a 01 10  	.word	0x10011a34

10006b00 <core::sync::atomic::compiler_fence::hdda169e65ad36249>:
10006b00: b580         	push	{r7, lr}
10006b02: af00         	add	r7, sp, #0x0
10006b04: b08a         	sub	sp, #0x28
10006b06: 4601         	mov	r1, r0
10006b08: a802         	add	r0, sp, #0x8
10006b0a: 7001         	strb	r1, [r0]
10006b0c: 4913         	ldr	r1, [pc, #0x4c]         @ 0x10006b5c <core::sync::atomic::compiler_fence::hdda169e65ad36249+0x5c>
10006b0e: 9109         	str	r1, [sp, #0x24]
10006b10: 7800         	ldrb	r0, [r0]
10006b12: 9001         	str	r0, [sp, #0x4]
10006b14: 9801         	ldr	r0, [sp, #0x4]
10006b16: 0081         	lsls	r1, r0, #0x2
10006b18: a001         	adr	r0, #4 <core::sync::atomic::compiler_fence::hdda169e65ad36249+0x1d>
10006b1a: 5840         	ldr	r0, [r0, r1]
10006b1c: 4687         	mov	pc, r0
10006b1e: 46c0         	mov	r8, r8
10006b20: 37 6b 00 10  	.word	0x10006b37
10006b24: 51 6b 00 10  	.word	0x10006b51
10006b28: 53 6b 00 10  	.word	0x10006b53
10006b2c: 55 6b 00 10  	.word	0x10006b55
10006b30: 57 6b 00 10  	.word	0x10006b57
10006b34: defe         	trap
10006b36: 4809         	ldr	r0, [pc, #0x24]         @ 0x10006b5c <core::sync::atomic::compiler_fence::hdda169e65ad36249+0x5c>
10006b38: 9003         	str	r0, [sp, #0xc]
10006b3a: 2001         	movs	r0, #0x1
10006b3c: 9004         	str	r0, [sp, #0x10]
10006b3e: 2000         	movs	r0, #0x0
10006b40: 9007         	str	r0, [sp, #0x1c]
10006b42: 2104         	movs	r1, #0x4
10006b44: 9105         	str	r1, [sp, #0x14]
10006b46: 9006         	str	r0, [sp, #0x18]
10006b48: 4905         	ldr	r1, [pc, #0x14]         @ 0x10006b60 <core::sync::atomic::compiler_fence::hdda169e65ad36249+0x60>
10006b4a: a803         	add	r0, sp, #0xc
10006b4c: f005 fc16    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #0x582c
10006b50: e002         	b	0x10006b58 <core::sync::atomic::compiler_fence::hdda169e65ad36249+0x58> @ imm = #0x4
10006b52: e001         	b	0x10006b58 <core::sync::atomic::compiler_fence::hdda169e65ad36249+0x58> @ imm = #0x2
10006b54: e000         	b	0x10006b58 <core::sync::atomic::compiler_fence::hdda169e65ad36249+0x58> @ imm = #0x0
10006b56: e7ff         	b	0x10006b58 <core::sync::atomic::compiler_fence::hdda169e65ad36249+0x58> @ imm = #-0x2
10006b58: b00a         	add	sp, #0x28
10006b5a: bd80         	pop	{r7, pc}
10006b5c: 88 1a 01 10  	.word	0x10011a88
10006b60: 90 1a 01 10  	.word	0x10011a90

10006b64 <core::sync::atomic::AtomicU8::load::h3c1a4ae555ddf19c>:
10006b64: b580         	push	{r7, lr}
10006b66: af00         	add	r7, sp, #0x0
10006b68: b084         	sub	sp, #0x10
10006b6a: 9001         	str	r0, [sp, #0x4]
10006b6c: aa02         	add	r2, sp, #0x8
10006b6e: 7011         	strb	r1, [r2]
10006b70: 9003         	str	r0, [sp, #0xc]
10006b72: f7ff ff13    	bl	0x1000699c <core::sync::atomic::atomic_load::hd3133317aca0523a> @ imm = #-0x1da
10006b76: b004         	add	sp, #0x10
10006b78: bd80         	pop	{r7, pc}

10006b7a <core::sync::atomic::AtomicU8::store::haaab84d7cd226e79>:
10006b7a: b580         	push	{r7, lr}
10006b7c: af00         	add	r7, sp, #0x0
10006b7e: b084         	sub	sp, #0x10
10006b80: 9000         	str	r0, [sp]
10006b82: ab01         	add	r3, sp, #0x4
10006b84: 7019         	strb	r1, [r3]
10006b86: ab02         	add	r3, sp, #0x8
10006b88: 701a         	strb	r2, [r3]
10006b8a: 9003         	str	r0, [sp, #0xc]
10006b8c: f7ff ff5e    	bl	0x10006a4c <core::sync::atomic::atomic_store::he05fc7eb76262da2> @ imm = #-0x144
10006b90: b004         	add	sp, #0x10
10006b92: bd80         	pop	{r7, pc}

10006b94 <core::option::Option<T>::ok_or::h81824975fa84ee0f>:
10006b94: b580         	push	{r7, lr}
10006b96: af00         	add	r7, sp, #0x0
10006b98: b086         	sub	sp, #0x18
10006b9a: 9000         	str	r0, [sp]
10006b9c: 4618         	mov	r0, r3
10006b9e: 9001         	str	r0, [sp, #0x4]
10006ba0: 9102         	str	r1, [sp, #0x8]
10006ba2: 9203         	str	r2, [sp, #0xc]
10006ba4: a804         	add	r0, sp, #0x10
10006ba6: 7003         	strb	r3, [r0]
10006ba8: 9802         	ldr	r0, [sp, #0x8]
10006baa: 2800         	cmp	r0, #0x0
10006bac: d106         	bne	0x10006bbc <core::option::Option<T>::ok_or::h81824975fa84ee0f+0x28> @ imm = #0xc
10006bae: e7ff         	b	0x10006bb0 <core::option::Option<T>::ok_or::h81824975fa84ee0f+0x1c> @ imm = #-0x2
10006bb0: 9900         	ldr	r1, [sp]
10006bb2: 9801         	ldr	r0, [sp, #0x4]
10006bb4: 7048         	strb	r0, [r1, #0x1]
10006bb6: 2001         	movs	r0, #0x1
10006bb8: 7008         	strb	r0, [r1]
10006bba: e006         	b	0x10006bca <core::option::Option<T>::ok_or::h81824975fa84ee0f+0x36> @ imm = #0xc
10006bbc: 9900         	ldr	r1, [sp]
10006bbe: 9803         	ldr	r0, [sp, #0xc]
10006bc0: 9005         	str	r0, [sp, #0x14]
10006bc2: 6048         	str	r0, [r1, #0x4]
10006bc4: 2000         	movs	r0, #0x0
10006bc6: 7008         	strb	r0, [r1]
10006bc8: e7ff         	b	0x10006bca <core::option::Option<T>::ok_or::h81824975fa84ee0f+0x36> @ imm = #-0x2
10006bca: b006         	add	sp, #0x18
10006bcc: bd80         	pop	{r7, pc}

10006bce <core::option::Option<T>::ok_or::hf91b7b3e8860dec5>:
10006bce: b580         	push	{r7, lr}
10006bd0: af00         	add	r7, sp, #0x0
10006bd2: b086         	sub	sp, #0x18
10006bd4: 9000         	str	r0, [sp]
10006bd6: 4618         	mov	r0, r3
10006bd8: 9001         	str	r0, [sp, #0x4]
10006bda: 9102         	str	r1, [sp, #0x8]
10006bdc: 9203         	str	r2, [sp, #0xc]
10006bde: a804         	add	r0, sp, #0x10
10006be0: 7003         	strb	r3, [r0]
10006be2: 9802         	ldr	r0, [sp, #0x8]
10006be4: 2800         	cmp	r0, #0x0
10006be6: d106         	bne	0x10006bf6 <core::option::Option<T>::ok_or::hf91b7b3e8860dec5+0x28> @ imm = #0xc
10006be8: e7ff         	b	0x10006bea <core::option::Option<T>::ok_or::hf91b7b3e8860dec5+0x1c> @ imm = #-0x2
10006bea: 9900         	ldr	r1, [sp]
10006bec: 9801         	ldr	r0, [sp, #0x4]
10006bee: 7048         	strb	r0, [r1, #0x1]
10006bf0: 2001         	movs	r0, #0x1
10006bf2: 7008         	strb	r0, [r1]
10006bf4: e006         	b	0x10006c04 <core::option::Option<T>::ok_or::hf91b7b3e8860dec5+0x36> @ imm = #0xc
10006bf6: 9900         	ldr	r1, [sp]
10006bf8: 9803         	ldr	r0, [sp, #0xc]
10006bfa: 9005         	str	r0, [sp, #0x14]
10006bfc: 6048         	str	r0, [r1, #0x4]
10006bfe: 2000         	movs	r0, #0x0
10006c00: 7008         	strb	r0, [r1]
10006c02: e7ff         	b	0x10006c04 <core::option::Option<T>::ok_or::hf91b7b3e8860dec5+0x36> @ imm = #-0x2
10006c04: b006         	add	sp, #0x18
10006c06: bd80         	pop	{r7, pc}

10006c08 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h0fc1151833b4e634E>:
10006c08: b580         	push	{r7, lr}
10006c0a: af00         	add	r7, sp, #0x0
10006c0c: b084         	sub	sp, #0x10
10006c0e: 4601         	mov	r1, r0
10006c10: a801         	add	r0, sp, #0x4
10006c12: 7001         	strb	r1, [r0]
10006c14: 7800         	ldrb	r0, [r0]
10006c16: 2803         	cmp	r0, #0x3
10006c18: d104         	bne	0x10006c24 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h0fc1151833b4e634E+0x1c> @ imm = #0x8
10006c1a: e7ff         	b	0x10006c1c <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h0fc1151833b4e634E+0x14> @ imm = #-0x2
10006c1c: a902         	add	r1, sp, #0x8
10006c1e: 2003         	movs	r0, #0x3
10006c20: 7008         	strb	r0, [r1]
10006c22: e009         	b	0x10006c38 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h0fc1151833b4e634E+0x30> @ imm = #0x12
10006c24: 9801         	ldr	r0, [sp, #0x4]
10006c26: a903         	add	r1, sp, #0xc
10006c28: 7008         	strb	r0, [r1]
10006c2a: f7ff fe77    	bl	0x1000691c <core::ops::function::FnOnce::call_once::h2a6deea7607c505b> @ imm = #-0x312
10006c2e: 4602         	mov	r2, r0
10006c30: a802         	add	r0, sp, #0x8
10006c32: 7002         	strb	r2, [r0]
10006c34: 7041         	strb	r1, [r0, #0x1]
10006c36: e7ff         	b	0x10006c38 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h0fc1151833b4e634E+0x30> @ imm = #-0x2
10006c38: a802         	add	r0, sp, #0x8
10006c3a: 7841         	ldrb	r1, [r0, #0x1]
10006c3c: 9802         	ldr	r0, [sp, #0x8]
10006c3e: b004         	add	sp, #0x10
10006c40: bd80         	pop	{r7, pc}

10006c42 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h2bbe096994ce64acE>:
10006c42: b580         	push	{r7, lr}
10006c44: af00         	add	r7, sp, #0x0
10006c46: b084         	sub	sp, #0x10
10006c48: 4602         	mov	r2, r0
10006c4a: 4668         	mov	r0, sp
10006c4c: 8002         	strh	r2, [r0]
10006c4e: 8041         	strh	r1, [r0, #0x2]
10006c50: 8800         	ldrh	r0, [r0]
10006c52: 2800         	cmp	r0, #0x0
10006c54: d109         	bne	0x10006c6a <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h2bbe096994ce64acE+0x28> @ imm = #0x12
10006c56: e7ff         	b	0x10006c58 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h2bbe096994ce64acE+0x16> @ imm = #-0x2
10006c58: 4668         	mov	r0, sp
10006c5a: 8840         	ldrh	r0, [r0, #0x2]
10006c5c: a903         	add	r1, sp, #0xc
10006c5e: 8008         	strh	r0, [r1]
10006c60: a901         	add	r1, sp, #0x4
10006c62: 8048         	strh	r0, [r1, #0x2]
10006c64: 2000         	movs	r0, #0x0
10006c66: 7008         	strb	r0, [r1]
10006c68: e006         	b	0x10006c78 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h2bbe096994ce64acE+0x36> @ imm = #0xc
10006c6a: f002 fa8c    	bl	0x10009186 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::{{closure}}::hb83263649b65a668> @ imm = #0x2518
10006c6e: a901         	add	r1, sp, #0x4
10006c70: 7048         	strb	r0, [r1, #0x1]
10006c72: 2001         	movs	r0, #0x1
10006c74: 7008         	strb	r0, [r1]
10006c76: e7ff         	b	0x10006c78 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h2bbe096994ce64acE+0x36> @ imm = #-0x2
10006c78: a801         	add	r0, sp, #0x4
10006c7a: 8801         	ldrh	r1, [r0]
10006c7c: 8840         	ldrh	r0, [r0, #0x2]
10006c7e: 0400         	lsls	r0, r0, #0x10
10006c80: 1840         	adds	r0, r0, r1
10006c82: b004         	add	sp, #0x10
10006c84: bd80         	pop	{r7, pc}

10006c86 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h4537fe00f207836eE>:
10006c86: b580         	push	{r7, lr}
10006c88: af00         	add	r7, sp, #0x0
10006c8a: b084         	sub	sp, #0x10
10006c8c: 4602         	mov	r2, r0
10006c8e: 4668         	mov	r0, sp
10006c90: 8002         	strh	r2, [r0]
10006c92: 8041         	strh	r1, [r0, #0x2]
10006c94: 8800         	ldrh	r0, [r0]
10006c96: 2800         	cmp	r0, #0x0
10006c98: d109         	bne	0x10006cae <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h4537fe00f207836eE+0x28> @ imm = #0x12
10006c9a: e7ff         	b	0x10006c9c <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h4537fe00f207836eE+0x16> @ imm = #-0x2
10006c9c: 4668         	mov	r0, sp
10006c9e: 8840         	ldrh	r0, [r0, #0x2]
10006ca0: a903         	add	r1, sp, #0xc
10006ca2: 8008         	strh	r0, [r1]
10006ca4: a901         	add	r1, sp, #0x4
10006ca6: 8048         	strh	r0, [r1, #0x2]
10006ca8: 2000         	movs	r0, #0x0
10006caa: 7008         	strb	r0, [r1]
10006cac: e006         	b	0x10006cbc <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h4537fe00f207836eE+0x36> @ imm = #0xc
10006cae: f001 fa30    	bl	0x10008112 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::{{closure}}::h5bfcc994cf464e60> @ imm = #0x1460
10006cb2: a901         	add	r1, sp, #0x4
10006cb4: 7048         	strb	r0, [r1, #0x1]
10006cb6: 2001         	movs	r0, #0x1
10006cb8: 7008         	strb	r0, [r1]
10006cba: e7ff         	b	0x10006cbc <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h4537fe00f207836eE+0x36> @ imm = #-0x2
10006cbc: a801         	add	r0, sp, #0x4
10006cbe: 8801         	ldrh	r1, [r0]
10006cc0: 8840         	ldrh	r0, [r0, #0x2]
10006cc2: 0400         	lsls	r0, r0, #0x10
10006cc4: 1840         	adds	r0, r0, r1
10006cc6: b004         	add	sp, #0x10
10006cc8: bd80         	pop	{r7, pc}

10006cca <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17ha83f243a1e8de47cE>:
10006cca: b580         	push	{r7, lr}
10006ccc: af00         	add	r7, sp, #0x0
10006cce: b086         	sub	sp, #0x18
10006cd0: 9101         	str	r1, [sp, #0x4]
10006cd2: 9002         	str	r0, [sp, #0x8]
10006cd4: 7808         	ldrb	r0, [r1]
10006cd6: 07c0         	lsls	r0, r0, #0x1f
10006cd8: 2800         	cmp	r0, #0x0
10006cda: d108         	bne	0x10006cee <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17ha83f243a1e8de47cE+0x24> @ imm = #0x10
10006cdc: e7ff         	b	0x10006cde <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17ha83f243a1e8de47cE+0x14> @ imm = #-0x2
10006cde: 9902         	ldr	r1, [sp, #0x8]
10006ce0: 9801         	ldr	r0, [sp, #0x4]
10006ce2: 6840         	ldr	r0, [r0, #0x4]
10006ce4: 9004         	str	r0, [sp, #0x10]
10006ce6: 6048         	str	r0, [r1, #0x4]
10006ce8: 2000         	movs	r0, #0x0
10006cea: 7008         	strb	r0, [r1]
10006cec: e00d         	b	0x10006d0a <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17ha83f243a1e8de47cE+0x40> @ imm = #0x1a
10006cee: 9801         	ldr	r0, [sp, #0x4]
10006cf0: 7840         	ldrb	r0, [r0, #0x1]
10006cf2: a905         	add	r1, sp, #0x14
10006cf4: 7008         	strb	r0, [r1]
10006cf6: f7ff fe26    	bl	0x10006946 <core::ops::function::FnOnce::call_once::hc52631d7e0ec3364> @ imm = #-0x3b4
10006cfa: 4602         	mov	r2, r0
10006cfc: 4608         	mov	r0, r1
10006cfe: 9902         	ldr	r1, [sp, #0x8]
10006d00: 704a         	strb	r2, [r1, #0x1]
10006d02: 7088         	strb	r0, [r1, #0x2]
10006d04: 2001         	movs	r0, #0x1
10006d06: 7008         	strb	r0, [r1]
10006d08: e7ff         	b	0x10006d0a <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17ha83f243a1e8de47cE+0x40> @ imm = #-0x2
10006d0a: b006         	add	sp, #0x18
10006d0c: bd80         	pop	{r7, pc}

10006d0e <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hbdce24765d233294E>:
10006d0e: b580         	push	{r7, lr}
10006d10: af00         	add	r7, sp, #0x0
10006d12: b086         	sub	sp, #0x18
10006d14: 9101         	str	r1, [sp, #0x4]
10006d16: 9002         	str	r0, [sp, #0x8]
10006d18: 7808         	ldrb	r0, [r1]
10006d1a: 07c0         	lsls	r0, r0, #0x1f
10006d1c: 2800         	cmp	r0, #0x0
10006d1e: d108         	bne	0x10006d32 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hbdce24765d233294E+0x24> @ imm = #0x10
10006d20: e7ff         	b	0x10006d22 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hbdce24765d233294E+0x14> @ imm = #-0x2
10006d22: 9902         	ldr	r1, [sp, #0x8]
10006d24: 9801         	ldr	r0, [sp, #0x4]
10006d26: 6840         	ldr	r0, [r0, #0x4]
10006d28: 9004         	str	r0, [sp, #0x10]
10006d2a: 6048         	str	r0, [r1, #0x4]
10006d2c: 2000         	movs	r0, #0x0
10006d2e: 7008         	strb	r0, [r1]
10006d30: e00d         	b	0x10006d4e <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hbdce24765d233294E+0x40> @ imm = #0x1a
10006d32: 9801         	ldr	r0, [sp, #0x4]
10006d34: 7840         	ldrb	r0, [r0, #0x1]
10006d36: a905         	add	r1, sp, #0x14
10006d38: 7008         	strb	r0, [r1]
10006d3a: f7ff fdf9    	bl	0x10006930 <core::ops::function::FnOnce::call_once::h965c4a6460a060da> @ imm = #-0x40e
10006d3e: 4602         	mov	r2, r0
10006d40: 4608         	mov	r0, r1
10006d42: 9902         	ldr	r1, [sp, #0x8]
10006d44: 704a         	strb	r2, [r1, #0x1]
10006d46: 7088         	strb	r0, [r1, #0x2]
10006d48: 2001         	movs	r0, #0x1
10006d4a: 7008         	strb	r0, [r1]
10006d4c: e7ff         	b	0x10006d4e <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hbdce24765d233294E+0x40> @ imm = #-0x2
10006d4e: b006         	add	sp, #0x18
10006d50: bd80         	pop	{r7, pc}

10006d52 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hd8ac9fd82722e124E>:
10006d52: b580         	push	{r7, lr}
10006d54: af00         	add	r7, sp, #0x0
10006d56: b084         	sub	sp, #0x10
10006d58: 4602         	mov	r2, r0
10006d5a: 4668         	mov	r0, sp
10006d5c: 8002         	strh	r2, [r0]
10006d5e: 8041         	strh	r1, [r0, #0x2]
10006d60: 8800         	ldrh	r0, [r0]
10006d62: 2800         	cmp	r0, #0x0
10006d64: d109         	bne	0x10006d7a <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hd8ac9fd82722e124E+0x28> @ imm = #0x12
10006d66: e7ff         	b	0x10006d68 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hd8ac9fd82722e124E+0x16> @ imm = #-0x2
10006d68: 4668         	mov	r0, sp
10006d6a: 8840         	ldrh	r0, [r0, #0x2]
10006d6c: a903         	add	r1, sp, #0xc
10006d6e: 8008         	strh	r0, [r1]
10006d70: a901         	add	r1, sp, #0x4
10006d72: 8048         	strh	r0, [r1, #0x2]
10006d74: 2000         	movs	r0, #0x0
10006d76: 7008         	strb	r0, [r1]
10006d78: e006         	b	0x10006d88 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hd8ac9fd82722e124E+0x36> @ imm = #0xc
10006d7a: f001 f9c1    	bl	0x10008100 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::{{closure}}::h3b2fe7c906c13cc4> @ imm = #0x1382
10006d7e: a901         	add	r1, sp, #0x4
10006d80: 7048         	strb	r0, [r1, #0x1]
10006d82: 2001         	movs	r0, #0x1
10006d84: 7008         	strb	r0, [r1]
10006d86: e7ff         	b	0x10006d88 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hd8ac9fd82722e124E+0x36> @ imm = #-0x2
10006d88: a801         	add	r0, sp, #0x4
10006d8a: 8801         	ldrh	r1, [r0]
10006d8c: 8840         	ldrh	r0, [r0, #0x2]
10006d8e: 0400         	lsls	r0, r0, #0x10
10006d90: 1840         	adds	r0, r0, r1
10006d92: b004         	add	sp, #0x10
10006d94: bd80         	pop	{r7, pc}

10006d96 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hde661ff10b6f4c5cE>:
10006d96: b580         	push	{r7, lr}
10006d98: af00         	add	r7, sp, #0x0
10006d9a: b086         	sub	sp, #0x18
10006d9c: 9101         	str	r1, [sp, #0x4]
10006d9e: 9002         	str	r0, [sp, #0x8]
10006da0: 7808         	ldrb	r0, [r1]
10006da2: 07c0         	lsls	r0, r0, #0x1f
10006da4: 2800         	cmp	r0, #0x0
10006da6: d108         	bne	0x10006dba <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hde661ff10b6f4c5cE+0x24> @ imm = #0x10
10006da8: e7ff         	b	0x10006daa <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hde661ff10b6f4c5cE+0x14> @ imm = #-0x2
10006daa: 9902         	ldr	r1, [sp, #0x8]
10006dac: 9801         	ldr	r0, [sp, #0x4]
10006dae: 6840         	ldr	r0, [r0, #0x4]
10006db0: 9004         	str	r0, [sp, #0x10]
10006db2: 6048         	str	r0, [r1, #0x4]
10006db4: 2000         	movs	r0, #0x0
10006db6: 7008         	strb	r0, [r1]
10006db8: e00d         	b	0x10006dd6 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hde661ff10b6f4c5cE+0x40> @ imm = #0x1a
10006dba: 9801         	ldr	r0, [sp, #0x4]
10006dbc: 7840         	ldrb	r0, [r0, #0x1]
10006dbe: a905         	add	r1, sp, #0x14
10006dc0: 7008         	strb	r0, [r1]
10006dc2: f7ff fdc0    	bl	0x10006946 <core::ops::function::FnOnce::call_once::hc52631d7e0ec3364> @ imm = #-0x480
10006dc6: 4602         	mov	r2, r0
10006dc8: 4608         	mov	r0, r1
10006dca: 9902         	ldr	r1, [sp, #0x8]
10006dcc: 704a         	strb	r2, [r1, #0x1]
10006dce: 7088         	strb	r0, [r1, #0x2]
10006dd0: 2001         	movs	r0, #0x1
10006dd2: 7008         	strb	r0, [r1]
10006dd4: e7ff         	b	0x10006dd6 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hde661ff10b6f4c5cE+0x40> @ imm = #-0x2
10006dd6: b006         	add	sp, #0x18
10006dd8: bd80         	pop	{r7, pc}

10006dda <core::convert::num::<impl core::convert::TryFrom<u32> for u16>::try_from::h57ba6d78b5c9377c>:
10006dda: b580         	push	{r7, lr}
10006ddc: af00         	add	r7, sp, #0x0
10006dde: b083         	sub	sp, #0xc
10006de0: 9000         	str	r0, [sp]
10006de2: 9002         	str	r0, [sp, #0x8]
10006de4: 0c00         	lsrs	r0, r0, #0x10
10006de6: 2800         	cmp	r0, #0x0
10006de8: d106         	bne	0x10006df8 <core::convert::num::<impl core::convert::TryFrom<u32> for u16>::try_from::h57ba6d78b5c9377c+0x1e> @ imm = #0xc
10006dea: e7ff         	b	0x10006dec <core::convert::num::<impl core::convert::TryFrom<u32> for u16>::try_from::h57ba6d78b5c9377c+0x12> @ imm = #-0x2
10006dec: 9800         	ldr	r0, [sp]
10006dee: a901         	add	r1, sp, #0x4
10006df0: 8048         	strh	r0, [r1, #0x2]
10006df2: 2000         	movs	r0, #0x0
10006df4: 8008         	strh	r0, [r1]
10006df6: e003         	b	0x10006e00 <core::convert::num::<impl core::convert::TryFrom<u32> for u16>::try_from::h57ba6d78b5c9377c+0x26> @ imm = #0x6
10006df8: a901         	add	r1, sp, #0x4
10006dfa: 2001         	movs	r0, #0x1
10006dfc: 8008         	strh	r0, [r1]
10006dfe: e7ff         	b	0x10006e00 <core::convert::num::<impl core::convert::TryFrom<u32> for u16>::try_from::h57ba6d78b5c9377c+0x26> @ imm = #-0x2
10006e00: a801         	add	r0, sp, #0x4
10006e02: 8841         	ldrh	r1, [r0, #0x2]
10006e04: 9801         	ldr	r0, [sp, #0x4]
10006e06: b003         	add	sp, #0xc
10006e08: bd80         	pop	{r7, pc}

10006e0a <<T as core::convert::Into<U>>::into::hd9da2216767de703>:
10006e0a: b580         	push	{r7, lr}
10006e0c: af00         	add	r7, sp, #0x0
10006e0e: b082         	sub	sp, #0x8
10006e10: 9000         	str	r0, [sp]
10006e12: 9001         	str	r0, [sp, #0x4]
10006e14: b002         	add	sp, #0x8
10006e16: bd80         	pop	{r7, pc}

10006e18 <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::hc18d656116c887ea>:
10006e18: b580         	push	{r7, lr}
10006e1a: af00         	add	r7, sp, #0x0
10006e1c: b082         	sub	sp, #0x8
10006e1e: 460a         	mov	r2, r1
10006e20: 4601         	mov	r1, r0
10006e22: 9100         	str	r1, [sp]
10006e24: 9201         	str	r2, [sp, #0x4]
10006e26: 6808         	ldr	r0, [r1]
10006e28: 4310         	orrs	r0, r2
10006e2a: 6008         	str	r0, [r1]
10006e2c: b002         	add	sp, #0x8
10006e2e: bd80         	pop	{r7, pc}

10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee>:
10006e30: b580         	push	{r7, lr}
10006e32: af00         	add	r7, sp, #0x0
10006e34: b082         	sub	sp, #0x8
10006e36: 460a         	mov	r2, r1
10006e38: 4601         	mov	r1, r0
10006e3a: 9100         	str	r1, [sp]
10006e3c: 9201         	str	r2, [sp, #0x4]
10006e3e: 6808         	ldr	r0, [r1]
10006e40: 4010         	ands	r0, r2
10006e42: 6008         	str	r0, [r1]
10006e44: b002         	add	sp, #0x8
10006e46: bd80         	pop	{r7, pc}

10006e48 <<T as core::convert::TryInto<U>>::try_into::ha57f9a712ea47f27>:
10006e48: b580         	push	{r7, lr}
10006e4a: af00         	add	r7, sp, #0x0
10006e4c: b082         	sub	sp, #0x8
10006e4e: 9001         	str	r0, [sp, #0x4]
10006e50: f7ff ffc3    	bl	0x10006dda <core::convert::num::<impl core::convert::TryFrom<u32> for u16>::try_from::h57ba6d78b5c9377c> @ imm = #-0x7a
10006e54: b002         	add	sp, #0x8
10006e56: bd80         	pop	{r7, pc}

10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e>:
10006e58: b580         	push	{r7, lr}
10006e5a: af00         	add	r7, sp, #0x0
10006e5c: b084         	sub	sp, #0x10
10006e5e: 4602         	mov	r2, r0
10006e60: 9200         	str	r2, [sp]
10006e62: b2c8         	uxtb	r0, r1
10006e64: 460b         	mov	r3, r1
10006e66: 9301         	str	r3, [sp, #0x4]
10006e68: 9202         	str	r2, [sp, #0x8]
10006e6a: aa03         	add	r2, sp, #0xc
10006e6c: 7011         	strb	r1, [r2]
10006e6e: 281f         	cmp	r0, #0x1f
10006e70: d807         	bhi	0x10006e82 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e+0x2a> @ imm = #0xe
10006e72: e7ff         	b	0x10006e74 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e+0x1c> @ imm = #-0x2
10006e74: 9800         	ldr	r0, [sp]
10006e76: 9901         	ldr	r1, [sp, #0x4]
10006e78: 221f         	movs	r2, #0x1f
10006e7a: 4011         	ands	r1, r2
10006e7c: 4088         	lsls	r0, r1
10006e7e: b004         	add	sp, #0x10
10006e80: bd80         	pop	{r7, pc}
10006e82: 4801         	ldr	r0, [pc, #0x4]          @ 0x10006e88 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e+0x30>
10006e84: f006 fb0a    	bl	0x1000d49c <core::panicking::panic_const::panic_const_shl_overflow::h42afea46a5d11e4a> @ imm = #0x6614
10006e88: 10 1b 01 10  	.word	0x10011b10

10006e8c <fugit::rate::Rate<u32,_,_>::const_try_from::h3725e15f87118890>:
10006e8c: b580         	push	{r7, lr}
10006e8e: af00         	add	r7, sp, #0x0
10006e90: b084         	sub	sp, #0x10
10006e92: 9000         	str	r0, [sp]
10006e94: 9003         	str	r0, [sp, #0xc]
10006e96: e7ff         	b	0x10006e98 <fugit::rate::Rate<u32,_,_>::const_try_from::h3725e15f87118890+0xc> @ imm = #-0x2
10006e98: 9800         	ldr	r0, [sp]
10006e9a: f000 f897    	bl	0x10006fcc <fugit::rate::Rate<u32,_,_>::from_raw::h24b3847a49306c16> @ imm = #0x12e
10006e9e: 9002         	str	r0, [sp, #0x8]
10006ea0: 2001         	movs	r0, #0x1
10006ea2: 9001         	str	r0, [sp, #0x4]
10006ea4: e7ff         	b	0x10006ea6 <fugit::rate::Rate<u32,_,_>::const_try_from::h3725e15f87118890+0x1a> @ imm = #-0x2
10006ea6: 9801         	ldr	r0, [sp, #0x4]
10006ea8: 9902         	ldr	r1, [sp, #0x8]
10006eaa: b004         	add	sp, #0x10
10006eac: bd80         	pop	{r7, pc}

10006eae <fugit::rate::Rate<u32,_,_>::const_try_into::hb29a045f543bbbbd>:
10006eae: b580         	push	{r7, lr}
10006eb0: af00         	add	r7, sp, #0x0
10006eb2: b082         	sub	sp, #0x8
10006eb4: 9001         	str	r0, [sp, #0x4]
10006eb6: f7ff ffe9    	bl	0x10006e8c <fugit::rate::Rate<u32,_,_>::const_try_from::h3725e15f87118890> @ imm = #-0x2e
10006eba: b002         	add	sp, #0x8
10006ebc: bd80         	pop	{r7, pc}

10006ebe <fugit::rate::Rate<u32,_,_>::const_partial_cmp::hc14c35c8b428e827>:
10006ebe: b580         	push	{r7, lr}
10006ec0: af00         	add	r7, sp, #0x0
10006ec2: b088         	sub	sp, #0x20
10006ec4: 9100         	str	r1, [sp]
10006ec6: 9001         	str	r0, [sp, #0x4]
10006ec8: 9003         	str	r0, [sp, #0xc]
10006eca: 9104         	str	r1, [sp, #0x10]
10006ecc: e7ff         	b	0x10006ece <fugit::rate::Rate<u32,_,_>::const_partial_cmp::hc14c35c8b428e827+0x10> @ imm = #-0x2
10006ece: 9801         	ldr	r0, [sp, #0x4]
10006ed0: 9900         	ldr	r1, [sp]
10006ed2: 9006         	str	r0, [sp, #0x18]
10006ed4: 9107         	str	r1, [sp, #0x1c]
10006ed6: 4288         	cmp	r0, r1
10006ed8: d305         	blo	0x10006ee6 <fugit::rate::Rate<u32,_,_>::const_partial_cmp::hc14c35c8b428e827+0x28> @ imm = #0xa
10006eda: e7ff         	b	0x10006edc <fugit::rate::Rate<u32,_,_>::const_partial_cmp::hc14c35c8b428e827+0x1e> @ imm = #-0x2
10006edc: 9801         	ldr	r0, [sp, #0x4]
10006ede: 9900         	ldr	r1, [sp]
10006ee0: 4288         	cmp	r0, r1
10006ee2: d808         	bhi	0x10006ef6 <fugit::rate::Rate<u32,_,_>::const_partial_cmp::hc14c35c8b428e827+0x38> @ imm = #0x10
10006ee4: e003         	b	0x10006eee <fugit::rate::Rate<u32,_,_>::const_partial_cmp::hc14c35c8b428e827+0x30> @ imm = #0x6
10006ee6: a905         	add	r1, sp, #0x14
10006ee8: 20ff         	movs	r0, #0xff
10006eea: 7008         	strb	r0, [r1]
10006eec: e007         	b	0x10006efe <fugit::rate::Rate<u32,_,_>::const_partial_cmp::hc14c35c8b428e827+0x40> @ imm = #0xe
10006eee: a905         	add	r1, sp, #0x14
10006ef0: 2000         	movs	r0, #0x0
10006ef2: 7008         	strb	r0, [r1]
10006ef4: e003         	b	0x10006efe <fugit::rate::Rate<u32,_,_>::const_partial_cmp::hc14c35c8b428e827+0x40> @ imm = #0x6
10006ef6: a905         	add	r1, sp, #0x14
10006ef8: 2001         	movs	r0, #0x1
10006efa: 7008         	strb	r0, [r1]
10006efc: e7ff         	b	0x10006efe <fugit::rate::Rate<u32,_,_>::const_partial_cmp::hc14c35c8b428e827+0x40> @ imm = #-0x2
10006efe: 9805         	ldr	r0, [sp, #0x14]
10006f00: a902         	add	r1, sp, #0x8
10006f02: 7008         	strb	r0, [r1]
10006f04: e7ff         	b	0x10006f06 <fugit::rate::Rate<u32,_,_>::const_partial_cmp::hc14c35c8b428e827+0x48> @ imm = #-0x2
10006f06: 9802         	ldr	r0, [sp, #0x8]
10006f08: b008         	add	sp, #0x20
10006f0a: bd80         	pop	{r7, pc}

10006f0c <fugit::rate::Rate<u32,_,_>::Hz::hf33f06883bd1b051>:
10006f0c: b580         	push	{r7, lr}
10006f0e: af00         	add	r7, sp, #0x0
10006f10: b082         	sub	sp, #0x8
10006f12: 9001         	str	r0, [sp, #0x4]
10006f14: 9000         	str	r0, [sp]
10006f16: 2000         	movs	r0, #0x0
10006f18: 2800         	cmp	r0, #0x0
10006f1a: d105         	bne	0x10006f28 <fugit::rate::Rate<u32,_,_>::Hz::hf33f06883bd1b051+0x1c> @ imm = #0xa
10006f1c: e7ff         	b	0x10006f1e <fugit::rate::Rate<u32,_,_>::Hz::hf33f06883bd1b051+0x12> @ imm = #-0x2
10006f1e: 9800         	ldr	r0, [sp]
10006f20: f000 f854    	bl	0x10006fcc <fugit::rate::Rate<u32,_,_>::from_raw::h24b3847a49306c16> @ imm = #0xa8
10006f24: b002         	add	sp, #0x8
10006f26: bd80         	pop	{r7, pc}
10006f28: 4801         	ldr	r0, [pc, #0x4]          @ 0x10006f30 <fugit::rate::Rate<u32,_,_>::Hz::hf33f06883bd1b051+0x24>
10006f2a: f006 faa5    	bl	0x1000d478 <core::panicking::panic_const::panic_const_mul_overflow::hdb56fe2dcc791345> @ imm = #0x654a
10006f2e: 46c0         	mov	r8, r8
10006f30: 78 1b 01 10  	.word	0x10011b78

10006f34 <fugit::rate::Rate<u32,_,_>::MHz::h9ff0be67f59ed89b>:
10006f34: b580         	push	{r7, lr}
10006f36: af00         	add	r7, sp, #0x0
10006f38: b082         	sub	sp, #0x8
10006f3a: 9001         	str	r0, [sp, #0x4]
10006f3c: 4a09         	ldr	r2, [pc, #0x24]         @ 0x10006f64 <fugit::rate::Rate<u32,_,_>::MHz::h9ff0be67f59ed89b+0x30>
10006f3e: 2300         	movs	r3, #0x0
10006f40: 4619         	mov	r1, r3
10006f42: f006 fd02    	bl	0x1000d94a <__aeabi_lmul> @ imm = #0x6a04
10006f46: 1e4a         	subs	r2, r1, #0x1
10006f48: 4191         	sbcs	r1, r2
10006f4a: 9000         	str	r0, [sp]
10006f4c: 2900         	cmp	r1, #0x0
10006f4e: d105         	bne	0x10006f5c <fugit::rate::Rate<u32,_,_>::MHz::h9ff0be67f59ed89b+0x28> @ imm = #0xa
10006f50: e7ff         	b	0x10006f52 <fugit::rate::Rate<u32,_,_>::MHz::h9ff0be67f59ed89b+0x1e> @ imm = #-0x2
10006f52: 9800         	ldr	r0, [sp]
10006f54: f000 f83a    	bl	0x10006fcc <fugit::rate::Rate<u32,_,_>::from_raw::h24b3847a49306c16> @ imm = #0x74
10006f58: b002         	add	sp, #0x8
10006f5a: bd80         	pop	{r7, pc}
10006f5c: 4802         	ldr	r0, [pc, #0x8]          @ 0x10006f68 <fugit::rate::Rate<u32,_,_>::MHz::h9ff0be67f59ed89b+0x34>
10006f5e: f006 fa8b    	bl	0x1000d478 <core::panicking::panic_const::panic_const_mul_overflow::hdb56fe2dcc791345> @ imm = #0x6516
10006f62: 46c0         	mov	r8, r8
10006f64: 40 42 0f 00  	.word	0x000f4240
10006f68: 78 1b 01 10  	.word	0x10011b78

10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868>:
10006f6c: b580         	push	{r7, lr}
10006f6e: af00         	add	r7, sp, #0x0
10006f70: b082         	sub	sp, #0x8
10006f72: 9001         	str	r0, [sp, #0x4]
10006f74: 6800         	ldr	r0, [r0]
10006f76: 9000         	str	r0, [sp]
10006f78: 2000         	movs	r0, #0x0
10006f7a: 2800         	cmp	r0, #0x0
10006f7c: d103         	bne	0x10006f86 <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868+0x1a> @ imm = #0x6
10006f7e: e7ff         	b	0x10006f80 <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868+0x14> @ imm = #-0x2
10006f80: 9800         	ldr	r0, [sp]
10006f82: b002         	add	sp, #0x8
10006f84: bd80         	pop	{r7, pc}
10006f86: 4801         	ldr	r0, [pc, #0x4]          @ 0x10006f8c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868+0x20>
10006f88: f006 fa76    	bl	0x1000d478 <core::panicking::panic_const::panic_const_mul_overflow::hdb56fe2dcc791345> @ imm = #0x64ec
10006f8c: 78 1b 01 10  	.word	0x10011b78

10006f90 <fugit::rate::Rate<u32,_,_>::convert::haff41e7e326ec8e6>:
10006f90: b580         	push	{r7, lr}
10006f92: af00         	add	r7, sp, #0x0
10006f94: b08c         	sub	sp, #0x30
10006f96: 900a         	str	r0, [sp, #0x28]
10006f98: f7ff ff89    	bl	0x10006eae <fugit::rate::Rate<u32,_,_>::const_try_into::hb29a045f543bbbbd> @ imm = #-0xee
10006f9c: 9002         	str	r0, [sp, #0x8]
10006f9e: 9103         	str	r1, [sp, #0xc]
10006fa0: 9802         	ldr	r0, [sp, #0x8]
10006fa2: 2801         	cmp	r0, #0x1
10006fa4: d104         	bne	0x10006fb0 <fugit::rate::Rate<u32,_,_>::convert::haff41e7e326ec8e6+0x20> @ imm = #0x8
10006fa6: e7ff         	b	0x10006fa8 <fugit::rate::Rate<u32,_,_>::convert::haff41e7e326ec8e6+0x18> @ imm = #-0x2
10006fa8: 9803         	ldr	r0, [sp, #0xc]
10006faa: 900b         	str	r0, [sp, #0x2c]
10006fac: b00c         	add	sp, #0x30
10006fae: bd80         	pop	{r7, pc}
10006fb0: 4904         	ldr	r1, [pc, #0x10]         @ 0x10006fc4 <fugit::rate::Rate<u32,_,_>::convert::haff41e7e326ec8e6+0x34>
10006fb2: a804         	add	r0, sp, #0x10
10006fb4: 9001         	str	r0, [sp, #0x4]
10006fb6: f005 f96d    	bl	0x1000c294 <core::fmt::Arguments::new_const::h8662ab33becb49fc> @ imm = #0x52da
10006fba: 9801         	ldr	r0, [sp, #0x4]
10006fbc: 4902         	ldr	r1, [pc, #0x8]          @ 0x10006fc8 <fugit::rate::Rate<u32,_,_>::convert::haff41e7e326ec8e6+0x38>
10006fbe: f005 f9dd    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #0x53ba
10006fc2: 46c0         	mov	r8, r8
10006fc4: 98 1b 01 10  	.word	0x10011b98
10006fc8: 78 1b 01 10  	.word	0x10011b78

10006fcc <fugit::rate::Rate<u32,_,_>::from_raw::h24b3847a49306c16>:
10006fcc: b580         	push	{r7, lr}
10006fce: af00         	add	r7, sp, #0x0
10006fd0: b082         	sub	sp, #0x8
10006fd2: 9000         	str	r0, [sp]
10006fd4: 9001         	str	r0, [sp, #0x4]
10006fd6: f000 f805    	bl	0x10006fe4 <fugit::helpers::greater_than_0::h3591ec4eb6c18ad8> @ imm = #0xa
10006fda: f000 f803    	bl	0x10006fe4 <fugit::helpers::greater_than_0::h3591ec4eb6c18ad8> @ imm = #0x6
10006fde: 9800         	ldr	r0, [sp]
10006fe0: b002         	add	sp, #0x8
10006fe2: bd80         	pop	{r7, pc}

10006fe4 <fugit::helpers::greater_than_0::h3591ec4eb6c18ad8>:
10006fe4: b580         	push	{r7, lr}
10006fe6: af00         	add	r7, sp, #0x0
10006fe8: bd80         	pop	{r7, pc}
10006fea: d4d4         	bmi	0x10006f96 <fugit::rate::Rate<u32,_,_>::convert::haff41e7e326ec8e6+0x6> @ imm = #-0x58

10006fec <fugit::instant::Instant<u64,_,_>::const_cmp::hc6342566aae4a077>:
10006fec: b5d0         	push	{r4, r6, r7, lr}
10006fee: af02         	add	r7, sp, #0x8
10006ff0: b092         	sub	sp, #0x48
10006ff2: 461c         	mov	r4, r3
10006ff4: 9403         	str	r4, [sp, #0xc]
10006ff6: 4614         	mov	r4, r2
10006ff8: 9404         	str	r4, [sp, #0x10]
10006ffa: 460c         	mov	r4, r1
10006ffc: 9405         	str	r4, [sp, #0x14]
10006ffe: 4604         	mov	r4, r0
10007000: 9406         	str	r4, [sp, #0x18]
10007002: 9109         	str	r1, [sp, #0x24]
10007004: 9008         	str	r0, [sp, #0x20]
10007006: 930b         	str	r3, [sp, #0x2c]
10007008: 920a         	str	r2, [sp, #0x28]
1000700a: 4059         	eors	r1, r3
1000700c: 4050         	eors	r0, r2
1000700e: 4308         	orrs	r0, r1
10007010: 2800         	cmp	r0, #0x0
10007012: d011         	beq	0x10007038 <fugit::instant::Instant<u64,_,_>::const_cmp::hc6342566aae4a077+0x4c> @ imm = #0x22
10007014: e7ff         	b	0x10007016 <fugit::instant::Instant<u64,_,_>::const_cmp::hc6342566aae4a077+0x2a> @ imm = #-0x2
10007016: 9a03         	ldr	r2, [sp, #0xc]
10007018: 9805         	ldr	r0, [sp, #0x14]
1000701a: 9906         	ldr	r1, [sp, #0x18]
1000701c: 9b04         	ldr	r3, [sp, #0x10]
1000701e: 910e         	str	r1, [sp, #0x38]
10007020: 900f         	str	r0, [sp, #0x3c]
10007022: 9211         	str	r2, [sp, #0x44]
10007024: 9310         	str	r3, [sp, #0x40]
10007026: 1ac9         	subs	r1, r1, r3
10007028: 9101         	str	r1, [sp, #0x4]
1000702a: 4190         	sbcs	r0, r2
1000702c: 9002         	str	r0, [sp, #0x8]
1000702e: 900d         	str	r0, [sp, #0x34]
10007030: 910c         	str	r1, [sp, #0x30]
10007032: 2800         	cmp	r0, #0x0
10007034: d40b         	bmi	0x1000704e <fugit::instant::Instant<u64,_,_>::const_cmp::hc6342566aae4a077+0x62> @ imm = #0x16
10007036: e003         	b	0x10007040 <fugit::instant::Instant<u64,_,_>::const_cmp::hc6342566aae4a077+0x54> @ imm = #0x6
10007038: a907         	add	r1, sp, #0x1c
1000703a: 2000         	movs	r0, #0x0
1000703c: 7008         	strb	r0, [r1]
1000703e: e012         	b	0x10007066 <fugit::instant::Instant<u64,_,_>::const_cmp::hc6342566aae4a077+0x7a> @ imm = #0x24
10007040: 9802         	ldr	r0, [sp, #0x8]
10007042: 9901         	ldr	r1, [sp, #0x4]
10007044: 1c49         	adds	r1, r1, #0x1
10007046: 4909         	ldr	r1, [pc, #0x24]         @ 0x1000706c <fugit::instant::Instant<u64,_,_>::const_cmp::hc6342566aae4a077+0x80>
10007048: 4188         	sbcs	r0, r1
1000704a: d308         	blo	0x1000705e <fugit::instant::Instant<u64,_,_>::const_cmp::hc6342566aae4a077+0x72> @ imm = #0x10
1000704c: e003         	b	0x10007056 <fugit::instant::Instant<u64,_,_>::const_cmp::hc6342566aae4a077+0x6a> @ imm = #0x6
1000704e: a907         	add	r1, sp, #0x1c
10007050: 20ff         	movs	r0, #0xff
10007052: 7008         	strb	r0, [r1]
10007054: e007         	b	0x10007066 <fugit::instant::Instant<u64,_,_>::const_cmp::hc6342566aae4a077+0x7a> @ imm = #0xe
10007056: a907         	add	r1, sp, #0x1c
10007058: 2000         	movs	r0, #0x0
1000705a: 7008         	strb	r0, [r1]
1000705c: e003         	b	0x10007066 <fugit::instant::Instant<u64,_,_>::const_cmp::hc6342566aae4a077+0x7a> @ imm = #0x6
1000705e: a907         	add	r1, sp, #0x1c
10007060: 2001         	movs	r0, #0x1
10007062: 7008         	strb	r0, [r1]
10007064: e7ff         	b	0x10007066 <fugit::instant::Instant<u64,_,_>::const_cmp::hc6342566aae4a077+0x7a> @ imm = #-0x2
10007066: 9807         	ldr	r0, [sp, #0x1c]
10007068: b012         	add	sp, #0x48
1000706a: bdd0         	pop	{r4, r6, r7, pc}
1000706c: ff ff ff 7f  	.word	0x7fffffff

10007070 <<I as core::iter::traits::collect::IntoIterator>::into_iter::h7bb2183b6de5bb54>:
10007070: b580         	push	{r7, lr}
10007072: af00         	add	r7, sp, #0x0
10007074: b081         	sub	sp, #0x4
10007076: 9100         	str	r1, [sp]
10007078: 4601         	mov	r1, r0
1000707a: 9800         	ldr	r0, [sp]
1000707c: 6882         	ldr	r2, [r0, #0x8]
1000707e: 608a         	str	r2, [r1, #0x8]
10007080: 6842         	ldr	r2, [r0, #0x4]
10007082: 604a         	str	r2, [r1, #0x4]
10007084: 6800         	ldr	r0, [r0]
10007086: 6008         	str	r0, [r1]
10007088: b001         	add	sp, #0x4
1000708a: bd80         	pop	{r7, pc}

1000708c <<cortex_m::register::primask::Primask as core::cmp::PartialEq>::eq::hce26a2ee8002c7ae>:
1000708c: b580         	push	{r7, lr}
1000708e: af00         	add	r7, sp, #0x0
10007090: b084         	sub	sp, #0x10
10007092: 9000         	str	r0, [sp]
10007094: 9101         	str	r1, [sp, #0x4]
10007096: 7800         	ldrb	r0, [r0]
10007098: 9002         	str	r0, [sp, #0x8]
1000709a: 7809         	ldrb	r1, [r1]
1000709c: 9103         	str	r1, [sp, #0xc]
1000709e: 1a40         	subs	r0, r0, r1
100070a0: 4241         	rsbs	r1, r0, #0
100070a2: 4148         	adcs	r0, r1
100070a4: b004         	add	sp, #0x10
100070a6: bd80         	pop	{r7, pc}

100070a8 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1ba1730ee47dc252E>:
100070a8: b580         	push	{r7, lr}
100070aa: af00         	add	r7, sp, #0x0
100070ac: b087         	sub	sp, #0x1c
100070ae: 9100         	str	r1, [sp]
100070b0: 9001         	str	r0, [sp, #0x4]
100070b2: 7808         	ldrb	r0, [r1]
100070b4: 07c0         	lsls	r0, r0, #0x1f
100070b6: 2800         	cmp	r0, #0x0
100070b8: d111         	bne	0x100070de <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1ba1730ee47dc252E+0x36> @ imm = #0x22
100070ba: e7ff         	b	0x100070bc <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1ba1730ee47dc252E+0x14> @ imm = #-0x2
100070bc: 9901         	ldr	r1, [sp, #0x4]
100070be: 9800         	ldr	r0, [sp]
100070c0: 68c2         	ldr	r2, [r0, #0xc]
100070c2: 9204         	str	r2, [sp, #0x10]
100070c4: 6882         	ldr	r2, [r0, #0x8]
100070c6: 9203         	str	r2, [sp, #0xc]
100070c8: 6840         	ldr	r0, [r0, #0x4]
100070ca: 9002         	str	r0, [sp, #0x8]
100070cc: 9804         	ldr	r0, [sp, #0x10]
100070ce: 60c8         	str	r0, [r1, #0xc]
100070d0: 9803         	ldr	r0, [sp, #0xc]
100070d2: 6088         	str	r0, [r1, #0x8]
100070d4: 9802         	ldr	r0, [sp, #0x8]
100070d6: 6048         	str	r0, [r1, #0x4]
100070d8: 2000         	movs	r0, #0x0
100070da: 7008         	strb	r0, [r1]
100070dc: e00b         	b	0x100070f6 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1ba1730ee47dc252E+0x4e> @ imm = #0x16
100070de: 9901         	ldr	r1, [sp, #0x4]
100070e0: 9800         	ldr	r0, [sp]
100070e2: 7840         	ldrb	r0, [r0, #0x1]
100070e4: aa06         	add	r2, sp, #0x18
100070e6: 7010         	strb	r0, [r2]
100070e8: aa05         	add	r2, sp, #0x14
100070ea: 7010         	strb	r0, [r2]
100070ec: 9805         	ldr	r0, [sp, #0x14]
100070ee: 7048         	strb	r0, [r1, #0x1]
100070f0: 2001         	movs	r0, #0x1
100070f2: 7008         	strb	r0, [r1]
100070f4: e7ff         	b	0x100070f6 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1ba1730ee47dc252E+0x4e> @ imm = #-0x2
100070f6: b007         	add	sp, #0x1c
100070f8: bd80         	pop	{r7, pc}

100070fa <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2103952f23176538E>:
100070fa: b580         	push	{r7, lr}
100070fc: af00         	add	r7, sp, #0x0
100070fe: b084         	sub	sp, #0x10
10007100: 4602         	mov	r2, r0
10007102: 4668         	mov	r0, sp
10007104: 7002         	strb	r2, [r0]
10007106: 7041         	strb	r1, [r0, #0x1]
10007108: 7800         	ldrb	r0, [r0]
1000710a: 2803         	cmp	r0, #0x3
1000710c: d104         	bne	0x10007118 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2103952f23176538E+0x1e> @ imm = #0x8
1000710e: e7ff         	b	0x10007110 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2103952f23176538E+0x16> @ imm = #-0x2
10007110: a901         	add	r1, sp, #0x4
10007112: 2003         	movs	r0, #0x3
10007114: 7008         	strb	r0, [r1]
10007116: e00e         	b	0x10007136 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2103952f23176538E+0x3c> @ imm = #0x1c
10007118: 9a00         	ldr	r2, [sp]
1000711a: 4668         	mov	r0, sp
1000711c: 7841         	ldrb	r1, [r0, #0x1]
1000711e: a803         	add	r0, sp, #0xc
10007120: 7002         	strb	r2, [r0]
10007122: 7041         	strb	r1, [r0, #0x1]
10007124: a802         	add	r0, sp, #0x8
10007126: 7002         	strb	r2, [r0]
10007128: 7041         	strb	r1, [r0, #0x1]
1000712a: 9a02         	ldr	r2, [sp, #0x8]
1000712c: 7840         	ldrb	r0, [r0, #0x1]
1000712e: a901         	add	r1, sp, #0x4
10007130: 700a         	strb	r2, [r1]
10007132: 7048         	strb	r0, [r1, #0x1]
10007134: e7ff         	b	0x10007136 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2103952f23176538E+0x3c> @ imm = #-0x2
10007136: a801         	add	r0, sp, #0x4
10007138: 7841         	ldrb	r1, [r0, #0x1]
1000713a: 9801         	ldr	r0, [sp, #0x4]
1000713c: b004         	add	sp, #0x10
1000713e: bd80         	pop	{r7, pc}

10007140 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2ce397b0c859707dE>:
10007140: b580         	push	{r7, lr}
10007142: af00         	add	r7, sp, #0x0
10007144: b086         	sub	sp, #0x18
10007146: 9001         	str	r0, [sp, #0x4]
10007148: 9801         	ldr	r0, [sp, #0x4]
1000714a: 9000         	str	r0, [sp]
1000714c: 4668         	mov	r0, sp
1000714e: 7800         	ldrb	r0, [r0]
10007150: 07c0         	lsls	r0, r0, #0x1f
10007152: 2800         	cmp	r0, #0x0
10007154: d109         	bne	0x1000716a <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2ce397b0c859707dE+0x2a> @ imm = #0x12
10007156: e7ff         	b	0x10007158 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2ce397b0c859707dE+0x18> @ imm = #-0x2
10007158: 4668         	mov	r0, sp
1000715a: 8840         	ldrh	r0, [r0, #0x2]
1000715c: a904         	add	r1, sp, #0x10
1000715e: 8008         	strh	r0, [r1]
10007160: a902         	add	r1, sp, #0x8
10007162: 8048         	strh	r0, [r1, #0x2]
10007164: 2000         	movs	r0, #0x0
10007166: 7008         	strb	r0, [r1]
10007168: e00b         	b	0x10007182 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2ce397b0c859707dE+0x42> @ imm = #0x16
1000716a: 4668         	mov	r0, sp
1000716c: 7840         	ldrb	r0, [r0, #0x1]
1000716e: a905         	add	r1, sp, #0x14
10007170: 7008         	strb	r0, [r1]
10007172: a903         	add	r1, sp, #0xc
10007174: 7008         	strb	r0, [r1]
10007176: 9803         	ldr	r0, [sp, #0xc]
10007178: a902         	add	r1, sp, #0x8
1000717a: 7048         	strb	r0, [r1, #0x1]
1000717c: 2001         	movs	r0, #0x1
1000717e: 7008         	strb	r0, [r1]
10007180: e7ff         	b	0x10007182 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2ce397b0c859707dE+0x42> @ imm = #-0x2
10007182: a802         	add	r0, sp, #0x8
10007184: 8801         	ldrh	r1, [r0]
10007186: 8840         	ldrh	r0, [r0, #0x2]
10007188: 0400         	lsls	r0, r0, #0x10
1000718a: 1840         	adds	r0, r0, r1
1000718c: b006         	add	sp, #0x18
1000718e: bd80         	pop	{r7, pc}

10007190 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h36a156e8c0de1ad1E>:
10007190: b580         	push	{r7, lr}
10007192: af00         	add	r7, sp, #0x0
10007194: b087         	sub	sp, #0x1c
10007196: 9100         	str	r1, [sp]
10007198: 9001         	str	r0, [sp, #0x4]
1000719a: 7808         	ldrb	r0, [r1]
1000719c: 07c0         	lsls	r0, r0, #0x1f
1000719e: 2800         	cmp	r0, #0x0
100071a0: d111         	bne	0x100071c6 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h36a156e8c0de1ad1E+0x36> @ imm = #0x22
100071a2: e7ff         	b	0x100071a4 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h36a156e8c0de1ad1E+0x14> @ imm = #-0x2
100071a4: 9901         	ldr	r1, [sp, #0x4]
100071a6: 9800         	ldr	r0, [sp]
100071a8: 68c2         	ldr	r2, [r0, #0xc]
100071aa: 9204         	str	r2, [sp, #0x10]
100071ac: 6882         	ldr	r2, [r0, #0x8]
100071ae: 9203         	str	r2, [sp, #0xc]
100071b0: 6840         	ldr	r0, [r0, #0x4]
100071b2: 9002         	str	r0, [sp, #0x8]
100071b4: 9804         	ldr	r0, [sp, #0x10]
100071b6: 60c8         	str	r0, [r1, #0xc]
100071b8: 9803         	ldr	r0, [sp, #0xc]
100071ba: 6088         	str	r0, [r1, #0x8]
100071bc: 9802         	ldr	r0, [sp, #0x8]
100071be: 6048         	str	r0, [r1, #0x4]
100071c0: 2000         	movs	r0, #0x0
100071c2: 7008         	strb	r0, [r1]
100071c4: e00b         	b	0x100071de <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h36a156e8c0de1ad1E+0x4e> @ imm = #0x16
100071c6: 9901         	ldr	r1, [sp, #0x4]
100071c8: 9800         	ldr	r0, [sp]
100071ca: 7840         	ldrb	r0, [r0, #0x1]
100071cc: aa06         	add	r2, sp, #0x18
100071ce: 7010         	strb	r0, [r2]
100071d0: aa05         	add	r2, sp, #0x14
100071d2: 7010         	strb	r0, [r2]
100071d4: 9805         	ldr	r0, [sp, #0x14]
100071d6: 7048         	strb	r0, [r1, #0x1]
100071d8: 2001         	movs	r0, #0x1
100071da: 7008         	strb	r0, [r1]
100071dc: e7ff         	b	0x100071de <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h36a156e8c0de1ad1E+0x4e> @ imm = #-0x2
100071de: b007         	add	sp, #0x1c
100071e0: bd80         	pop	{r7, pc}

100071e2 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h460b484606f6b3bdE>:
100071e2: b580         	push	{r7, lr}
100071e4: af00         	add	r7, sp, #0x0
100071e6: b085         	sub	sp, #0x14
100071e8: 9100         	str	r1, [sp]
100071ea: 9001         	str	r0, [sp, #0x4]
100071ec: 7808         	ldrb	r0, [r1]
100071ee: 07c0         	lsls	r0, r0, #0x1f
100071f0: 2800         	cmp	r0, #0x0
100071f2: d108         	bne	0x10007206 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h460b484606f6b3bdE+0x24> @ imm = #0x10
100071f4: e7ff         	b	0x100071f6 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h460b484606f6b3bdE+0x14> @ imm = #-0x2
100071f6: 9901         	ldr	r1, [sp, #0x4]
100071f8: 9800         	ldr	r0, [sp]
100071fa: 6840         	ldr	r0, [r0, #0x4]
100071fc: 9003         	str	r0, [sp, #0xc]
100071fe: 6048         	str	r0, [r1, #0x4]
10007200: 2000         	movs	r0, #0x0
10007202: 7008         	strb	r0, [r1]
10007204: e00b         	b	0x1000721e <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h460b484606f6b3bdE+0x3c> @ imm = #0x16
10007206: 9901         	ldr	r1, [sp, #0x4]
10007208: 9800         	ldr	r0, [sp]
1000720a: 7840         	ldrb	r0, [r0, #0x1]
1000720c: aa04         	add	r2, sp, #0x10
1000720e: 7010         	strb	r0, [r2]
10007210: aa02         	add	r2, sp, #0x8
10007212: 7010         	strb	r0, [r2]
10007214: 9802         	ldr	r0, [sp, #0x8]
10007216: 7048         	strb	r0, [r1, #0x1]
10007218: 2001         	movs	r0, #0x1
1000721a: 7008         	strb	r0, [r1]
1000721c: e7ff         	b	0x1000721e <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h460b484606f6b3bdE+0x3c> @ imm = #-0x2
1000721e: b005         	add	sp, #0x14
10007220: bd80         	pop	{r7, pc}

10007222 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4a9c46913a680102E>:
10007222: b580         	push	{r7, lr}
10007224: af00         	add	r7, sp, #0x0
10007226: b085         	sub	sp, #0x14
10007228: 9100         	str	r1, [sp]
1000722a: 9001         	str	r0, [sp, #0x4]
1000722c: 7808         	ldrb	r0, [r1]
1000722e: 07c0         	lsls	r0, r0, #0x1f
10007230: 2800         	cmp	r0, #0x0
10007232: d108         	bne	0x10007246 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4a9c46913a680102E+0x24> @ imm = #0x10
10007234: e7ff         	b	0x10007236 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4a9c46913a680102E+0x14> @ imm = #-0x2
10007236: 9901         	ldr	r1, [sp, #0x4]
10007238: 9800         	ldr	r0, [sp]
1000723a: 6840         	ldr	r0, [r0, #0x4]
1000723c: 9003         	str	r0, [sp, #0xc]
1000723e: 6048         	str	r0, [r1, #0x4]
10007240: 2000         	movs	r0, #0x0
10007242: 7008         	strb	r0, [r1]
10007244: e00b         	b	0x1000725e <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4a9c46913a680102E+0x3c> @ imm = #0x16
10007246: 9901         	ldr	r1, [sp, #0x4]
10007248: 9800         	ldr	r0, [sp]
1000724a: 7840         	ldrb	r0, [r0, #0x1]
1000724c: aa04         	add	r2, sp, #0x10
1000724e: 7010         	strb	r0, [r2]
10007250: aa02         	add	r2, sp, #0x8
10007252: 7010         	strb	r0, [r2]
10007254: 9802         	ldr	r0, [sp, #0x8]
10007256: 7048         	strb	r0, [r1, #0x1]
10007258: 2001         	movs	r0, #0x1
1000725a: 7008         	strb	r0, [r1]
1000725c: e7ff         	b	0x1000725e <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4a9c46913a680102E+0x3c> @ imm = #-0x2
1000725e: b005         	add	sp, #0x14
10007260: bd80         	pop	{r7, pc}

10007262 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb02f20c0be08b8a3E>:
10007262: b580         	push	{r7, lr}
10007264: af00         	add	r7, sp, #0x0
10007266: b085         	sub	sp, #0x14
10007268: 9100         	str	r1, [sp]
1000726a: 9001         	str	r0, [sp, #0x4]
1000726c: 7808         	ldrb	r0, [r1]
1000726e: 07c0         	lsls	r0, r0, #0x1f
10007270: 2800         	cmp	r0, #0x0
10007272: d108         	bne	0x10007286 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb02f20c0be08b8a3E+0x24> @ imm = #0x10
10007274: e7ff         	b	0x10007276 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb02f20c0be08b8a3E+0x14> @ imm = #-0x2
10007276: 9901         	ldr	r1, [sp, #0x4]
10007278: 9800         	ldr	r0, [sp]
1000727a: 6840         	ldr	r0, [r0, #0x4]
1000727c: 9003         	str	r0, [sp, #0xc]
1000727e: 6048         	str	r0, [r1, #0x4]
10007280: 2000         	movs	r0, #0x0
10007282: 7008         	strb	r0, [r1]
10007284: e00b         	b	0x1000729e <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb02f20c0be08b8a3E+0x3c> @ imm = #0x16
10007286: 9901         	ldr	r1, [sp, #0x4]
10007288: 9800         	ldr	r0, [sp]
1000728a: 7840         	ldrb	r0, [r0, #0x1]
1000728c: aa04         	add	r2, sp, #0x10
1000728e: 7010         	strb	r0, [r2]
10007290: aa02         	add	r2, sp, #0x8
10007292: 7010         	strb	r0, [r2]
10007294: 9802         	ldr	r0, [sp, #0x8]
10007296: 7048         	strb	r0, [r1, #0x1]
10007298: 2001         	movs	r0, #0x1
1000729a: 7008         	strb	r0, [r1]
1000729c: e7ff         	b	0x1000729e <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb02f20c0be08b8a3E+0x3c> @ imm = #-0x2
1000729e: b005         	add	sp, #0x14
100072a0: bd80         	pop	{r7, pc}

100072a2 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb1fbaa518ab17c62E>:
100072a2: b580         	push	{r7, lr}
100072a4: af00         	add	r7, sp, #0x0
100072a6: b085         	sub	sp, #0x14
100072a8: 9100         	str	r1, [sp]
100072aa: 9001         	str	r0, [sp, #0x4]
100072ac: 7808         	ldrb	r0, [r1]
100072ae: 07c0         	lsls	r0, r0, #0x1f
100072b0: 2800         	cmp	r0, #0x0
100072b2: d108         	bne	0x100072c6 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb1fbaa518ab17c62E+0x24> @ imm = #0x10
100072b4: e7ff         	b	0x100072b6 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb1fbaa518ab17c62E+0x14> @ imm = #-0x2
100072b6: 9901         	ldr	r1, [sp, #0x4]
100072b8: 9800         	ldr	r0, [sp]
100072ba: 6840         	ldr	r0, [r0, #0x4]
100072bc: 9003         	str	r0, [sp, #0xc]
100072be: 6048         	str	r0, [r1, #0x4]
100072c0: 2000         	movs	r0, #0x0
100072c2: 7008         	strb	r0, [r1]
100072c4: e010         	b	0x100072e8 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb1fbaa518ab17c62E+0x46> @ imm = #0x20
100072c6: 9901         	ldr	r1, [sp, #0x4]
100072c8: 9800         	ldr	r0, [sp]
100072ca: 7843         	ldrb	r3, [r0, #0x1]
100072cc: 7882         	ldrb	r2, [r0, #0x2]
100072ce: a804         	add	r0, sp, #0x10
100072d0: 7003         	strb	r3, [r0]
100072d2: 7042         	strb	r2, [r0, #0x1]
100072d4: a802         	add	r0, sp, #0x8
100072d6: 7003         	strb	r3, [r0]
100072d8: 7042         	strb	r2, [r0, #0x1]
100072da: 9a02         	ldr	r2, [sp, #0x8]
100072dc: 7840         	ldrb	r0, [r0, #0x1]
100072de: 704a         	strb	r2, [r1, #0x1]
100072e0: 7088         	strb	r0, [r1, #0x2]
100072e2: 2001         	movs	r0, #0x1
100072e4: 7008         	strb	r0, [r1]
100072e6: e7ff         	b	0x100072e8 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb1fbaa518ab17c62E+0x46> @ imm = #-0x2
100072e8: b005         	add	sp, #0x14
100072ea: bd80         	pop	{r7, pc}

100072ec <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb59c43546539695dE>:
100072ec: b580         	push	{r7, lr}
100072ee: af00         	add	r7, sp, #0x0
100072f0: b086         	sub	sp, #0x18
100072f2: 9001         	str	r0, [sp, #0x4]
100072f4: 9801         	ldr	r0, [sp, #0x4]
100072f6: 9000         	str	r0, [sp]
100072f8: 4668         	mov	r0, sp
100072fa: 7800         	ldrb	r0, [r0]
100072fc: 07c0         	lsls	r0, r0, #0x1f
100072fe: 2800         	cmp	r0, #0x0
10007300: d109         	bne	0x10007316 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb59c43546539695dE+0x2a> @ imm = #0x12
10007302: e7ff         	b	0x10007304 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb59c43546539695dE+0x18> @ imm = #-0x2
10007304: 4668         	mov	r0, sp
10007306: 8840         	ldrh	r0, [r0, #0x2]
10007308: a904         	add	r1, sp, #0x10
1000730a: 8008         	strh	r0, [r1]
1000730c: a902         	add	r1, sp, #0x8
1000730e: 8048         	strh	r0, [r1, #0x2]
10007310: 2000         	movs	r0, #0x0
10007312: 7008         	strb	r0, [r1]
10007314: e00b         	b	0x1000732e <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb59c43546539695dE+0x42> @ imm = #0x16
10007316: 4668         	mov	r0, sp
10007318: 7840         	ldrb	r0, [r0, #0x1]
1000731a: a905         	add	r1, sp, #0x14
1000731c: 7008         	strb	r0, [r1]
1000731e: a903         	add	r1, sp, #0xc
10007320: 7008         	strb	r0, [r1]
10007322: 9803         	ldr	r0, [sp, #0xc]
10007324: a902         	add	r1, sp, #0x8
10007326: 7048         	strb	r0, [r1, #0x1]
10007328: 2001         	movs	r0, #0x1
1000732a: 7008         	strb	r0, [r1]
1000732c: e7ff         	b	0x1000732e <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb59c43546539695dE+0x42> @ imm = #-0x2
1000732e: a802         	add	r0, sp, #0x8
10007330: 8801         	ldrh	r1, [r0]
10007332: 8840         	ldrh	r0, [r0, #0x2]
10007334: 0400         	lsls	r0, r0, #0x10
10007336: 1840         	adds	r0, r0, r1
10007338: b006         	add	sp, #0x18
1000733a: bd80         	pop	{r7, pc}

1000733c <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he2f62d267622fa10E>:
1000733c: b580         	push	{r7, lr}
1000733e: af00         	add	r7, sp, #0x0
10007340: b084         	sub	sp, #0x10
10007342: 4601         	mov	r1, r0
10007344: 4668         	mov	r0, sp
10007346: 7001         	strb	r1, [r0]
10007348: 7800         	ldrb	r0, [r0]
1000734a: 2803         	cmp	r0, #0x3
1000734c: d104         	bne	0x10007358 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he2f62d267622fa10E+0x1c> @ imm = #0x8
1000734e: e7ff         	b	0x10007350 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he2f62d267622fa10E+0x14> @ imm = #-0x2
10007350: a901         	add	r1, sp, #0x4
10007352: 2003         	movs	r0, #0x3
10007354: 7008         	strb	r0, [r1]
10007356: e008         	b	0x1000736a <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he2f62d267622fa10E+0x2e> @ imm = #0x10
10007358: 9800         	ldr	r0, [sp]
1000735a: a903         	add	r1, sp, #0xc
1000735c: 7008         	strb	r0, [r1]
1000735e: a902         	add	r1, sp, #0x8
10007360: 7008         	strb	r0, [r1]
10007362: 9802         	ldr	r0, [sp, #0x8]
10007364: a901         	add	r1, sp, #0x4
10007366: 7008         	strb	r0, [r1]
10007368: e7ff         	b	0x1000736a <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he2f62d267622fa10E+0x2e> @ imm = #-0x2
1000736a: 9801         	ldr	r0, [sp, #0x4]
1000736c: b004         	add	sp, #0x10
1000736e: bd80         	pop	{r7, pc}

10007370 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he8ea3c1b63b52121E>:
10007370: b580         	push	{r7, lr}
10007372: af00         	add	r7, sp, #0x0
10007374: b085         	sub	sp, #0x14
10007376: 9100         	str	r1, [sp]
10007378: 9001         	str	r0, [sp, #0x4]
1000737a: 7808         	ldrb	r0, [r1]
1000737c: 07c0         	lsls	r0, r0, #0x1f
1000737e: 2800         	cmp	r0, #0x0
10007380: d108         	bne	0x10007394 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he8ea3c1b63b52121E+0x24> @ imm = #0x10
10007382: e7ff         	b	0x10007384 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he8ea3c1b63b52121E+0x14> @ imm = #-0x2
10007384: 9901         	ldr	r1, [sp, #0x4]
10007386: 9800         	ldr	r0, [sp]
10007388: 6840         	ldr	r0, [r0, #0x4]
1000738a: 9003         	str	r0, [sp, #0xc]
1000738c: 6048         	str	r0, [r1, #0x4]
1000738e: 2000         	movs	r0, #0x0
10007390: 7008         	strb	r0, [r1]
10007392: e010         	b	0x100073b6 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he8ea3c1b63b52121E+0x46> @ imm = #0x20
10007394: 9901         	ldr	r1, [sp, #0x4]
10007396: 9800         	ldr	r0, [sp]
10007398: 7843         	ldrb	r3, [r0, #0x1]
1000739a: 7882         	ldrb	r2, [r0, #0x2]
1000739c: a804         	add	r0, sp, #0x10
1000739e: 7003         	strb	r3, [r0]
100073a0: 7042         	strb	r2, [r0, #0x1]
100073a2: a802         	add	r0, sp, #0x8
100073a4: 7003         	strb	r3, [r0]
100073a6: 7042         	strb	r2, [r0, #0x1]
100073a8: 9a02         	ldr	r2, [sp, #0x8]
100073aa: 7840         	ldrb	r0, [r0, #0x1]
100073ac: 704a         	strb	r2, [r1, #0x1]
100073ae: 7088         	strb	r0, [r1, #0x2]
100073b0: 2001         	movs	r0, #0x1
100073b2: 7008         	strb	r0, [r1]
100073b4: e7ff         	b	0x100073b6 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he8ea3c1b63b52121E+0x46> @ imm = #-0x2
100073b6: b005         	add	sp, #0x14
100073b8: bd80         	pop	{r7, pc}

100073ba <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf1ca5d3775821584E>:
100073ba: b580         	push	{r7, lr}
100073bc: af00         	add	r7, sp, #0x0
100073be: b085         	sub	sp, #0x14
100073c0: 9100         	str	r1, [sp]
100073c2: 9001         	str	r0, [sp, #0x4]
100073c4: 7808         	ldrb	r0, [r1]
100073c6: 07c0         	lsls	r0, r0, #0x1f
100073c8: 2800         	cmp	r0, #0x0
100073ca: d108         	bne	0x100073de <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf1ca5d3775821584E+0x24> @ imm = #0x10
100073cc: e7ff         	b	0x100073ce <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf1ca5d3775821584E+0x14> @ imm = #-0x2
100073ce: 9901         	ldr	r1, [sp, #0x4]
100073d0: 9800         	ldr	r0, [sp]
100073d2: 6840         	ldr	r0, [r0, #0x4]
100073d4: 9003         	str	r0, [sp, #0xc]
100073d6: 6048         	str	r0, [r1, #0x4]
100073d8: 2000         	movs	r0, #0x0
100073da: 7008         	strb	r0, [r1]
100073dc: e010         	b	0x10007400 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf1ca5d3775821584E+0x46> @ imm = #0x20
100073de: 9901         	ldr	r1, [sp, #0x4]
100073e0: 9800         	ldr	r0, [sp]
100073e2: 7843         	ldrb	r3, [r0, #0x1]
100073e4: 7882         	ldrb	r2, [r0, #0x2]
100073e6: a804         	add	r0, sp, #0x10
100073e8: 7003         	strb	r3, [r0]
100073ea: 7042         	strb	r2, [r0, #0x1]
100073ec: a802         	add	r0, sp, #0x8
100073ee: 7003         	strb	r3, [r0]
100073f0: 7042         	strb	r2, [r0, #0x1]
100073f2: 9a02         	ldr	r2, [sp, #0x8]
100073f4: 7840         	ldrb	r0, [r0, #0x1]
100073f6: 704a         	strb	r2, [r1, #0x1]
100073f8: 7088         	strb	r0, [r1, #0x2]
100073fa: 2001         	movs	r0, #0x1
100073fc: 7008         	strb	r0, [r1]
100073fe: e7ff         	b	0x10007400 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf1ca5d3775821584E+0x46> @ imm = #-0x2
10007400: b005         	add	sp, #0x14
10007402: bd80         	pop	{r7, pc}

10007404 <<fugit::instant::Instant<u64,_,_> as core::cmp::PartialOrd>::partial_cmp::hafcb750f0d1dd699>:
10007404: b580         	push	{r7, lr}
10007406: af00         	add	r7, sp, #0x0
10007408: b084         	sub	sp, #0x10
1000740a: 460a         	mov	r2, r1
1000740c: 9002         	str	r0, [sp, #0x8]
1000740e: 9203         	str	r2, [sp, #0xc]
10007410: 6841         	ldr	r1, [r0, #0x4]
10007412: 6800         	ldr	r0, [r0]
10007414: 6853         	ldr	r3, [r2, #0x4]
10007416: 6812         	ldr	r2, [r2]
10007418: f7ff fde8    	bl	0x10006fec <fugit::instant::Instant<u64,_,_>::const_cmp::hc6342566aae4a077> @ imm = #-0x430
1000741c: a901         	add	r1, sp, #0x4
1000741e: 7008         	strb	r0, [r1]
10007420: 9801         	ldr	r0, [sp, #0x4]
10007422: b004         	add	sp, #0x10
10007424: bd80         	pop	{r7, pc}
10007426: d4d4         	bmi	0x100073d2 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf1ca5d3775821584E+0x18> @ imm = #-0x58

10007428 <<fugit::rate::Rate<u32,_,_> as core::ops::arith::Div<u32>>::div::h9db490a08649df04>:
10007428: b580         	push	{r7, lr}
1000742a: af00         	add	r7, sp, #0x0
1000742c: b084         	sub	sp, #0x10
1000742e: 9101         	str	r1, [sp, #0x4]
10007430: 9002         	str	r0, [sp, #0x8]
10007432: 9103         	str	r1, [sp, #0xc]
10007434: 2900         	cmp	r1, #0x0
10007436: d008         	beq	0x1000744a <<fugit::rate::Rate<u32,_,_> as core::ops::arith::Div<u32>>::div::h9db490a08649df04+0x22> @ imm = #0x10
10007438: e7ff         	b	0x1000743a <<fugit::rate::Rate<u32,_,_> as core::ops::arith::Div<u32>>::div::h9db490a08649df04+0x12> @ imm = #-0x2
1000743a: 9901         	ldr	r1, [sp, #0x4]
1000743c: 9802         	ldr	r0, [sp, #0x8]
1000743e: f006 f9ad    	bl	0x1000d79c <__aeabi_uidiv> @ imm = #0x635a
10007442: 9002         	str	r0, [sp, #0x8]
10007444: 9802         	ldr	r0, [sp, #0x8]
10007446: b004         	add	sp, #0x10
10007448: bd80         	pop	{r7, pc}
1000744a: 4801         	ldr	r0, [pc, #0x4]          @ 0x10007450 <<fugit::rate::Rate<u32,_,_> as core::ops::arith::Div<u32>>::div::h9db490a08649df04+0x28>
1000744c: f006 f838    	bl	0x1000d4c0 <core::panicking::panic_const::panic_const_div_by_zero::ha09f740279da4cf0> @ imm = #0x6070
10007450: 78 1b 01 10  	.word	0x10011b78

10007454 <<fugit::rate::Rate<u32,_,_> as core::ops::arith::Mul<u32>>::mul::h699ab0d30e4cbd1b>:
10007454: b580         	push	{r7, lr}
10007456: af00         	add	r7, sp, #0x0
10007458: b084         	sub	sp, #0x10
1000745a: 460a         	mov	r2, r1
1000745c: 9002         	str	r0, [sp, #0x8]
1000745e: 9203         	str	r2, [sp, #0xc]
10007460: 9802         	ldr	r0, [sp, #0x8]
10007462: 2300         	movs	r3, #0x0
10007464: 4619         	mov	r1, r3
10007466: f006 fa70    	bl	0x1000d94a <__aeabi_lmul> @ imm = #0x64e0
1000746a: 1e4a         	subs	r2, r1, #0x1
1000746c: 4191         	sbcs	r1, r2
1000746e: 9001         	str	r0, [sp, #0x4]
10007470: 2900         	cmp	r1, #0x0
10007472: d105         	bne	0x10007480 <<fugit::rate::Rate<u32,_,_> as core::ops::arith::Mul<u32>>::mul::h699ab0d30e4cbd1b+0x2c> @ imm = #0xa
10007474: e7ff         	b	0x10007476 <<fugit::rate::Rate<u32,_,_> as core::ops::arith::Mul<u32>>::mul::h699ab0d30e4cbd1b+0x22> @ imm = #-0x2
10007476: 9801         	ldr	r0, [sp, #0x4]
10007478: 9002         	str	r0, [sp, #0x8]
1000747a: 9802         	ldr	r0, [sp, #0x8]
1000747c: b004         	add	sp, #0x10
1000747e: bd80         	pop	{r7, pc}
10007480: 4801         	ldr	r0, [pc, #0x4]          @ 0x10007488 <<fugit::rate::Rate<u32,_,_> as core::ops::arith::Mul<u32>>::mul::h699ab0d30e4cbd1b+0x34>
10007482: f005 fff9    	bl	0x1000d478 <core::panicking::panic_const::panic_const_mul_overflow::hdb56fe2dcc791345> @ imm = #0x5ff2
10007486: 46c0         	mov	r8, r8
10007488: 78 1b 01 10  	.word	0x10011b78

1000748c <cortex_m::asm::delay::h59aaecaf49566739>:
1000748c: b580         	push	{r7, lr}
1000748e: af00         	add	r7, sp, #0x0
10007490: b082         	sub	sp, #0x8
10007492: 9001         	str	r0, [sp, #0x4]
10007494: f004 fef2    	bl	0x1000c27c <__delay>    @ imm = #0x4de4
10007498: b002         	add	sp, #0x8
1000749a: bd80         	pop	{r7, pc}

1000749c <cortex_m::register::primask::read::h7485882dbcb8be77>:
1000749c: b580         	push	{r7, lr}
1000749e: af00         	add	r7, sp, #0x0
100074a0: b082         	sub	sp, #0x8
100074a2: f004 fef2    	bl	0x1000c28a <__primask_r> @ imm = #0x4de4
100074a6: 9001         	str	r0, [sp, #0x4]
100074a8: 2101         	movs	r1, #0x1
100074aa: 4008         	ands	r0, r1
100074ac: 2801         	cmp	r0, #0x1
100074ae: d004         	beq	0x100074ba <cortex_m::register::primask::read::h7485882dbcb8be77+0x1e> @ imm = #0x8
100074b0: e7ff         	b	0x100074b2 <cortex_m::register::primask::read::h7485882dbcb8be77+0x16> @ imm = #-0x2
100074b2: 4669         	mov	r1, sp
100074b4: 2000         	movs	r0, #0x0
100074b6: 7008         	strb	r0, [r1]
100074b8: e003         	b	0x100074c2 <cortex_m::register::primask::read::h7485882dbcb8be77+0x26> @ imm = #0x6
100074ba: 4669         	mov	r1, sp
100074bc: 2001         	movs	r0, #0x1
100074be: 7008         	strb	r0, [r1]
100074c0: e7ff         	b	0x100074c2 <cortex_m::register::primask::read::h7485882dbcb8be77+0x26> @ imm = #-0x2
100074c2: 4668         	mov	r0, sp
100074c4: 7800         	ldrb	r0, [r0]
100074c6: b002         	add	sp, #0x8
100074c8: bd80         	pop	{r7, pc}
100074ca: d4d4         	bmi	0x10007476 <<fugit::rate::Rate<u32,_,_> as core::ops::arith::Mul<u32>>::mul::h699ab0d30e4cbd1b+0x22> @ imm = #-0x58

100074cc <cortex_m::register::primask::Primask::is_active::h0aa28a840c0ee486>:
100074cc: b580         	push	{r7, lr}
100074ce: af00         	add	r7, sp, #0x0
100074d0: b082         	sub	sp, #0x8
100074d2: 4601         	mov	r1, r0
100074d4: a801         	add	r0, sp, #0x4
100074d6: 7001         	strb	r1, [r0]
100074d8: 4902         	ldr	r1, [pc, #0x8]          @ 0x100074e4 <cortex_m::register::primask::Primask::is_active::h0aa28a840c0ee486+0x18>
100074da: f7ff fdd7    	bl	0x1000708c <<cortex_m::register::primask::Primask as core::cmp::PartialEq>::eq::hce26a2ee8002c7ae> @ imm = #-0x452
100074de: b002         	add	sp, #0x8
100074e0: bd80         	pop	{r7, pc}
100074e2: 46c0         	mov	r8, r8
100074e4: a0 1b 01 10  	.word	0x10011ba0

100074e8 <cortex_m::interrupt::enable::hf3f6b4ab1d70edf9>:
100074e8: b580         	push	{r7, lr}
100074ea: af00         	add	r7, sp, #0x0
100074ec: f004 fec4    	bl	0x1000c278 <__cpsie>    @ imm = #0x4d88
100074f0: bd80         	pop	{r7, pc}

100074f2 <cortex_m::interrupt::disable::h2d872fa5469678fd>:
100074f2: b580         	push	{r7, lr}
100074f4: af00         	add	r7, sp, #0x0
100074f6: f004 febd    	bl	0x1000c274 <__cpsid>    @ imm = #0x4d7a
100074fa: bd80         	pop	{r7, pc}

100074fc <<core::ops::range::Range<T> as core::ops::range::RangeBounds<T>>::start_bound::h19aa7569b96dede3>:
100074fc: b580         	push	{r7, lr}
100074fe: af00         	add	r7, sp, #0x0
10007500: b083         	sub	sp, #0xc
10007502: 9002         	str	r0, [sp, #0x8]
10007504: 9001         	str	r0, [sp, #0x4]
10007506: 2000         	movs	r0, #0x0
10007508: 9000         	str	r0, [sp]
1000750a: 9800         	ldr	r0, [sp]
1000750c: 9901         	ldr	r1, [sp, #0x4]
1000750e: b003         	add	sp, #0xc
10007510: bd80         	pop	{r7, pc}

10007512 <<core::ops::range::Range<T> as core::ops::range::RangeBounds<T>>::start_bound::h6b409a9aa95703e5>:
10007512: b580         	push	{r7, lr}
10007514: af00         	add	r7, sp, #0x0
10007516: b083         	sub	sp, #0xc
10007518: 9002         	str	r0, [sp, #0x8]
1000751a: 9001         	str	r0, [sp, #0x4]
1000751c: 2000         	movs	r0, #0x0
1000751e: 9000         	str	r0, [sp]
10007520: 9800         	ldr	r0, [sp]
10007522: 9901         	ldr	r1, [sp, #0x4]
10007524: b003         	add	sp, #0xc
10007526: bd80         	pop	{r7, pc}

10007528 <<core::ops::range::Range<T> as core::ops::range::RangeBounds<T>>::start_bound::h6e4870419bd92bc2>:
10007528: b580         	push	{r7, lr}
1000752a: af00         	add	r7, sp, #0x0
1000752c: b083         	sub	sp, #0xc
1000752e: 9002         	str	r0, [sp, #0x8]
10007530: 9001         	str	r0, [sp, #0x4]
10007532: 2000         	movs	r0, #0x0
10007534: 9000         	str	r0, [sp]
10007536: 9800         	ldr	r0, [sp]
10007538: 9901         	ldr	r1, [sp, #0x4]
1000753a: b003         	add	sp, #0xc
1000753c: bd80         	pop	{r7, pc}

1000753e <<core::ops::range::Range<T> as core::ops::range::RangeBounds<T>>::end_bound::h510a37537bd561cf>:
1000753e: b580         	push	{r7, lr}
10007540: af00         	add	r7, sp, #0x0
10007542: b083         	sub	sp, #0xc
10007544: 9002         	str	r0, [sp, #0x8]
10007546: 1c80         	adds	r0, r0, #0x2
10007548: 9001         	str	r0, [sp, #0x4]
1000754a: 2001         	movs	r0, #0x1
1000754c: 9000         	str	r0, [sp]
1000754e: 9800         	ldr	r0, [sp]
10007550: 9901         	ldr	r1, [sp, #0x4]
10007552: b003         	add	sp, #0xc
10007554: bd80         	pop	{r7, pc}

10007556 <<core::ops::range::Range<T> as core::ops::range::RangeBounds<T>>::end_bound::h6d6b2da2300b0872>:
10007556: b580         	push	{r7, lr}
10007558: af00         	add	r7, sp, #0x0
1000755a: b083         	sub	sp, #0xc
1000755c: 9002         	str	r0, [sp, #0x8]
1000755e: 1d00         	adds	r0, r0, #0x4
10007560: 9001         	str	r0, [sp, #0x4]
10007562: 2001         	movs	r0, #0x1
10007564: 9000         	str	r0, [sp]
10007566: 9800         	ldr	r0, [sp]
10007568: 9901         	ldr	r1, [sp, #0x4]
1000756a: b003         	add	sp, #0xc
1000756c: bd80         	pop	{r7, pc}

1000756e <<core::ops::range::Range<T> as core::ops::range::RangeBounds<T>>::end_bound::h6f41e694768c3841>:
1000756e: b580         	push	{r7, lr}
10007570: af00         	add	r7, sp, #0x0
10007572: b083         	sub	sp, #0xc
10007574: 9002         	str	r0, [sp, #0x8]
10007576: 1c40         	adds	r0, r0, #0x1
10007578: 9001         	str	r0, [sp, #0x4]
1000757a: 2001         	movs	r0, #0x1
1000757c: 9000         	str	r0, [sp]
1000757e: 9800         	ldr	r0, [sp]
10007580: 9901         	ldr	r1, [sp, #0x4]
10007582: b003         	add	sp, #0xc
10007584: bd80         	pop	{r7, pc}

10007586 <rp2040_hal::clocks::clock_sources::<impl rp2040_hal::clocks::ClockSource for rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locked,rp2040_pac::PLL_SYS>>::get_freq::h4aaa9d5d79c03fa1>:
10007586: b580         	push	{r7, lr}
10007588: af00         	add	r7, sp, #0x0
1000758a: b082         	sub	sp, #0x8
1000758c: 9001         	str	r0, [sp, #0x4]
1000758e: f001 faa8    	bl	0x10008ae2 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locked,D>::operating_frequency::hfd13e749997f7c71> @ imm = #0x1550
10007592: b002         	add	sp, #0x8
10007594: bd80         	pop	{r7, pc}

10007596 <rp2040_hal::clocks::clock_sources::<impl rp2040_hal::clocks::ClockSource for rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locked,rp2040_pac::PLL_USB>>::get_freq::he7a0e396da435ca1>:
10007596: b580         	push	{r7, lr}
10007598: af00         	add	r7, sp, #0x0
1000759a: b082         	sub	sp, #0x8
1000759c: 9001         	str	r0, [sp, #0x4]
1000759e: f001 fa99    	bl	0x10008ad4 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locked,D>::operating_frequency::h4dff30fccd158734> @ imm = #0x1532
100075a2: b002         	add	sp, #0x8
100075a4: bd80         	pop	{r7, pc}

100075a6 <rp2040_hal::clocks::clock_sources::<impl rp2040_hal::clocks::ClockSource for rp2040_hal::clocks::SystemClock>::get_freq::ha64ece02063e6906>:
100075a6: b580         	push	{r7, lr}
100075a8: af00         	add	r7, sp, #0x0
100075aa: b081         	sub	sp, #0x4
100075ac: 9000         	str	r0, [sp]
100075ae: 6800         	ldr	r0, [r0]
100075b0: b001         	add	sp, #0x4
100075b2: bd80         	pop	{r7, pc}

100075b4 <rp2040_hal::clocks::clock_sources::<impl rp2040_hal::clocks::ClockSource for rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Stable>>::get_freq::hefd1a4c9e456aa74>:
100075b4: b580         	push	{r7, lr}
100075b6: af00         	add	r7, sp, #0x0
100075b8: b082         	sub	sp, #0x8
100075ba: 9001         	str	r0, [sp, #0x4]
100075bc: f001 fea5    	bl	0x1000930a <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Stable>::operating_frequency::hcaab87b757f71411> @ imm = #0x1d4a
100075c0: b002         	add	sp, #0x8
100075c2: bd80         	pop	{r7, pc}

100075c4 <rp2040_hal::clocks::ShareableClocks::new::hf41f0528af4bf96a>:
100075c4: b580         	push	{r7, lr}
100075c6: af00         	add	r7, sp, #0x0
100075c8: b081         	sub	sp, #0x4
100075ca: 9000         	str	r0, [sp]
100075cc: b001         	add	sp, #0x4
100075ce: bd80         	pop	{r7, pc}

100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2>:
100075d0: b580         	push	{r7, lr}
100075d2: af00         	add	r7, sp, #0x0
100075d4: b081         	sub	sp, #0x4
100075d6: 9000         	str	r0, [sp]
100075d8: 4801         	ldr	r0, [pc, #0x4]          @ 0x100075e0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2+0x10>
100075da: b001         	add	sp, #0x4
100075dc: bd80         	pop	{r7, pc}
100075de: 46c0         	mov	r8, r8
100075e0: 00 80 00 40  	.word	0x40008000

100075e4 <rp2040_hal::clocks::SystemClock::get_default_clock_source::h6ebd65fb6d970ba6>:
100075e4: b580         	push	{r7, lr}
100075e6: af00         	add	r7, sp, #0x0
100075e8: b082         	sub	sp, #0x8
100075ea: 9001         	str	r0, [sp, #0x4]
100075ec: 4668         	mov	r0, sp
100075ee: 2100         	movs	r1, #0x0
100075f0: 7001         	strb	r1, [r0]
100075f2: 7800         	ldrb	r0, [r0]
100075f4: b002         	add	sp, #0x8
100075f6: bd80         	pop	{r7, pc}

100075f8 <rp2040_hal::clocks::SystemClock::get_aux_source::h729a15dcd2ddb919>:
100075f8: b580         	push	{r7, lr}
100075fa: af00         	add	r7, sp, #0x0
100075fc: b082         	sub	sp, #0x8
100075fe: 9001         	str	r0, [sp, #0x4]
10007600: 4668         	mov	r0, sp
10007602: 2101         	movs	r1, #0x1
10007604: 7001         	strb	r1, [r0]
10007606: 7800         	ldrb	r0, [r0]
10007608: b002         	add	sp, #0x8
1000760a: bd80         	pop	{r7, pc}

1000760c <rp2040_hal::clocks::ReferenceClock::get_default_clock_source::h6b407ad0945813e4>:
1000760c: b580         	push	{r7, lr}
1000760e: af00         	add	r7, sp, #0x0
10007610: b082         	sub	sp, #0x8
10007612: 9001         	str	r0, [sp, #0x4]
10007614: 4669         	mov	r1, sp
10007616: 2000         	movs	r0, #0x0
10007618: 7008         	strb	r0, [r1]
1000761a: 9800         	ldr	r0, [sp]
1000761c: b002         	add	sp, #0x8
1000761e: bd80         	pop	{r7, pc}

10007620 <rp2040_hal::clocks::ReferenceClock::get_aux_source::h44b82294bc0adf8e>:
10007620: b580         	push	{r7, lr}
10007622: af00         	add	r7, sp, #0x0
10007624: b082         	sub	sp, #0x8
10007626: 9001         	str	r0, [sp, #0x4]
10007628: 4669         	mov	r1, sp
1000762a: 2001         	movs	r0, #0x1
1000762c: 7008         	strb	r0, [r1]
1000762e: 9800         	ldr	r0, [sp]
10007630: b002         	add	sp, #0x8
10007632: bd80         	pop	{r7, pc}

10007634 <rp2040_hal::clocks::ClocksManager::init_default::h1c89a7dd006abfe2>:
10007634: b580         	push	{r7, lr}
10007636: af00         	add	r7, sp, #0x0
10007638: b09c         	sub	sp, #0x70
1000763a: 9306         	str	r3, [sp, #0x18]
1000763c: 9207         	str	r2, [sp, #0x1c]
1000763e: 9109         	str	r1, [sp, #0x24]
10007640: 4601         	mov	r1, r0
10007642: 9809         	ldr	r0, [sp, #0x24]
10007644: 9108         	str	r1, [sp, #0x20]
10007646: 9111         	str	r1, [sp, #0x44]
10007648: 9012         	str	r0, [sp, #0x48]
1000764a: 9213         	str	r2, [sp, #0x4c]
1000764c: 9314         	str	r3, [sp, #0x50]
1000764e: 3110         	adds	r1, #0x10
10007650: 910a         	str	r1, [sp, #0x28]
10007652: f7ff ffaf    	bl	0x100075b4 <rp2040_hal::clocks::clock_sources::<impl rp2040_hal::clocks::ClockSource for rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Stable>>::get_freq::hefd1a4c9e456aa74> @ imm = #-0xa2
10007656: 9909         	ldr	r1, [sp, #0x24]
10007658: 4602         	mov	r2, r0
1000765a: 980a         	ldr	r0, [sp, #0x28]
1000765c: f002 f9c6    	bl	0x100099ec <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::Clock>::configure_clock::h50a2a240bd230174> @ imm = #0x238c
10007660: f7ff fe6c    	bl	0x1000733c <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he2f62d267622fa10E> @ imm = #-0x328
10007664: 4601         	mov	r1, r0
10007666: a80c         	add	r0, sp, #0x30
10007668: 7001         	strb	r1, [r0]
1000766a: 7800         	ldrb	r0, [r0]
1000766c: 2803         	cmp	r0, #0x3
1000766e: d114         	bne	0x1000769a <rp2040_hal::clocks::ClocksManager::init_default::h1c89a7dd006abfe2+0x66> @ imm = #0x28
10007670: e7ff         	b	0x10007672 <rp2040_hal::clocks::ClocksManager::init_default::h1c89a7dd006abfe2+0x3e> @ imm = #-0x2
10007672: 9807         	ldr	r0, [sp, #0x1c]
10007674: 9908         	ldr	r1, [sp, #0x20]
10007676: 3114         	adds	r1, #0x14
10007678: 9105         	str	r1, [sp, #0x14]
1000767a: f7ff ff84    	bl	0x10007586 <rp2040_hal::clocks::clock_sources::<impl rp2040_hal::clocks::ClockSource for rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locked,rp2040_pac::PLL_SYS>>::get_freq::h4aaa9d5d79c03fa1> @ imm = #-0xf8
1000767e: 9907         	ldr	r1, [sp, #0x1c]
10007680: 4602         	mov	r2, r0
10007682: 9805         	ldr	r0, [sp, #0x14]
10007684: f002 fd78    	bl	0x1000a178 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::Clock>::configure_clock::h0c99206bbceb38d3> @ imm = #0x2af0
10007688: f7ff fe58    	bl	0x1000733c <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he2f62d267622fa10E> @ imm = #-0x350
1000768c: 4601         	mov	r1, r0
1000768e: a80d         	add	r0, sp, #0x34
10007690: 7001         	strb	r1, [r0]
10007692: 7800         	ldrb	r0, [r0]
10007694: 2803         	cmp	r0, #0x3
10007696: d009         	beq	0x100076ac <rp2040_hal::clocks::ClocksManager::init_default::h1c89a7dd006abfe2+0x78> @ imm = #0x12
10007698: e01c         	b	0x100076d4 <rp2040_hal::clocks::ClocksManager::init_default::h1c89a7dd006abfe2+0xa0> @ imm = #0x38
1000769a: 980c         	ldr	r0, [sp, #0x30]
1000769c: a91b         	add	r1, sp, #0x6c
1000769e: 7008         	strb	r0, [r1]
100076a0: 493c         	ldr	r1, [pc, #0xf0]         @ 0x10007794 <rp2040_hal::clocks::ClocksManager::init_default::h1c89a7dd006abfe2+0x160>
100076a2: f7fe fd84    	bl	0x100061ae <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4d80d59e43eeb34cE> @ imm = #-0x14f8
100076a6: a90b         	add	r1, sp, #0x2c
100076a8: 7008         	strb	r0, [r1]
100076aa: e06f         	b	0x1000778c <rp2040_hal::clocks::ClocksManager::init_default::h1c89a7dd006abfe2+0x158> @ imm = #0xde
100076ac: 9806         	ldr	r0, [sp, #0x18]
100076ae: 9908         	ldr	r1, [sp, #0x20]
100076b0: 311c         	adds	r1, #0x1c
100076b2: 9104         	str	r1, [sp, #0x10]
100076b4: f7ff ff6f    	bl	0x10007596 <rp2040_hal::clocks::clock_sources::<impl rp2040_hal::clocks::ClockSource for rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locked,rp2040_pac::PLL_USB>>::get_freq::he7a0e396da435ca1> @ imm = #-0x122
100076b8: 9906         	ldr	r1, [sp, #0x18]
100076ba: 4602         	mov	r2, r0
100076bc: 9804         	ldr	r0, [sp, #0x10]
100076be: f003 f9a7    	bl	0x1000aa10 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::Clock>::configure_clock::h0631b64c497acbbf> @ imm = #0x334e
100076c2: f7ff fe3b    	bl	0x1000733c <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he2f62d267622fa10E> @ imm = #-0x38a
100076c6: 4601         	mov	r1, r0
100076c8: a80e         	add	r0, sp, #0x38
100076ca: 7001         	strb	r1, [r0]
100076cc: 7800         	ldrb	r0, [r0]
100076ce: 2803         	cmp	r0, #0x3
100076d0: d009         	beq	0x100076e6 <rp2040_hal::clocks::ClocksManager::init_default::h1c89a7dd006abfe2+0xb2> @ imm = #0x12
100076d2: e01c         	b	0x1000770e <rp2040_hal::clocks::ClocksManager::init_default::h1c89a7dd006abfe2+0xda> @ imm = #0x38
100076d4: 980d         	ldr	r0, [sp, #0x34]
100076d6: a91a         	add	r1, sp, #0x68
100076d8: 7008         	strb	r0, [r1]
100076da: 492f         	ldr	r1, [pc, #0xbc]         @ 0x10007798 <rp2040_hal::clocks::ClocksManager::init_default::h1c89a7dd006abfe2+0x164>
100076dc: f7fe fd67    	bl	0x100061ae <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4d80d59e43eeb34cE> @ imm = #-0x1532
100076e0: a90b         	add	r1, sp, #0x2c
100076e2: 7008         	strb	r0, [r1]
100076e4: e052         	b	0x1000778c <rp2040_hal::clocks::ClocksManager::init_default::h1c89a7dd006abfe2+0x158> @ imm = #0xa4
100076e6: 9806         	ldr	r0, [sp, #0x18]
100076e8: 9908         	ldr	r1, [sp, #0x20]
100076ea: 3120         	adds	r1, #0x20
100076ec: 9103         	str	r1, [sp, #0xc]
100076ee: f7ff ff52    	bl	0x10007596 <rp2040_hal::clocks::clock_sources::<impl rp2040_hal::clocks::ClockSource for rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locked,rp2040_pac::PLL_USB>>::get_freq::he7a0e396da435ca1> @ imm = #-0x15c
100076f2: 9906         	ldr	r1, [sp, #0x18]
100076f4: 4602         	mov	r2, r0
100076f6: 9803         	ldr	r0, [sp, #0xc]
100076f8: f003 fbd4    	bl	0x1000aea4 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::Clock>::configure_clock::hc833b9d4e1e86ec7> @ imm = #0x37a8
100076fc: f7ff fe1e    	bl	0x1000733c <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he2f62d267622fa10E> @ imm = #-0x3c4
10007700: 4601         	mov	r1, r0
10007702: a80f         	add	r0, sp, #0x3c
10007704: 7001         	strb	r1, [r0]
10007706: 7800         	ldrb	r0, [r0]
10007708: 2803         	cmp	r0, #0x3
1000770a: d009         	beq	0x10007720 <rp2040_hal::clocks::ClocksManager::init_default::h1c89a7dd006abfe2+0xec> @ imm = #0x12
1000770c: e01c         	b	0x10007748 <rp2040_hal::clocks::ClocksManager::init_default::h1c89a7dd006abfe2+0x114> @ imm = #0x38
1000770e: 980e         	ldr	r0, [sp, #0x38]
10007710: a919         	add	r1, sp, #0x64
10007712: 7008         	strb	r0, [r1]
10007714: 4921         	ldr	r1, [pc, #0x84]         @ 0x1000779c <rp2040_hal::clocks::ClocksManager::init_default::h1c89a7dd006abfe2+0x168>
10007716: f7fe fd4a    	bl	0x100061ae <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4d80d59e43eeb34cE> @ imm = #-0x156c
1000771a: a90b         	add	r1, sp, #0x2c
1000771c: 7008         	strb	r0, [r1]
1000771e: e035         	b	0x1000778c <rp2040_hal::clocks::ClocksManager::init_default::h1c89a7dd006abfe2+0x158> @ imm = #0x6a
10007720: 9808         	ldr	r0, [sp, #0x20]
10007722: 3024         	adds	r0, #0x24
10007724: 9002         	str	r0, [sp, #0x8]
10007726: 481f         	ldr	r0, [pc, #0x7c]         @ 0x100077a4 <rp2040_hal::clocks::ClocksManager::init_default::h1c89a7dd006abfe2+0x170>
10007728: f7fe fda3    	bl	0x10006272 <<u32 as fugit::rate::ExtU32>::Hz::ha421d0a6a3793ef2> @ imm = #-0x14ba
1000772c: 9906         	ldr	r1, [sp, #0x18]
1000772e: 4602         	mov	r2, r0
10007730: 9802         	ldr	r0, [sp, #0x8]
10007732: f003 fe01    	bl	0x1000b338 <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::Clock>::configure_clock::ha356c9e7d40f9e12> @ imm = #0x3c02
10007736: f7ff fe01    	bl	0x1000733c <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he2f62d267622fa10E> @ imm = #-0x3fe
1000773a: 4601         	mov	r1, r0
1000773c: a810         	add	r0, sp, #0x40
1000773e: 7001         	strb	r1, [r0]
10007740: 7800         	ldrb	r0, [r0]
10007742: 2803         	cmp	r0, #0x3
10007744: d009         	beq	0x1000775a <rp2040_hal::clocks::ClocksManager::init_default::h1c89a7dd006abfe2+0x126> @ imm = #0x12
10007746: e018         	b	0x1000777a <rp2040_hal::clocks::ClocksManager::init_default::h1c89a7dd006abfe2+0x146> @ imm = #0x30
10007748: 980f         	ldr	r0, [sp, #0x3c]
1000774a: a918         	add	r1, sp, #0x60
1000774c: 7008         	strb	r0, [r1]
1000774e: 4914         	ldr	r1, [pc, #0x50]         @ 0x100077a0 <rp2040_hal::clocks::ClocksManager::init_default::h1c89a7dd006abfe2+0x16c>
10007750: f7fe fd2d    	bl	0x100061ae <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4d80d59e43eeb34cE> @ imm = #-0x15a6
10007754: a90b         	add	r1, sp, #0x2c
10007756: 7008         	strb	r0, [r1]
10007758: e018         	b	0x1000778c <rp2040_hal::clocks::ClocksManager::init_default::h1c89a7dd006abfe2+0x158> @ imm = #0x30
1000775a: 9808         	ldr	r0, [sp, #0x20]
1000775c: 4601         	mov	r1, r0
1000775e: 3118         	adds	r1, #0x18
10007760: 9101         	str	r1, [sp, #0x4]
10007762: 3014         	adds	r0, #0x14
10007764: 9000         	str	r0, [sp]
10007766: f002 fcff    	bl	0x1000a168 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::Clock>::freq::h49b977205ad25b21> @ imm = #0x29fe
1000776a: 9900         	ldr	r1, [sp]
1000776c: 4602         	mov	r2, r0
1000776e: 9801         	ldr	r0, [sp, #0x4]
10007770: f002 ff04    	bl	0x1000a57c <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::Clock>::configure_clock::hf1be23259c04c0f3> @ imm = #0x2e08
10007774: a90b         	add	r1, sp, #0x2c
10007776: 7008         	strb	r0, [r1]
10007778: e008         	b	0x1000778c <rp2040_hal::clocks::ClocksManager::init_default::h1c89a7dd006abfe2+0x158> @ imm = #0x10
1000777a: 9810         	ldr	r0, [sp, #0x40]
1000777c: a917         	add	r1, sp, #0x5c
1000777e: 7008         	strb	r0, [r1]
10007780: 4909         	ldr	r1, [pc, #0x24]         @ 0x100077a8 <rp2040_hal::clocks::ClocksManager::init_default::h1c89a7dd006abfe2+0x174>
10007782: f7fe fd14    	bl	0x100061ae <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4d80d59e43eeb34cE> @ imm = #-0x15d8
10007786: a90b         	add	r1, sp, #0x2c
10007788: 7008         	strb	r0, [r1]
1000778a: e7ff         	b	0x1000778c <rp2040_hal::clocks::ClocksManager::init_default::h1c89a7dd006abfe2+0x158> @ imm = #-0x2
1000778c: 980b         	ldr	r0, [sp, #0x2c]
1000778e: b01c         	add	sp, #0x70
10007790: bd80         	pop	{r7, pc}
10007792: 46c0         	mov	r8, r8
10007794: 44 1c 01 10  	.word	0x10011c44
10007798: 34 1c 01 10  	.word	0x10011c34
1000779c: 24 1c 01 10  	.word	0x10011c24
100077a0: 14 1c 01 10  	.word	0x10011c14
100077a4: 1b b7 00 00  	.word	0x0000b71b
100077a8: 04 1c 01 10  	.word	0x10011c04

100077ac <rp2040_hal::clocks::init_clocks_and_plls::h42efc3d0f44e533f>:
100077ac: b5f0         	push	{r4, r5, r6, r7, lr}
100077ae: af03         	add	r7, sp, #0xc
100077b0: b0cb         	sub	sp, #0x12c
100077b2: 9309         	str	r3, [sp, #0x24]
100077b4: 920a         	str	r2, [sp, #0x28]
100077b6: 910b         	str	r1, [sp, #0x2c]
100077b8: 4601         	mov	r1, r0
100077ba: 980b         	ldr	r0, [sp, #0x2c]
100077bc: 910c         	str	r1, [sp, #0x30]
100077be: 903a         	str	r0, [sp, #0xe8]
100077c0: 923c         	str	r2, [sp, #0xf0]
100077c2: 933d         	str	r3, [sp, #0xf4]
100077c4: f7fe fd55    	bl	0x10006272 <<u32 as fugit::rate::ExtU32>::Hz::ha421d0a6a3793ef2> @ imm = #-0x1556
100077c8: 4601         	mov	r1, r0
100077ca: a815         	add	r0, sp, #0x54
100077cc: 900d         	str	r0, [sp, #0x34]
100077ce: f001 fb59    	bl	0x10008e84 <rp2040_hal::xosc::setup_xosc_blocking::he7153cb158240fbe> @ imm = #0x16b2
100077d2: 990d         	ldr	r1, [sp, #0x34]
100077d4: a813         	add	r0, sp, #0x4c
100077d6: 900e         	str	r0, [sp, #0x38]
100077d8: f7ff fa99    	bl	0x10006d0e <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hbdce24765d233294E> @ imm = #-0xace
100077dc: 990e         	ldr	r1, [sp, #0x38]
100077de: a811         	add	r0, sp, #0x44
100077e0: 900f         	str	r0, [sp, #0x3c]
100077e2: f7ff fdea    	bl	0x100073ba <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hf1ca5d3775821584E> @ imm = #-0x42c
100077e6: 980f         	ldr	r0, [sp, #0x3c]
100077e8: 7800         	ldrb	r0, [r0]
100077ea: 07c0         	lsls	r0, r0, #0x1f
100077ec: 2800         	cmp	r0, #0x0
100077ee: d12f         	bne	0x10007850 <rp2040_hal::clocks::init_clocks_and_plls::h42efc3d0f44e533f+0xa4> @ imm = #0x5e
100077f0: e7ff         	b	0x100077f2 <rp2040_hal::clocks::init_clocks_and_plls::h42efc3d0f44e533f+0x46> @ imm = #-0x2
100077f2: 980b         	ldr	r0, [sp, #0x2c]
100077f4: 9912         	ldr	r1, [sp, #0x48]
100077f6: 9140         	str	r1, [sp, #0x100]
100077f8: 9110         	str	r1, [sp, #0x40]
100077fa: 4953         	ldr	r1, [pc, #0x14c]        @ 0x10007948 <rp2040_hal::clocks::init_clocks_and_plls::h42efc3d0f44e533f+0x19c>
100077fc: f005 ffce    	bl	0x1000d79c <__aeabi_uidiv> @ imm = #0x5f9c
10007800: 4601         	mov	r1, r0
10007802: 9809         	ldr	r0, [sp, #0x24]
10007804: f001 fafa    	bl	0x10008dfc <rp2040_hal::watchdog::Watchdog::enable_tick_generation::hf0bceb9ffba64d0c> @ imm = #0x15f4
10007808: a817         	add	r0, sp, #0x5c
1000780a: 9005         	str	r0, [sp, #0x14]
1000780c: f001 fd84    	bl	0x10009318 <rp2040_hal::clocks::ClocksManager::new::hdc7061cee8eb4b75> @ imm = #0x1b08
10007810: a810         	add	r0, sp, #0x40
10007812: f001 fd7a    	bl	0x1000930a <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Stable>::operating_frequency::hcaab87b757f71411> @ imm = #0x1af4
10007816: 9b05         	ldr	r3, [sp, #0x14]
10007818: 4601         	mov	r1, r0
1000781a: 980a         	ldr	r0, [sp, #0x28]
1000781c: 4a4b         	ldr	r2, [pc, #0x12c]        @ 0x1000794c <rp2040_hal::clocks::init_clocks_and_plls::h42efc3d0f44e533f+0x1a0>
1000781e: 9242         	str	r2, [sp, #0x108]
10007820: 4a4b         	ldr	r2, [pc, #0x12c]        @ 0x10007950 <rp2040_hal::clocks::init_clocks_and_plls::h42efc3d0f44e533f+0x1a4>
10007822: 9241         	str	r2, [sp, #0x104]
10007824: 9000         	str	r0, [sp]
10007826: a826         	add	r0, sp, #0x98
10007828: 9006         	str	r0, [sp, #0x18]
1000782a: aa41         	add	r2, sp, #0x104
1000782c: f001 f9b4    	bl	0x10008b98 <rp2040_hal::pll::setup_pll_blocking::h5946ec6fed6c7a1e> @ imm = #0x1368
10007830: 9906         	ldr	r1, [sp, #0x18]
10007832: a824         	add	r0, sp, #0x90
10007834: 9007         	str	r0, [sp, #0x1c]
10007836: f7ff fa48    	bl	0x10006cca <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17ha83f243a1e8de47cE> @ imm = #-0xb70
1000783a: 9907         	ldr	r1, [sp, #0x1c]
1000783c: a822         	add	r0, sp, #0x88
1000783e: 9008         	str	r0, [sp, #0x20]
10007840: f7ff fd96    	bl	0x10007370 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17he8ea3c1b63b52121E> @ imm = #-0x4d4
10007844: 9808         	ldr	r0, [sp, #0x20]
10007846: 7800         	ldrb	r0, [r0]
10007848: 07c0         	lsls	r0, r0, #0x1f
1000784a: 2800         	cmp	r0, #0x0
1000784c: d00b         	beq	0x10007866 <rp2040_hal::clocks::init_clocks_and_plls::h42efc3d0f44e533f+0xba> @ imm = #0x16
1000784e: e02d         	b	0x100078ac <rp2040_hal::clocks::init_clocks_and_plls::h42efc3d0f44e533f+0x100> @ imm = #0x5a
10007850: 980c         	ldr	r0, [sp, #0x30]
10007852: aa11         	add	r2, sp, #0x44
10007854: 7851         	ldrb	r1, [r2, #0x1]
10007856: 7892         	ldrb	r2, [r2, #0x2]
10007858: ab4a         	add	r3, sp, #0x128
1000785a: 7019         	strb	r1, [r3]
1000785c: 705a         	strb	r2, [r3, #0x1]
1000785e: 4b39         	ldr	r3, [pc, #0xe4]         @ 0x10007944 <rp2040_hal::clocks::init_clocks_and_plls::h42efc3d0f44e533f+0x198>
10007860: f7fe fcd8    	bl	0x10006214 <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hf1f825079e99d042E> @ imm = #-0x1650
10007864: e06c         	b	0x10007940 <rp2040_hal::clocks::init_clocks_and_plls::h42efc3d0f44e533f+0x194> @ imm = #0xd8
10007866: 9823         	ldr	r0, [sp, #0x8c]
10007868: 9043         	str	r0, [sp, #0x10c]
1000786a: 9021         	str	r0, [sp, #0x84]
1000786c: a810         	add	r0, sp, #0x40
1000786e: f001 fd4c    	bl	0x1000930a <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Stable>::operating_frequency::hcaab87b757f71411> @ imm = #0x1a98
10007872: 4601         	mov	r1, r0
10007874: 980a         	ldr	r0, [sp, #0x28]
10007876: 4a38         	ldr	r2, [pc, #0xe0]         @ 0x10007958 <rp2040_hal::clocks::init_clocks_and_plls::h42efc3d0f44e533f+0x1ac>
10007878: 9245         	str	r2, [sp, #0x114]
1000787a: 4a38         	ldr	r2, [pc, #0xe0]         @ 0x1000795c <rp2040_hal::clocks::init_clocks_and_plls::h42efc3d0f44e533f+0x1b0>
1000787c: 9244         	str	r2, [sp, #0x110]
1000787e: 9000         	str	r0, [sp]
10007880: a82d         	add	r0, sp, #0xb4
10007882: 9002         	str	r0, [sp, #0x8]
10007884: aa44         	add	r2, sp, #0x110
10007886: ab17         	add	r3, sp, #0x5c
10007888: f001 f932    	bl	0x10008af0 <rp2040_hal::pll::setup_pll_blocking::h4f5c7a6e330c938e> @ imm = #0x1264
1000788c: 9902         	ldr	r1, [sp, #0x8]
1000788e: a82b         	add	r0, sp, #0xac
10007890: 9003         	str	r0, [sp, #0xc]
10007892: f7ff fa80    	bl	0x10006d96 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hde661ff10b6f4c5cE> @ imm = #-0xb00
10007896: 9903         	ldr	r1, [sp, #0xc]
10007898: a829         	add	r0, sp, #0xa4
1000789a: 9004         	str	r0, [sp, #0x10]
1000789c: f7ff fd01    	bl	0x100072a2 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb1fbaa518ab17c62E> @ imm = #-0x5fe
100078a0: 9804         	ldr	r0, [sp, #0x10]
100078a2: 7800         	ldrb	r0, [r0]
100078a4: 07c0         	lsls	r0, r0, #0x1f
100078a6: 2800         	cmp	r0, #0x0
100078a8: d00b         	beq	0x100078c2 <rp2040_hal::clocks::init_clocks_and_plls::h42efc3d0f44e533f+0x116> @ imm = #0x16
100078aa: e01f         	b	0x100078ec <rp2040_hal::clocks::init_clocks_and_plls::h42efc3d0f44e533f+0x140> @ imm = #0x3e
100078ac: 980c         	ldr	r0, [sp, #0x30]
100078ae: aa22         	add	r2, sp, #0x88
100078b0: 7851         	ldrb	r1, [r2, #0x1]
100078b2: 7892         	ldrb	r2, [r2, #0x2]
100078b4: ab49         	add	r3, sp, #0x124
100078b6: 7019         	strb	r1, [r3]
100078b8: 705a         	strb	r2, [r3, #0x1]
100078ba: 4b26         	ldr	r3, [pc, #0x98]         @ 0x10007954 <rp2040_hal::clocks::init_clocks_and_plls::h42efc3d0f44e533f+0x1a8>
100078bc: f7fe fcaa    	bl	0x10006214 <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hf1f825079e99d042E> @ imm = #-0x16ac
100078c0: e03e         	b	0x10007940 <rp2040_hal::clocks::init_clocks_and_plls::h42efc3d0f44e533f+0x194> @ imm = #0x7c
100078c2: 982a         	ldr	r0, [sp, #0xa8]
100078c4: 9046         	str	r0, [sp, #0x118]
100078c6: 9028         	str	r0, [sp, #0xa0]
100078c8: a817         	add	r0, sp, #0x5c
100078ca: a910         	add	r1, sp, #0x40
100078cc: aa21         	add	r2, sp, #0x84
100078ce: ab28         	add	r3, sp, #0xa0
100078d0: f7ff feb0    	bl	0x10007634 <rp2040_hal::clocks::ClocksManager::init_default::h1c89a7dd006abfe2> @ imm = #-0x2a0
100078d4: f7ff f998    	bl	0x10006c08 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h0fc1151833b4e634E> @ imm = #-0xcd0
100078d8: f7ff fc0f    	bl	0x100070fa <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2103952f23176538E> @ imm = #-0x7e2
100078dc: 4602         	mov	r2, r0
100078de: a82f         	add	r0, sp, #0xbc
100078e0: 7002         	strb	r2, [r0]
100078e2: 7041         	strb	r1, [r0, #0x1]
100078e4: 7800         	ldrb	r0, [r0]
100078e6: 2803         	cmp	r0, #0x3
100078e8: d00b         	beq	0x10007902 <rp2040_hal::clocks::init_clocks_and_plls::h42efc3d0f44e533f+0x156> @ imm = #0x16
100078ea: e01e         	b	0x1000792a <rp2040_hal::clocks::init_clocks_and_plls::h42efc3d0f44e533f+0x17e> @ imm = #0x3c
100078ec: 980c         	ldr	r0, [sp, #0x30]
100078ee: aa29         	add	r2, sp, #0xa4
100078f0: 7851         	ldrb	r1, [r2, #0x1]
100078f2: 7892         	ldrb	r2, [r2, #0x2]
100078f4: ab48         	add	r3, sp, #0x120
100078f6: 7019         	strb	r1, [r3]
100078f8: 705a         	strb	r2, [r3, #0x1]
100078fa: 4b19         	ldr	r3, [pc, #0x64]         @ 0x10007960 <rp2040_hal::clocks::init_clocks_and_plls::h42efc3d0f44e533f+0x1b4>
100078fc: f7fe fc8a    	bl	0x10006214 <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hf1f825079e99d042E> @ imm = #-0x16ec
10007900: e01e         	b	0x10007940 <rp2040_hal::clocks::init_clocks_and_plls::h42efc3d0f44e533f+0x194> @ imm = #0x3c
10007902: ab17         	add	r3, sp, #0x5c
10007904: aa30         	add	r2, sp, #0xc0
10007906: 4610         	mov	r0, r2
10007908: cb32         	ldm	r3!, {r1, r4, r5}
1000790a: c032         	stm	r0!, {r1, r4, r5}
1000790c: cb32         	ldm	r3!, {r1, r4, r5}
1000790e: c032         	stm	r0!, {r1, r4, r5}
10007910: cb72         	ldm	r3!, {r1, r4, r5, r6}
10007912: c072         	stm	r0!, {r1, r4, r5, r6}
10007914: 990c         	ldr	r1, [sp, #0x30]
10007916: 1d08         	adds	r0, r1, #0x4
10007918: ca38         	ldm	r2!, {r3, r4, r5}
1000791a: c038         	stm	r0!, {r3, r4, r5}
1000791c: ca38         	ldm	r2!, {r3, r4, r5}
1000791e: c038         	stm	r0!, {r3, r4, r5}
10007920: ca78         	ldm	r2!, {r3, r4, r5, r6}
10007922: c078         	stm	r0!, {r3, r4, r5, r6}
10007924: 2000         	movs	r0, #0x0
10007926: 7008         	strb	r0, [r1]
10007928: e00a         	b	0x10007940 <rp2040_hal::clocks::init_clocks_and_plls::h42efc3d0f44e533f+0x194> @ imm = #0x14
1000792a: 980c         	ldr	r0, [sp, #0x30]
1000792c: 992f         	ldr	r1, [sp, #0xbc]
1000792e: aa2f         	add	r2, sp, #0xbc
10007930: 7852         	ldrb	r2, [r2, #0x1]
10007932: ab47         	add	r3, sp, #0x11c
10007934: 7019         	strb	r1, [r3]
10007936: 705a         	strb	r2, [r3, #0x1]
10007938: 4b0a         	ldr	r3, [pc, #0x28]         @ 0x10007964 <rp2040_hal::clocks::init_clocks_and_plls::h42efc3d0f44e533f+0x1b8>
1000793a: f7fe fc6b    	bl	0x10006214 <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hf1f825079e99d042E> @ imm = #-0x172a
1000793e: e7ff         	b	0x10007940 <rp2040_hal::clocks::init_clocks_and_plls::h42efc3d0f44e533f+0x194> @ imm = #-0x2
10007940: b04b         	add	sp, #0x12c
10007942: bdf0         	pop	{r4, r5, r6, r7, pc}
10007944: 84 1c 01 10  	.word	0x10011c84
10007948: 40 42 0f 00  	.word	0x000f4240
1000794c: 01 06 02 00  	.word	0x00020601
10007950: 00 2f 68 59  	.word	0x59682f00
10007954: 74 1c 01 10  	.word	0x10011c74
10007958: 01 05 05 00  	.word	0x00050501
1000795c: 00 8c 86 47  	.word	0x47868c00
10007960: 64 1c 01 10  	.word	0x10011c64
10007964: 54 1c 01 10  	.word	0x10011c54

10007968 <rp2040_hal::clocks::fractional_div::hd140809978073745>:
10007968: b580         	push	{r7, lr}
1000796a: af00         	add	r7, sp, #0x0
1000796c: b08e         	sub	sp, #0x38
1000796e: 9007         	str	r0, [sp, #0x1c]
10007970: 9108         	str	r1, [sp, #0x20]
10007972: a808         	add	r0, sp, #0x20
10007974: a907         	add	r1, sp, #0x1c
10007976: f7fe fd0c    	bl	0x10006392 <core::cmp::impls::<impl core::cmp::PartialEq for u32>::eq::h123d2dadff4d0744> @ imm = #-0x15e8
1000797a: 2800         	cmp	r0, #0x0
1000797c: d104         	bne	0x10007988 <rp2040_hal::clocks::fractional_div::hd140809978073745+0x20> @ imm = #0x8
1000797e: e7ff         	b	0x10007980 <rp2040_hal::clocks::fractional_div::hd140809978073745+0x18> @ imm = #-0x2
10007980: 9808         	ldr	r0, [sp, #0x20]
10007982: 2800         	cmp	r0, #0x0
10007984: d010         	beq	0x100079a8 <rp2040_hal::clocks::fractional_div::hd140809978073745+0x40> @ imm = #0x20
10007986: e004         	b	0x10007992 <rp2040_hal::clocks::fractional_div::hd140809978073745+0x2a> @ imm = #0x8
10007988: 2001         	movs	r0, #0x1
1000798a: 0201         	lsls	r1, r0, #0x8
1000798c: 910a         	str	r1, [sp, #0x28]
1000798e: 9009         	str	r0, [sp, #0x24]
10007990: e05e         	b	0x10007a50 <rp2040_hal::clocks::fractional_div::hd140809978073745+0xe8> @ imm = #0xbc
10007992: 9807         	ldr	r0, [sp, #0x1c]
10007994: 9908         	ldr	r1, [sp, #0x20]
10007996: f005 ff01    	bl	0x1000d79c <__aeabi_uidiv> @ imm = #0x5e02
1000799a: 4601         	mov	r1, r0
1000799c: 9106         	str	r1, [sp, #0x18]
1000799e: 900c         	str	r0, [sp, #0x30]
100079a0: 0e00         	lsrs	r0, r0, #0x18
100079a2: 2800         	cmp	r0, #0x0
100079a4: d10f         	bne	0x100079c6 <rp2040_hal::clocks::fractional_div::hd140809978073745+0x5e> @ imm = #0x1e
100079a6: e002         	b	0x100079ae <rp2040_hal::clocks::fractional_div::hd140809978073745+0x46> @ imm = #0x4
100079a8: 4830         	ldr	r0, [pc, #0xc0]         @ 0x10007a6c <rp2040_hal::clocks::fractional_div::hd140809978073745+0x104>
100079aa: f005 fd89    	bl	0x1000d4c0 <core::panicking::panic_const::panic_const_div_by_zero::ha09f740279da4cf0> @ imm = #0x5b12
100079ae: 9806         	ldr	r0, [sp, #0x18]
100079b0: 9a08         	ldr	r2, [sp, #0x20]
100079b2: 2300         	movs	r3, #0x0
100079b4: 4619         	mov	r1, r3
100079b6: f005 ffc8    	bl	0x1000d94a <__aeabi_lmul> @ imm = #0x5f90
100079ba: 1e4a         	subs	r2, r1, #0x1
100079bc: 4191         	sbcs	r1, r2
100079be: 9005         	str	r0, [sp, #0x14]
100079c0: 2900         	cmp	r1, #0x0
100079c2: d10a         	bne	0x100079da <rp2040_hal::clocks::fractional_div::hd140809978073745+0x72> @ imm = #0x14
100079c4: e002         	b	0x100079cc <rp2040_hal::clocks::fractional_div::hd140809978073745+0x64> @ imm = #0x4
100079c6: 2000         	movs	r0, #0x0
100079c8: 9009         	str	r0, [sp, #0x24]
100079ca: e041         	b	0x10007a50 <rp2040_hal::clocks::fractional_div::hd140809978073745+0xe8> @ imm = #0x82
100079cc: 9905         	ldr	r1, [sp, #0x14]
100079ce: 9807         	ldr	r0, [sp, #0x1c]
100079d0: 1a42         	subs	r2, r0, r1
100079d2: 9204         	str	r2, [sp, #0x10]
100079d4: 4288         	cmp	r0, r1
100079d6: d309         	blo	0x100079ec <rp2040_hal::clocks::fractional_div::hd140809978073745+0x84> @ imm = #0x12
100079d8: e002         	b	0x100079e0 <rp2040_hal::clocks::fractional_div::hd140809978073745+0x78> @ imm = #0x4
100079da: 4823         	ldr	r0, [pc, #0x8c]         @ 0x10007a68 <rp2040_hal::clocks::fractional_div::hd140809978073745+0x100>
100079dc: f005 fd4c    	bl	0x1000d478 <core::panicking::panic_const::panic_const_mul_overflow::hdb56fe2dcc791345> @ imm = #0x5a98
100079e0: 9804         	ldr	r0, [sp, #0x10]
100079e2: 900d         	str	r0, [sp, #0x34]
100079e4: 0e00         	lsrs	r0, r0, #0x18
100079e6: 2800         	cmp	r0, #0x0
100079e8: d009         	beq	0x100079fe <rp2040_hal::clocks::fractional_div::hd140809978073745+0x96> @ imm = #0x12
100079ea: e002         	b	0x100079f2 <rp2040_hal::clocks::fractional_div::hd140809978073745+0x8a> @ imm = #0x4
100079ec: 481d         	ldr	r0, [pc, #0x74]         @ 0x10007a64 <rp2040_hal::clocks::fractional_div::hd140809978073745+0xfc>
100079ee: f005 fd31    	bl	0x1000d454 <core::panicking::panic_const::panic_const_sub_overflow::hcef9c8e46a564551> @ imm = #0x5a62
100079f2: 9808         	ldr	r0, [sp, #0x20]
100079f4: 0a00         	lsrs	r0, r0, #0x8
100079f6: 9003         	str	r0, [sp, #0xc]
100079f8: 2800         	cmp	r0, #0x0
100079fa: d00d         	beq	0x10007a18 <rp2040_hal::clocks::fractional_div::hd140809978073745+0xb0> @ imm = #0x1a
100079fc: e006         	b	0x10007a0c <rp2040_hal::clocks::fractional_div::hd140809978073745+0xa4> @ imm = #0xc
100079fe: 9804         	ldr	r0, [sp, #0x10]
10007a00: 0200         	lsls	r0, r0, #0x8
10007a02: 9002         	str	r0, [sp, #0x8]
10007a04: 9808         	ldr	r0, [sp, #0x20]
10007a06: 2800         	cmp	r0, #0x0
10007a08: d017         	beq	0x10007a3a <rp2040_hal::clocks::fractional_div::hd140809978073745+0xd2> @ imm = #0x2e
10007a0a: e010         	b	0x10007a2e <rp2040_hal::clocks::fractional_div::hd140809978073745+0xc6> @ imm = #0x20
10007a0c: 9903         	ldr	r1, [sp, #0xc]
10007a0e: 9804         	ldr	r0, [sp, #0x10]
10007a10: f005 fec4    	bl	0x1000d79c <__aeabi_uidiv> @ imm = #0x5d88
10007a14: 900b         	str	r0, [sp, #0x2c]
10007a16: e002         	b	0x10007a1e <rp2040_hal::clocks::fractional_div::hd140809978073745+0xb6> @ imm = #0x4
10007a18: 480f         	ldr	r0, [pc, #0x3c]         @ 0x10007a58 <rp2040_hal::clocks::fractional_div::hd140809978073745+0xf0>
10007a1a: f005 fd51    	bl	0x1000d4c0 <core::panicking::panic_const::panic_const_div_by_zero::ha09f740279da4cf0> @ imm = #0x5aa2
10007a1e: 9806         	ldr	r0, [sp, #0x18]
10007a20: 0201         	lsls	r1, r0, #0x8
10007a22: 980b         	ldr	r0, [sp, #0x2c]
10007a24: 1808         	adds	r0, r1, r0
10007a26: 9001         	str	r0, [sp, #0x4]
10007a28: 4288         	cmp	r0, r1
10007a2a: d30e         	blo	0x10007a4a <rp2040_hal::clocks::fractional_div::hd140809978073745+0xe2> @ imm = #0x1c
10007a2c: e008         	b	0x10007a40 <rp2040_hal::clocks::fractional_div::hd140809978073745+0xd8> @ imm = #0x10
10007a2e: 9802         	ldr	r0, [sp, #0x8]
10007a30: 9908         	ldr	r1, [sp, #0x20]
10007a32: f005 feb3    	bl	0x1000d79c <__aeabi_uidiv> @ imm = #0x5d66
10007a36: 900b         	str	r0, [sp, #0x2c]
10007a38: e7f1         	b	0x10007a1e <rp2040_hal::clocks::fractional_div::hd140809978073745+0xb6> @ imm = #-0x1e
10007a3a: 4809         	ldr	r0, [pc, #0x24]         @ 0x10007a60 <rp2040_hal::clocks::fractional_div::hd140809978073745+0xf8>
10007a3c: f005 fd40    	bl	0x1000d4c0 <core::panicking::panic_const::panic_const_div_by_zero::ha09f740279da4cf0> @ imm = #0x5a80
10007a40: 9801         	ldr	r0, [sp, #0x4]
10007a42: 900a         	str	r0, [sp, #0x28]
10007a44: 2001         	movs	r0, #0x1
10007a46: 9009         	str	r0, [sp, #0x24]
10007a48: e002         	b	0x10007a50 <rp2040_hal::clocks::fractional_div::hd140809978073745+0xe8> @ imm = #0x4
10007a4a: 4804         	ldr	r0, [pc, #0x10]         @ 0x10007a5c <rp2040_hal::clocks::fractional_div::hd140809978073745+0xf4>
10007a4c: f005 fcf0    	bl	0x1000d430 <core::panicking::panic_const::panic_const_add_overflow::h73b6e802431fc142> @ imm = #0x59e0
10007a50: 9809         	ldr	r0, [sp, #0x24]
10007a52: 990a         	ldr	r1, [sp, #0x28]
10007a54: b00e         	add	sp, #0x38
10007a56: bd80         	pop	{r7, pc}
10007a58: c4 1c 01 10  	.word	0x10011cc4
10007a5c: e4 1c 01 10  	.word	0x10011ce4
10007a60: d4 1c 01 10  	.word	0x10011cd4
10007a64: b4 1c 01 10  	.word	0x10011cb4
10007a68: a4 1c 01 10  	.word	0x10011ca4
10007a6c: 94 1c 01 10  	.word	0x10011c94

10007a70 <<rp2040_hal::critical_section_impl::RpSpinlockCs as critical_section::Impl>::acquire::h5203de78caa15032>:
10007a70: b580         	push	{r7, lr}
10007a72: af00         	add	r7, sp, #0x0
10007a74: f000 f80a    	bl	0x10007a8c <rp2040_hal::critical_section_impl::RpSpinlockCs::acquire::h371a9a321acbfd66> @ imm = #0x14
10007a78: bd80         	pop	{r7, pc}

10007a7a <<rp2040_hal::critical_section_impl::RpSpinlockCs as critical_section::Impl>::release::ha39b8ce8c5a5f2e6>:
10007a7a: b580         	push	{r7, lr}
10007a7c: af00         	add	r7, sp, #0x0
10007a7e: b082         	sub	sp, #0x8
10007a80: a901         	add	r1, sp, #0x4
10007a82: 7008         	strb	r0, [r1]
10007a84: f000 f866    	bl	0x10007b54 <rp2040_hal::critical_section_impl::RpSpinlockCs::release::hf946b5a537b4658e> @ imm = #0xcc
10007a88: b002         	add	sp, #0x8
10007a8a: bd80         	pop	{r7, pc}

10007a8c <rp2040_hal::critical_section_impl::RpSpinlockCs::acquire::h371a9a321acbfd66>:
10007a8c: b580         	push	{r7, lr}
10007a8e: af00         	add	r7, sp, #0x0
10007a90: b08c         	sub	sp, #0x30
10007a92: f7ff fd03    	bl	0x1000749c <cortex_m::register::primask::read::h7485882dbcb8be77> @ imm = #-0x5fa
10007a96: f7ff fd19    	bl	0x100074cc <cortex_m::register::primask::Primask::is_active::h0aa28a840c0ee486> @ imm = #-0x5ce
10007a9a: 4601         	mov	r1, r0
10007a9c: 9102         	str	r1, [sp, #0x8]
10007a9e: a90a         	add	r1, sp, #0x28
10007aa0: 7008         	strb	r0, [r1]
10007aa2: f001 f917    	bl	0x10008cd4 <rp2040_hal::sio::Sio::core::h96af296b85c54a41> @ imm = #0x122e
10007aa6: a905         	add	r1, sp, #0x14
10007aa8: 7008         	strb	r0, [r1]
10007aaa: 9805         	ldr	r0, [sp, #0x14]
10007aac: 1c40         	adds	r0, r0, #0x1
10007aae: 9003         	str	r0, [sp, #0xc]
10007ab0: 2000         	movs	r0, #0x0
10007ab2: 2800         	cmp	r0, #0x0
10007ab4: d111         	bne	0x10007ada <rp2040_hal::critical_section_impl::RpSpinlockCs::acquire::h371a9a321acbfd66+0x4e> @ imm = #0x22
10007ab6: e7ff         	b	0x10007ab8 <rp2040_hal::critical_section_impl::RpSpinlockCs::acquire::h371a9a321acbfd66+0x2c> @ imm = #-0x2
10007ab8: 9803         	ldr	r0, [sp, #0xc]
10007aba: a90b         	add	r1, sp, #0x2c
10007abc: 7008         	strb	r0, [r1]
10007abe: b2c0         	uxtb	r0, r0
10007ac0: 9001         	str	r0, [sp, #0x4]
10007ac2: a906         	add	r1, sp, #0x18
10007ac4: 2002         	movs	r0, #0x2
10007ac6: 7008         	strb	r0, [r1]
10007ac8: 9906         	ldr	r1, [sp, #0x18]
10007aca: 4820         	ldr	r0, [pc, #0x80]         @ 0x10007b4c <rp2040_hal::critical_section_impl::RpSpinlockCs::acquire::h371a9a321acbfd66+0xc0>
10007acc: f7ff f84a    	bl	0x10006b64 <core::sync::atomic::AtomicU8::load::h3c1a4ae555ddf19c> @ imm = #-0xf6c
10007ad0: 9901         	ldr	r1, [sp, #0x4]
10007ad2: b2c0         	uxtb	r0, r0
10007ad4: 4288         	cmp	r0, r1
10007ad6: d016         	beq	0x10007b06 <rp2040_hal::critical_section_impl::RpSpinlockCs::acquire::h371a9a321acbfd66+0x7a> @ imm = #0x2c
10007ad8: e002         	b	0x10007ae0 <rp2040_hal::critical_section_impl::RpSpinlockCs::acquire::h371a9a321acbfd66+0x54> @ imm = #0x4
10007ada: 481d         	ldr	r0, [pc, #0x74]         @ 0x10007b50 <rp2040_hal::critical_section_impl::RpSpinlockCs::acquire::h371a9a321acbfd66+0xc4>
10007adc: f005 fca8    	bl	0x1000d430 <core::panicking::panic_const::panic_const_add_overflow::h73b6e802431fc142> @ imm = #0x5950
10007ae0: f7ff fd07    	bl	0x100074f2 <cortex_m::interrupt::disable::h2d872fa5469678fd> @ imm = #-0x5f2
10007ae4: a907         	add	r1, sp, #0x1c
10007ae6: 2004         	movs	r0, #0x4
10007ae8: 7008         	strb	r0, [r1]
10007aea: 9807         	ldr	r0, [sp, #0x1c]
10007aec: f7ff f808    	bl	0x10006b00 <core::sync::atomic::compiler_fence::hdda169e65ad36249> @ imm = #-0xff0
10007af0: f001 f926    	bl	0x10008d40 <rp2040_hal::sio::Spinlock<_>::try_claim::h05cb952823ebb363> @ imm = #0x124c
10007af4: 4601         	mov	r1, r0
10007af6: a808         	add	r0, sp, #0x20
10007af8: 7001         	strb	r1, [r0]
10007afa: 7800         	ldrb	r0, [r0]
10007afc: 2101         	movs	r1, #0x1
10007afe: 4008         	ands	r0, r1
10007b00: 2801         	cmp	r0, #0x1
10007b02: d004         	beq	0x10007b0e <rp2040_hal::critical_section_impl::RpSpinlockCs::acquire::h371a9a321acbfd66+0x82> @ imm = #0x8
10007b04: e013         	b	0x10007b2e <rp2040_hal::critical_section_impl::RpSpinlockCs::acquire::h371a9a321acbfd66+0xa2> @ imm = #0x26
10007b06: a904         	add	r1, sp, #0x10
10007b08: 2002         	movs	r0, #0x2
10007b0a: 7008         	strb	r0, [r1]
10007b0c: e017         	b	0x10007b3e <rp2040_hal::critical_section_impl::RpSpinlockCs::acquire::h371a9a321acbfd66+0xb2> @ imm = #0x2e
10007b0e: f7fe fc60    	bl	0x100063d2 <core::mem::forget::hde0ad32334bb0e8d> @ imm = #-0x1740
10007b12: 9903         	ldr	r1, [sp, #0xc]
10007b14: aa09         	add	r2, sp, #0x24
10007b16: 2000         	movs	r0, #0x0
10007b18: 7010         	strb	r0, [r2]
10007b1a: 9a09         	ldr	r2, [sp, #0x24]
10007b1c: 480b         	ldr	r0, [pc, #0x2c]         @ 0x10007b4c <rp2040_hal::critical_section_impl::RpSpinlockCs::acquire::h371a9a321acbfd66+0xc0>
10007b1e: f7ff f82c    	bl	0x10006b7a <core::sync::atomic::AtomicU8::store::haaab84d7cd226e79> @ imm = #-0xfa8
10007b22: 9802         	ldr	r0, [sp, #0x8]
10007b24: 2101         	movs	r1, #0x1
10007b26: 4008         	ands	r0, r1
10007b28: a904         	add	r1, sp, #0x10
10007b2a: 7008         	strb	r0, [r1]
10007b2c: e007         	b	0x10007b3e <rp2040_hal::critical_section_impl::RpSpinlockCs::acquire::h371a9a321acbfd66+0xb2> @ imm = #0xe
10007b2e: a808         	add	r0, sp, #0x20
10007b30: f7fe ff1b    	bl	0x1000696a <core::ptr::drop_in_place<core::option::Option<rp2040_hal::sio::Spinlock<31_usize>>>::h38813bd545f348d3> @ imm = #-0x11ca
10007b34: 9802         	ldr	r0, [sp, #0x8]
10007b36: 07c0         	lsls	r0, r0, #0x1f
10007b38: 2800         	cmp	r0, #0x0
10007b3a: d103         	bne	0x10007b44 <rp2040_hal::critical_section_impl::RpSpinlockCs::acquire::h371a9a321acbfd66+0xb8> @ imm = #0x6
10007b3c: e7d0         	b	0x10007ae0 <rp2040_hal::critical_section_impl::RpSpinlockCs::acquire::h371a9a321acbfd66+0x54> @ imm = #-0x60
10007b3e: 9804         	ldr	r0, [sp, #0x10]
10007b40: b00c         	add	sp, #0x30
10007b42: bd80         	pop	{r7, pc}
10007b44: f7ff fcd0    	bl	0x100074e8 <cortex_m::interrupt::enable::hf3f6b4ab1d70edf9> @ imm = #-0x660
10007b48: e7ca         	b	0x10007ae0 <rp2040_hal::critical_section_impl::RpSpinlockCs::acquire::h371a9a321acbfd66+0x54> @ imm = #-0x6c
10007b4a: 46c0         	mov	r8, r8
10007b4c: f7 fb 03 20  	.word	0x2003fbf7
10007b50: 64 1d 01 10  	.word	0x10011d64

10007b54 <rp2040_hal::critical_section_impl::RpSpinlockCs::release::hf946b5a537b4658e>:
10007b54: b580         	push	{r7, lr}
10007b56: af00         	add	r7, sp, #0x0
10007b58: b084         	sub	sp, #0x10
10007b5a: 4601         	mov	r1, r0
10007b5c: b2c8         	uxtb	r0, r1
10007b5e: 460a         	mov	r2, r1
10007b60: 9200         	str	r2, [sp]
10007b62: aa03         	add	r2, sp, #0xc
10007b64: 7011         	strb	r1, [r2]
10007b66: 2802         	cmp	r0, #0x2
10007b68: d102         	bne	0x10007b70 <rp2040_hal::critical_section_impl::RpSpinlockCs::release::hf946b5a537b4658e+0x1c> @ imm = #0x4
10007b6a: e7ff         	b	0x10007b6c <rp2040_hal::critical_section_impl::RpSpinlockCs::release::hf946b5a537b4658e+0x18> @ imm = #-0x2
10007b6c: b004         	add	sp, #0x10
10007b6e: bd80         	pop	{r7, pc}
10007b70: a801         	add	r0, sp, #0x4
10007b72: 2100         	movs	r1, #0x0
10007b74: 7001         	strb	r1, [r0]
10007b76: 9a01         	ldr	r2, [sp, #0x4]
10007b78: 4809         	ldr	r0, [pc, #0x24]         @ 0x10007ba0 <rp2040_hal::critical_section_impl::RpSpinlockCs::release::hf946b5a537b4658e+0x4c>
10007b7a: f7fe fffe    	bl	0x10006b7a <core::sync::atomic::AtomicU8::store::haaab84d7cd226e79> @ imm = #-0x1004
10007b7e: a902         	add	r1, sp, #0x8
10007b80: 2004         	movs	r0, #0x4
10007b82: 7008         	strb	r0, [r1]
10007b84: 9802         	ldr	r0, [sp, #0x8]
10007b86: f7fe ffbb    	bl	0x10006b00 <core::sync::atomic::compiler_fence::hdda169e65ad36249> @ imm = #-0x108a
10007b8a: f001 f8ff    	bl	0x10008d8c <rp2040_hal::sio::Spinlock<_>::release::he028d7853796905f> @ imm = #0x11fe
10007b8e: 9800         	ldr	r0, [sp]
10007b90: 0600         	lsls	r0, r0, #0x18
10007b92: 2800         	cmp	r0, #0x0
10007b94: d0ea         	beq	0x10007b6c <rp2040_hal::critical_section_impl::RpSpinlockCs::release::hf946b5a537b4658e+0x18> @ imm = #-0x2c
10007b96: e7ff         	b	0x10007b98 <rp2040_hal::critical_section_impl::RpSpinlockCs::release::hf946b5a537b4658e+0x44> @ imm = #-0x2
10007b98: f7ff fca6    	bl	0x100074e8 <cortex_m::interrupt::enable::hf3f6b4ab1d70edf9> @ imm = #-0x6b4
10007b9c: e7e6         	b	0x10007b6c <rp2040_hal::critical_section_impl::RpSpinlockCs::release::hf946b5a537b4658e+0x18> @ imm = #-0x34
10007b9e: 46c0         	mov	r8, r8
10007ba0: f7 fb 03 20  	.word	0x2003fbf7

10007ba4 <rp2040_hal::gpio::Interrupt::mask::hb23e29b796f550a4>:
10007ba4: b580         	push	{r7, lr}
10007ba6: af00         	add	r7, sp, #0x0
10007ba8: b083         	sub	sp, #0xc
10007baa: 9002         	str	r0, [sp, #0x8]
10007bac: 7800         	ldrb	r0, [r0]
10007bae: 9000         	str	r0, [sp]
10007bb0: 9800         	ldr	r0, [sp]
10007bb2: 0081         	lsls	r1, r0, #0x2
10007bb4: a001         	adr	r0, #4 <rp2040_hal::gpio::Interrupt::mask::hb23e29b796f550a4+0x15>
10007bb6: 5840         	ldr	r0, [r0, r1]
10007bb8: 4687         	mov	pc, r0
10007bba: 46c0         	mov	r8, r8
10007bbc: cf 7b 00 10  	.word	0x10007bcf
10007bc0: d5 7b 00 10  	.word	0x10007bd5
10007bc4: db 7b 00 10  	.word	0x10007bdb
10007bc8: e1 7b 00 10  	.word	0x10007be1
10007bcc: defe         	trap
10007bce: 2001         	movs	r0, #0x1
10007bd0: 9001         	str	r0, [sp, #0x4]
10007bd2: e008         	b	0x10007be6 <rp2040_hal::gpio::Interrupt::mask::hb23e29b796f550a4+0x42> @ imm = #0x10
10007bd4: 2002         	movs	r0, #0x2
10007bd6: 9001         	str	r0, [sp, #0x4]
10007bd8: e005         	b	0x10007be6 <rp2040_hal::gpio::Interrupt::mask::hb23e29b796f550a4+0x42> @ imm = #0xa
10007bda: 2004         	movs	r0, #0x4
10007bdc: 9001         	str	r0, [sp, #0x4]
10007bde: e002         	b	0x10007be6 <rp2040_hal::gpio::Interrupt::mask::hb23e29b796f550a4+0x42> @ imm = #0x4
10007be0: 2008         	movs	r0, #0x8
10007be2: 9001         	str	r0, [sp, #0x4]
10007be4: e7ff         	b	0x10007be6 <rp2040_hal::gpio::Interrupt::mask::hb23e29b796f550a4+0x42> @ imm = #-0x2
10007be6: 9801         	ldr	r0, [sp, #0x4]
10007be8: b003         	add	sp, #0xc
10007bea: bd80         	pop	{r7, pc}

10007bec <rp2040_hal::pll::PhaseLockedLoop<S,D>::transition::h2ac842ceac199b77>:
10007bec: b580         	push	{r7, lr}
10007bee: af00         	add	r7, sp, #0x0
10007bf0: 4601         	mov	r1, r0
10007bf2: 6850         	ldr	r0, [r2, #0x4]
10007bf4: 6048         	str	r0, [r1, #0x4]
10007bf6: 6810         	ldr	r0, [r2]
10007bf8: 6008         	str	r0, [r1]
10007bfa: bd80         	pop	{r7, pc}

10007bfc <rp2040_hal::pll::PhaseLockedLoop<S,D>::transition::h48522e0ad69083ad>:
10007bfc: b580         	push	{r7, lr}
10007bfe: af00         	add	r7, sp, #0x0
10007c00: 4601         	mov	r1, r0
10007c02: 6850         	ldr	r0, [r2, #0x4]
10007c04: 6048         	str	r0, [r1, #0x4]
10007c06: 6810         	ldr	r0, [r2]
10007c08: 6008         	str	r0, [r1]
10007c0a: bd80         	pop	{r7, pc}

10007c0c <rp2040_hal::pll::PhaseLockedLoop<S,D>::transition::h71423d422de1126f>:
10007c0c: b580         	push	{r7, lr}
10007c0e: af00         	add	r7, sp, #0x0
10007c10: b081         	sub	sp, #0x4
10007c12: 4608         	mov	r0, r1
10007c14: 9000         	str	r0, [sp]
10007c16: b001         	add	sp, #0x4
10007c18: bd80         	pop	{r7, pc}

10007c1a <rp2040_hal::pll::PhaseLockedLoop<S,D>::transition::hb05f7070c090dfe9>:
10007c1a: b580         	push	{r7, lr}
10007c1c: af00         	add	r7, sp, #0x0
10007c1e: b081         	sub	sp, #0x4
10007c20: 4608         	mov	r0, r1
10007c22: 9000         	str	r0, [sp]
10007c24: b001         	add	sp, #0x4
10007c26: bd80         	pop	{r7, pc}

10007c28 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d>:
10007c28: b5f0         	push	{r4, r5, r6, r7, lr}
10007c2a: af03         	add	r7, sp, #0xc
10007c2c: b0bf         	sub	sp, #0xfc
10007c2e: 920e         	str	r2, [sp, #0x38]
10007c30: 900f         	str	r0, [sp, #0x3c]
10007c32: 9110         	str	r1, [sp, #0x40]
10007c34: 6810         	ldr	r0, [r2]
10007c36: 9011         	str	r0, [sp, #0x44]
10007c38: 488f         	ldr	r0, [pc, #0x23c]        @ 0x10007e78 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0x250>
10007c3a: a911         	add	r1, sp, #0x44
10007c3c: f7fe fe65    	bl	0x1000690a <core::ops::range::RangeInclusive<Idx>::contains::h616873688289eeed> @ imm = #-0x1336
10007c40: 2800         	cmp	r0, #0x0
10007c42: d109         	bne	0x10007c58 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0x30> @ imm = #0x12
10007c44: e7ff         	b	0x10007c46 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0x1e> @ imm = #-0x2
10007c46: 990f         	ldr	r1, [sp, #0x3c]
10007c48: aa12         	add	r2, sp, #0x48
10007c4a: 2000         	movs	r0, #0x0
10007c4c: 7010         	strb	r0, [r2]
10007c4e: 9812         	ldr	r0, [sp, #0x48]
10007c50: 7048         	strb	r0, [r1, #0x1]
10007c52: 2001         	movs	r0, #0x1
10007c54: 7008         	strb	r0, [r1]
10007c56: e007         	b	0x10007c68 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0x40> @ imm = #0xe
10007c58: 980e         	ldr	r0, [sp, #0x38]
10007c5a: 1d41         	adds	r1, r0, #0x5
10007c5c: 4887         	ldr	r0, [pc, #0x21c]        @ 0x10007e7c <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0x254>
10007c5e: f7fe fe3d    	bl	0x100068dc <core::ops::range::Range<Idx>::contains::h7667663c9e3b648d> @ imm = #-0x1386
10007c62: 2800         	cmp	r0, #0x0
10007c64: d10a         	bne	0x10007c7c <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0x54> @ imm = #0x14
10007c66: e000         	b	0x10007c6a <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0x42> @ imm = #0x0
10007c68: e104         	b	0x10007e74 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0x24c> @ imm = #0x208
10007c6a: 990f         	ldr	r1, [sp, #0x3c]
10007c6c: aa13         	add	r2, sp, #0x4c
10007c6e: 2002         	movs	r0, #0x2
10007c70: 7010         	strb	r0, [r2]
10007c72: 9813         	ldr	r0, [sp, #0x4c]
10007c74: 7048         	strb	r0, [r1, #0x1]
10007c76: 2001         	movs	r0, #0x1
10007c78: 7008         	strb	r0, [r1]
10007c7a: e7f5         	b	0x10007c68 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0x40> @ imm = #-0x16
10007c7c: 980e         	ldr	r0, [sp, #0x38]
10007c7e: 1d81         	adds	r1, r0, #0x6
10007c80: 487e         	ldr	r0, [pc, #0x1f8]        @ 0x10007e7c <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0x254>
10007c82: f7fe fe2b    	bl	0x100068dc <core::ops::range::Range<Idx>::contains::h7667663c9e3b648d> @ imm = #-0x13aa
10007c86: 2800         	cmp	r0, #0x0
10007c88: d0ef         	beq	0x10007c6a <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0x42> @ imm = #-0x22
10007c8a: e7ff         	b	0x10007c8c <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0x64> @ imm = #-0x2
10007c8c: a811         	add	r0, sp, #0x44
10007c8e: f7ff f96d    	bl	0x10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868> @ imm = #-0xd26
10007c92: 0900         	lsrs	r0, r0, #0x4
10007c94: f7fe faed    	bl	0x10006272 <<u32 as fugit::rate::ExtU32>::Hz::ha421d0a6a3793ef2> @ imm = #-0x1a26
10007c98: 900a         	str	r0, [sp, #0x28]
10007c9a: 902e         	str	r0, [sp, #0xb8]
10007c9c: 2005         	movs	r0, #0x5
10007c9e: f7ff f949    	bl	0x10006f34 <fugit::rate::Rate<u32,_,_>::MHz::h9ff0be67f59ed89b> @ imm = #-0xd6e
10007ca2: 4601         	mov	r1, r0
10007ca4: 980a         	ldr	r0, [sp, #0x28]
10007ca6: 9114         	str	r1, [sp, #0x50]
10007ca8: 9015         	str	r0, [sp, #0x54]
10007caa: a810         	add	r0, sp, #0x40
10007cac: f7ff f95e    	bl	0x10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868> @ imm = #-0xd44
10007cb0: 990e         	ldr	r1, [sp, #0x38]
10007cb2: 7909         	ldrb	r1, [r1, #0x4]
10007cb4: aa3d         	add	r2, sp, #0xf4
10007cb6: 7011         	strb	r1, [r2]
10007cb8: f7fe fb90    	bl	0x100063dc <core::num::<impl u32>::checked_div::h75503584a2445bab> @ imm = #-0x18e0
10007cbc: 900b         	str	r0, [sp, #0x2c]
10007cbe: 460a         	mov	r2, r1
10007cc0: 990b         	ldr	r1, [sp, #0x2c]
10007cc2: ab1b         	add	r3, sp, #0x6c
10007cc4: 2004         	movs	r0, #0x4
10007cc6: 7018         	strb	r0, [r3]
10007cc8: 9b1b         	ldr	r3, [sp, #0x6c]
10007cca: a819         	add	r0, sp, #0x64
10007ccc: 900c         	str	r0, [sp, #0x30]
10007cce: f7fe ff7e    	bl	0x10006bce <core::option::Option<T>::ok_or::hf91b7b3e8860dec5> @ imm = #-0x1104
10007cd2: 990c         	ldr	r1, [sp, #0x30]
10007cd4: a817         	add	r0, sp, #0x5c
10007cd6: 900d         	str	r0, [sp, #0x34]
10007cd8: f7ff fac3    	bl	0x10007262 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb02f20c0be08b8a3E> @ imm = #-0xa7a
10007cdc: 980d         	ldr	r0, [sp, #0x34]
10007cde: 7800         	ldrb	r0, [r0]
10007ce0: 07c0         	lsls	r0, r0, #0x1f
10007ce2: 2800         	cmp	r0, #0x0
10007ce4: d10c         	bne	0x10007d00 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0xd8> @ imm = #0x18
10007ce6: e7ff         	b	0x10007ce8 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0xc0> @ imm = #-0x2
10007ce8: 9818         	ldr	r0, [sp, #0x60]
10007cea: 902f         	str	r0, [sp, #0xbc]
10007cec: f7fe fac1    	bl	0x10006272 <<u32 as fugit::rate::ExtU32>::Hz::ha421d0a6a3793ef2> @ imm = #-0x1a7e
10007cf0: 9016         	str	r0, [sp, #0x58]
10007cf2: a814         	add	r0, sp, #0x50
10007cf4: a916         	add	r1, sp, #0x58
10007cf6: f7fe fddf    	bl	0x100068b8 <core::ops::range::Range<Idx>::contains::h0e305a4135904b9b> @ imm = #-0x1442
10007cfa: 2800         	cmp	r0, #0x0
10007cfc: d112         	bne	0x10007d24 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0xfc> @ imm = #0x24
10007cfe: e008         	b	0x10007d12 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0xea> @ imm = #0x10
10007d00: 980f         	ldr	r0, [sp, #0x3c]
10007d02: a917         	add	r1, sp, #0x5c
10007d04: 7849         	ldrb	r1, [r1, #0x1]
10007d06: aa3a         	add	r2, sp, #0xe8
10007d08: 7011         	strb	r1, [r2]
10007d0a: 4a5d         	ldr	r2, [pc, #0x174]        @ 0x10007e80 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0x258>
10007d0c: f7fe fa3d    	bl	0x1000618a <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4782261a30384dafE> @ imm = #-0x1b86
10007d10: e7aa         	b	0x10007c68 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0x40> @ imm = #-0xac
10007d12: 990f         	ldr	r1, [sp, #0x3c]
10007d14: aa1c         	add	r2, sp, #0x70
10007d16: 2003         	movs	r0, #0x3
10007d18: 7010         	strb	r0, [r2]
10007d1a: 981c         	ldr	r0, [sp, #0x70]
10007d1c: 7048         	strb	r0, [r1, #0x1]
10007d1e: 2001         	movs	r0, #0x1
10007d20: 7008         	strb	r0, [r1]
10007d22: e7a1         	b	0x10007c68 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0x40> @ imm = #-0xbe
10007d24: a811         	add	r0, sp, #0x44
10007d26: f7ff f921    	bl	0x10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868> @ imm = #-0xdbe
10007d2a: 9006         	str	r0, [sp, #0x18]
10007d2c: a816         	add	r0, sp, #0x58
10007d2e: f7ff f91d    	bl	0x10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868> @ imm = #-0xdc6
10007d32: 4601         	mov	r1, r0
10007d34: 9806         	ldr	r0, [sp, #0x18]
10007d36: f7fe fb51    	bl	0x100063dc <core::num::<impl u32>::checked_div::h75503584a2445bab> @ imm = #-0x195e
10007d3a: 9007         	str	r0, [sp, #0x1c]
10007d3c: 460a         	mov	r2, r1
10007d3e: 9907         	ldr	r1, [sp, #0x1c]
10007d40: ab21         	add	r3, sp, #0x84
10007d42: 2004         	movs	r0, #0x4
10007d44: 7018         	strb	r0, [r3]
10007d46: 9b21         	ldr	r3, [sp, #0x84]
10007d48: a81f         	add	r0, sp, #0x7c
10007d4a: 9008         	str	r0, [sp, #0x20]
10007d4c: f7fe ff3f    	bl	0x10006bce <core::option::Option<T>::ok_or::hf91b7b3e8860dec5> @ imm = #-0x1182
10007d50: 9908         	ldr	r1, [sp, #0x20]
10007d52: a81d         	add	r0, sp, #0x74
10007d54: 9009         	str	r0, [sp, #0x24]
10007d56: f7ff fa84    	bl	0x10007262 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb02f20c0be08b8a3E> @ imm = #-0xaf8
10007d5a: 9809         	ldr	r0, [sp, #0x24]
10007d5c: 7800         	ldrb	r0, [r0]
10007d5e: 07c0         	lsls	r0, r0, #0x1f
10007d60: 2800         	cmp	r0, #0x0
10007d62: d117         	bne	0x10007d94 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0x16c> @ imm = #0x2e
10007d64: e7ff         	b	0x10007d66 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0x13e> @ imm = #-0x2
10007d66: 981e         	ldr	r0, [sp, #0x78]
10007d68: 9030         	str	r0, [sp, #0xc0]
10007d6a: f7ff f86d    	bl	0x10006e48 <<T as core::convert::TryInto<U>>::try_into::ha57f9a712ea47f27> @ imm = #-0xf26
10007d6e: f7fe fff0    	bl	0x10006d52 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hd8ac9fd82722e124E> @ imm = #-0x1020
10007d72: 9031         	str	r0, [sp, #0xc4]
10007d74: 9831         	ldr	r0, [sp, #0xc4]
10007d76: 9024         	str	r0, [sp, #0x90]
10007d78: 9824         	ldr	r0, [sp, #0x90]
10007d7a: 9032         	str	r0, [sp, #0xc8]
10007d7c: 9832         	ldr	r0, [sp, #0xc8]
10007d7e: f7ff fab5    	bl	0x100072ec <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb59c43546539695dE> @ imm = #-0xa96
10007d82: 9033         	str	r0, [sp, #0xcc]
10007d84: 9833         	ldr	r0, [sp, #0xcc]
10007d86: 9023         	str	r0, [sp, #0x8c]
10007d88: a823         	add	r0, sp, #0x8c
10007d8a: 7800         	ldrb	r0, [r0]
10007d8c: 07c0         	lsls	r0, r0, #0x1f
10007d8e: 2800         	cmp	r0, #0x0
10007d90: d009         	beq	0x10007da6 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0x17e> @ imm = #0x12
10007d92: e015         	b	0x10007dc0 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0x198> @ imm = #0x2a
10007d94: 980f         	ldr	r0, [sp, #0x3c]
10007d96: a91d         	add	r1, sp, #0x74
10007d98: 7849         	ldrb	r1, [r1, #0x1]
10007d9a: aa39         	add	r2, sp, #0xe4
10007d9c: 7011         	strb	r1, [r2]
10007d9e: 4a39         	ldr	r2, [pc, #0xe4]         @ 0x10007e84 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0x25c>
10007da0: f7fe f9f3    	bl	0x1000618a <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4782261a30384dafE> @ imm = #-0x1c1a
10007da4: e760         	b	0x10007c68 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0x40> @ imm = #-0x140
10007da6: a823         	add	r0, sp, #0x8c
10007da8: 8840         	ldrh	r0, [r0, #0x2]
10007daa: a925         	add	r1, sp, #0x94
10007dac: 8008         	strh	r0, [r1]
10007dae: 9825         	ldr	r0, [sp, #0x94]
10007db0: a922         	add	r1, sp, #0x88
10007db2: 8008         	strh	r0, [r1]
10007db4: 4835         	ldr	r0, [pc, #0xd4]         @ 0x10007e8c <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0x264>
10007db6: f7fe fd88    	bl	0x100068ca <core::ops::range::Range<Idx>::contains::h466edda8b7915d56> @ imm = #-0x14f0
10007dba: 2800         	cmp	r0, #0x0
10007dbc: d111         	bne	0x10007de2 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0x1ba> @ imm = #0x22
10007dbe: e008         	b	0x10007dd2 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0x1aa> @ imm = #0x10
10007dc0: 980f         	ldr	r0, [sp, #0x3c]
10007dc2: a923         	add	r1, sp, #0x8c
10007dc4: 7849         	ldrb	r1, [r1, #0x1]
10007dc6: aa38         	add	r2, sp, #0xe0
10007dc8: 7011         	strb	r1, [r2]
10007dca: 4a2f         	ldr	r2, [pc, #0xbc]         @ 0x10007e88 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0x260>
10007dcc: f7fe f9dd    	bl	0x1000618a <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4782261a30384dafE> @ imm = #-0x1c46
10007dd0: e74a         	b	0x10007c68 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0x40> @ imm = #-0x16c
10007dd2: 990f         	ldr	r1, [sp, #0x3c]
10007dd4: aa26         	add	r2, sp, #0x98
10007dd6: 2001         	movs	r0, #0x1
10007dd8: 7010         	strb	r0, [r2]
10007dda: 9a26         	ldr	r2, [sp, #0x98]
10007ddc: 704a         	strb	r2, [r1, #0x1]
10007dde: 7008         	strb	r0, [r1]
10007de0: e742         	b	0x10007c68 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0x40> @ imm = #-0x17c
10007de2: 980e         	ldr	r0, [sp, #0x38]
10007de4: 7901         	ldrb	r1, [r0, #0x4]
10007de6: 9101         	str	r1, [sp, #0x4]
10007de8: aa34         	add	r2, sp, #0xd0
10007dea: 7011         	strb	r1, [r2]
10007dec: 7941         	ldrb	r1, [r0, #0x5]
10007dee: 9102         	str	r1, [sp, #0x8]
10007df0: aa35         	add	r2, sp, #0xd4
10007df2: 7011         	strb	r1, [r2]
10007df4: 7980         	ldrb	r0, [r0, #0x6]
10007df6: 9003         	str	r0, [sp, #0xc]
10007df8: a936         	add	r1, sp, #0xd8
10007dfa: 7008         	strb	r0, [r1]
10007dfc: 9922         	ldr	r1, [sp, #0x88]
10007dfe: a825         	add	r0, sp, #0x94
10007e00: 8001         	strh	r1, [r0]
10007e02: 8801         	ldrh	r1, [r0]
10007e04: a83e         	add	r0, sp, #0xf8
10007e06: 8001         	strh	r1, [r0]
10007e08: 9816         	ldr	r0, [sp, #0x58]
10007e0a: f7ff fb23    	bl	0x10007454 <<fugit::rate::Rate<u32,_,_> as core::ops::arith::Mul<u32>>::mul::h699ab0d30e4cbd1b> @ imm = #-0x9ba
10007e0e: 9902         	ldr	r1, [sp, #0x8]
10007e10: 4602         	mov	r2, r0
10007e12: 9803         	ldr	r0, [sp, #0xc]
10007e14: 9204         	str	r2, [sp, #0x10]
10007e16: aa3c         	add	r2, sp, #0xf0
10007e18: 7011         	strb	r1, [r2]
10007e1a: aa3b         	add	r2, sp, #0xec
10007e1c: 7010         	strb	r0, [r2]
10007e1e: 4348         	muls	r0, r1, r0
10007e20: 9005         	str	r0, [sp, #0x14]
10007e22: 2000         	movs	r0, #0x0
10007e24: 2800         	cmp	r0, #0x0
10007e26: d122         	bne	0x10007e6e <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0x246> @ imm = #0x44
10007e28: e7ff         	b	0x10007e2a <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0x202> @ imm = #-0x2
10007e2a: 9c02         	ldr	r4, [sp, #0x8]
10007e2c: 9d01         	ldr	r5, [sp, #0x4]
10007e2e: 9905         	ldr	r1, [sp, #0x14]
10007e30: 9804         	ldr	r0, [sp, #0x10]
10007e32: f7ff faf9    	bl	0x10007428 <<fugit::rate::Rate<u32,_,_> as core::ops::arith::Div<u32>>::div::h9db490a08649df04> @ imm = #-0xa0e
10007e36: 9a03         	ldr	r2, [sp, #0xc]
10007e38: 990f         	ldr	r1, [sp, #0x3c]
10007e3a: 9037         	str	r0, [sp, #0xdc]
10007e3c: 9b22         	ldr	r3, [sp, #0x88]
10007e3e: ae25         	add	r6, sp, #0x94
10007e40: 8033         	strh	r3, [r6]
10007e42: ab2a         	add	r3, sp, #0xa8
10007e44: 719d         	strb	r5, [r3, #0x6]
10007e46: 9d25         	ldr	r5, [sp, #0x94]
10007e48: 809d         	strh	r5, [r3, #0x4]
10007e4a: 71dc         	strb	r4, [r3, #0x7]
10007e4c: 721a         	strb	r2, [r3, #0x8]
10007e4e: 902a         	str	r0, [sp, #0xa8]
10007e50: 982c         	ldr	r0, [sp, #0xb0]
10007e52: 9029         	str	r0, [sp, #0xa4]
10007e54: 982b         	ldr	r0, [sp, #0xac]
10007e56: 9028         	str	r0, [sp, #0xa0]
10007e58: 982a         	ldr	r0, [sp, #0xa8]
10007e5a: 9027         	str	r0, [sp, #0x9c]
10007e5c: 9829         	ldr	r0, [sp, #0xa4]
10007e5e: 60c8         	str	r0, [r1, #0xc]
10007e60: 9828         	ldr	r0, [sp, #0xa0]
10007e62: 6088         	str	r0, [r1, #0x8]
10007e64: 9827         	ldr	r0, [sp, #0x9c]
10007e66: 6048         	str	r0, [r1, #0x4]
10007e68: 2000         	movs	r0, #0x0
10007e6a: 7008         	strb	r0, [r1]
10007e6c: e002         	b	0x10007e74 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0x24c> @ imm = #0x4
10007e6e: 4808         	ldr	r0, [pc, #0x20]         @ 0x10007e90 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d+0x268>
10007e70: f005 fb02    	bl	0x1000d478 <core::panicking::panic_const::panic_const_mul_overflow::hdb56fe2dcc791345> @ imm = #0x5604
10007e74: b03f         	add	sp, #0xfc
10007e76: bdf0         	pop	{r4, r5, r6, r7, pc}
10007e78: 74 1d 01 10  	.word	0x10011d74
10007e7c: 80 1d 01 10  	.word	0x10011d80
10007e80: 10 1e 01 10  	.word	0x10011e10
10007e84: 00 1e 01 10  	.word	0x10011e00
10007e88: f0 1d 01 10  	.word	0x10011df0
10007e8c: 70 e6 00 10  	.word	0x1000e670
10007e90: e0 1d 01 10  	.word	0x10011de0

10007e94 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6>:
10007e94: b5f0         	push	{r4, r5, r6, r7, lr}
10007e96: af03         	add	r7, sp, #0xc
10007e98: b0bf         	sub	sp, #0xfc
10007e9a: 920e         	str	r2, [sp, #0x38]
10007e9c: 900f         	str	r0, [sp, #0x3c]
10007e9e: 9110         	str	r1, [sp, #0x40]
10007ea0: 6810         	ldr	r0, [r2]
10007ea2: 9011         	str	r0, [sp, #0x44]
10007ea4: 488f         	ldr	r0, [pc, #0x23c]        @ 0x100080e4 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0x250>
10007ea6: a911         	add	r1, sp, #0x44
10007ea8: f7fe fd2f    	bl	0x1000690a <core::ops::range::RangeInclusive<Idx>::contains::h616873688289eeed> @ imm = #-0x15a2
10007eac: 2800         	cmp	r0, #0x0
10007eae: d109         	bne	0x10007ec4 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0x30> @ imm = #0x12
10007eb0: e7ff         	b	0x10007eb2 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0x1e> @ imm = #-0x2
10007eb2: 990f         	ldr	r1, [sp, #0x3c]
10007eb4: aa12         	add	r2, sp, #0x48
10007eb6: 2000         	movs	r0, #0x0
10007eb8: 7010         	strb	r0, [r2]
10007eba: 9812         	ldr	r0, [sp, #0x48]
10007ebc: 7048         	strb	r0, [r1, #0x1]
10007ebe: 2001         	movs	r0, #0x1
10007ec0: 7008         	strb	r0, [r1]
10007ec2: e007         	b	0x10007ed4 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0x40> @ imm = #0xe
10007ec4: 980e         	ldr	r0, [sp, #0x38]
10007ec6: 1d41         	adds	r1, r0, #0x5
10007ec8: 4887         	ldr	r0, [pc, #0x21c]        @ 0x100080e8 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0x254>
10007eca: f7fe fd07    	bl	0x100068dc <core::ops::range::Range<Idx>::contains::h7667663c9e3b648d> @ imm = #-0x15f2
10007ece: 2800         	cmp	r0, #0x0
10007ed0: d10a         	bne	0x10007ee8 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0x54> @ imm = #0x14
10007ed2: e000         	b	0x10007ed6 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0x42> @ imm = #0x0
10007ed4: e104         	b	0x100080e0 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0x24c> @ imm = #0x208
10007ed6: 990f         	ldr	r1, [sp, #0x3c]
10007ed8: aa13         	add	r2, sp, #0x4c
10007eda: 2002         	movs	r0, #0x2
10007edc: 7010         	strb	r0, [r2]
10007ede: 9813         	ldr	r0, [sp, #0x4c]
10007ee0: 7048         	strb	r0, [r1, #0x1]
10007ee2: 2001         	movs	r0, #0x1
10007ee4: 7008         	strb	r0, [r1]
10007ee6: e7f5         	b	0x10007ed4 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0x40> @ imm = #-0x16
10007ee8: 980e         	ldr	r0, [sp, #0x38]
10007eea: 1d81         	adds	r1, r0, #0x6
10007eec: 487e         	ldr	r0, [pc, #0x1f8]        @ 0x100080e8 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0x254>
10007eee: f7fe fcf5    	bl	0x100068dc <core::ops::range::Range<Idx>::contains::h7667663c9e3b648d> @ imm = #-0x1616
10007ef2: 2800         	cmp	r0, #0x0
10007ef4: d0ef         	beq	0x10007ed6 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0x42> @ imm = #-0x22
10007ef6: e7ff         	b	0x10007ef8 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0x64> @ imm = #-0x2
10007ef8: a811         	add	r0, sp, #0x44
10007efa: f7ff f837    	bl	0x10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868> @ imm = #-0xf92
10007efe: 0900         	lsrs	r0, r0, #0x4
10007f00: f7fe f9b7    	bl	0x10006272 <<u32 as fugit::rate::ExtU32>::Hz::ha421d0a6a3793ef2> @ imm = #-0x1c92
10007f04: 900a         	str	r0, [sp, #0x28]
10007f06: 902e         	str	r0, [sp, #0xb8]
10007f08: 2005         	movs	r0, #0x5
10007f0a: f7ff f813    	bl	0x10006f34 <fugit::rate::Rate<u32,_,_>::MHz::h9ff0be67f59ed89b> @ imm = #-0xfda
10007f0e: 4601         	mov	r1, r0
10007f10: 980a         	ldr	r0, [sp, #0x28]
10007f12: 9114         	str	r1, [sp, #0x50]
10007f14: 9015         	str	r0, [sp, #0x54]
10007f16: a810         	add	r0, sp, #0x40
10007f18: f7ff f828    	bl	0x10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868> @ imm = #-0xfb0
10007f1c: 990e         	ldr	r1, [sp, #0x38]
10007f1e: 7909         	ldrb	r1, [r1, #0x4]
10007f20: aa3d         	add	r2, sp, #0xf4
10007f22: 7011         	strb	r1, [r2]
10007f24: f7fe fa5a    	bl	0x100063dc <core::num::<impl u32>::checked_div::h75503584a2445bab> @ imm = #-0x1b4c
10007f28: 900b         	str	r0, [sp, #0x2c]
10007f2a: 460a         	mov	r2, r1
10007f2c: 990b         	ldr	r1, [sp, #0x2c]
10007f2e: ab1b         	add	r3, sp, #0x6c
10007f30: 2004         	movs	r0, #0x4
10007f32: 7018         	strb	r0, [r3]
10007f34: 9b1b         	ldr	r3, [sp, #0x6c]
10007f36: a819         	add	r0, sp, #0x64
10007f38: 900c         	str	r0, [sp, #0x30]
10007f3a: f7fe fe48    	bl	0x10006bce <core::option::Option<T>::ok_or::hf91b7b3e8860dec5> @ imm = #-0x1370
10007f3e: 990c         	ldr	r1, [sp, #0x30]
10007f40: a817         	add	r0, sp, #0x5c
10007f42: 900d         	str	r0, [sp, #0x34]
10007f44: f7ff f98d    	bl	0x10007262 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb02f20c0be08b8a3E> @ imm = #-0xce6
10007f48: 980d         	ldr	r0, [sp, #0x34]
10007f4a: 7800         	ldrb	r0, [r0]
10007f4c: 07c0         	lsls	r0, r0, #0x1f
10007f4e: 2800         	cmp	r0, #0x0
10007f50: d10c         	bne	0x10007f6c <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0xd8> @ imm = #0x18
10007f52: e7ff         	b	0x10007f54 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0xc0> @ imm = #-0x2
10007f54: 9818         	ldr	r0, [sp, #0x60]
10007f56: 902f         	str	r0, [sp, #0xbc]
10007f58: f7fe f98b    	bl	0x10006272 <<u32 as fugit::rate::ExtU32>::Hz::ha421d0a6a3793ef2> @ imm = #-0x1cea
10007f5c: 9016         	str	r0, [sp, #0x58]
10007f5e: a814         	add	r0, sp, #0x50
10007f60: a916         	add	r1, sp, #0x58
10007f62: f7fe fca9    	bl	0x100068b8 <core::ops::range::Range<Idx>::contains::h0e305a4135904b9b> @ imm = #-0x16ae
10007f66: 2800         	cmp	r0, #0x0
10007f68: d112         	bne	0x10007f90 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0xfc> @ imm = #0x24
10007f6a: e008         	b	0x10007f7e <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0xea> @ imm = #0x10
10007f6c: 980f         	ldr	r0, [sp, #0x3c]
10007f6e: a917         	add	r1, sp, #0x5c
10007f70: 7849         	ldrb	r1, [r1, #0x1]
10007f72: aa3a         	add	r2, sp, #0xe8
10007f74: 7011         	strb	r1, [r2]
10007f76: 4a5d         	ldr	r2, [pc, #0x174]        @ 0x100080ec <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0x258>
10007f78: f7fe f8e3    	bl	0x10006142 <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h24be1ce1371007d6E> @ imm = #-0x1e3a
10007f7c: e7aa         	b	0x10007ed4 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0x40> @ imm = #-0xac
10007f7e: 990f         	ldr	r1, [sp, #0x3c]
10007f80: aa1c         	add	r2, sp, #0x70
10007f82: 2003         	movs	r0, #0x3
10007f84: 7010         	strb	r0, [r2]
10007f86: 981c         	ldr	r0, [sp, #0x70]
10007f88: 7048         	strb	r0, [r1, #0x1]
10007f8a: 2001         	movs	r0, #0x1
10007f8c: 7008         	strb	r0, [r1]
10007f8e: e7a1         	b	0x10007ed4 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0x40> @ imm = #-0xbe
10007f90: a811         	add	r0, sp, #0x44
10007f92: f7fe ffeb    	bl	0x10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868> @ imm = #-0x102a
10007f96: 9006         	str	r0, [sp, #0x18]
10007f98: a816         	add	r0, sp, #0x58
10007f9a: f7fe ffe7    	bl	0x10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868> @ imm = #-0x1032
10007f9e: 4601         	mov	r1, r0
10007fa0: 9806         	ldr	r0, [sp, #0x18]
10007fa2: f7fe fa1b    	bl	0x100063dc <core::num::<impl u32>::checked_div::h75503584a2445bab> @ imm = #-0x1bca
10007fa6: 9007         	str	r0, [sp, #0x1c]
10007fa8: 460a         	mov	r2, r1
10007faa: 9907         	ldr	r1, [sp, #0x1c]
10007fac: ab21         	add	r3, sp, #0x84
10007fae: 2004         	movs	r0, #0x4
10007fb0: 7018         	strb	r0, [r3]
10007fb2: 9b21         	ldr	r3, [sp, #0x84]
10007fb4: a81f         	add	r0, sp, #0x7c
10007fb6: 9008         	str	r0, [sp, #0x20]
10007fb8: f7fe fe09    	bl	0x10006bce <core::option::Option<T>::ok_or::hf91b7b3e8860dec5> @ imm = #-0x13ee
10007fbc: 9908         	ldr	r1, [sp, #0x20]
10007fbe: a81d         	add	r0, sp, #0x74
10007fc0: 9009         	str	r0, [sp, #0x24]
10007fc2: f7ff f94e    	bl	0x10007262 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb02f20c0be08b8a3E> @ imm = #-0xd64
10007fc6: 9809         	ldr	r0, [sp, #0x24]
10007fc8: 7800         	ldrb	r0, [r0]
10007fca: 07c0         	lsls	r0, r0, #0x1f
10007fcc: 2800         	cmp	r0, #0x0
10007fce: d117         	bne	0x10008000 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0x16c> @ imm = #0x2e
10007fd0: e7ff         	b	0x10007fd2 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0x13e> @ imm = #-0x2
10007fd2: 981e         	ldr	r0, [sp, #0x78]
10007fd4: 9030         	str	r0, [sp, #0xc0]
10007fd6: f7fe ff37    	bl	0x10006e48 <<T as core::convert::TryInto<U>>::try_into::ha57f9a712ea47f27> @ imm = #-0x1192
10007fda: f7fe fe54    	bl	0x10006c86 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h4537fe00f207836eE> @ imm = #-0x1358
10007fde: 9031         	str	r0, [sp, #0xc4]
10007fe0: 9831         	ldr	r0, [sp, #0xc4]
10007fe2: 9024         	str	r0, [sp, #0x90]
10007fe4: 9824         	ldr	r0, [sp, #0x90]
10007fe6: 9032         	str	r0, [sp, #0xc8]
10007fe8: 9832         	ldr	r0, [sp, #0xc8]
10007fea: f7ff f97f    	bl	0x100072ec <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hb59c43546539695dE> @ imm = #-0xd02
10007fee: 9033         	str	r0, [sp, #0xcc]
10007ff0: 9833         	ldr	r0, [sp, #0xcc]
10007ff2: 9023         	str	r0, [sp, #0x8c]
10007ff4: a823         	add	r0, sp, #0x8c
10007ff6: 7800         	ldrb	r0, [r0]
10007ff8: 07c0         	lsls	r0, r0, #0x1f
10007ffa: 2800         	cmp	r0, #0x0
10007ffc: d009         	beq	0x10008012 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0x17e> @ imm = #0x12
10007ffe: e015         	b	0x1000802c <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0x198> @ imm = #0x2a
10008000: 980f         	ldr	r0, [sp, #0x3c]
10008002: a91d         	add	r1, sp, #0x74
10008004: 7849         	ldrb	r1, [r1, #0x1]
10008006: aa39         	add	r2, sp, #0xe4
10008008: 7011         	strb	r1, [r2]
1000800a: 4a39         	ldr	r2, [pc, #0xe4]         @ 0x100080f0 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0x25c>
1000800c: f7fe f899    	bl	0x10006142 <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h24be1ce1371007d6E> @ imm = #-0x1ece
10008010: e760         	b	0x10007ed4 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0x40> @ imm = #-0x140
10008012: a823         	add	r0, sp, #0x8c
10008014: 8840         	ldrh	r0, [r0, #0x2]
10008016: a925         	add	r1, sp, #0x94
10008018: 8008         	strh	r0, [r1]
1000801a: 9825         	ldr	r0, [sp, #0x94]
1000801c: a922         	add	r1, sp, #0x88
1000801e: 8008         	strh	r0, [r1]
10008020: 4835         	ldr	r0, [pc, #0xd4]         @ 0x100080f8 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0x264>
10008022: f7fe fc52    	bl	0x100068ca <core::ops::range::Range<Idx>::contains::h466edda8b7915d56> @ imm = #-0x175c
10008026: 2800         	cmp	r0, #0x0
10008028: d111         	bne	0x1000804e <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0x1ba> @ imm = #0x22
1000802a: e008         	b	0x1000803e <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0x1aa> @ imm = #0x10
1000802c: 980f         	ldr	r0, [sp, #0x3c]
1000802e: a923         	add	r1, sp, #0x8c
10008030: 7849         	ldrb	r1, [r1, #0x1]
10008032: aa38         	add	r2, sp, #0xe0
10008034: 7011         	strb	r1, [r2]
10008036: 4a2f         	ldr	r2, [pc, #0xbc]         @ 0x100080f4 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0x260>
10008038: f7fe f883    	bl	0x10006142 <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h24be1ce1371007d6E> @ imm = #-0x1efa
1000803c: e74a         	b	0x10007ed4 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0x40> @ imm = #-0x16c
1000803e: 990f         	ldr	r1, [sp, #0x3c]
10008040: aa26         	add	r2, sp, #0x98
10008042: 2001         	movs	r0, #0x1
10008044: 7010         	strb	r0, [r2]
10008046: 9a26         	ldr	r2, [sp, #0x98]
10008048: 704a         	strb	r2, [r1, #0x1]
1000804a: 7008         	strb	r0, [r1]
1000804c: e742         	b	0x10007ed4 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0x40> @ imm = #-0x17c
1000804e: 980e         	ldr	r0, [sp, #0x38]
10008050: 7901         	ldrb	r1, [r0, #0x4]
10008052: 9101         	str	r1, [sp, #0x4]
10008054: aa34         	add	r2, sp, #0xd0
10008056: 7011         	strb	r1, [r2]
10008058: 7941         	ldrb	r1, [r0, #0x5]
1000805a: 9102         	str	r1, [sp, #0x8]
1000805c: aa35         	add	r2, sp, #0xd4
1000805e: 7011         	strb	r1, [r2]
10008060: 7980         	ldrb	r0, [r0, #0x6]
10008062: 9003         	str	r0, [sp, #0xc]
10008064: a936         	add	r1, sp, #0xd8
10008066: 7008         	strb	r0, [r1]
10008068: 9922         	ldr	r1, [sp, #0x88]
1000806a: a825         	add	r0, sp, #0x94
1000806c: 8001         	strh	r1, [r0]
1000806e: 8801         	ldrh	r1, [r0]
10008070: a83e         	add	r0, sp, #0xf8
10008072: 8001         	strh	r1, [r0]
10008074: 9816         	ldr	r0, [sp, #0x58]
10008076: f7ff f9ed    	bl	0x10007454 <<fugit::rate::Rate<u32,_,_> as core::ops::arith::Mul<u32>>::mul::h699ab0d30e4cbd1b> @ imm = #-0xc26
1000807a: 9902         	ldr	r1, [sp, #0x8]
1000807c: 4602         	mov	r2, r0
1000807e: 9803         	ldr	r0, [sp, #0xc]
10008080: 9204         	str	r2, [sp, #0x10]
10008082: aa3c         	add	r2, sp, #0xf0
10008084: 7011         	strb	r1, [r2]
10008086: aa3b         	add	r2, sp, #0xec
10008088: 7010         	strb	r0, [r2]
1000808a: 4348         	muls	r0, r1, r0
1000808c: 9005         	str	r0, [sp, #0x14]
1000808e: 2000         	movs	r0, #0x0
10008090: 2800         	cmp	r0, #0x0
10008092: d122         	bne	0x100080da <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0x246> @ imm = #0x44
10008094: e7ff         	b	0x10008096 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0x202> @ imm = #-0x2
10008096: 9c02         	ldr	r4, [sp, #0x8]
10008098: 9d01         	ldr	r5, [sp, #0x4]
1000809a: 9905         	ldr	r1, [sp, #0x14]
1000809c: 9804         	ldr	r0, [sp, #0x10]
1000809e: f7ff f9c3    	bl	0x10007428 <<fugit::rate::Rate<u32,_,_> as core::ops::arith::Div<u32>>::div::h9db490a08649df04> @ imm = #-0xc7a
100080a2: 9a03         	ldr	r2, [sp, #0xc]
100080a4: 990f         	ldr	r1, [sp, #0x3c]
100080a6: 9037         	str	r0, [sp, #0xdc]
100080a8: 9b22         	ldr	r3, [sp, #0x88]
100080aa: ae25         	add	r6, sp, #0x94
100080ac: 8033         	strh	r3, [r6]
100080ae: ab2a         	add	r3, sp, #0xa8
100080b0: 719d         	strb	r5, [r3, #0x6]
100080b2: 9d25         	ldr	r5, [sp, #0x94]
100080b4: 809d         	strh	r5, [r3, #0x4]
100080b6: 71dc         	strb	r4, [r3, #0x7]
100080b8: 721a         	strb	r2, [r3, #0x8]
100080ba: 902a         	str	r0, [sp, #0xa8]
100080bc: 982c         	ldr	r0, [sp, #0xb0]
100080be: 9029         	str	r0, [sp, #0xa4]
100080c0: 982b         	ldr	r0, [sp, #0xac]
100080c2: 9028         	str	r0, [sp, #0xa0]
100080c4: 982a         	ldr	r0, [sp, #0xa8]
100080c6: 9027         	str	r0, [sp, #0x9c]
100080c8: 9829         	ldr	r0, [sp, #0xa4]
100080ca: 60c8         	str	r0, [r1, #0xc]
100080cc: 9828         	ldr	r0, [sp, #0xa0]
100080ce: 6088         	str	r0, [r1, #0x8]
100080d0: 9827         	ldr	r0, [sp, #0x9c]
100080d2: 6048         	str	r0, [r1, #0x4]
100080d4: 2000         	movs	r0, #0x0
100080d6: 7008         	strb	r0, [r1]
100080d8: e002         	b	0x100080e0 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0x24c> @ imm = #0x4
100080da: 4808         	ldr	r0, [pc, #0x20]         @ 0x100080fc <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6+0x268>
100080dc: f005 f9cc    	bl	0x1000d478 <core::panicking::panic_const::panic_const_mul_overflow::hdb56fe2dcc791345> @ imm = #0x5398
100080e0: b03f         	add	sp, #0xfc
100080e2: bdf0         	pop	{r4, r5, r6, r7, pc}
100080e4: 74 1d 01 10  	.word	0x10011d74
100080e8: 80 1d 01 10  	.word	0x10011d80
100080ec: 10 1e 01 10  	.word	0x10011e10
100080f0: 00 1e 01 10  	.word	0x10011e00
100080f4: f0 1d 01 10  	.word	0x10011df0
100080f8: 70 e6 00 10  	.word	0x1000e670
100080fc: e0 1d 01 10  	.word	0x10011de0

10008100 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::{{closure}}::h3b2fe7c906c13cc4>:
10008100: b580         	push	{r7, lr}
10008102: af00         	add	r7, sp, #0x0
10008104: b081         	sub	sp, #0x4
10008106: 4669         	mov	r1, sp
10008108: 2004         	movs	r0, #0x4
1000810a: 7008         	strb	r0, [r1]
1000810c: 9800         	ldr	r0, [sp]
1000810e: b001         	add	sp, #0x4
10008110: bd80         	pop	{r7, pc}

10008112 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::{{closure}}::h5bfcc994cf464e60>:
10008112: b580         	push	{r7, lr}
10008114: af00         	add	r7, sp, #0x0
10008116: b081         	sub	sp, #0x4
10008118: 4669         	mov	r1, sp
1000811a: 2004         	movs	r0, #0x4
1000811c: 7008         	strb	r0, [r1]
1000811e: 9800         	ldr	r0, [sp]
10008120: b001         	add	sp, #0x4
10008122: bd80         	pop	{r7, pc}

10008124 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::initialize::h700fd4a62749c17c>:
10008124: b5b0         	push	{r4, r5, r7, lr}
10008126: af02         	add	r7, sp, #0x8
10008128: b0bc         	sub	sp, #0xf0
1000812a: 9201         	str	r2, [sp, #0x4]
1000812c: 460c         	mov	r4, r1
1000812e: 9901         	ldr	r1, [sp, #0x4]
10008130: 940a         	str	r4, [sp, #0x28]
10008132: 900b         	str	r0, [sp, #0x2c]
10008134: 9111         	str	r1, [sp, #0x44]
10008136: 340c         	adds	r4, #0xc
10008138: 9405         	str	r4, [sp, #0x14]
1000813a: 4620         	mov	r0, r4
1000813c: f003 faf2    	bl	0x1000b724 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PLL_USB>::reset_bring_up::h3231a3c8ffd7831f> @ imm = #0x35e4
10008140: 943b         	str	r4, [sp, #0xec]
10008142: 484c         	ldr	r0, [pc, #0x130]        @ 0x10008274 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::initialize::h700fd4a62749c17c+0x150>
10008144: 9006         	str	r0, [sp, #0x18]
10008146: 9023         	str	r0, [sp, #0x8c]
10008148: 484b         	ldr	r0, [pc, #0x12c]        @ 0x10008278 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::initialize::h700fd4a62749c17c+0x154>
1000814a: 9009         	str	r0, [sp, #0x24]
1000814c: 9015         	str	r0, [sp, #0x54]
1000814e: 9034         	str	r0, [sp, #0xd0]
10008150: 212d         	movs	r1, #0x2d
10008152: 9135         	str	r1, [sp, #0xd4]
10008154: 9036         	str	r0, [sp, #0xd8]
10008156: f004 f821    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x4042
1000815a: 9806         	ldr	r0, [sp, #0x18]
1000815c: 943a         	str	r4, [sp, #0xe8]
1000815e: 9025         	str	r0, [sp, #0x94]
10008160: 4846         	ldr	r0, [pc, #0x118]        @ 0x1000827c <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::initialize::h700fd4a62749c17c+0x158>
10008162: 9004         	str	r0, [sp, #0x10]
10008164: 9016         	str	r0, [sp, #0x58]
10008166: 9031         	str	r0, [sp, #0xc4]
10008168: 2100         	movs	r1, #0x0
1000816a: 9108         	str	r1, [sp, #0x20]
1000816c: 9132         	str	r1, [sp, #0xc8]
1000816e: 9033         	str	r0, [sp, #0xcc]
10008170: f004 f814    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x4028
10008174: 9a06         	ldr	r2, [sp, #0x18]
10008176: 9808         	ldr	r0, [sp, #0x20]
10008178: 990a         	ldr	r1, [sp, #0x28]
1000817a: 9439         	str	r4, [sp, #0xe4]
1000817c: 9221         	str	r2, [sp, #0x84]
1000817e: 1d89         	adds	r1, r1, #0x6
10008180: 9102         	str	r1, [sp, #0x8]
10008182: 921b         	str	r2, [sp, #0x6c]
10008184: 911c         	str	r1, [sp, #0x70]
10008186: f7fe f86d    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x1f26
1000818a: 4601         	mov	r1, r0
1000818c: 2001         	movs	r0, #0x1
1000818e: f7fe f888    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x1ef0
10008192: 9908         	ldr	r1, [sp, #0x20]
10008194: f7fe f87d    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x1f06
10008198: 4601         	mov	r1, r0
1000819a: 9802         	ldr	r0, [sp, #0x8]
1000819c: 911a         	str	r1, [sp, #0x68]
1000819e: a91a         	add	r1, sp, #0x68
100081a0: f000 f952    	bl	0x10008448 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::initialize::{{closure}}::hf910c14327e009a9> @ imm = #0x2a4
100081a4: 4601         	mov	r1, r0
100081a6: 9806         	ldr	r0, [sp, #0x18]
100081a8: 6809         	ldr	r1, [r1]
100081aa: 902b         	str	r0, [sp, #0xac]
100081ac: 912c         	str	r1, [sp, #0xb0]
100081ae: 902d         	str	r0, [sp, #0xb4]
100081b0: f003 fff4    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x3fe8
100081b4: 9a04         	ldr	r2, [sp, #0x10]
100081b6: 9b06         	ldr	r3, [sp, #0x18]
100081b8: 9808         	ldr	r0, [sp, #0x20]
100081ba: 990a         	ldr	r1, [sp, #0x28]
100081bc: 9438         	str	r4, [sp, #0xe0]
100081be: 9324         	str	r3, [sp, #0x90]
100081c0: 1d09         	adds	r1, r1, #0x4
100081c2: 9103         	str	r1, [sp, #0xc]
100081c4: 9218         	str	r2, [sp, #0x60]
100081c6: 9119         	str	r1, [sp, #0x64]
100081c8: f7fe f84c    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x1f68
100081cc: 4601         	mov	r1, r0
100081ce: 9808         	ldr	r0, [sp, #0x20]
100081d0: f7fe f867    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x1f32
100081d4: 9908         	ldr	r1, [sp, #0x20]
100081d6: f7fe f85c    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x1f48
100081da: 4601         	mov	r1, r0
100081dc: 9803         	ldr	r0, [sp, #0xc]
100081de: 9117         	str	r1, [sp, #0x5c]
100081e0: a917         	add	r1, sp, #0x5c
100081e2: f000 f99d    	bl	0x10008520 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::initialize::{{closure}}::h10867b1522dd7527> @ imm = #0x33a
100081e6: 4601         	mov	r1, r0
100081e8: 9804         	ldr	r0, [sp, #0x10]
100081ea: 6809         	ldr	r1, [r1]
100081ec: 902e         	str	r0, [sp, #0xb8]
100081ee: 912f         	str	r1, [sp, #0xbc]
100081f0: 9030         	str	r0, [sp, #0xc0]
100081f2: f003 ffd3    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x3fa6
100081f6: 9a05         	ldr	r2, [sp, #0x14]
100081f8: 9906         	ldr	r1, [sp, #0x18]
100081fa: 9809         	ldr	r0, [sp, #0x24]
100081fc: 9237         	str	r2, [sp, #0xdc]
100081fe: 9122         	str	r1, [sp, #0x88]
10008200: 901f         	str	r0, [sp, #0x7c]
10008202: 9026         	str	r0, [sp, #0x98]
10008204: 9027         	str	r0, [sp, #0x9c]
10008206: f003 ff5e    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x3ebc
1000820a: 4601         	mov	r1, r0
1000820c: 9808         	ldr	r0, [sp, #0x20]
1000820e: 9107         	str	r1, [sp, #0x1c]
10008210: 9120         	str	r1, [sp, #0x80]
10008212: 911d         	str	r1, [sp, #0x74]
10008214: f7fe f826    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x1fb4
10008218: 4601         	mov	r1, r0
1000821a: 9807         	ldr	r0, [sp, #0x1c]
1000821c: f7fe f841    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x1f7e
10008220: 9908         	ldr	r1, [sp, #0x20]
10008222: f7fe f836    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x1f94
10008226: 901e         	str	r0, [sp, #0x78]
10008228: a81d         	add	r0, sp, #0x74
1000822a: a91e         	add	r1, sp, #0x78
1000822c: f000 f9ae    	bl	0x1000858c <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::initialize::{{closure}}::h50360dbdbb82b458> @ imm = #0x35c
10008230: 4601         	mov	r1, r0
10008232: 9809         	ldr	r0, [sp, #0x24]
10008234: 6809         	ldr	r1, [r1]
10008236: 9028         	str	r0, [sp, #0xa0]
10008238: 9129         	str	r1, [sp, #0xa4]
1000823a: 902a         	str	r0, [sp, #0xa8]
1000823c: f003 ffae    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x3f5c
10008240: 9a0a         	ldr	r2, [sp, #0x28]
10008242: 980b         	ldr	r0, [sp, #0x2c]
10008244: 79d4         	ldrb	r4, [r2, #0x7]
10008246: a912         	add	r1, sp, #0x48
10008248: 700c         	strb	r4, [r1]
1000824a: 7a13         	ldrb	r3, [r2, #0x8]
1000824c: a913         	add	r1, sp, #0x4c
1000824e: 700b         	strb	r3, [r1]
10008250: 6811         	ldr	r1, [r2]
10008252: 9114         	str	r1, [sp, #0x50]
10008254: 6895         	ldr	r5, [r2, #0x8]
10008256: 950e         	str	r5, [sp, #0x38]
10008258: 6855         	ldr	r5, [r2, #0x4]
1000825a: 950d         	str	r5, [sp, #0x34]
1000825c: 6812         	ldr	r2, [r2]
1000825e: 920c         	str	r2, [sp, #0x30]
10008260: aa0f         	add	r2, sp, #0x3c
10008262: 7114         	strb	r4, [r2, #0x4]
10008264: 7153         	strb	r3, [r2, #0x5]
10008266: 910f         	str	r1, [sp, #0x3c]
10008268: a90c         	add	r1, sp, #0x30
1000826a: f7ff fcbf    	bl	0x10007bec <rp2040_hal::pll::PhaseLockedLoop<S,D>::transition::h2ac842ceac199b77> @ imm = #-0x682
1000826e: b03c         	add	sp, #0xf0
10008270: bdb0         	pop	{r4, r5, r7, pc}
10008272: 46c0         	mov	r8, r8
10008274: 00 c0 02 40  	.word	0x4002c000
10008278: 04 c0 02 40  	.word	0x4002c004
1000827c: 08 c0 02 40  	.word	0x4002c008

10008280 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::initialize::h850bbd421d41c72e>:
10008280: b5b0         	push	{r4, r5, r7, lr}
10008282: af02         	add	r7, sp, #0x8
10008284: b0bc         	sub	sp, #0xf0
10008286: 9201         	str	r2, [sp, #0x4]
10008288: 460c         	mov	r4, r1
1000828a: 9901         	ldr	r1, [sp, #0x4]
1000828c: 940a         	str	r4, [sp, #0x28]
1000828e: 900b         	str	r0, [sp, #0x2c]
10008290: 9111         	str	r1, [sp, #0x44]
10008292: 340c         	adds	r4, #0xc
10008294: 9405         	str	r4, [sp, #0x14]
10008296: 4620         	mov	r0, r4
10008298: f003 fab2    	bl	0x1000b800 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PLL_SYS>::reset_bring_up::hc1bf34968d60e42c> @ imm = #0x3564
1000829c: 943b         	str	r4, [sp, #0xec]
1000829e: 484c         	ldr	r0, [pc, #0x130]        @ 0x100083d0 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::initialize::h850bbd421d41c72e+0x150>
100082a0: 9006         	str	r0, [sp, #0x18]
100082a2: 9023         	str	r0, [sp, #0x8c]
100082a4: 484b         	ldr	r0, [pc, #0x12c]        @ 0x100083d4 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::initialize::h850bbd421d41c72e+0x154>
100082a6: 9009         	str	r0, [sp, #0x24]
100082a8: 9015         	str	r0, [sp, #0x54]
100082aa: 9034         	str	r0, [sp, #0xd0]
100082ac: 212d         	movs	r1, #0x2d
100082ae: 9135         	str	r1, [sp, #0xd4]
100082b0: 9036         	str	r0, [sp, #0xd8]
100082b2: f003 ff73    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x3ee6
100082b6: 9806         	ldr	r0, [sp, #0x18]
100082b8: 943a         	str	r4, [sp, #0xe8]
100082ba: 9025         	str	r0, [sp, #0x94]
100082bc: 4846         	ldr	r0, [pc, #0x118]        @ 0x100083d8 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::initialize::h850bbd421d41c72e+0x158>
100082be: 9004         	str	r0, [sp, #0x10]
100082c0: 9016         	str	r0, [sp, #0x58]
100082c2: 9031         	str	r0, [sp, #0xc4]
100082c4: 2100         	movs	r1, #0x0
100082c6: 9108         	str	r1, [sp, #0x20]
100082c8: 9132         	str	r1, [sp, #0xc8]
100082ca: 9033         	str	r0, [sp, #0xcc]
100082cc: f003 ff66    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x3ecc
100082d0: 9a06         	ldr	r2, [sp, #0x18]
100082d2: 9808         	ldr	r0, [sp, #0x20]
100082d4: 990a         	ldr	r1, [sp, #0x28]
100082d6: 9439         	str	r4, [sp, #0xe4]
100082d8: 9221         	str	r2, [sp, #0x84]
100082da: 1d89         	adds	r1, r1, #0x6
100082dc: 9102         	str	r1, [sp, #0x8]
100082de: 9218         	str	r2, [sp, #0x60]
100082e0: 9119         	str	r1, [sp, #0x64]
100082e2: f7fd ffbf    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x2082
100082e6: 4601         	mov	r1, r0
100082e8: 2001         	movs	r0, #0x1
100082ea: f7fd ffda    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x204c
100082ee: 9908         	ldr	r1, [sp, #0x20]
100082f0: f7fd ffcf    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x2062
100082f4: 4601         	mov	r1, r0
100082f6: 9802         	ldr	r0, [sp, #0x8]
100082f8: 9117         	str	r1, [sp, #0x5c]
100082fa: a917         	add	r1, sp, #0x5c
100082fc: f000 f86e    	bl	0x100083dc <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::initialize::{{closure}}::h33b6ef14ca4220e1> @ imm = #0xdc
10008300: 4601         	mov	r1, r0
10008302: 9806         	ldr	r0, [sp, #0x18]
10008304: 6809         	ldr	r1, [r1]
10008306: 902e         	str	r0, [sp, #0xb8]
10008308: 912f         	str	r1, [sp, #0xbc]
1000830a: 9030         	str	r0, [sp, #0xc0]
1000830c: f003 ff46    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x3e8c
10008310: 9a04         	ldr	r2, [sp, #0x10]
10008312: 9b06         	ldr	r3, [sp, #0x18]
10008314: 9808         	ldr	r0, [sp, #0x20]
10008316: 990a         	ldr	r1, [sp, #0x28]
10008318: 9438         	str	r4, [sp, #0xe0]
1000831a: 9324         	str	r3, [sp, #0x90]
1000831c: 1d09         	adds	r1, r1, #0x4
1000831e: 9103         	str	r1, [sp, #0xc]
10008320: 921b         	str	r2, [sp, #0x6c]
10008322: 911c         	str	r1, [sp, #0x70]
10008324: f7fd ff9e    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x20c4
10008328: 4601         	mov	r1, r0
1000832a: 9808         	ldr	r0, [sp, #0x20]
1000832c: f7fd ffb9    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x208e
10008330: 9908         	ldr	r1, [sp, #0x20]
10008332: f7fd ffae    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x20a4
10008336: 4601         	mov	r1, r0
10008338: 9803         	ldr	r0, [sp, #0xc]
1000833a: 911a         	str	r1, [sp, #0x68]
1000833c: a91a         	add	r1, sp, #0x68
1000833e: f000 f8b9    	bl	0x100084b4 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::initialize::{{closure}}::h0177b98992168cdc> @ imm = #0x172
10008342: 4601         	mov	r1, r0
10008344: 9804         	ldr	r0, [sp, #0x10]
10008346: 6809         	ldr	r1, [r1]
10008348: 902b         	str	r0, [sp, #0xac]
1000834a: 912c         	str	r1, [sp, #0xb0]
1000834c: 902d         	str	r0, [sp, #0xb4]
1000834e: f003 ff25    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x3e4a
10008352: 9a05         	ldr	r2, [sp, #0x14]
10008354: 9906         	ldr	r1, [sp, #0x18]
10008356: 9809         	ldr	r0, [sp, #0x24]
10008358: 9237         	str	r2, [sp, #0xdc]
1000835a: 9122         	str	r1, [sp, #0x88]
1000835c: 901f         	str	r0, [sp, #0x7c]
1000835e: 9026         	str	r0, [sp, #0x98]
10008360: 9027         	str	r0, [sp, #0x9c]
10008362: f003 feb0    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x3d60
10008366: 4601         	mov	r1, r0
10008368: 9808         	ldr	r0, [sp, #0x20]
1000836a: 9107         	str	r1, [sp, #0x1c]
1000836c: 9120         	str	r1, [sp, #0x80]
1000836e: 911d         	str	r1, [sp, #0x74]
10008370: f7fd ff78    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x2110
10008374: 4601         	mov	r1, r0
10008376: 9807         	ldr	r0, [sp, #0x1c]
10008378: f7fd ff93    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x20da
1000837c: 9908         	ldr	r1, [sp, #0x20]
1000837e: f7fd ff88    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x20f0
10008382: 901e         	str	r0, [sp, #0x78]
10008384: a81d         	add	r0, sp, #0x74
10008386: a91e         	add	r1, sp, #0x78
10008388: f000 f939    	bl	0x100085fe <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::initialize::{{closure}}::hdf381b6c4862bd48> @ imm = #0x272
1000838c: 4601         	mov	r1, r0
1000838e: 9809         	ldr	r0, [sp, #0x24]
10008390: 6809         	ldr	r1, [r1]
10008392: 9028         	str	r0, [sp, #0xa0]
10008394: 9129         	str	r1, [sp, #0xa4]
10008396: 902a         	str	r0, [sp, #0xa8]
10008398: f003 ff00    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x3e00
1000839c: 9a0a         	ldr	r2, [sp, #0x28]
1000839e: 980b         	ldr	r0, [sp, #0x2c]
100083a0: 79d4         	ldrb	r4, [r2, #0x7]
100083a2: a912         	add	r1, sp, #0x48
100083a4: 700c         	strb	r4, [r1]
100083a6: 7a13         	ldrb	r3, [r2, #0x8]
100083a8: a913         	add	r1, sp, #0x4c
100083aa: 700b         	strb	r3, [r1]
100083ac: 6811         	ldr	r1, [r2]
100083ae: 9114         	str	r1, [sp, #0x50]
100083b0: 6895         	ldr	r5, [r2, #0x8]
100083b2: 950e         	str	r5, [sp, #0x38]
100083b4: 6855         	ldr	r5, [r2, #0x4]
100083b6: 950d         	str	r5, [sp, #0x34]
100083b8: 6812         	ldr	r2, [r2]
100083ba: 920c         	str	r2, [sp, #0x30]
100083bc: aa0f         	add	r2, sp, #0x3c
100083be: 7114         	strb	r4, [r2, #0x4]
100083c0: 7153         	strb	r3, [r2, #0x5]
100083c2: 910f         	str	r1, [sp, #0x3c]
100083c4: a90c         	add	r1, sp, #0x30
100083c6: f7ff fc19    	bl	0x10007bfc <rp2040_hal::pll::PhaseLockedLoop<S,D>::transition::h48522e0ad69083ad> @ imm = #-0x7ce
100083ca: b03c         	add	sp, #0xf0
100083cc: bdb0         	pop	{r4, r5, r7, pc}
100083ce: 46c0         	mov	r8, r8
100083d0: 00 80 02 40  	.word	0x40028000
100083d4: 04 80 02 40  	.word	0x40028004
100083d8: 08 80 02 40  	.word	0x40028008

100083dc <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::initialize::{{closure}}::h33b6ef14ca4220e1>:
100083dc: b580         	push	{r7, lr}
100083de: af00         	add	r7, sp, #0x0
100083e0: b08e         	sub	sp, #0x38
100083e2: 460a         	mov	r2, r1
100083e4: 9204         	str	r2, [sp, #0x10]
100083e6: 9005         	str	r0, [sp, #0x14]
100083e8: 9206         	str	r2, [sp, #0x18]
100083ea: 920a         	str	r2, [sp, #0x28]
100083ec: 920b         	str	r2, [sp, #0x2c]
100083ee: a80c         	add	r0, sp, #0x30
100083f0: 2100         	movs	r1, #0x0
100083f2: 7001         	strb	r1, [r0]
100083f4: 9805         	ldr	r0, [sp, #0x14]
100083f6: 7800         	ldrb	r0, [r0]
100083f8: 9002         	str	r0, [sp, #0x8]
100083fa: 9207         	str	r2, [sp, #0x1c]
100083fc: aa07         	add	r2, sp, #0x1c
100083fe: 7111         	strb	r1, [r2, #0x4]
10008400: a909         	add	r1, sp, #0x24
10008402: 7008         	strb	r0, [r1]
10008404: 9807         	ldr	r0, [sp, #0x1c]
10008406: 9001         	str	r0, [sp, #0x4]
10008408: f7fd fe74    	bl	0x100060f4 <rp2040_pac::generic::mask_u32::h03ba998ad65de185> @ imm = #-0x2318
1000840c: 9908         	ldr	r1, [sp, #0x20]
1000840e: f7fe fd23    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x15ba
10008412: f7fd ff27    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x21b2
10008416: 4601         	mov	r1, r0
10008418: 9801         	ldr	r0, [sp, #0x4]
1000841a: f7fe fd09    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x15ee
1000841e: 9802         	ldr	r0, [sp, #0x8]
10008420: 9907         	ldr	r1, [sp, #0x1c]
10008422: 9103         	str	r1, [sp, #0xc]
10008424: a90d         	add	r1, sp, #0x34
10008426: 7008         	strb	r0, [r1]
10008428: f7fd fe64    	bl	0x100060f4 <rp2040_pac::generic::mask_u32::h03ba998ad65de185> @ imm = #-0x2338
1000842c: 4601         	mov	r1, r0
1000842e: 9802         	ldr	r0, [sp, #0x8]
10008430: f7fd ff37    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x2192
10008434: 9908         	ldr	r1, [sp, #0x20]
10008436: f7fe fd0f    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x15e2
1000843a: 4601         	mov	r1, r0
1000843c: 9803         	ldr	r0, [sp, #0xc]
1000843e: f7fe fceb    	bl	0x10006e18 <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::hc18d656116c887ea> @ imm = #-0x162a
10008442: 9804         	ldr	r0, [sp, #0x10]
10008444: b00e         	add	sp, #0x38
10008446: bd80         	pop	{r7, pc}

10008448 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::initialize::{{closure}}::hf910c14327e009a9>:
10008448: b580         	push	{r7, lr}
1000844a: af00         	add	r7, sp, #0x0
1000844c: b08e         	sub	sp, #0x38
1000844e: 460a         	mov	r2, r1
10008450: 9204         	str	r2, [sp, #0x10]
10008452: 9005         	str	r0, [sp, #0x14]
10008454: 9206         	str	r2, [sp, #0x18]
10008456: 920a         	str	r2, [sp, #0x28]
10008458: 920b         	str	r2, [sp, #0x2c]
1000845a: a80c         	add	r0, sp, #0x30
1000845c: 2100         	movs	r1, #0x0
1000845e: 7001         	strb	r1, [r0]
10008460: 9805         	ldr	r0, [sp, #0x14]
10008462: 7800         	ldrb	r0, [r0]
10008464: 9002         	str	r0, [sp, #0x8]
10008466: 9207         	str	r2, [sp, #0x1c]
10008468: aa07         	add	r2, sp, #0x1c
1000846a: 7111         	strb	r1, [r2, #0x4]
1000846c: a909         	add	r1, sp, #0x24
1000846e: 7008         	strb	r0, [r1]
10008470: 9807         	ldr	r0, [sp, #0x1c]
10008472: 9001         	str	r0, [sp, #0x4]
10008474: f7fd fe3e    	bl	0x100060f4 <rp2040_pac::generic::mask_u32::h03ba998ad65de185> @ imm = #-0x2384
10008478: 9908         	ldr	r1, [sp, #0x20]
1000847a: f7fe fced    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x1626
1000847e: f7fd fef1    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x221e
10008482: 4601         	mov	r1, r0
10008484: 9801         	ldr	r0, [sp, #0x4]
10008486: f7fe fcd3    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x165a
1000848a: 9802         	ldr	r0, [sp, #0x8]
1000848c: 9907         	ldr	r1, [sp, #0x1c]
1000848e: 9103         	str	r1, [sp, #0xc]
10008490: a90d         	add	r1, sp, #0x34
10008492: 7008         	strb	r0, [r1]
10008494: f7fd fe2e    	bl	0x100060f4 <rp2040_pac::generic::mask_u32::h03ba998ad65de185> @ imm = #-0x23a4
10008498: 4601         	mov	r1, r0
1000849a: 9802         	ldr	r0, [sp, #0x8]
1000849c: f7fd ff01    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x21fe
100084a0: 9908         	ldr	r1, [sp, #0x20]
100084a2: f7fe fcd9    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x164e
100084a6: 4601         	mov	r1, r0
100084a8: 9803         	ldr	r0, [sp, #0xc]
100084aa: f7fe fcb5    	bl	0x10006e18 <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::hc18d656116c887ea> @ imm = #-0x1696
100084ae: 9804         	ldr	r0, [sp, #0x10]
100084b0: b00e         	add	sp, #0x38
100084b2: bd80         	pop	{r7, pc}

100084b4 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::initialize::{{closure}}::h0177b98992168cdc>:
100084b4: b580         	push	{r7, lr}
100084b6: af00         	add	r7, sp, #0x0
100084b8: b08e         	sub	sp, #0x38
100084ba: 460a         	mov	r2, r1
100084bc: 9204         	str	r2, [sp, #0x10]
100084be: 9005         	str	r0, [sp, #0x14]
100084c0: 9206         	str	r2, [sp, #0x18]
100084c2: 920a         	str	r2, [sp, #0x28]
100084c4: 920b         	str	r2, [sp, #0x2c]
100084c6: a80c         	add	r0, sp, #0x30
100084c8: 2100         	movs	r1, #0x0
100084ca: 7001         	strb	r1, [r0]
100084cc: 9805         	ldr	r0, [sp, #0x14]
100084ce: 8800         	ldrh	r0, [r0]
100084d0: 9002         	str	r0, [sp, #0x8]
100084d2: 9207         	str	r2, [sp, #0x1c]
100084d4: aa07         	add	r2, sp, #0x1c
100084d6: 7111         	strb	r1, [r2, #0x4]
100084d8: a909         	add	r1, sp, #0x24
100084da: 8008         	strh	r0, [r1]
100084dc: 9807         	ldr	r0, [sp, #0x1c]
100084de: 9001         	str	r0, [sp, #0x4]
100084e0: f7fd fe1a    	bl	0x10006118 <rp2040_pac::generic::mask_u32::hac8ad933706b19ca> @ imm = #-0x23cc
100084e4: 9908         	ldr	r1, [sp, #0x20]
100084e6: f7fe fcb7    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x1692
100084ea: f7fd febb    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x228a
100084ee: 4601         	mov	r1, r0
100084f0: 9801         	ldr	r0, [sp, #0x4]
100084f2: f7fe fc9d    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x16c6
100084f6: 9802         	ldr	r0, [sp, #0x8]
100084f8: 9907         	ldr	r1, [sp, #0x1c]
100084fa: 9103         	str	r1, [sp, #0xc]
100084fc: a90d         	add	r1, sp, #0x34
100084fe: 8008         	strh	r0, [r1]
10008500: f7fd fe0a    	bl	0x10006118 <rp2040_pac::generic::mask_u32::hac8ad933706b19ca> @ imm = #-0x23ec
10008504: 4601         	mov	r1, r0
10008506: 9802         	ldr	r0, [sp, #0x8]
10008508: f7fd fecb    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x226a
1000850c: 9908         	ldr	r1, [sp, #0x20]
1000850e: f7fe fca3    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x16ba
10008512: 4601         	mov	r1, r0
10008514: 9803         	ldr	r0, [sp, #0xc]
10008516: f7fe fc7f    	bl	0x10006e18 <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::hc18d656116c887ea> @ imm = #-0x1702
1000851a: 9804         	ldr	r0, [sp, #0x10]
1000851c: b00e         	add	sp, #0x38
1000851e: bd80         	pop	{r7, pc}

10008520 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::initialize::{{closure}}::h10867b1522dd7527>:
10008520: b580         	push	{r7, lr}
10008522: af00         	add	r7, sp, #0x0
10008524: b08e         	sub	sp, #0x38
10008526: 460a         	mov	r2, r1
10008528: 9204         	str	r2, [sp, #0x10]
1000852a: 9005         	str	r0, [sp, #0x14]
1000852c: 9206         	str	r2, [sp, #0x18]
1000852e: 920a         	str	r2, [sp, #0x28]
10008530: 920b         	str	r2, [sp, #0x2c]
10008532: a80c         	add	r0, sp, #0x30
10008534: 2100         	movs	r1, #0x0
10008536: 7001         	strb	r1, [r0]
10008538: 9805         	ldr	r0, [sp, #0x14]
1000853a: 8800         	ldrh	r0, [r0]
1000853c: 9002         	str	r0, [sp, #0x8]
1000853e: 9207         	str	r2, [sp, #0x1c]
10008540: aa07         	add	r2, sp, #0x1c
10008542: 7111         	strb	r1, [r2, #0x4]
10008544: a909         	add	r1, sp, #0x24
10008546: 8008         	strh	r0, [r1]
10008548: 9807         	ldr	r0, [sp, #0x1c]
1000854a: 9001         	str	r0, [sp, #0x4]
1000854c: f7fd fde4    	bl	0x10006118 <rp2040_pac::generic::mask_u32::hac8ad933706b19ca> @ imm = #-0x2438
10008550: 9908         	ldr	r1, [sp, #0x20]
10008552: f7fe fc81    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x16fe
10008556: f7fd fe85    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x22f6
1000855a: 4601         	mov	r1, r0
1000855c: 9801         	ldr	r0, [sp, #0x4]
1000855e: f7fe fc67    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x1732
10008562: 9802         	ldr	r0, [sp, #0x8]
10008564: 9907         	ldr	r1, [sp, #0x1c]
10008566: 9103         	str	r1, [sp, #0xc]
10008568: a90d         	add	r1, sp, #0x34
1000856a: 8008         	strh	r0, [r1]
1000856c: f7fd fdd4    	bl	0x10006118 <rp2040_pac::generic::mask_u32::hac8ad933706b19ca> @ imm = #-0x2458
10008570: 4601         	mov	r1, r0
10008572: 9802         	ldr	r0, [sp, #0x8]
10008574: f7fd fe95    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x22d6
10008578: 9908         	ldr	r1, [sp, #0x20]
1000857a: f7fe fc6d    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x1726
1000857e: 4601         	mov	r1, r0
10008580: 9803         	ldr	r0, [sp, #0xc]
10008582: f7fe fc49    	bl	0x10006e18 <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::hc18d656116c887ea> @ imm = #-0x176e
10008586: 9804         	ldr	r0, [sp, #0x10]
10008588: b00e         	add	sp, #0x38
1000858a: bd80         	pop	{r7, pc}

1000858c <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::initialize::{{closure}}::h50360dbdbb82b458>:
1000858c: b5d0         	push	{r4, r6, r7, lr}
1000858e: af02         	add	r7, sp, #0x8
10008590: b092         	sub	sp, #0x48
10008592: aa06         	add	r2, sp, #0x18
10008594: 9201         	str	r2, [sp, #0x4]
10008596: 460a         	mov	r2, r1
10008598: 9204         	str	r2, [sp, #0x10]
1000859a: 4601         	mov	r1, r0
1000859c: 9801         	ldr	r0, [sp, #0x4]
1000859e: 6001         	str	r1, [r0]
100085a0: 6042         	str	r2, [r0, #0x4]
100085a2: 6182         	str	r2, [r0, #0x18]
100085a4: 61c2         	str	r2, [r0, #0x1c]
100085a6: ab0e         	add	r3, sp, #0x38
100085a8: 2100         	movs	r1, #0x0
100085aa: 7019         	strb	r1, [r3]
100085ac: 6102         	str	r2, [r0, #0x10]
100085ae: aa0a         	add	r2, sp, #0x28
100085b0: 7111         	strb	r1, [r2, #0x4]
100085b2: 6901         	ldr	r1, [r0, #0x10]
100085b4: 9100         	str	r1, [sp]
100085b6: 6941         	ldr	r1, [r0, #0x14]
100085b8: 2001         	movs	r0, #0x1
100085ba: 9002         	str	r0, [sp, #0x8]
100085bc: f7fe fc4c    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x1768
100085c0: f7fd fe50    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x2360
100085c4: 4601         	mov	r1, r0
100085c6: 9800         	ldr	r0, [sp]
100085c8: f7fe fc32    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x179c
100085cc: 9901         	ldr	r1, [sp, #0x4]
100085ce: 9802         	ldr	r0, [sp, #0x8]
100085d0: 9b04         	ldr	r3, [sp, #0x10]
100085d2: 624b         	str	r3, [r1, #0x24]
100085d4: 628b         	str	r3, [r1, #0x28]
100085d6: ac11         	add	r4, sp, #0x44
100085d8: 2205         	movs	r2, #0x5
100085da: 7022         	strb	r2, [r4]
100085dc: 608b         	str	r3, [r1, #0x8]
100085de: ab08         	add	r3, sp, #0x20
100085e0: 711a         	strb	r2, [r3, #0x4]
100085e2: 688a         	ldr	r2, [r1, #0x8]
100085e4: 9203         	str	r2, [sp, #0xc]
100085e6: 68c9         	ldr	r1, [r1, #0xc]
100085e8: f7fe fc36    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x1794
100085ec: f7fd fe3a    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x238c
100085f0: 4601         	mov	r1, r0
100085f2: 9803         	ldr	r0, [sp, #0xc]
100085f4: f7fe fc1c    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x17c8
100085f8: 9804         	ldr	r0, [sp, #0x10]
100085fa: b012         	add	sp, #0x48
100085fc: bdd0         	pop	{r4, r6, r7, pc}

100085fe <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::initialize::{{closure}}::hdf381b6c4862bd48>:
100085fe: b5d0         	push	{r4, r6, r7, lr}
10008600: af02         	add	r7, sp, #0x8
10008602: b092         	sub	sp, #0x48
10008604: aa06         	add	r2, sp, #0x18
10008606: 9201         	str	r2, [sp, #0x4]
10008608: 460a         	mov	r2, r1
1000860a: 9204         	str	r2, [sp, #0x10]
1000860c: 4601         	mov	r1, r0
1000860e: 9801         	ldr	r0, [sp, #0x4]
10008610: 6001         	str	r1, [r0]
10008612: 6042         	str	r2, [r0, #0x4]
10008614: 6182         	str	r2, [r0, #0x18]
10008616: 61c2         	str	r2, [r0, #0x1c]
10008618: ab0e         	add	r3, sp, #0x38
1000861a: 2100         	movs	r1, #0x0
1000861c: 7019         	strb	r1, [r3]
1000861e: 6102         	str	r2, [r0, #0x10]
10008620: aa0a         	add	r2, sp, #0x28
10008622: 7111         	strb	r1, [r2, #0x4]
10008624: 6901         	ldr	r1, [r0, #0x10]
10008626: 9100         	str	r1, [sp]
10008628: 6941         	ldr	r1, [r0, #0x14]
1000862a: 2001         	movs	r0, #0x1
1000862c: 9002         	str	r0, [sp, #0x8]
1000862e: f7fe fc13    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x17da
10008632: f7fd fe17    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x23d2
10008636: 4601         	mov	r1, r0
10008638: 9800         	ldr	r0, [sp]
1000863a: f7fe fbf9    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x180e
1000863e: 9901         	ldr	r1, [sp, #0x4]
10008640: 9802         	ldr	r0, [sp, #0x8]
10008642: 9b04         	ldr	r3, [sp, #0x10]
10008644: 624b         	str	r3, [r1, #0x24]
10008646: 628b         	str	r3, [r1, #0x28]
10008648: ac11         	add	r4, sp, #0x44
1000864a: 2205         	movs	r2, #0x5
1000864c: 7022         	strb	r2, [r4]
1000864e: 608b         	str	r3, [r1, #0x8]
10008650: ab08         	add	r3, sp, #0x20
10008652: 711a         	strb	r2, [r3, #0x4]
10008654: 688a         	ldr	r2, [r1, #0x8]
10008656: 9203         	str	r2, [sp, #0xc]
10008658: 68c9         	ldr	r1, [r1, #0xc]
1000865a: f7fe fbfd    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x1806
1000865e: f7fd fe01    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x23fe
10008662: 4601         	mov	r1, r0
10008664: 9803         	ldr	r0, [sp, #0xc]
10008666: f7fe fbe3    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x183a
1000866a: 9804         	ldr	r0, [sp, #0x10]
1000866c: b012         	add	sp, #0x48
1000866e: bdd0         	pop	{r4, r6, r7, pc}

10008670 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locking,D>::await_lock::h9e1b689c265129ca>:
10008670: b580         	push	{r7, lr}
10008672: af00         	add	r7, sp, #0x0
10008674: b08e         	sub	sp, #0x38
10008676: 9004         	str	r0, [sp, #0x10]
10008678: 3008         	adds	r0, #0x8
1000867a: 900d         	str	r0, [sp, #0x34]
1000867c: 4811         	ldr	r0, [pc, #0x44]         @ 0x100086c4 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locking,D>::await_lock::h9e1b689c265129ca+0x54>
1000867e: 9008         	str	r0, [sp, #0x20]
10008680: 9005         	str	r0, [sp, #0x14]
10008682: 900b         	str	r0, [sp, #0x2c]
10008684: 900c         	str	r0, [sp, #0x30]
10008686: f003 fd1e    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x3a3c
1000868a: 9003         	str	r0, [sp, #0xc]
1000868c: a803         	add	r0, sp, #0xc
1000868e: 9009         	str	r0, [sp, #0x24]
10008690: 9803         	ldr	r0, [sp, #0xc]
10008692: 0fc1         	lsrs	r1, r0, #0x1f
10008694: a80a         	add	r0, sp, #0x28
10008696: 7001         	strb	r1, [r0]
10008698: a802         	add	r0, sp, #0x8
1000869a: 7001         	strb	r1, [r0]
1000869c: 9006         	str	r0, [sp, #0x18]
1000869e: 9007         	str	r0, [sp, #0x1c]
100086a0: 7800         	ldrb	r0, [r0]
100086a2: 07c0         	lsls	r0, r0, #0x1f
100086a4: 2800         	cmp	r0, #0x0
100086a6: d004         	beq	0x100086b2 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locking,D>::await_lock::h9e1b689c265129ca+0x42> @ imm = #0x8
100086a8: e7ff         	b	0x100086aa <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locking,D>::await_lock::h9e1b689c265129ca+0x3a> @ imm = #-0x2
100086aa: a901         	add	r1, sp, #0x4
100086ac: 2000         	movs	r0, #0x0
100086ae: 7008         	strb	r0, [r1]
100086b0: e003         	b	0x100086ba <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locking,D>::await_lock::h9e1b689c265129ca+0x4a> @ imm = #0x6
100086b2: a901         	add	r1, sp, #0x4
100086b4: 2001         	movs	r0, #0x1
100086b6: 7008         	strb	r0, [r1]
100086b8: e7ff         	b	0x100086ba <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locking,D>::await_lock::h9e1b689c265129ca+0x4a> @ imm = #-0x2
100086ba: a801         	add	r0, sp, #0x4
100086bc: 7800         	ldrb	r0, [r0]
100086be: b00e         	add	sp, #0x38
100086c0: bd80         	pop	{r7, pc}
100086c2: 46c0         	mov	r8, r8
100086c4: 00 80 02 40  	.word	0x40028000

100086c8 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locking,D>::await_lock::hdb2eb347938d59ed>:
100086c8: b580         	push	{r7, lr}
100086ca: af00         	add	r7, sp, #0x0
100086cc: b08e         	sub	sp, #0x38
100086ce: 9004         	str	r0, [sp, #0x10]
100086d0: 3008         	adds	r0, #0x8
100086d2: 900d         	str	r0, [sp, #0x34]
100086d4: 4811         	ldr	r0, [pc, #0x44]         @ 0x1000871c <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locking,D>::await_lock::hdb2eb347938d59ed+0x54>
100086d6: 9008         	str	r0, [sp, #0x20]
100086d8: 9005         	str	r0, [sp, #0x14]
100086da: 900b         	str	r0, [sp, #0x2c]
100086dc: 900c         	str	r0, [sp, #0x30]
100086de: f003 fcf2    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x39e4
100086e2: 9003         	str	r0, [sp, #0xc]
100086e4: a803         	add	r0, sp, #0xc
100086e6: 9009         	str	r0, [sp, #0x24]
100086e8: 9803         	ldr	r0, [sp, #0xc]
100086ea: 0fc1         	lsrs	r1, r0, #0x1f
100086ec: a80a         	add	r0, sp, #0x28
100086ee: 7001         	strb	r1, [r0]
100086f0: a802         	add	r0, sp, #0x8
100086f2: 7001         	strb	r1, [r0]
100086f4: 9006         	str	r0, [sp, #0x18]
100086f6: 9007         	str	r0, [sp, #0x1c]
100086f8: 7800         	ldrb	r0, [r0]
100086fa: 07c0         	lsls	r0, r0, #0x1f
100086fc: 2800         	cmp	r0, #0x0
100086fe: d004         	beq	0x1000870a <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locking,D>::await_lock::hdb2eb347938d59ed+0x42> @ imm = #0x8
10008700: e7ff         	b	0x10008702 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locking,D>::await_lock::hdb2eb347938d59ed+0x3a> @ imm = #-0x2
10008702: a901         	add	r1, sp, #0x4
10008704: 2000         	movs	r0, #0x0
10008706: 7008         	strb	r0, [r1]
10008708: e003         	b	0x10008712 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locking,D>::await_lock::hdb2eb347938d59ed+0x4a> @ imm = #0x6
1000870a: a901         	add	r1, sp, #0x4
1000870c: 2001         	movs	r0, #0x1
1000870e: 7008         	strb	r0, [r1]
10008710: e7ff         	b	0x10008712 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locking,D>::await_lock::hdb2eb347938d59ed+0x4a> @ imm = #-0x2
10008712: a801         	add	r0, sp, #0x4
10008714: 7800         	ldrb	r0, [r0]
10008716: b00e         	add	sp, #0x38
10008718: bd80         	pop	{r7, pc}
1000871a: 46c0         	mov	r8, r8
1000871c: 00 c0 02 40  	.word	0x4002c000

10008720 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locking,D>::get_locked::h738cafb3e5a8a1ab>:
10008720: b580         	push	{r7, lr}
10008722: af00         	add	r7, sp, #0x0
10008724: b0a2         	sub	sp, #0x88
10008726: 9009         	str	r0, [sp, #0x24]
10008728: 4601         	mov	r1, r0
1000872a: 3108         	adds	r1, #0x8
1000872c: 9104         	str	r1, [sp, #0x10]
1000872e: 9121         	str	r1, [sp, #0x84]
10008730: 492c         	ldr	r1, [pc, #0xb0]         @ 0x100087e4 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locking,D>::get_locked::h738cafb3e5a8a1ab+0xc4>
10008732: 9105         	str	r1, [sp, #0x14]
10008734: 9117         	str	r1, [sp, #0x5c]
10008736: 1d01         	adds	r1, r0, #0x4
10008738: 9102         	str	r1, [sp, #0x8]
1000873a: 1d40         	adds	r0, r0, #0x5
1000873c: 9001         	str	r0, [sp, #0x4]
1000873e: 4a2a         	ldr	r2, [pc, #0xa8]         @ 0x100087e8 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locking,D>::get_locked::h738cafb3e5a8a1ab+0xc8>
10008740: 9203         	str	r2, [sp, #0xc]
10008742: 920f         	str	r2, [sp, #0x3c]
10008744: 9110         	str	r1, [sp, #0x40]
10008746: 9011         	str	r0, [sp, #0x44]
10008748: 2000         	movs	r0, #0x0
1000874a: 9007         	str	r0, [sp, #0x1c]
1000874c: f7fd fd8a    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x24ec
10008750: 4601         	mov	r1, r0
10008752: 2077         	movs	r0, #0x77
10008754: 0300         	lsls	r0, r0, #0xc
10008756: f7fd fda4    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x24b8
1000875a: 9907         	ldr	r1, [sp, #0x1c]
1000875c: f7fd fd99    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x24ce
10008760: 9901         	ldr	r1, [sp, #0x4]
10008762: 4602         	mov	r2, r0
10008764: 9802         	ldr	r0, [sp, #0x8]
10008766: 920e         	str	r2, [sp, #0x38]
10008768: aa0e         	add	r2, sp, #0x38
1000876a: f000 f90c    	bl	0x10008986 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locking,D>::get_locked::{{closure}}::h8d02059068195fa7> @ imm = #0x218
1000876e: 4601         	mov	r1, r0
10008770: 9803         	ldr	r0, [sp, #0xc]
10008772: 6809         	ldr	r1, [r1]
10008774: 901d         	str	r0, [sp, #0x74]
10008776: 911e         	str	r1, [sp, #0x78]
10008778: 901f         	str	r0, [sp, #0x7c]
1000877a: f003 fd0f    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x3a1e
1000877e: 9904         	ldr	r1, [sp, #0x10]
10008780: 9805         	ldr	r0, [sp, #0x14]
10008782: 9120         	str	r1, [sp, #0x80]
10008784: 9016         	str	r0, [sp, #0x58]
10008786: 4819         	ldr	r0, [pc, #0x64]         @ 0x100087ec <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locking,D>::get_locked::h738cafb3e5a8a1ab+0xcc>
10008788: 9008         	str	r0, [sp, #0x20]
1000878a: 9014         	str	r0, [sp, #0x50]
1000878c: 9018         	str	r0, [sp, #0x60]
1000878e: 9019         	str	r0, [sp, #0x64]
10008790: f003 fc99    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x3932
10008794: 4601         	mov	r1, r0
10008796: 9807         	ldr	r0, [sp, #0x1c]
10008798: 9106         	str	r1, [sp, #0x18]
1000879a: 9115         	str	r1, [sp, #0x54]
1000879c: 9112         	str	r1, [sp, #0x48]
1000879e: f7fd fd61    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x253e
100087a2: 4601         	mov	r1, r0
100087a4: 9806         	ldr	r0, [sp, #0x18]
100087a6: f7fd fd7c    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x2508
100087aa: 9907         	ldr	r1, [sp, #0x1c]
100087ac: f7fd fd71    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x251e
100087b0: 9013         	str	r0, [sp, #0x4c]
100087b2: a812         	add	r0, sp, #0x48
100087b4: a913         	add	r1, sp, #0x4c
100087b6: f000 f96b    	bl	0x10008a90 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locking,D>::get_locked::{{closure}}::h84abce23697e64dd> @ imm = #0x2d6
100087ba: 4601         	mov	r1, r0
100087bc: 9808         	ldr	r0, [sp, #0x20]
100087be: 6809         	ldr	r1, [r1]
100087c0: 901a         	str	r0, [sp, #0x68]
100087c2: 911b         	str	r1, [sp, #0x6c]
100087c4: 901c         	str	r0, [sp, #0x70]
100087c6: f003 fce9    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x39d2
100087ca: 9809         	ldr	r0, [sp, #0x24]
100087cc: 6801         	ldr	r1, [r0]
100087ce: 910d         	str	r1, [sp, #0x34]
100087d0: 6842         	ldr	r2, [r0, #0x4]
100087d2: 920b         	str	r2, [sp, #0x2c]
100087d4: 6800         	ldr	r0, [r0]
100087d6: 900a         	str	r0, [sp, #0x28]
100087d8: a80a         	add	r0, sp, #0x28
100087da: f7ff fa1e    	bl	0x10007c1a <rp2040_hal::pll::PhaseLockedLoop<S,D>::transition::hb05f7070c090dfe9> @ imm = #-0xbc4
100087de: b022         	add	sp, #0x88
100087e0: bd80         	pop	{r7, pc}
100087e2: 46c0         	mov	r8, r8
100087e4: 00 c0 02 40  	.word	0x4002c000
100087e8: 0c c0 02 40  	.word	0x4002c00c
100087ec: 04 c0 02 40  	.word	0x4002c004

100087f0 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locking,D>::get_locked::h8bfc9602ca33c8a6>:
100087f0: b580         	push	{r7, lr}
100087f2: af00         	add	r7, sp, #0x0
100087f4: b0a2         	sub	sp, #0x88
100087f6: 9009         	str	r0, [sp, #0x24]
100087f8: 4601         	mov	r1, r0
100087fa: 3108         	adds	r1, #0x8
100087fc: 9104         	str	r1, [sp, #0x10]
100087fe: 9121         	str	r1, [sp, #0x84]
10008800: 492c         	ldr	r1, [pc, #0xb0]         @ 0x100088b4 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locking,D>::get_locked::h8bfc9602ca33c8a6+0xc4>
10008802: 9105         	str	r1, [sp, #0x14]
10008804: 9117         	str	r1, [sp, #0x5c]
10008806: 1d01         	adds	r1, r0, #0x4
10008808: 9102         	str	r1, [sp, #0x8]
1000880a: 1d40         	adds	r0, r0, #0x5
1000880c: 9001         	str	r0, [sp, #0x4]
1000880e: 4a2a         	ldr	r2, [pc, #0xa8]         @ 0x100088b8 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locking,D>::get_locked::h8bfc9602ca33c8a6+0xc8>
10008810: 9203         	str	r2, [sp, #0xc]
10008812: 920f         	str	r2, [sp, #0x3c]
10008814: 9110         	str	r1, [sp, #0x40]
10008816: 9011         	str	r0, [sp, #0x44]
10008818: 2000         	movs	r0, #0x0
1000881a: 9007         	str	r0, [sp, #0x1c]
1000881c: f7fd fd22    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x25bc
10008820: 4601         	mov	r1, r0
10008822: 2077         	movs	r0, #0x77
10008824: 0300         	lsls	r0, r0, #0xc
10008826: f7fd fd3c    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x2588
1000882a: 9907         	ldr	r1, [sp, #0x1c]
1000882c: f7fd fd31    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x259e
10008830: 9901         	ldr	r1, [sp, #0x4]
10008832: 4602         	mov	r2, r0
10008834: 9802         	ldr	r0, [sp, #0x8]
10008836: 920e         	str	r2, [sp, #0x38]
10008838: aa0e         	add	r2, sp, #0x38
1000883a: f000 f841    	bl	0x100088c0 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locking,D>::get_locked::{{closure}}::h1f10828e4c8f0cac> @ imm = #0x82
1000883e: 4601         	mov	r1, r0
10008840: 9803         	ldr	r0, [sp, #0xc]
10008842: 6809         	ldr	r1, [r1]
10008844: 901d         	str	r0, [sp, #0x74]
10008846: 911e         	str	r1, [sp, #0x78]
10008848: 901f         	str	r0, [sp, #0x7c]
1000884a: f003 fca7    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x394e
1000884e: 9904         	ldr	r1, [sp, #0x10]
10008850: 9805         	ldr	r0, [sp, #0x14]
10008852: 9120         	str	r1, [sp, #0x80]
10008854: 9016         	str	r0, [sp, #0x58]
10008856: 4819         	ldr	r0, [pc, #0x64]         @ 0x100088bc <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locking,D>::get_locked::h8bfc9602ca33c8a6+0xcc>
10008858: 9008         	str	r0, [sp, #0x20]
1000885a: 9014         	str	r0, [sp, #0x50]
1000885c: 9018         	str	r0, [sp, #0x60]
1000885e: 9019         	str	r0, [sp, #0x64]
10008860: f003 fc31    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x3862
10008864: 4601         	mov	r1, r0
10008866: 9807         	ldr	r0, [sp, #0x1c]
10008868: 9106         	str	r1, [sp, #0x18]
1000886a: 9115         	str	r1, [sp, #0x54]
1000886c: 9112         	str	r1, [sp, #0x48]
1000886e: f7fd fcf9    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x260e
10008872: 4601         	mov	r1, r0
10008874: 9806         	ldr	r0, [sp, #0x18]
10008876: f7fd fd14    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x25d8
1000887a: 9907         	ldr	r1, [sp, #0x1c]
1000887c: f7fd fd09    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x25ee
10008880: 9013         	str	r0, [sp, #0x4c]
10008882: a812         	add	r0, sp, #0x48
10008884: a913         	add	r1, sp, #0x4c
10008886: f000 f8e1    	bl	0x10008a4c <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locking,D>::get_locked::{{closure}}::h7612b5b8f29a40d9> @ imm = #0x1c2
1000888a: 4601         	mov	r1, r0
1000888c: 9808         	ldr	r0, [sp, #0x20]
1000888e: 6809         	ldr	r1, [r1]
10008890: 901a         	str	r0, [sp, #0x68]
10008892: 911b         	str	r1, [sp, #0x6c]
10008894: 901c         	str	r0, [sp, #0x70]
10008896: f003 fc81    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x3902
1000889a: 9809         	ldr	r0, [sp, #0x24]
1000889c: 6801         	ldr	r1, [r0]
1000889e: 910d         	str	r1, [sp, #0x34]
100088a0: 6842         	ldr	r2, [r0, #0x4]
100088a2: 920b         	str	r2, [sp, #0x2c]
100088a4: 6800         	ldr	r0, [r0]
100088a6: 900a         	str	r0, [sp, #0x28]
100088a8: a80a         	add	r0, sp, #0x28
100088aa: f7ff f9af    	bl	0x10007c0c <rp2040_hal::pll::PhaseLockedLoop<S,D>::transition::h71423d422de1126f> @ imm = #-0xca2
100088ae: b022         	add	sp, #0x88
100088b0: bd80         	pop	{r7, pc}
100088b2: 46c0         	mov	r8, r8
100088b4: 00 80 02 40  	.word	0x40028000
100088b8: 0c 80 02 40  	.word	0x4002800c
100088bc: 04 80 02 40  	.word	0x40028004

100088c0 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locking,D>::get_locked::{{closure}}::h1f10828e4c8f0cac>:
100088c0: b580         	push	{r7, lr}
100088c2: af00         	add	r7, sp, #0x0
100088c4: b098         	sub	sp, #0x60
100088c6: 9206         	str	r2, [sp, #0x18]
100088c8: 9007         	str	r0, [sp, #0x1c]
100088ca: 9108         	str	r1, [sp, #0x20]
100088cc: 9209         	str	r2, [sp, #0x24]
100088ce: 9210         	str	r2, [sp, #0x40]
100088d0: 9211         	str	r2, [sp, #0x44]
100088d2: a812         	add	r0, sp, #0x48
100088d4: 2110         	movs	r1, #0x10
100088d6: 7001         	strb	r1, [r0]
100088d8: 9807         	ldr	r0, [sp, #0x1c]
100088da: 7800         	ldrb	r0, [r0]
100088dc: 9001         	str	r0, [sp, #0x4]
100088de: 920d         	str	r2, [sp, #0x34]
100088e0: aa0d         	add	r2, sp, #0x34
100088e2: 7111         	strb	r1, [r2, #0x4]
100088e4: a90f         	add	r1, sp, #0x3c
100088e6: 7008         	strb	r0, [r1]
100088e8: 980d         	ldr	r0, [sp, #0x34]
100088ea: 9000         	str	r0, [sp]
100088ec: f7fd fc0c    	bl	0x10006108 <rp2040_pac::generic::mask_u32::h42ec560ca9ea22d1> @ imm = #-0x27e8
100088f0: 990e         	ldr	r1, [sp, #0x38]
100088f2: f7fe fab1    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x1a9e
100088f6: f7fd fcb5    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x2696
100088fa: 4601         	mov	r1, r0
100088fc: 9800         	ldr	r0, [sp]
100088fe: f7fe fa97    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x1ad2
10008902: 9801         	ldr	r0, [sp, #0x4]
10008904: 990d         	ldr	r1, [sp, #0x34]
10008906: 9102         	str	r1, [sp, #0x8]
10008908: a916         	add	r1, sp, #0x58
1000890a: 7008         	strb	r0, [r1]
1000890c: f7fd fbfc    	bl	0x10006108 <rp2040_pac::generic::mask_u32::h42ec560ca9ea22d1> @ imm = #-0x2808
10008910: 4601         	mov	r1, r0
10008912: 9801         	ldr	r0, [sp, #0x4]
10008914: f7fd fcc5    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x2676
10008918: 990e         	ldr	r1, [sp, #0x38]
1000891a: f7fe fa9d    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x1ac6
1000891e: 4601         	mov	r1, r0
10008920: 9802         	ldr	r0, [sp, #0x8]
10008922: f7fe fa79    	bl	0x10006e18 <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::hc18d656116c887ea> @ imm = #-0x1b0e
10008926: 9a06         	ldr	r2, [sp, #0x18]
10008928: 9213         	str	r2, [sp, #0x4c]
1000892a: 9214         	str	r2, [sp, #0x50]
1000892c: a815         	add	r0, sp, #0x54
1000892e: 210c         	movs	r1, #0xc
10008930: 7001         	strb	r1, [r0]
10008932: 9808         	ldr	r0, [sp, #0x20]
10008934: 7800         	ldrb	r0, [r0]
10008936: 9004         	str	r0, [sp, #0x10]
10008938: 920a         	str	r2, [sp, #0x28]
1000893a: aa0a         	add	r2, sp, #0x28
1000893c: 7111         	strb	r1, [r2, #0x4]
1000893e: a90c         	add	r1, sp, #0x30
10008940: 7008         	strb	r0, [r1]
10008942: 980a         	ldr	r0, [sp, #0x28]
10008944: 9003         	str	r0, [sp, #0xc]
10008946: f7fd fbdf    	bl	0x10006108 <rp2040_pac::generic::mask_u32::h42ec560ca9ea22d1> @ imm = #-0x2842
1000894a: 990b         	ldr	r1, [sp, #0x2c]
1000894c: f7fe fa84    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x1af8
10008950: f7fd fc88    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x26f0
10008954: 4601         	mov	r1, r0
10008956: 9803         	ldr	r0, [sp, #0xc]
10008958: f7fe fa6a    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x1b2c
1000895c: 9804         	ldr	r0, [sp, #0x10]
1000895e: 990a         	ldr	r1, [sp, #0x28]
10008960: 9105         	str	r1, [sp, #0x14]
10008962: a917         	add	r1, sp, #0x5c
10008964: 7008         	strb	r0, [r1]
10008966: f7fd fbcf    	bl	0x10006108 <rp2040_pac::generic::mask_u32::h42ec560ca9ea22d1> @ imm = #-0x2862
1000896a: 4601         	mov	r1, r0
1000896c: 9804         	ldr	r0, [sp, #0x10]
1000896e: f7fd fc98    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x26d0
10008972: 990b         	ldr	r1, [sp, #0x2c]
10008974: f7fe fa70    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x1b20
10008978: 4601         	mov	r1, r0
1000897a: 9805         	ldr	r0, [sp, #0x14]
1000897c: f7fe fa4c    	bl	0x10006e18 <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::hc18d656116c887ea> @ imm = #-0x1b68
10008980: 9806         	ldr	r0, [sp, #0x18]
10008982: b018         	add	sp, #0x60
10008984: bd80         	pop	{r7, pc}

10008986 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locking,D>::get_locked::{{closure}}::h8d02059068195fa7>:
10008986: b580         	push	{r7, lr}
10008988: af00         	add	r7, sp, #0x0
1000898a: b098         	sub	sp, #0x60
1000898c: 9206         	str	r2, [sp, #0x18]
1000898e: 9007         	str	r0, [sp, #0x1c]
10008990: 9108         	str	r1, [sp, #0x20]
10008992: 9209         	str	r2, [sp, #0x24]
10008994: 9210         	str	r2, [sp, #0x40]
10008996: 9211         	str	r2, [sp, #0x44]
10008998: a812         	add	r0, sp, #0x48
1000899a: 2110         	movs	r1, #0x10
1000899c: 7001         	strb	r1, [r0]
1000899e: 9807         	ldr	r0, [sp, #0x1c]
100089a0: 7800         	ldrb	r0, [r0]
100089a2: 9001         	str	r0, [sp, #0x4]
100089a4: 920d         	str	r2, [sp, #0x34]
100089a6: aa0d         	add	r2, sp, #0x34
100089a8: 7111         	strb	r1, [r2, #0x4]
100089aa: a90f         	add	r1, sp, #0x3c
100089ac: 7008         	strb	r0, [r1]
100089ae: 980d         	ldr	r0, [sp, #0x34]
100089b0: 9000         	str	r0, [sp]
100089b2: f7fd fba9    	bl	0x10006108 <rp2040_pac::generic::mask_u32::h42ec560ca9ea22d1> @ imm = #-0x28ae
100089b6: 990e         	ldr	r1, [sp, #0x38]
100089b8: f7fe fa4e    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x1b64
100089bc: f7fd fc52    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x275c
100089c0: 4601         	mov	r1, r0
100089c2: 9800         	ldr	r0, [sp]
100089c4: f7fe fa34    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x1b98
100089c8: 9801         	ldr	r0, [sp, #0x4]
100089ca: 990d         	ldr	r1, [sp, #0x34]
100089cc: 9102         	str	r1, [sp, #0x8]
100089ce: a916         	add	r1, sp, #0x58
100089d0: 7008         	strb	r0, [r1]
100089d2: f7fd fb99    	bl	0x10006108 <rp2040_pac::generic::mask_u32::h42ec560ca9ea22d1> @ imm = #-0x28ce
100089d6: 4601         	mov	r1, r0
100089d8: 9801         	ldr	r0, [sp, #0x4]
100089da: f7fd fc62    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x273c
100089de: 990e         	ldr	r1, [sp, #0x38]
100089e0: f7fe fa3a    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x1b8c
100089e4: 4601         	mov	r1, r0
100089e6: 9802         	ldr	r0, [sp, #0x8]
100089e8: f7fe fa16    	bl	0x10006e18 <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::hc18d656116c887ea> @ imm = #-0x1bd4
100089ec: 9a06         	ldr	r2, [sp, #0x18]
100089ee: 9213         	str	r2, [sp, #0x4c]
100089f0: 9214         	str	r2, [sp, #0x50]
100089f2: a815         	add	r0, sp, #0x54
100089f4: 210c         	movs	r1, #0xc
100089f6: 7001         	strb	r1, [r0]
100089f8: 9808         	ldr	r0, [sp, #0x20]
100089fa: 7800         	ldrb	r0, [r0]
100089fc: 9004         	str	r0, [sp, #0x10]
100089fe: 920a         	str	r2, [sp, #0x28]
10008a00: aa0a         	add	r2, sp, #0x28
10008a02: 7111         	strb	r1, [r2, #0x4]
10008a04: a90c         	add	r1, sp, #0x30
10008a06: 7008         	strb	r0, [r1]
10008a08: 980a         	ldr	r0, [sp, #0x28]
10008a0a: 9003         	str	r0, [sp, #0xc]
10008a0c: f7fd fb7c    	bl	0x10006108 <rp2040_pac::generic::mask_u32::h42ec560ca9ea22d1> @ imm = #-0x2908
10008a10: 990b         	ldr	r1, [sp, #0x2c]
10008a12: f7fe fa21    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x1bbe
10008a16: f7fd fc25    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x27b6
10008a1a: 4601         	mov	r1, r0
10008a1c: 9803         	ldr	r0, [sp, #0xc]
10008a1e: f7fe fa07    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x1bf2
10008a22: 9804         	ldr	r0, [sp, #0x10]
10008a24: 990a         	ldr	r1, [sp, #0x28]
10008a26: 9105         	str	r1, [sp, #0x14]
10008a28: a917         	add	r1, sp, #0x5c
10008a2a: 7008         	strb	r0, [r1]
10008a2c: f7fd fb6c    	bl	0x10006108 <rp2040_pac::generic::mask_u32::h42ec560ca9ea22d1> @ imm = #-0x2928
10008a30: 4601         	mov	r1, r0
10008a32: 9804         	ldr	r0, [sp, #0x10]
10008a34: f7fd fc35    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x2796
10008a38: 990b         	ldr	r1, [sp, #0x2c]
10008a3a: f7fe fa0d    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x1be6
10008a3e: 4601         	mov	r1, r0
10008a40: 9805         	ldr	r0, [sp, #0x14]
10008a42: f7fe f9e9    	bl	0x10006e18 <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::hc18d656116c887ea> @ imm = #-0x1c2e
10008a46: 9806         	ldr	r0, [sp, #0x18]
10008a48: b018         	add	sp, #0x60
10008a4a: bd80         	pop	{r7, pc}

10008a4c <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locking,D>::get_locked::{{closure}}::h7612b5b8f29a40d9>:
10008a4c: b580         	push	{r7, lr}
10008a4e: af00         	add	r7, sp, #0x0
10008a50: b08c         	sub	sp, #0x30
10008a52: aa05         	add	r2, sp, #0x14
10008a54: 9201         	str	r2, [sp, #0x4]
10008a56: 460a         	mov	r2, r1
10008a58: 9203         	str	r2, [sp, #0xc]
10008a5a: 4601         	mov	r1, r0
10008a5c: 9801         	ldr	r0, [sp, #0x4]
10008a5e: 6001         	str	r1, [r0]
10008a60: 6042         	str	r2, [r0, #0x4]
10008a62: 6102         	str	r2, [r0, #0x10]
10008a64: 6142         	str	r2, [r0, #0x14]
10008a66: ab0b         	add	r3, sp, #0x2c
10008a68: 2103         	movs	r1, #0x3
10008a6a: 7019         	strb	r1, [r3]
10008a6c: 6082         	str	r2, [r0, #0x8]
10008a6e: aa07         	add	r2, sp, #0x1c
10008a70: 7111         	strb	r1, [r2, #0x4]
10008a72: 6881         	ldr	r1, [r0, #0x8]
10008a74: 9102         	str	r1, [sp, #0x8]
10008a76: 68c1         	ldr	r1, [r0, #0xc]
10008a78: 2001         	movs	r0, #0x1
10008a7a: f7fe f9ed    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x1c26
10008a7e: f7fd fbf1    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x281e
10008a82: 4601         	mov	r1, r0
10008a84: 9802         	ldr	r0, [sp, #0x8]
10008a86: f7fe f9d3    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x1c5a
10008a8a: 9803         	ldr	r0, [sp, #0xc]
10008a8c: b00c         	add	sp, #0x30
10008a8e: bd80         	pop	{r7, pc}

10008a90 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locking,D>::get_locked::{{closure}}::h84abce23697e64dd>:
10008a90: b580         	push	{r7, lr}
10008a92: af00         	add	r7, sp, #0x0
10008a94: b08c         	sub	sp, #0x30
10008a96: aa05         	add	r2, sp, #0x14
10008a98: 9201         	str	r2, [sp, #0x4]
10008a9a: 460a         	mov	r2, r1
10008a9c: 9203         	str	r2, [sp, #0xc]
10008a9e: 4601         	mov	r1, r0
10008aa0: 9801         	ldr	r0, [sp, #0x4]
10008aa2: 6001         	str	r1, [r0]
10008aa4: 6042         	str	r2, [r0, #0x4]
10008aa6: 6102         	str	r2, [r0, #0x10]
10008aa8: 6142         	str	r2, [r0, #0x14]
10008aaa: ab0b         	add	r3, sp, #0x2c
10008aac: 2103         	movs	r1, #0x3
10008aae: 7019         	strb	r1, [r3]
10008ab0: 6082         	str	r2, [r0, #0x8]
10008ab2: aa07         	add	r2, sp, #0x1c
10008ab4: 7111         	strb	r1, [r2, #0x4]
10008ab6: 6881         	ldr	r1, [r0, #0x8]
10008ab8: 9102         	str	r1, [sp, #0x8]
10008aba: 68c1         	ldr	r1, [r0, #0xc]
10008abc: 2001         	movs	r0, #0x1
10008abe: f7fe f9cb    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x1c6a
10008ac2: f7fd fbcf    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x2862
10008ac6: 4601         	mov	r1, r0
10008ac8: 9802         	ldr	r0, [sp, #0x8]
10008aca: f7fe f9b1    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x1c9e
10008ace: 9803         	ldr	r0, [sp, #0xc]
10008ad0: b00c         	add	sp, #0x30
10008ad2: bd80         	pop	{r7, pc}

10008ad4 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locked,D>::operating_frequency::h4dff30fccd158734>:
10008ad4: b580         	push	{r7, lr}
10008ad6: af00         	add	r7, sp, #0x0
10008ad8: b081         	sub	sp, #0x4
10008ada: 9000         	str	r0, [sp]
10008adc: 6800         	ldr	r0, [r0]
10008ade: b001         	add	sp, #0x4
10008ae0: bd80         	pop	{r7, pc}

10008ae2 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locked,D>::operating_frequency::hfd13e749997f7c71>:
10008ae2: b580         	push	{r7, lr}
10008ae4: af00         	add	r7, sp, #0x0
10008ae6: b081         	sub	sp, #0x4
10008ae8: 9000         	str	r0, [sp]
10008aea: 6800         	ldr	r0, [r0]
10008aec: b001         	add	sp, #0x4
10008aee: bd80         	pop	{r7, pc}

10008af0 <rp2040_hal::pll::setup_pll_blocking::h4f5c7a6e330c938e>:
10008af0: b580         	push	{r7, lr}
10008af2: af00         	add	r7, sp, #0x0
10008af4: b09a         	sub	sp, #0x68
10008af6: 9303         	str	r3, [sp, #0xc]
10008af8: 9204         	str	r2, [sp, #0x10]
10008afa: 9105         	str	r1, [sp, #0x14]
10008afc: 9006         	str	r0, [sp, #0x18]
10008afe: 68b8         	ldr	r0, [r7, #0x8]
10008b00: 9007         	str	r0, [sp, #0x1c]
10008b02: 9116         	str	r1, [sp, #0x58]
10008b04: 9317         	str	r3, [sp, #0x5c]
10008b06: e7ff         	b	0x10008b08 <rp2040_hal::pll::setup_pll_blocking::h4f5c7a6e330c938e+0x18> @ imm = #-0x2
10008b08: 9803         	ldr	r0, [sp, #0xc]
10008b0a: 3014         	adds	r0, #0x14
10008b0c: f001 f9aa    	bl	0x10009e64 <rp2040_hal::clocks::SystemClock::reset_source_await::hc2d2060efec5c693> @ imm = #0x1354
10008b10: 4601         	mov	r1, r0
10008b12: a808         	add	r0, sp, #0x20
10008b14: 7001         	strb	r1, [r0]
10008b16: 7800         	ldrb	r0, [r0]
10008b18: 07c0         	lsls	r0, r0, #0x1f
10008b1a: 2800         	cmp	r0, #0x0
10008b1c: d101         	bne	0x10008b22 <rp2040_hal::pll::setup_pll_blocking::h4f5c7a6e330c938e+0x32> @ imm = #0x2
10008b1e: e7ff         	b	0x10008b20 <rp2040_hal::pll::setup_pll_blocking::h4f5c7a6e330c938e+0x30> @ imm = #-0x2
10008b20: e000         	b	0x10008b24 <rp2040_hal::pll::setup_pll_blocking::h4f5c7a6e330c938e+0x34> @ imm = #0x0
10008b22: e7f1         	b	0x10008b08 <rp2040_hal::pll::setup_pll_blocking::h4f5c7a6e330c938e+0x18> @ imm = #-0x1e
10008b24: 9803         	ldr	r0, [sp, #0xc]
10008b26: 3010         	adds	r0, #0x10
10008b28: f000 fdd4    	bl	0x100096d4 <rp2040_hal::clocks::ReferenceClock::reset_source_await::h2c80dcbb4ecac84f> @ imm = #0xba8
10008b2c: 4601         	mov	r1, r0
10008b2e: a809         	add	r0, sp, #0x24
10008b30: 7001         	strb	r1, [r0]
10008b32: 7800         	ldrb	r0, [r0]
10008b34: 07c0         	lsls	r0, r0, #0x1f
10008b36: 2800         	cmp	r0, #0x0
10008b38: d114         	bne	0x10008b64 <rp2040_hal::pll::setup_pll_blocking::h4f5c7a6e330c938e+0x74> @ imm = #0x28
10008b3a: e7ff         	b	0x10008b3c <rp2040_hal::pll::setup_pll_blocking::h4f5c7a6e330c938e+0x4c> @ imm = #-0x2
10008b3c: 9805         	ldr	r0, [sp, #0x14]
10008b3e: f7fe fa27    	bl	0x10006f90 <fugit::rate::Rate<u32,_,_>::convert::haff41e7e326ec8e6> @ imm = #-0x1bb2
10008b42: 9a04         	ldr	r2, [sp, #0x10]
10008b44: 4601         	mov	r1, r0
10008b46: a80e         	add	r0, sp, #0x38
10008b48: 9001         	str	r0, [sp, #0x4]
10008b4a: f7ff f86d    	bl	0x10007c28 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hba21c74795197b9d> @ imm = #-0xf26
10008b4e: 9901         	ldr	r1, [sp, #0x4]
10008b50: a80a         	add	r0, sp, #0x28
10008b52: 9002         	str	r0, [sp, #0x8]
10008b54: f7fe fb1c    	bl	0x10007190 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h36a156e8c0de1ad1E> @ imm = #-0x19c8
10008b58: 9802         	ldr	r0, [sp, #0x8]
10008b5a: 7800         	ldrb	r0, [r0]
10008b5c: 07c0         	lsls	r0, r0, #0x1f
10008b5e: 2800         	cmp	r0, #0x0
10008b60: d001         	beq	0x10008b66 <rp2040_hal::pll::setup_pll_blocking::h4f5c7a6e330c938e+0x76> @ imm = #0x2
10008b62: e00c         	b	0x10008b7e <rp2040_hal::pll::setup_pll_blocking::h4f5c7a6e330c938e+0x8e> @ imm = #0x18
10008b64: e7de         	b	0x10008b24 <rp2040_hal::pll::setup_pll_blocking::h4f5c7a6e330c938e+0x34> @ imm = #-0x44
10008b66: 9a07         	ldr	r2, [sp, #0x1c]
10008b68: 9806         	ldr	r0, [sp, #0x18]
10008b6a: 990d         	ldr	r1, [sp, #0x34]
10008b6c: 9114         	str	r1, [sp, #0x50]
10008b6e: 990c         	ldr	r1, [sp, #0x30]
10008b70: 9113         	str	r1, [sp, #0x4c]
10008b72: 990b         	ldr	r1, [sp, #0x2c]
10008b74: 9112         	str	r1, [sp, #0x48]
10008b76: a912         	add	r1, sp, #0x48
10008b78: f000 f884    	bl	0x10008c84 <rp2040_hal::pll::start_pll_blocking::hdd990bddce116342> @ imm = #0x108
10008b7c: e008         	b	0x10008b90 <rp2040_hal::pll::setup_pll_blocking::h4f5c7a6e330c938e+0xa0> @ imm = #0x10
10008b7e: 9806         	ldr	r0, [sp, #0x18]
10008b80: a90a         	add	r1, sp, #0x28
10008b82: 7849         	ldrb	r1, [r1, #0x1]
10008b84: aa19         	add	r2, sp, #0x64
10008b86: 7011         	strb	r1, [r2]
10008b88: 4a02         	ldr	r2, [pc, #0x8]          @ 0x10008b94 <rp2040_hal::pll::setup_pll_blocking::h4f5c7a6e330c938e+0xa4>
10008b8a: f7fd faec    	bl	0x10006166 <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h286b0f2a9ab54df0E> @ imm = #-0x2a28
10008b8e: e7ff         	b	0x10008b90 <rp2040_hal::pll::setup_pll_blocking::h4f5c7a6e330c938e+0xa0> @ imm = #-0x2
10008b90: b01a         	add	sp, #0x68
10008b92: bd80         	pop	{r7, pc}
10008b94: 20 1e 01 10  	.word	0x10011e20

10008b98 <rp2040_hal::pll::setup_pll_blocking::h5946ec6fed6c7a1e>:
10008b98: b580         	push	{r7, lr}
10008b9a: af00         	add	r7, sp, #0x0
10008b9c: b09a         	sub	sp, #0x68
10008b9e: 9303         	str	r3, [sp, #0xc]
10008ba0: 9204         	str	r2, [sp, #0x10]
10008ba2: 9105         	str	r1, [sp, #0x14]
10008ba4: 9006         	str	r0, [sp, #0x18]
10008ba6: 68b8         	ldr	r0, [r7, #0x8]
10008ba8: 9007         	str	r0, [sp, #0x1c]
10008baa: 9116         	str	r1, [sp, #0x58]
10008bac: 9317         	str	r3, [sp, #0x5c]
10008bae: e7ff         	b	0x10008bb0 <rp2040_hal::pll::setup_pll_blocking::h5946ec6fed6c7a1e+0x18> @ imm = #-0x2
10008bb0: 9803         	ldr	r0, [sp, #0xc]
10008bb2: 3014         	adds	r0, #0x14
10008bb4: f001 f956    	bl	0x10009e64 <rp2040_hal::clocks::SystemClock::reset_source_await::hc2d2060efec5c693> @ imm = #0x12ac
10008bb8: 4601         	mov	r1, r0
10008bba: a808         	add	r0, sp, #0x20
10008bbc: 7001         	strb	r1, [r0]
10008bbe: 7800         	ldrb	r0, [r0]
10008bc0: 07c0         	lsls	r0, r0, #0x1f
10008bc2: 2800         	cmp	r0, #0x0
10008bc4: d101         	bne	0x10008bca <rp2040_hal::pll::setup_pll_blocking::h5946ec6fed6c7a1e+0x32> @ imm = #0x2
10008bc6: e7ff         	b	0x10008bc8 <rp2040_hal::pll::setup_pll_blocking::h5946ec6fed6c7a1e+0x30> @ imm = #-0x2
10008bc8: e000         	b	0x10008bcc <rp2040_hal::pll::setup_pll_blocking::h5946ec6fed6c7a1e+0x34> @ imm = #0x0
10008bca: e7f1         	b	0x10008bb0 <rp2040_hal::pll::setup_pll_blocking::h5946ec6fed6c7a1e+0x18> @ imm = #-0x1e
10008bcc: 9803         	ldr	r0, [sp, #0xc]
10008bce: 3010         	adds	r0, #0x10
10008bd0: f000 fd80    	bl	0x100096d4 <rp2040_hal::clocks::ReferenceClock::reset_source_await::h2c80dcbb4ecac84f> @ imm = #0xb00
10008bd4: 4601         	mov	r1, r0
10008bd6: a809         	add	r0, sp, #0x24
10008bd8: 7001         	strb	r1, [r0]
10008bda: 7800         	ldrb	r0, [r0]
10008bdc: 07c0         	lsls	r0, r0, #0x1f
10008bde: 2800         	cmp	r0, #0x0
10008be0: d114         	bne	0x10008c0c <rp2040_hal::pll::setup_pll_blocking::h5946ec6fed6c7a1e+0x74> @ imm = #0x28
10008be2: e7ff         	b	0x10008be4 <rp2040_hal::pll::setup_pll_blocking::h5946ec6fed6c7a1e+0x4c> @ imm = #-0x2
10008be4: 9805         	ldr	r0, [sp, #0x14]
10008be6: f7fe f9d3    	bl	0x10006f90 <fugit::rate::Rate<u32,_,_>::convert::haff41e7e326ec8e6> @ imm = #-0x1c5a
10008bea: 9a04         	ldr	r2, [sp, #0x10]
10008bec: 4601         	mov	r1, r0
10008bee: a80e         	add	r0, sp, #0x38
10008bf0: 9001         	str	r0, [sp, #0x4]
10008bf2: f7ff f94f    	bl	0x10007e94 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::new::hc28f34ab920d20d6> @ imm = #-0xd62
10008bf6: 9901         	ldr	r1, [sp, #0x4]
10008bf8: a80a         	add	r0, sp, #0x28
10008bfa: 9002         	str	r0, [sp, #0x8]
10008bfc: f7fe fa54    	bl	0x100070a8 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h1ba1730ee47dc252E> @ imm = #-0x1b58
10008c00: 9802         	ldr	r0, [sp, #0x8]
10008c02: 7800         	ldrb	r0, [r0]
10008c04: 07c0         	lsls	r0, r0, #0x1f
10008c06: 2800         	cmp	r0, #0x0
10008c08: d001         	beq	0x10008c0e <rp2040_hal::pll::setup_pll_blocking::h5946ec6fed6c7a1e+0x76> @ imm = #0x2
10008c0a: e00c         	b	0x10008c26 <rp2040_hal::pll::setup_pll_blocking::h5946ec6fed6c7a1e+0x8e> @ imm = #0x18
10008c0c: e7de         	b	0x10008bcc <rp2040_hal::pll::setup_pll_blocking::h5946ec6fed6c7a1e+0x34> @ imm = #-0x44
10008c0e: 9a07         	ldr	r2, [sp, #0x1c]
10008c10: 9806         	ldr	r0, [sp, #0x18]
10008c12: 990d         	ldr	r1, [sp, #0x34]
10008c14: 9114         	str	r1, [sp, #0x50]
10008c16: 990c         	ldr	r1, [sp, #0x30]
10008c18: 9113         	str	r1, [sp, #0x4c]
10008c1a: 990b         	ldr	r1, [sp, #0x2c]
10008c1c: 9112         	str	r1, [sp, #0x48]
10008c1e: a912         	add	r1, sp, #0x48
10008c20: f000 f80e    	bl	0x10008c40 <rp2040_hal::pll::start_pll_blocking::hdb052871734d92b1> @ imm = #0x1c
10008c24: e008         	b	0x10008c38 <rp2040_hal::pll::setup_pll_blocking::h5946ec6fed6c7a1e+0xa0> @ imm = #0x10
10008c26: 9806         	ldr	r0, [sp, #0x18]
10008c28: a90a         	add	r1, sp, #0x28
10008c2a: 7849         	ldrb	r1, [r1, #0x1]
10008c2c: aa19         	add	r2, sp, #0x64
10008c2e: 7011         	strb	r1, [r2]
10008c30: 4a02         	ldr	r2, [pc, #0x8]          @ 0x10008c3c <rp2040_hal::pll::setup_pll_blocking::h5946ec6fed6c7a1e+0xa4>
10008c32: f7fd fadd    	bl	0x100061f0 <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hc2d2a418d9d712d5E> @ imm = #-0x2a46
10008c36: e7ff         	b	0x10008c38 <rp2040_hal::pll::setup_pll_blocking::h5946ec6fed6c7a1e+0xa0> @ imm = #-0x2
10008c38: b01a         	add	sp, #0x68
10008c3a: bd80         	pop	{r7, pc}
10008c3c: 20 1e 01 10  	.word	0x10011e20

10008c40 <rp2040_hal::pll::start_pll_blocking::hdb052871734d92b1>:
10008c40: b580         	push	{r7, lr}
10008c42: af00         	add	r7, sp, #0x0
10008c44: b088         	sub	sp, #0x20
10008c46: 9000         	str	r0, [sp]
10008c48: 9206         	str	r2, [sp, #0x18]
10008c4a: a801         	add	r0, sp, #0x4
10008c4c: f7ff fb18    	bl	0x10008280 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::initialize::h850bbd421d41c72e> @ imm = #-0x9d0
10008c50: e7ff         	b	0x10008c52 <rp2040_hal::pll::start_pll_blocking::hdb052871734d92b1+0x12> @ imm = #-0x2
10008c52: a801         	add	r0, sp, #0x4
10008c54: f7ff fd0c    	bl	0x10008670 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locking,D>::await_lock::h9e1b689c265129ca> @ imm = #-0x5e8
10008c58: 4601         	mov	r1, r0
10008c5a: a803         	add	r0, sp, #0xc
10008c5c: 7001         	strb	r1, [r0]
10008c5e: 7800         	ldrb	r0, [r0]
10008c60: 07c0         	lsls	r0, r0, #0x1f
10008c62: 2800         	cmp	r0, #0x0
10008c64: d10d         	bne	0x10008c82 <rp2040_hal::pll::start_pll_blocking::hdb052871734d92b1+0x42> @ imm = #0x1a
10008c66: e7ff         	b	0x10008c68 <rp2040_hal::pll::start_pll_blocking::hdb052871734d92b1+0x28> @ imm = #-0x2
10008c68: 9802         	ldr	r0, [sp, #0x8]
10008c6a: 9005         	str	r0, [sp, #0x14]
10008c6c: 9801         	ldr	r0, [sp, #0x4]
10008c6e: 9004         	str	r0, [sp, #0x10]
10008c70: a804         	add	r0, sp, #0x10
10008c72: f7ff fdbd    	bl	0x100087f0 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locking,D>::get_locked::h8bfc9602ca33c8a6> @ imm = #-0x486
10008c76: 9900         	ldr	r1, [sp]
10008c78: 6048         	str	r0, [r1, #0x4]
10008c7a: 2000         	movs	r0, #0x0
10008c7c: 7008         	strb	r0, [r1]
10008c7e: b008         	add	sp, #0x20
10008c80: bd80         	pop	{r7, pc}
10008c82: e7e6         	b	0x10008c52 <rp2040_hal::pll::start_pll_blocking::hdb052871734d92b1+0x12> @ imm = #-0x34

10008c84 <rp2040_hal::pll::start_pll_blocking::hdd990bddce116342>:
10008c84: b580         	push	{r7, lr}
10008c86: af00         	add	r7, sp, #0x0
10008c88: b088         	sub	sp, #0x20
10008c8a: 9000         	str	r0, [sp]
10008c8c: 9206         	str	r2, [sp, #0x18]
10008c8e: a801         	add	r0, sp, #0x4
10008c90: f7ff fa48    	bl	0x10008124 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Disabled,D>::initialize::h700fd4a62749c17c> @ imm = #-0xb70
10008c94: e7ff         	b	0x10008c96 <rp2040_hal::pll::start_pll_blocking::hdd990bddce116342+0x12> @ imm = #-0x2
10008c96: a801         	add	r0, sp, #0x4
10008c98: f7ff fd16    	bl	0x100086c8 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locking,D>::await_lock::hdb2eb347938d59ed> @ imm = #-0x5d4
10008c9c: 4601         	mov	r1, r0
10008c9e: a803         	add	r0, sp, #0xc
10008ca0: 7001         	strb	r1, [r0]
10008ca2: 7800         	ldrb	r0, [r0]
10008ca4: 07c0         	lsls	r0, r0, #0x1f
10008ca6: 2800         	cmp	r0, #0x0
10008ca8: d10d         	bne	0x10008cc6 <rp2040_hal::pll::start_pll_blocking::hdd990bddce116342+0x42> @ imm = #0x1a
10008caa: e7ff         	b	0x10008cac <rp2040_hal::pll::start_pll_blocking::hdd990bddce116342+0x28> @ imm = #-0x2
10008cac: 9802         	ldr	r0, [sp, #0x8]
10008cae: 9005         	str	r0, [sp, #0x14]
10008cb0: 9801         	ldr	r0, [sp, #0x4]
10008cb2: 9004         	str	r0, [sp, #0x10]
10008cb4: a804         	add	r0, sp, #0x10
10008cb6: f7ff fd33    	bl	0x10008720 <rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locking,D>::get_locked::h738cafb3e5a8a1ab> @ imm = #-0x59a
10008cba: 9900         	ldr	r1, [sp]
10008cbc: 6048         	str	r0, [r1, #0x4]
10008cbe: 2000         	movs	r0, #0x0
10008cc0: 7008         	strb	r0, [r1]
10008cc2: b008         	add	sp, #0x20
10008cc4: bd80         	pop	{r7, pc}
10008cc6: e7e6         	b	0x10008c96 <rp2040_hal::pll::start_pll_blocking::hdd990bddce116342+0x12> @ imm = #-0x34

10008cc8 <rp2040_hal::sio::Sio::new::he4d0de63e8de376d>:
10008cc8: b580         	push	{r7, lr}
10008cca: af00         	add	r7, sp, #0x0
10008ccc: b081         	sub	sp, #0x4
10008cce: b001         	add	sp, #0x4
10008cd0: bd80         	pop	{r7, pc}
10008cd2: d4d4         	bmi	0x10008c7e <rp2040_hal::pll::start_pll_blocking::hdb052871734d92b1+0x3e> @ imm = #-0x58

10008cd4 <rp2040_hal::sio::Sio::core::h96af296b85c54a41>:
10008cd4: b580         	push	{r7, lr}
10008cd6: af00         	add	r7, sp, #0x0
10008cd8: b090         	sub	sp, #0x40
10008cda: 200d         	movs	r0, #0xd
10008cdc: 0700         	lsls	r0, r0, #0x1c
10008cde: 900b         	str	r0, [sp, #0x2c]
10008ce0: 900c         	str	r0, [sp, #0x30]
10008ce2: 900e         	str	r0, [sp, #0x38]
10008ce4: 900f         	str	r0, [sp, #0x3c]
10008ce6: f003 f9ee    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x33dc
10008cea: 9003         	str	r0, [sp, #0xc]
10008cec: a803         	add	r0, sp, #0xc
10008cee: 900d         	str	r0, [sp, #0x34]
10008cf0: 9803         	ldr	r0, [sp, #0xc]
10008cf2: 9001         	str	r0, [sp, #0x4]
10008cf4: 0600         	lsls	r0, r0, #0x18
10008cf6: 2800         	cmp	r0, #0x0
10008cf8: d011         	beq	0x10008d1e <rp2040_hal::sio::Sio::core::h96af296b85c54a41+0x4a> @ imm = #0x22
10008cfa: e7ff         	b	0x10008cfc <rp2040_hal::sio::Sio::core::h96af296b85c54a41+0x28> @ imm = #-0x2
10008cfc: 9801         	ldr	r0, [sp, #0x4]
10008cfe: b2c0         	uxtb	r0, r0
10008d00: 2801         	cmp	r0, #0x1
10008d02: d010         	beq	0x10008d26 <rp2040_hal::sio::Sio::core::h96af296b85c54a41+0x52> @ imm = #0x20
10008d04: e7ff         	b	0x10008d06 <rp2040_hal::sio::Sio::core::h96af296b85c54a41+0x32> @ imm = #-0x2
10008d06: f7fd fb50    	bl	0x100063aa <core::fmt::rt::Argument::none::h82ccfbffa6d2b9d1> @ imm = #-0x2960
10008d0a: 490b         	ldr	r1, [pc, #0x2c]         @ 0x10008d38 <rp2040_hal::sio::Sio::core::h96af296b85c54a41+0x64>
10008d0c: a804         	add	r0, sp, #0x10
10008d0e: 9000         	str	r0, [sp]
10008d10: aa0a         	add	r2, sp, #0x28
10008d12: f7fd fb4d    	bl	0x100063b0 <core::fmt::Arguments::new_v1::hbda2e269fb3c02c4> @ imm = #-0x2966
10008d16: 9800         	ldr	r0, [sp]
10008d18: 4908         	ldr	r1, [pc, #0x20]         @ 0x10008d3c <rp2040_hal::sio::Sio::core::h96af296b85c54a41+0x68>
10008d1a: f003 fb2f    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #0x365e
10008d1e: a902         	add	r1, sp, #0x8
10008d20: 2000         	movs	r0, #0x0
10008d22: 7008         	strb	r0, [r1]
10008d24: e003         	b	0x10008d2e <rp2040_hal::sio::Sio::core::h96af296b85c54a41+0x5a> @ imm = #0x6
10008d26: a902         	add	r1, sp, #0x8
10008d28: 2001         	movs	r0, #0x1
10008d2a: 7008         	strb	r0, [r1]
10008d2c: e7ff         	b	0x10008d2e <rp2040_hal::sio::Sio::core::h96af296b85c54a41+0x5a> @ imm = #-0x2
10008d2e: a802         	add	r0, sp, #0x8
10008d30: 7800         	ldrb	r0, [r0]
10008d32: b010         	add	sp, #0x40
10008d34: bd80         	pop	{r7, pc}
10008d36: 46c0         	mov	r8, r8
10008d38: 74 1e 01 10  	.word	0x10011e74
10008d3c: d8 1e 01 10  	.word	0x10011ed8

10008d40 <rp2040_hal::sio::Spinlock<_>::try_claim::h05cb952823ebb363>:
10008d40: b580         	push	{r7, lr}
10008d42: af00         	add	r7, sp, #0x0
10008d44: b08a         	sub	sp, #0x28
10008d46: 200d         	movs	r0, #0xd
10008d48: 0700         	lsls	r0, r0, #0x1c
10008d4a: 9002         	str	r0, [sp, #0x8]
10008d4c: 9004         	str	r0, [sp, #0x10]
10008d4e: 201f         	movs	r0, #0x1f
10008d50: 9005         	str	r0, [sp, #0x14]
10008d52: 480d         	ldr	r0, [pc, #0x34]         @ 0x10008d88 <rp2040_hal::sio::Spinlock<_>::try_claim::h05cb952823ebb363+0x48>
10008d54: 9006         	str	r0, [sp, #0x18]
10008d56: 9008         	str	r0, [sp, #0x20]
10008d58: 9009         	str	r0, [sp, #0x24]
10008d5a: f003 f9b4    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x3368
10008d5e: 9001         	str	r0, [sp, #0x4]
10008d60: a801         	add	r0, sp, #0x4
10008d62: 9007         	str	r0, [sp, #0x1c]
10008d64: 9801         	ldr	r0, [sp, #0x4]
10008d66: 9003         	str	r0, [sp, #0xc]
10008d68: 2800         	cmp	r0, #0x0
10008d6a: d104         	bne	0x10008d76 <rp2040_hal::sio::Spinlock<_>::try_claim::h05cb952823ebb363+0x36> @ imm = #0x8
10008d6c: e7ff         	b	0x10008d6e <rp2040_hal::sio::Spinlock<_>::try_claim::h05cb952823ebb363+0x2e> @ imm = #-0x2
10008d6e: 4669         	mov	r1, sp
10008d70: 2000         	movs	r0, #0x0
10008d72: 7008         	strb	r0, [r1]
10008d74: e003         	b	0x10008d7e <rp2040_hal::sio::Spinlock<_>::try_claim::h05cb952823ebb363+0x3e> @ imm = #0x6
10008d76: 4669         	mov	r1, sp
10008d78: 2001         	movs	r0, #0x1
10008d7a: 7008         	strb	r0, [r1]
10008d7c: e7ff         	b	0x10008d7e <rp2040_hal::sio::Spinlock<_>::try_claim::h05cb952823ebb363+0x3e> @ imm = #-0x2
10008d7e: 4668         	mov	r0, sp
10008d80: 7800         	ldrb	r0, [r0]
10008d82: b00a         	add	sp, #0x28
10008d84: bd80         	pop	{r7, pc}
10008d86: 46c0         	mov	r8, r8
10008d88: 7c 01 00 d0  	.word	0xd000017c

10008d8c <rp2040_hal::sio::Spinlock<_>::release::he028d7853796905f>:
10008d8c: b580         	push	{r7, lr}
10008d8e: af00         	add	r7, sp, #0x0
10008d90: b08a         	sub	sp, #0x28
10008d92: 200d         	movs	r0, #0xd
10008d94: 0700         	lsls	r0, r0, #0x1c
10008d96: 9002         	str	r0, [sp, #0x8]
10008d98: 9003         	str	r0, [sp, #0xc]
10008d9a: 201f         	movs	r0, #0x1f
10008d9c: 9004         	str	r0, [sp, #0x10]
10008d9e: 4809         	ldr	r0, [pc, #0x24]         @ 0x10008dc4 <rp2040_hal::sio::Spinlock<_>::release::he028d7853796905f+0x38>
10008da0: 9001         	str	r0, [sp, #0x4]
10008da2: 9006         	str	r0, [sp, #0x18]
10008da4: 2000         	movs	r0, #0x0
10008da6: 9005         	str	r0, [sp, #0x14]
10008da8: a805         	add	r0, sp, #0x14
10008daa: f000 f80d    	bl	0x10008dc8 <rp2040_hal::sio::Spinlock<_>::release::{{closure}}::h20e4c575565e32d1> @ imm = #0x1a
10008dae: 4601         	mov	r1, r0
10008db0: 9801         	ldr	r0, [sp, #0x4]
10008db2: 6809         	ldr	r1, [r1]
10008db4: 9007         	str	r0, [sp, #0x1c]
10008db6: 9108         	str	r1, [sp, #0x20]
10008db8: 9009         	str	r0, [sp, #0x24]
10008dba: f003 f9ef    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x33de
10008dbe: b00a         	add	sp, #0x28
10008dc0: bd80         	pop	{r7, pc}
10008dc2: 46c0         	mov	r8, r8
10008dc4: 7c 01 00 d0  	.word	0xd000017c

10008dc8 <rp2040_hal::sio::Spinlock<_>::release::{{closure}}::h20e4c575565e32d1>:
10008dc8: b580         	push	{r7, lr}
10008dca: af00         	add	r7, sp, #0x0
10008dcc: b084         	sub	sp, #0x10
10008dce: aa01         	add	r2, sp, #0x4
10008dd0: 6010         	str	r0, [r2]
10008dd2: 6050         	str	r0, [r2, #0x4]
10008dd4: 2101         	movs	r1, #0x1
10008dd6: 6091         	str	r1, [r2, #0x8]
10008dd8: 6001         	str	r1, [r0]
10008dda: b004         	add	sp, #0x10
10008ddc: bd80         	pop	{r7, pc}

10008dde <<rp2040_hal::sio::Spinlock<_> as core::ops::drop::Drop>::drop::h5c98883ba3d7edde>:
10008dde: b580         	push	{r7, lr}
10008de0: af00         	add	r7, sp, #0x0
10008de2: b082         	sub	sp, #0x8
10008de4: 9001         	str	r0, [sp, #0x4]
10008de6: f7ff ffd1    	bl	0x10008d8c <rp2040_hal::sio::Spinlock<_>::release::he028d7853796905f> @ imm = #-0x5e
10008dea: b002         	add	sp, #0x8
10008dec: bd80         	pop	{r7, pc}

10008dee <rp2040_hal::watchdog::Watchdog::new::hd2ab81f5040175ec>:
10008dee: b580         	push	{r7, lr}
10008df0: af00         	add	r7, sp, #0x0
10008df2: b081         	sub	sp, #0x4
10008df4: 2000         	movs	r0, #0x0
10008df6: b001         	add	sp, #0x4
10008df8: bd80         	pop	{r7, pc}
10008dfa: d4d4         	bmi	0x10008da6 <rp2040_hal::sio::Spinlock<_>::release::he028d7853796905f+0x1a> @ imm = #-0x58

10008dfc <rp2040_hal::watchdog::Watchdog::enable_tick_generation::hf0bceb9ffba64d0c>:
10008dfc: b580         	push	{r7, lr}
10008dfe: af00         	add	r7, sp, #0x0
10008e00: b08e         	sub	sp, #0x38
10008e02: 460a         	mov	r2, r1
10008e04: 4601         	mov	r1, r0
10008e06: a804         	add	r0, sp, #0x10
10008e08: 9002         	str	r0, [sp, #0x8]
10008e0a: 7002         	strb	r2, [r0]
10008e0c: 9105         	str	r1, [sp, #0x14]
10008e0e: 1d09         	adds	r1, r1, #0x4
10008e10: 910d         	str	r1, [sp, #0x34]
10008e12: 4911         	ldr	r1, [pc, #0x44]         @ 0x10008e58 <rp2040_hal::watchdog::Watchdog::enable_tick_generation::hf0bceb9ffba64d0c+0x5c>
10008e14: 9109         	str	r1, [sp, #0x24]
10008e16: 4911         	ldr	r1, [pc, #0x44]         @ 0x10008e5c <rp2040_hal::watchdog::Watchdog::enable_tick_generation::hf0bceb9ffba64d0c+0x60>
10008e18: 9103         	str	r1, [sp, #0xc]
10008e1a: 9107         	str	r1, [sp, #0x1c]
10008e1c: 9008         	str	r0, [sp, #0x20]
10008e1e: 2000         	movs	r0, #0x0
10008e20: 9001         	str	r0, [sp, #0x4]
10008e22: f7fd fa1f    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x2bc2
10008e26: 4601         	mov	r1, r0
10008e28: 2001         	movs	r0, #0x1
10008e2a: 0240         	lsls	r0, r0, #0x9
10008e2c: f7fd fa39    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x2b8e
10008e30: 9901         	ldr	r1, [sp, #0x4]
10008e32: f7fd fa2e    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x2ba4
10008e36: 4601         	mov	r1, r0
10008e38: 9802         	ldr	r0, [sp, #0x8]
10008e3a: 9106         	str	r1, [sp, #0x18]
10008e3c: a906         	add	r1, sp, #0x18
10008e3e: f000 f80f    	bl	0x10008e60 <rp2040_hal::watchdog::Watchdog::enable_tick_generation::{{closure}}::hbd9ef42f46d8d344> @ imm = #0x1e
10008e42: 4601         	mov	r1, r0
10008e44: 9803         	ldr	r0, [sp, #0xc]
10008e46: 6809         	ldr	r1, [r1]
10008e48: 900a         	str	r0, [sp, #0x28]
10008e4a: 910b         	str	r1, [sp, #0x2c]
10008e4c: 900c         	str	r0, [sp, #0x30]
10008e4e: f003 f9a5    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x334a
10008e52: b00e         	add	sp, #0x38
10008e54: bd80         	pop	{r7, pc}
10008e56: 46c0         	mov	r8, r8
10008e58: 00 80 05 40  	.word	0x40058000
10008e5c: 2c 80 05 40  	.word	0x4005802c

10008e60 <rp2040_hal::watchdog::Watchdog::enable_tick_generation::{{closure}}::hbd9ef42f46d8d344>:
10008e60: b580         	push	{r7, lr}
10008e62: af00         	add	r7, sp, #0x0
10008e64: b085         	sub	sp, #0x14
10008e66: 9100         	str	r1, [sp]
10008e68: 4601         	mov	r1, r0
10008e6a: 9800         	ldr	r0, [sp]
10008e6c: 9101         	str	r1, [sp, #0x4]
10008e6e: 9002         	str	r0, [sp, #0x8]
10008e70: 9901         	ldr	r1, [sp, #0x4]
10008e72: 7809         	ldrb	r1, [r1]
10008e74: 2201         	movs	r2, #0x1
10008e76: 0252         	lsls	r2, r2, #0x9
10008e78: 1889         	adds	r1, r1, r2
10008e7a: 9003         	str	r0, [sp, #0xc]
10008e7c: 9104         	str	r1, [sp, #0x10]
10008e7e: 6001         	str	r1, [r0]
10008e80: b005         	add	sp, #0x14
10008e82: bd80         	pop	{r7, pc}

10008e84 <rp2040_hal::xosc::setup_xosc_blocking::he7153cb158240fbe>:
10008e84: b580         	push	{r7, lr}
10008e86: af00         	add	r7, sp, #0x0
10008e88: b08e         	sub	sp, #0x38
10008e8a: 9101         	str	r1, [sp, #0x4]
10008e8c: 9000         	str	r0, [sp]
10008e8e: 910b         	str	r1, [sp, #0x2c]
10008e90: f000 f84a    	bl	0x10008f28 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::new::ha4a4c3c16e0eb196> @ imm = #0x94
10008e94: 9901         	ldr	r1, [sp, #0x4]
10008e96: a807         	add	r0, sp, #0x1c
10008e98: 9002         	str	r0, [sp, #0x8]
10008e9a: 2240         	movs	r2, #0x40
10008e9c: f000 f84a    	bl	0x10008f34 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::hdbe066bf108611aa> @ imm = #0x94
10008ea0: 9902         	ldr	r1, [sp, #0x8]
10008ea2: a805         	add	r0, sp, #0x14
10008ea4: 9003         	str	r0, [sp, #0xc]
10008ea6: f7fe f9bc    	bl	0x10007222 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h4a9c46913a680102E> @ imm = #-0x1c88
10008eaa: 9803         	ldr	r0, [sp, #0xc]
10008eac: 7800         	ldrb	r0, [r0]
10008eae: 07c0         	lsls	r0, r0, #0x1f
10008eb0: 2800         	cmp	r0, #0x0
10008eb2: d105         	bne	0x10008ec0 <rp2040_hal::xosc::setup_xosc_blocking::he7153cb158240fbe+0x3c> @ imm = #0xa
10008eb4: e7ff         	b	0x10008eb6 <rp2040_hal::xosc::setup_xosc_blocking::he7153cb158240fbe+0x32> @ imm = #-0x2
10008eb6: 9806         	ldr	r0, [sp, #0x18]
10008eb8: 9009         	str	r0, [sp, #0x24]
10008eba: 9809         	ldr	r0, [sp, #0x24]
10008ebc: 9004         	str	r0, [sp, #0x10]
10008ebe: e008         	b	0x10008ed2 <rp2040_hal::xosc::setup_xosc_blocking::he7153cb158240fbe+0x4e> @ imm = #0x10
10008ec0: 9800         	ldr	r0, [sp]
10008ec2: a905         	add	r1, sp, #0x14
10008ec4: 7849         	ldrb	r1, [r1, #0x1]
10008ec6: aa0d         	add	r2, sp, #0x34
10008ec8: 7011         	strb	r1, [r2]
10008eca: 4a0e         	ldr	r2, [pc, #0x38]         @ 0x10008f04 <rp2040_hal::xosc::setup_xosc_blocking::he7153cb158240fbe+0x80>
10008ecc: f7fd f9b8    	bl	0x10006240 <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17hfdbba5a1a6741dd5E> @ imm = #-0x2c90
10008ed0: e015         	b	0x10008efe <rp2040_hal::xosc::setup_xosc_blocking::he7153cb158240fbe+0x7a> @ imm = #0x2a
10008ed2: a804         	add	r0, sp, #0x10
10008ed4: f000 f9e0    	bl	0x10009298 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Unstable>::await_stabilization::h7794220d7122c225> @ imm = #0x3c0
10008ed8: 4601         	mov	r1, r0
10008eda: a80a         	add	r0, sp, #0x28
10008edc: 7001         	strb	r1, [r0]
10008ede: 7800         	ldrb	r0, [r0]
10008ee0: 07c0         	lsls	r0, r0, #0x1f
10008ee2: 2800         	cmp	r0, #0x0
10008ee4: d10a         	bne	0x10008efc <rp2040_hal::xosc::setup_xosc_blocking::he7153cb158240fbe+0x78> @ imm = #0x14
10008ee6: e7ff         	b	0x10008ee8 <rp2040_hal::xosc::setup_xosc_blocking::he7153cb158240fbe+0x64> @ imm = #-0x2
10008ee8: 9804         	ldr	r0, [sp, #0x10]
10008eea: 9009         	str	r0, [sp, #0x24]
10008eec: 9809         	ldr	r0, [sp, #0x24]
10008eee: f000 fa01    	bl	0x100092f4 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Unstable>::get_stable::he25a41ca566afbd3> @ imm = #0x402
10008ef2: 9900         	ldr	r1, [sp]
10008ef4: 6048         	str	r0, [r1, #0x4]
10008ef6: 2000         	movs	r0, #0x0
10008ef8: 7008         	strb	r0, [r1]
10008efa: e000         	b	0x10008efe <rp2040_hal::xosc::setup_xosc_blocking::he7153cb158240fbe+0x7a> @ imm = #0x0
10008efc: e7e9         	b	0x10008ed2 <rp2040_hal::xosc::setup_xosc_blocking::he7153cb158240fbe+0x4e> @ imm = #-0x2e
10008efe: b00e         	add	sp, #0x38
10008f00: bd80         	pop	{r7, pc}
10008f02: 46c0         	mov	r8, r8
10008f04: 48 1f 01 10  	.word	0x10011f48

10008f08 <rp2040_hal::xosc::CrystalOscillator<S>::transition::h149587d53dc8dfc7>:
10008f08: b580         	push	{r7, lr}
10008f0a: af00         	add	r7, sp, #0x0
10008f0c: b083         	sub	sp, #0xc
10008f0e: 9100         	str	r1, [sp]
10008f10: 4601         	mov	r1, r0
10008f12: 9800         	ldr	r0, [sp]
10008f14: 9101         	str	r1, [sp, #0x4]
10008f16: 9002         	str	r0, [sp, #0x8]
10008f18: b003         	add	sp, #0xc
10008f1a: bd80         	pop	{r7, pc}

10008f1c <rp2040_hal::xosc::CrystalOscillator<S>::transition::h36fba7998649d023>:
10008f1c: b580         	push	{r7, lr}
10008f1e: af00         	add	r7, sp, #0x0
10008f20: b082         	sub	sp, #0x8
10008f22: 9001         	str	r0, [sp, #0x4]
10008f24: b002         	add	sp, #0x8
10008f26: bd80         	pop	{r7, pc}

10008f28 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::new::ha4a4c3c16e0eb196>:
10008f28: b580         	push	{r7, lr}
10008f2a: af00         	add	r7, sp, #0x0
10008f2c: b081         	sub	sp, #0x4
10008f2e: b001         	add	sp, #0x4
10008f30: bd80         	pop	{r7, pc}
10008f32: d4d4         	bmi	0x10008ede <rp2040_hal::xosc::setup_xosc_blocking::he7153cb158240fbe+0x5a> @ imm = #-0x58

10008f34 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::hdbe066bf108611aa>:
10008f34: b580         	push	{r7, lr}
10008f36: af00         	add	r7, sp, #0x0
10008f38: b0b2         	sub	sp, #0xc8
10008f3a: 920a         	str	r2, [sp, #0x28]
10008f3c: 900b         	str	r0, [sp, #0x2c]
10008f3e: 910d         	str	r1, [sp, #0x34]
10008f40: 9213         	str	r2, [sp, #0x4c]
10008f42: 4865         	ldr	r0, [pc, #0x194]        @ 0x100090d8 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::hdbe066bf108611aa+0x1a4>
10008f44: a90d         	add	r1, sp, #0x34
10008f46: f7fd fce0    	bl	0x1000690a <core::ops::range::RangeInclusive<Idx>::contains::h616873688289eeed> @ imm = #-0x2640
10008f4a: 2800         	cmp	r0, #0x0
10008f4c: d109         	bne	0x10008f62 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::hdbe066bf108611aa+0x2e> @ imm = #0x12
10008f4e: e7ff         	b	0x10008f50 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::hdbe066bf108611aa+0x1c> @ imm = #-0x2
10008f50: 990b         	ldr	r1, [sp, #0x2c]
10008f52: aa0e         	add	r2, sp, #0x38
10008f54: 2000         	movs	r0, #0x0
10008f56: 7010         	strb	r0, [r2]
10008f58: 980e         	ldr	r0, [sp, #0x38]
10008f5a: 7048         	strb	r0, [r1, #0x1]
10008f5c: 2001         	movs	r0, #0x1
10008f5e: 7008         	strb	r0, [r1]
10008f60: e003         	b	0x10008f6a <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::hdbe066bf108611aa+0x36> @ imm = #0x6
10008f62: 980a         	ldr	r0, [sp, #0x28]
10008f64: 2800         	cmp	r0, #0x0
10008f66: d002         	beq	0x10008f6e <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::hdbe066bf108611aa+0x3a> @ imm = #0x4
10008f68: e009         	b	0x10008f7e <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::hdbe066bf108611aa+0x4a> @ imm = #0x12
10008f6a: b032         	add	sp, #0xc8
10008f6c: bd80         	pop	{r7, pc}
10008f6e: 990b         	ldr	r1, [sp, #0x2c]
10008f70: aa0f         	add	r2, sp, #0x3c
10008f72: 2001         	movs	r0, #0x1
10008f74: 7010         	strb	r0, [r2]
10008f76: 9a0f         	ldr	r2, [sp, #0x3c]
10008f78: 704a         	strb	r2, [r1, #0x1]
10008f7a: 7008         	strb	r0, [r1]
10008f7c: e7f5         	b	0x10008f6a <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::hdbe066bf108611aa+0x36> @ imm = #-0x16
10008f7e: a80c         	add	r0, sp, #0x30
10008f80: 9031         	str	r0, [sp, #0xc4]
10008f82: 4856         	ldr	r0, [pc, #0x158]        @ 0x100090dc <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::hdbe066bf108611aa+0x1a8>
10008f84: 9007         	str	r0, [sp, #0x1c]
10008f86: 901d         	str	r0, [sp, #0x74]
10008f88: 9025         	str	r0, [sp, #0x94]
10008f8a: 2000         	movs	r0, #0x0
10008f8c: 9006         	str	r0, [sp, #0x18]
10008f8e: f7fd f969    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x2d2e
10008f92: 4601         	mov	r1, r0
10008f94: 9806         	ldr	r0, [sp, #0x18]
10008f96: f7fd f984    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x2cf8
10008f9a: 9906         	ldr	r1, [sp, #0x18]
10008f9c: f7fd f979    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x2d0e
10008fa0: 9024         	str	r0, [sp, #0x90]
10008fa2: a824         	add	r0, sp, #0x90
10008fa4: f000 f8a6    	bl	0x100090f4 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::{{closure}}::hf49fd5de2cf2bad2> @ imm = #0x14c
10008fa8: 4601         	mov	r1, r0
10008faa: 9807         	ldr	r0, [sp, #0x1c]
10008fac: 6809         	ldr	r1, [r1]
10008fae: 9026         	str	r0, [sp, #0x98]
10008fb0: 9127         	str	r1, [sp, #0x9c]
10008fb2: 9028         	str	r0, [sp, #0xa0]
10008fb4: f003 f8f2    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x31e4
10008fb8: a80d         	add	r0, sp, #0x34
10008fba: f7fd ffd7    	bl	0x10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868> @ imm = #-0x2052
10008fbe: 9008         	str	r0, [sp, #0x20]
10008fc0: 4847         	ldr	r0, [pc, #0x11c]        @ 0x100090e0 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::hdbe066bf108611aa+0x1ac>
10008fc2: f7fd ffd3    	bl	0x10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868> @ imm = #-0x205a
10008fc6: 0201         	lsls	r1, r0, #0x8
10008fc8: 9109         	str	r1, [sp, #0x24]
10008fca: 0a09         	lsrs	r1, r1, #0x8
10008fcc: 1a40         	subs	r0, r0, r1
10008fce: 1e41         	subs	r1, r0, #0x1
10008fd0: 4188         	sbcs	r0, r1
10008fd2: 2800         	cmp	r0, #0x0
10008fd4: d104         	bne	0x10008fe0 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::hdbe066bf108611aa+0xac> @ imm = #0x8
10008fd6: e7ff         	b	0x10008fd8 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::hdbe066bf108611aa+0xa4> @ imm = #-0x2
10008fd8: 9809         	ldr	r0, [sp, #0x24]
10008fda: 2800         	cmp	r0, #0x0
10008fdc: d021         	beq	0x10009022 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::hdbe066bf108611aa+0xee> @ imm = #0x42
10008fde: e002         	b	0x10008fe6 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::hdbe066bf108611aa+0xb2> @ imm = #0x4
10008fe0: 4843         	ldr	r0, [pc, #0x10c]        @ 0x100090f0 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::hdbe066bf108611aa+0x1bc>
10008fe2: f004 fa49    	bl	0x1000d478 <core::panicking::panic_const::panic_const_mul_overflow::hdb56fe2dcc791345> @ imm = #0x4492
10008fe6: 9909         	ldr	r1, [sp, #0x24]
10008fe8: 9808         	ldr	r0, [sp, #0x20]
10008fea: f004 fbd7    	bl	0x1000d79c <__aeabi_uidiv> @ imm = #0x47ae
10008fee: 990a         	ldr	r1, [sp, #0x28]
10008ff0: 9015         	str	r0, [sp, #0x54]
10008ff2: f7fd fa11    	bl	0x10006418 <core::num::<impl u32>::saturating_mul::h0da888bc9d19634e> @ imm = #-0x2bde
10008ff6: 9016         	str	r0, [sp, #0x58]
10008ff8: f7fd ff26    	bl	0x10006e48 <<T as core::convert::TryInto<U>>::try_into::ha57f9a712ea47f27> @ imm = #-0x21b4
10008ffc: f7fd fe21    	bl	0x10006c42 <_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h2bbe096994ce64acE> @ imm = #-0x23be
10009000: 9017         	str	r0, [sp, #0x5c]
10009002: 9817         	ldr	r0, [sp, #0x5c]
10009004: 9012         	str	r0, [sp, #0x48]
10009006: 9812         	ldr	r0, [sp, #0x48]
10009008: 9018         	str	r0, [sp, #0x60]
1000900a: 9818         	ldr	r0, [sp, #0x60]
1000900c: f7fe f898    	bl	0x10007140 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h2ce397b0c859707dE> @ imm = #-0x1ed0
10009010: 9019         	str	r0, [sp, #0x64]
10009012: 9819         	ldr	r0, [sp, #0x64]
10009014: 9011         	str	r0, [sp, #0x44]
10009016: a811         	add	r0, sp, #0x44
10009018: 7800         	ldrb	r0, [r0]
1000901a: 07c0         	lsls	r0, r0, #0x1f
1000901c: 2800         	cmp	r0, #0x0
1000901e: d003         	beq	0x10009028 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::hdbe066bf108611aa+0xf4> @ imm = #0x6
10009020: e050         	b	0x100090c4 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::hdbe066bf108611aa+0x190> @ imm = #0xa0
10009022: 4832         	ldr	r0, [pc, #0xc8]         @ 0x100090ec <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::hdbe066bf108611aa+0x1b8>
10009024: f004 fa4c    	bl	0x1000d4c0 <core::panicking::panic_const::panic_const_div_by_zero::ha09f740279da4cf0> @ imm = #0x4498
10009028: a811         	add	r0, sp, #0x44
1000902a: 8841         	ldrh	r1, [r0, #0x2]
1000902c: a81a         	add	r0, sp, #0x68
1000902e: 8001         	strh	r1, [r0]
10009030: a810         	add	r0, sp, #0x40
10009032: 9001         	str	r0, [sp, #0x4]
10009034: 8001         	strh	r1, [r0]
10009036: a90c         	add	r1, sp, #0x30
10009038: 9103         	str	r1, [sp, #0xc]
1000903a: 9130         	str	r1, [sp, #0xc0]
1000903c: 4927         	ldr	r1, [pc, #0x9c]         @ 0x100090dc <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::hdbe066bf108611aa+0x1a8>
1000903e: 9104         	str	r1, [sp, #0x10]
10009040: 911e         	str	r1, [sp, #0x78]
10009042: 4929         	ldr	r1, [pc, #0xa4]         @ 0x100090e8 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::hdbe066bf108611aa+0x1b4>
10009044: 9102         	str	r1, [sp, #0x8]
10009046: 9120         	str	r1, [sp, #0x80]
10009048: 9021         	str	r0, [sp, #0x84]
1000904a: 2000         	movs	r0, #0x0
1000904c: 9005         	str	r0, [sp, #0x14]
1000904e: f7fd f909    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x2dee
10009052: 4601         	mov	r1, r0
10009054: 20c4         	movs	r0, #0xc4
10009056: f7fd f924    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x2db8
1000905a: 9905         	ldr	r1, [sp, #0x14]
1000905c: f7fd f919    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x2dce
10009060: 4601         	mov	r1, r0
10009062: 9801         	ldr	r0, [sp, #0x4]
10009064: 911f         	str	r1, [sp, #0x7c]
10009066: a91f         	add	r1, sp, #0x7c
10009068: f000 f896    	bl	0x10009198 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::{{closure}}::hea840652d7bc14fb> @ imm = #0x12c
1000906c: 4601         	mov	r1, r0
1000906e: 9802         	ldr	r0, [sp, #0x8]
10009070: 6809         	ldr	r1, [r1]
10009072: 902c         	str	r0, [sp, #0xb0]
10009074: 912d         	str	r1, [sp, #0xb4]
10009076: 902e         	str	r0, [sp, #0xb8]
10009078: f003 f890    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x3120
1000907c: 9a03         	ldr	r2, [sp, #0xc]
1000907e: 9904         	ldr	r1, [sp, #0x10]
10009080: 9805         	ldr	r0, [sp, #0x14]
10009082: 922f         	str	r2, [sp, #0xbc]
10009084: 911c         	str	r1, [sp, #0x70]
10009086: 9123         	str	r1, [sp, #0x8c]
10009088: f7fd f8ec    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x2e28
1000908c: 4601         	mov	r1, r0
1000908e: 9805         	ldr	r0, [sp, #0x14]
10009090: f7fd f907    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x2df2
10009094: 9905         	ldr	r1, [sp, #0x14]
10009096: f7fd f8fc    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x2e08
1000909a: 9022         	str	r0, [sp, #0x88]
1000909c: a822         	add	r0, sp, #0x88
1000909e: f000 f8b1    	bl	0x10009204 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::{{closure}}::he73833c3cf77dce0> @ imm = #0x162
100090a2: 4601         	mov	r1, r0
100090a4: 9804         	ldr	r0, [sp, #0x10]
100090a6: 6809         	ldr	r1, [r1]
100090a8: 9029         	str	r0, [sp, #0xa4]
100090aa: 912a         	str	r1, [sp, #0xa8]
100090ac: 902b         	str	r0, [sp, #0xac]
100090ae: f003 f875    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x30ea
100090b2: 980d         	ldr	r0, [sp, #0x34]
100090b4: f7ff ff32    	bl	0x10008f1c <rp2040_hal::xosc::CrystalOscillator<S>::transition::h36fba7998649d023> @ imm = #-0x19c
100090b8: 990b         	ldr	r1, [sp, #0x2c]
100090ba: 4602         	mov	r2, r0
100090bc: 9805         	ldr	r0, [sp, #0x14]
100090be: 604a         	str	r2, [r1, #0x4]
100090c0: 7008         	strb	r0, [r1]
100090c2: e752         	b	0x10008f6a <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::hdbe066bf108611aa+0x36> @ imm = #-0x15c
100090c4: 980b         	ldr	r0, [sp, #0x2c]
100090c6: a911         	add	r1, sp, #0x44
100090c8: 7849         	ldrb	r1, [r1, #0x1]
100090ca: aa1b         	add	r2, sp, #0x6c
100090cc: 7011         	strb	r1, [r2]
100090ce: 4a05         	ldr	r2, [pc, #0x14]         @ 0x100090e4 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::hdbe066bf108611aa+0x1b0>
100090d0: f7fd f87c    	bl	0x100061cc <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h7e50eab45757e124E> @ imm = #-0x2f08
100090d4: e749         	b	0x10008f6a <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::hdbe066bf108611aa+0x36> @ imm = #-0x16e
100090d6: 46c0         	mov	r8, r8
100090d8: 58 1f 01 10  	.word	0x10011f58
100090dc: 00 40 02 40  	.word	0x40024000
100090e0: 74 e6 00 10  	.word	0x1000e674
100090e4: 84 1f 01 10  	.word	0x10011f84
100090e8: 0c 40 02 40  	.word	0x4002400c
100090ec: 74 1f 01 10  	.word	0x10011f74
100090f0: 64 1f 01 10  	.word	0x10011f64

100090f4 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::{{closure}}::hf49fd5de2cf2bad2>:
100090f4: b5d0         	push	{r4, r6, r7, lr}
100090f6: af02         	add	r7, sp, #0x8
100090f8: b096         	sub	sp, #0x58
100090fa: a907         	add	r1, sp, #0x1c
100090fc: 9103         	str	r1, [sp, #0xc]
100090fe: 4603         	mov	r3, r0
10009100: 9803         	ldr	r0, [sp, #0xc]
10009102: 9305         	str	r3, [sp, #0x14]
10009104: 6003         	str	r3, [r0]
10009106: 6103         	str	r3, [r0, #0x10]
10009108: 6143         	str	r3, [r0, #0x14]
1000910a: a90d         	add	r1, sp, #0x34
1000910c: 2200         	movs	r2, #0x0
1000910e: 700a         	strb	r2, [r1]
10009110: 6083         	str	r3, [r0, #0x8]
10009112: a909         	add	r1, sp, #0x24
10009114: 710a         	strb	r2, [r1, #0x4]
10009116: 2155         	movs	r1, #0x55
10009118: 0149         	lsls	r1, r1, #0x5
1000911a: ac08         	add	r4, sp, #0x20
1000911c: 8021         	strh	r1, [r4]
1000911e: 6844         	ldr	r4, [r0, #0x4]
10009120: 61c3         	str	r3, [r0, #0x1c]
10009122: a90e         	add	r1, sp, #0x38
10009124: 710a         	strb	r2, [r1, #0x4]
10009126: a910         	add	r1, sp, #0x40
10009128: 800c         	strh	r4, [r1]
1000912a: a911         	add	r1, sp, #0x44
1000912c: 800c         	strh	r4, [r1]
1000912e: 8809         	ldrh	r1, [r1]
10009130: 9102         	str	r1, [sp, #0x8]
10009132: 62c3         	str	r3, [r0, #0x2c]
10009134: ab12         	add	r3, sp, #0x48
10009136: 711a         	strb	r2, [r3, #0x4]
10009138: aa14         	add	r2, sp, #0x50
1000913a: 8011         	strh	r1, [r2]
1000913c: 6ac0         	ldr	r0, [r0, #0x2c]
1000913e: 9001         	str	r0, [sp, #0x4]
10009140: f7fc ffea    	bl	0x10006118 <rp2040_pac::generic::mask_u32::hac8ad933706b19ca> @ imm = #-0x302c
10009144: 9903         	ldr	r1, [sp, #0xc]
10009146: 6b09         	ldr	r1, [r1, #0x30]
10009148: f7fd fe86    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x22f4
1000914c: f7fd f88a    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x2eec
10009150: 4601         	mov	r1, r0
10009152: 9801         	ldr	r0, [sp, #0x4]
10009154: f7fd fe6c    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x2328
10009158: 9802         	ldr	r0, [sp, #0x8]
1000915a: 9903         	ldr	r1, [sp, #0xc]
1000915c: 6ac9         	ldr	r1, [r1, #0x2c]
1000915e: 9104         	str	r1, [sp, #0x10]
10009160: a915         	add	r1, sp, #0x54
10009162: 8008         	strh	r0, [r1]
10009164: f7fc ffd8    	bl	0x10006118 <rp2040_pac::generic::mask_u32::hac8ad933706b19ca> @ imm = #-0x3050
10009168: 4601         	mov	r1, r0
1000916a: 9802         	ldr	r0, [sp, #0x8]
1000916c: f7fd f899    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x2ece
10009170: 9903         	ldr	r1, [sp, #0xc]
10009172: 6b09         	ldr	r1, [r1, #0x30]
10009174: f7fd fe70    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x2320
10009178: 4601         	mov	r1, r0
1000917a: 9804         	ldr	r0, [sp, #0x10]
1000917c: f7fd fe4c    	bl	0x10006e18 <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::hc18d656116c887ea> @ imm = #-0x2368
10009180: 9805         	ldr	r0, [sp, #0x14]
10009182: b016         	add	sp, #0x58
10009184: bdd0         	pop	{r4, r6, r7, pc}

10009186 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::{{closure}}::hb83263649b65a668>:
10009186: b580         	push	{r7, lr}
10009188: af00         	add	r7, sp, #0x0
1000918a: b081         	sub	sp, #0x4
1000918c: 4668         	mov	r0, sp
1000918e: 2101         	movs	r1, #0x1
10009190: 7001         	strb	r1, [r0]
10009192: 7800         	ldrb	r0, [r0]
10009194: b001         	add	sp, #0x4
10009196: bd80         	pop	{r7, pc}

10009198 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::{{closure}}::hea840652d7bc14fb>:
10009198: b580         	push	{r7, lr}
1000919a: af00         	add	r7, sp, #0x0
1000919c: b08e         	sub	sp, #0x38
1000919e: 460a         	mov	r2, r1
100091a0: 9204         	str	r2, [sp, #0x10]
100091a2: 9005         	str	r0, [sp, #0x14]
100091a4: 9206         	str	r2, [sp, #0x18]
100091a6: 9207         	str	r2, [sp, #0x1c]
100091a8: 9208         	str	r2, [sp, #0x20]
100091aa: a809         	add	r0, sp, #0x24
100091ac: 2100         	movs	r1, #0x0
100091ae: 7001         	strb	r1, [r0]
100091b0: 9805         	ldr	r0, [sp, #0x14]
100091b2: 8800         	ldrh	r0, [r0]
100091b4: 9002         	str	r0, [sp, #0x8]
100091b6: 920a         	str	r2, [sp, #0x28]
100091b8: aa0a         	add	r2, sp, #0x28
100091ba: 7111         	strb	r1, [r2, #0x4]
100091bc: a90c         	add	r1, sp, #0x30
100091be: 8008         	strh	r0, [r1]
100091c0: 980a         	ldr	r0, [sp, #0x28]
100091c2: 9001         	str	r0, [sp, #0x4]
100091c4: f7fc ff9a    	bl	0x100060fc <rp2040_pac::generic::mask_u32::h410e8909533cdbf5> @ imm = #-0x30cc
100091c8: 990b         	ldr	r1, [sp, #0x2c]
100091ca: f7fd fe45    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x2376
100091ce: f7fd f849    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x2f6e
100091d2: 4601         	mov	r1, r0
100091d4: 9801         	ldr	r0, [sp, #0x4]
100091d6: f7fd fe2b    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x23aa
100091da: 9802         	ldr	r0, [sp, #0x8]
100091dc: 990a         	ldr	r1, [sp, #0x28]
100091de: 9103         	str	r1, [sp, #0xc]
100091e0: a90d         	add	r1, sp, #0x34
100091e2: 8008         	strh	r0, [r1]
100091e4: f7fc ff8a    	bl	0x100060fc <rp2040_pac::generic::mask_u32::h410e8909533cdbf5> @ imm = #-0x30ec
100091e8: 4601         	mov	r1, r0
100091ea: 9802         	ldr	r0, [sp, #0x8]
100091ec: f7fd f859    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x2f4e
100091f0: 990b         	ldr	r1, [sp, #0x2c]
100091f2: f7fd fe31    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x239e
100091f6: 4601         	mov	r1, r0
100091f8: 9803         	ldr	r0, [sp, #0xc]
100091fa: f7fd fe0d    	bl	0x10006e18 <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::hc18d656116c887ea> @ imm = #-0x23e6
100091fe: 9804         	ldr	r0, [sp, #0x10]
10009200: b00e         	add	sp, #0x38
10009202: bd80         	pop	{r7, pc}

10009204 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::{{closure}}::he73833c3cf77dce0>:
10009204: b5d0         	push	{r4, r6, r7, lr}
10009206: af02         	add	r7, sp, #0x8
10009208: b096         	sub	sp, #0x58
1000920a: a907         	add	r1, sp, #0x1c
1000920c: 9103         	str	r1, [sp, #0xc]
1000920e: 4603         	mov	r3, r0
10009210: 9803         	ldr	r0, [sp, #0xc]
10009212: 9305         	str	r3, [sp, #0x14]
10009214: 6003         	str	r3, [r0]
10009216: 6103         	str	r3, [r0, #0x10]
10009218: 6143         	str	r3, [r0, #0x14]
1000921a: a90d         	add	r1, sp, #0x34
1000921c: 220c         	movs	r2, #0xc
1000921e: 700a         	strb	r2, [r1]
10009220: 6083         	str	r3, [r0, #0x8]
10009222: a909         	add	r1, sp, #0x24
10009224: 710a         	strb	r2, [r1, #0x4]
10009226: ac08         	add	r4, sp, #0x20
10009228: 491a         	ldr	r1, [pc, #0x68]         @ 0x10009294 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Disabled>::initialize::{{closure}}::he73833c3cf77dce0+0x90>
1000922a: 8021         	strh	r1, [r4]
1000922c: 6844         	ldr	r4, [r0, #0x4]
1000922e: 61c3         	str	r3, [r0, #0x1c]
10009230: a90e         	add	r1, sp, #0x38
10009232: 710a         	strb	r2, [r1, #0x4]
10009234: a910         	add	r1, sp, #0x40
10009236: 800c         	strh	r4, [r1]
10009238: a911         	add	r1, sp, #0x44
1000923a: 800c         	strh	r4, [r1]
1000923c: 8809         	ldrh	r1, [r1]
1000923e: 9102         	str	r1, [sp, #0x8]
10009240: 62c3         	str	r3, [r0, #0x2c]
10009242: ab12         	add	r3, sp, #0x48
10009244: 711a         	strb	r2, [r3, #0x4]
10009246: aa14         	add	r2, sp, #0x50
10009248: 8011         	strh	r1, [r2]
1000924a: 6ac0         	ldr	r0, [r0, #0x2c]
1000924c: 9001         	str	r0, [sp, #0x4]
1000924e: f7fc ff63    	bl	0x10006118 <rp2040_pac::generic::mask_u32::hac8ad933706b19ca> @ imm = #-0x313a
10009252: 9903         	ldr	r1, [sp, #0xc]
10009254: 6b09         	ldr	r1, [r1, #0x30]
10009256: f7fd fdff    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x2402
1000925a: f7fd f803    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x2ffa
1000925e: 4601         	mov	r1, r0
10009260: 9801         	ldr	r0, [sp, #0x4]
10009262: f7fd fde5    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x2436
10009266: 9802         	ldr	r0, [sp, #0x8]
10009268: 9903         	ldr	r1, [sp, #0xc]
1000926a: 6ac9         	ldr	r1, [r1, #0x2c]
1000926c: 9104         	str	r1, [sp, #0x10]
1000926e: a915         	add	r1, sp, #0x54
10009270: 8008         	strh	r0, [r1]
10009272: f7fc ff51    	bl	0x10006118 <rp2040_pac::generic::mask_u32::hac8ad933706b19ca> @ imm = #-0x315e
10009276: 4601         	mov	r1, r0
10009278: 9802         	ldr	r0, [sp, #0x8]
1000927a: f7fd f812    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x2fdc
1000927e: 9903         	ldr	r1, [sp, #0xc]
10009280: 6b09         	ldr	r1, [r1, #0x30]
10009282: f7fd fde9    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x242e
10009286: 4601         	mov	r1, r0
10009288: 9804         	ldr	r0, [sp, #0x10]
1000928a: f7fd fdc5    	bl	0x10006e18 <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::hc18d656116c887ea> @ imm = #-0x2476
1000928e: 9805         	ldr	r0, [sp, #0x14]
10009290: b016         	add	sp, #0x58
10009292: bdd0         	pop	{r4, r6, r7, pc}
10009294: ab 0f 00 00  	.word	0x00000fab

10009298 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Unstable>::await_stabilization::h7794220d7122c225>:
10009298: b580         	push	{r7, lr}
1000929a: af00         	add	r7, sp, #0x0
1000929c: b08e         	sub	sp, #0x38
1000929e: 9004         	str	r0, [sp, #0x10]
100092a0: 1d00         	adds	r0, r0, #0x4
100092a2: 900d         	str	r0, [sp, #0x34]
100092a4: 4811         	ldr	r0, [pc, #0x44]         @ 0x100092ec <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Unstable>::await_stabilization::h7794220d7122c225+0x54>
100092a6: 9005         	str	r0, [sp, #0x14]
100092a8: 4811         	ldr	r0, [pc, #0x44]         @ 0x100092f0 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Unstable>::await_stabilization::h7794220d7122c225+0x58>
100092aa: 9007         	str	r0, [sp, #0x1c]
100092ac: 900b         	str	r0, [sp, #0x2c]
100092ae: 900c         	str	r0, [sp, #0x30]
100092b0: f002 ff09    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x2e12
100092b4: 9003         	str	r0, [sp, #0xc]
100092b6: a803         	add	r0, sp, #0xc
100092b8: 9006         	str	r0, [sp, #0x18]
100092ba: 9803         	ldr	r0, [sp, #0xc]
100092bc: 0fc1         	lsrs	r1, r0, #0x1f
100092be: a808         	add	r0, sp, #0x20
100092c0: 7001         	strb	r1, [r0]
100092c2: a802         	add	r0, sp, #0x8
100092c4: 7001         	strb	r1, [r0]
100092c6: 9009         	str	r0, [sp, #0x24]
100092c8: 900a         	str	r0, [sp, #0x28]
100092ca: 7800         	ldrb	r0, [r0]
100092cc: 07c0         	lsls	r0, r0, #0x1f
100092ce: 2800         	cmp	r0, #0x0
100092d0: d004         	beq	0x100092dc <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Unstable>::await_stabilization::h7794220d7122c225+0x44> @ imm = #0x8
100092d2: e7ff         	b	0x100092d4 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Unstable>::await_stabilization::h7794220d7122c225+0x3c> @ imm = #-0x2
100092d4: a901         	add	r1, sp, #0x4
100092d6: 2000         	movs	r0, #0x0
100092d8: 7008         	strb	r0, [r1]
100092da: e003         	b	0x100092e4 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Unstable>::await_stabilization::h7794220d7122c225+0x4c> @ imm = #0x6
100092dc: a901         	add	r1, sp, #0x4
100092de: 2001         	movs	r0, #0x1
100092e0: 7008         	strb	r0, [r1]
100092e2: e7ff         	b	0x100092e4 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Unstable>::await_stabilization::h7794220d7122c225+0x4c> @ imm = #-0x2
100092e4: a801         	add	r0, sp, #0x4
100092e6: 7800         	ldrb	r0, [r0]
100092e8: b00e         	add	sp, #0x38
100092ea: bd80         	pop	{r7, pc}
100092ec: 00 40 02 40  	.word	0x40024000
100092f0: 04 40 02 40  	.word	0x40024004

100092f4 <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Unstable>::get_stable::he25a41ca566afbd3>:
100092f4: b580         	push	{r7, lr}
100092f6: af00         	add	r7, sp, #0x0
100092f8: b084         	sub	sp, #0x10
100092fa: 4601         	mov	r1, r0
100092fc: 9101         	str	r1, [sp, #0x4]
100092fe: 9103         	str	r1, [sp, #0xc]
10009300: 4608         	mov	r0, r1
10009302: f7ff fe01    	bl	0x10008f08 <rp2040_hal::xosc::CrystalOscillator<S>::transition::h149587d53dc8dfc7> @ imm = #-0x3fe
10009306: b004         	add	sp, #0x10
10009308: bd80         	pop	{r7, pc}

1000930a <rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Stable>::operating_frequency::hcaab87b757f71411>:
1000930a: b580         	push	{r7, lr}
1000930c: af00         	add	r7, sp, #0x0
1000930e: b081         	sub	sp, #0x4
10009310: 9000         	str	r0, [sp]
10009312: 6800         	ldr	r0, [r0]
10009314: b001         	add	sp, #0x4
10009316: bd80         	pop	{r7, pc}

10009318 <rp2040_hal::clocks::ClocksManager::new::hdc7061cee8eb4b75>:
10009318: b5f0         	push	{r4, r5, r6, r7, lr}
1000931a: af03         	add	r7, sp, #0xc
1000931c: b095         	sub	sp, #0x54
1000931e: 9007         	str	r0, [sp, #0x1c]
10009320: a80d         	add	r0, sp, #0x34
10009322: 9002         	str	r0, [sp, #0x8]
10009324: 9014         	str	r0, [sp, #0x50]
10009326: 482c         	ldr	r0, [pc, #0xb0]         @ 0x100093d8 <rp2040_hal::clocks::ClocksManager::new::hdc7061cee8eb4b75+0xc0>
10009328: 900e         	str	r0, [sp, #0x38]
1000932a: 482c         	ldr	r0, [pc, #0xb0]         @ 0x100093dc <rp2040_hal::clocks::ClocksManager::new::hdc7061cee8eb4b75+0xc4>
1000932c: 9001         	str	r0, [sp, #0x4]
1000932e: 9010         	str	r0, [sp, #0x40]
10009330: 2000         	movs	r0, #0x0
10009332: 9004         	str	r0, [sp, #0x10]
10009334: 900f         	str	r0, [sp, #0x3c]
10009336: a80f         	add	r0, sp, #0x3c
10009338: f000 f854    	bl	0x100093e4 <rp2040_hal::clocks::ClocksManager::new::{{closure}}::h3de06427c09a32ae> @ imm = #0xa8
1000933c: 4601         	mov	r1, r0
1000933e: 9801         	ldr	r0, [sp, #0x4]
10009340: 6809         	ldr	r1, [r1]
10009342: 9011         	str	r0, [sp, #0x44]
10009344: 9112         	str	r1, [sp, #0x48]
10009346: 9013         	str	r0, [sp, #0x4c]
10009348: f002 ff28    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x2e50
1000934c: 9802         	ldr	r0, [sp, #0x8]
1000934e: f7fe f939    	bl	0x100075c4 <rp2040_hal::clocks::ShareableClocks::new::hf41f0528af4bf96a> @ imm = #-0x1d8e
10009352: 9804         	ldr	r0, [sp, #0x10]
10009354: f7fc ff8d    	bl	0x10006272 <<u32 as fugit::rate::ExtU32>::Hz::ha421d0a6a3793ef2> @ imm = #-0x30e6
10009358: 4601         	mov	r1, r0
1000935a: 9804         	ldr	r0, [sp, #0x10]
1000935c: 9108         	str	r1, [sp, #0x20]
1000935e: f7fc ff88    	bl	0x10006272 <<u32 as fugit::rate::ExtU32>::Hz::ha421d0a6a3793ef2> @ imm = #-0x30f0
10009362: 4601         	mov	r1, r0
10009364: 9804         	ldr	r0, [sp, #0x10]
10009366: 9109         	str	r1, [sp, #0x24]
10009368: f7fc ff83    	bl	0x10006272 <<u32 as fugit::rate::ExtU32>::Hz::ha421d0a6a3793ef2> @ imm = #-0x30fa
1000936c: 4601         	mov	r1, r0
1000936e: 9804         	ldr	r0, [sp, #0x10]
10009370: 910a         	str	r1, [sp, #0x28]
10009372: f7fc ff7e    	bl	0x10006272 <<u32 as fugit::rate::ExtU32>::Hz::ha421d0a6a3793ef2> @ imm = #-0x3104
10009376: 900b         	str	r0, [sp, #0x2c]
10009378: 4819         	ldr	r0, [pc, #0x64]         @ 0x100093e0 <rp2040_hal::clocks::ClocksManager::new::hdc7061cee8eb4b75+0xc8>
1000937a: 9003         	str	r0, [sp, #0xc]
1000937c: f7fc ff79    	bl	0x10006272 <<u32 as fugit::rate::ExtU32>::Hz::ha421d0a6a3793ef2> @ imm = #-0x310e
10009380: 4606         	mov	r6, r0
10009382: 9803         	ldr	r0, [sp, #0xc]
10009384: f7fc ff75    	bl	0x10006272 <<u32 as fugit::rate::ExtU32>::Hz::ha421d0a6a3793ef2> @ imm = #-0x3116
10009388: 4605         	mov	r5, r0
1000938a: 9803         	ldr	r0, [sp, #0xc]
1000938c: f7fc ff71    	bl	0x10006272 <<u32 as fugit::rate::ExtU32>::Hz::ha421d0a6a3793ef2> @ imm = #-0x311e
10009390: 4604         	mov	r4, r0
10009392: 9804         	ldr	r0, [sp, #0x10]
10009394: f7fc ff6d    	bl	0x10006272 <<u32 as fugit::rate::ExtU32>::Hz::ha421d0a6a3793ef2> @ imm = #-0x3126
10009398: 4601         	mov	r1, r0
1000939a: 9804         	ldr	r0, [sp, #0x10]
1000939c: 9105         	str	r1, [sp, #0x14]
1000939e: f7fc ff68    	bl	0x10006272 <<u32 as fugit::rate::ExtU32>::Hz::ha421d0a6a3793ef2> @ imm = #-0x3130
100093a2: 4601         	mov	r1, r0
100093a4: 9804         	ldr	r0, [sp, #0x10]
100093a6: 9106         	str	r1, [sp, #0x18]
100093a8: f7fc ff63    	bl	0x10006272 <<u32 as fugit::rate::ExtU32>::Hz::ha421d0a6a3793ef2> @ imm = #-0x313a
100093ac: 9b05         	ldr	r3, [sp, #0x14]
100093ae: 9a06         	ldr	r2, [sp, #0x18]
100093b0: 9907         	ldr	r1, [sp, #0x1c]
100093b2: 900c         	str	r0, [sp, #0x30]
100093b4: 9808         	ldr	r0, [sp, #0x20]
100093b6: 6008         	str	r0, [r1]
100093b8: 9809         	ldr	r0, [sp, #0x24]
100093ba: 6048         	str	r0, [r1, #0x4]
100093bc: 980a         	ldr	r0, [sp, #0x28]
100093be: 6088         	str	r0, [r1, #0x8]
100093c0: 980b         	ldr	r0, [sp, #0x2c]
100093c2: 60c8         	str	r0, [r1, #0xc]
100093c4: 980c         	ldr	r0, [sp, #0x30]
100093c6: 610e         	str	r6, [r1, #0x10]
100093c8: 614d         	str	r5, [r1, #0x14]
100093ca: 618c         	str	r4, [r1, #0x18]
100093cc: 61cb         	str	r3, [r1, #0x1c]
100093ce: 620a         	str	r2, [r1, #0x20]
100093d0: 6248         	str	r0, [r1, #0x24]
100093d2: b015         	add	sp, #0x54
100093d4: bdf0         	pop	{r4, r5, r6, r7, pc}
100093d6: 46c0         	mov	r8, r8
100093d8: 00 80 00 40  	.word	0x40008000
100093dc: 78 80 00 40  	.word	0x40008078
100093e0: 00 1b b7 00  	.word	0x00b71b00

100093e4 <rp2040_hal::clocks::ClocksManager::new::{{closure}}::h3de06427c09a32ae>:
100093e4: b580         	push	{r7, lr}
100093e6: af00         	add	r7, sp, #0x0
100093e8: b082         	sub	sp, #0x8
100093ea: 9001         	str	r0, [sp, #0x4]
100093ec: b002         	add	sp, #0x8
100093ee: bd80         	pop	{r7, pc}

100093f0 <rp2040_hal::clocks::ReferenceClock::set_aux::h9fa9f83cb0f026a5>:
100093f0: b580         	push	{r7, lr}
100093f2: af00         	add	r7, sp, #0x0
100093f4: b092         	sub	sp, #0x48
100093f6: 9102         	str	r1, [sp, #0x8]
100093f8: 9004         	str	r0, [sp, #0x10]
100093fa: 9105         	str	r1, [sp, #0x14]
100093fc: 1d00         	adds	r0, r0, #0x4
100093fe: f7fe f8e7    	bl	0x100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2> @ imm = #-0x1e32
10009402: 9902         	ldr	r1, [sp, #0x8]
10009404: 9006         	str	r0, [sp, #0x18]
10009406: 9007         	str	r0, [sp, #0x1c]
10009408: 3030         	adds	r0, #0x30
1000940a: 9003         	str	r0, [sp, #0xc]
1000940c: 900a         	str	r0, [sp, #0x28]
1000940e: 910b         	str	r1, [sp, #0x2c]
10009410: 900d         	str	r0, [sp, #0x34]
10009412: 900e         	str	r0, [sp, #0x38]
10009414: f002 fe57    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x2cae
10009418: 9000         	str	r0, [sp]
1000941a: 900c         	str	r0, [sp, #0x30]
1000941c: 9008         	str	r0, [sp, #0x20]
1000941e: 2000         	movs	r0, #0x0
10009420: 9001         	str	r0, [sp, #0x4]
10009422: f7fc ff1f    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x31c2
10009426: 4601         	mov	r1, r0
10009428: 9800         	ldr	r0, [sp]
1000942a: f7fc ff3a    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x318c
1000942e: 9901         	ldr	r1, [sp, #0x4]
10009430: f7fc ff2f    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x31a2
10009434: 4601         	mov	r1, r0
10009436: 9802         	ldr	r0, [sp, #0x8]
10009438: 9109         	str	r1, [sp, #0x24]
1000943a: a908         	add	r1, sp, #0x20
1000943c: aa09         	add	r2, sp, #0x24
1000943e: f000 f80a    	bl	0x10009456 <rp2040_hal::clocks::ReferenceClock::set_aux::{{closure}}::ha72b52a0ccbdc264> @ imm = #0x14
10009442: 4601         	mov	r1, r0
10009444: 9803         	ldr	r0, [sp, #0xc]
10009446: 6809         	ldr	r1, [r1]
10009448: 900f         	str	r0, [sp, #0x3c]
1000944a: 9110         	str	r1, [sp, #0x40]
1000944c: 9011         	str	r0, [sp, #0x44]
1000944e: f002 fea5    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x2d4a
10009452: b012         	add	sp, #0x48
10009454: bd80         	pop	{r7, pc}

10009456 <rp2040_hal::clocks::ReferenceClock::set_aux::{{closure}}::ha72b52a0ccbdc264>:
10009456: b580         	push	{r7, lr}
10009458: af00         	add	r7, sp, #0x0
1000945a: b094         	sub	sp, #0x50
1000945c: 9200         	str	r2, [sp]
1000945e: 9005         	str	r0, [sp, #0x14]
10009460: 9107         	str	r1, [sp, #0x1c]
10009462: 9208         	str	r2, [sp, #0x20]
10009464: 9209         	str	r2, [sp, #0x24]
10009466: 920a         	str	r2, [sp, #0x28]
10009468: a90b         	add	r1, sp, #0x2c
1000946a: 2005         	movs	r0, #0x5
1000946c: 9001         	str	r0, [sp, #0x4]
1000946e: 7008         	strb	r0, [r1]
10009470: 9805         	ldr	r0, [sp, #0x14]
10009472: f000 f898    	bl	0x100095a6 <<rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Stable> as rp2040_hal::clocks::ValidSrc<rp2040_hal::clocks::ReferenceClock>>::variant::he04c7c9ee46cd11c> @ imm = #0x130
10009476: 4602         	mov	r2, r0
10009478: 2001         	movs	r0, #0x1
1000947a: 4002         	ands	r2, r0
1000947c: a806         	add	r0, sp, #0x18
1000947e: 7002         	strb	r2, [r0]
10009480: 7041         	strb	r1, [r0, #0x1]
10009482: f000 f911    	bl	0x100096a8 <rp2040_hal::clocks::ClkRefSrcType::unwrap_aux::h1b3d324d006d5bbc> @ imm = #0x222
10009486: 9a00         	ldr	r2, [sp]
10009488: 9901         	ldr	r1, [sp, #0x4]
1000948a: 4603         	mov	r3, r0
1000948c: 920c         	str	r2, [sp, #0x30]
1000948e: a80c         	add	r0, sp, #0x30
10009490: 7101         	strb	r1, [r0, #0x4]
10009492: a80e         	add	r0, sp, #0x38
10009494: 7003         	strb	r3, [r0]
10009496: a80f         	add	r0, sp, #0x3c
10009498: 7003         	strb	r3, [r0]
1000949a: 7800         	ldrb	r0, [r0]
1000949c: 9003         	str	r0, [sp, #0xc]
1000949e: 9210         	str	r2, [sp, #0x40]
100094a0: aa10         	add	r2, sp, #0x40
100094a2: 7111         	strb	r1, [r2, #0x4]
100094a4: a912         	add	r1, sp, #0x48
100094a6: 7008         	strb	r0, [r1]
100094a8: 9810         	ldr	r0, [sp, #0x40]
100094aa: 9002         	str	r0, [sp, #0x8]
100094ac: f7fc fe3a    	bl	0x10006124 <rp2040_pac::generic::mask_u32::hc7080cfa0562be4f> @ imm = #-0x338c
100094b0: 9911         	ldr	r1, [sp, #0x44]
100094b2: f7fd fcd1    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x265e
100094b6: f7fc fed5    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x3256
100094ba: 4601         	mov	r1, r0
100094bc: 9802         	ldr	r0, [sp, #0x8]
100094be: f7fd fcb7    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x2692
100094c2: 9803         	ldr	r0, [sp, #0xc]
100094c4: 9910         	ldr	r1, [sp, #0x40]
100094c6: 9104         	str	r1, [sp, #0x10]
100094c8: a913         	add	r1, sp, #0x4c
100094ca: 7008         	strb	r0, [r1]
100094cc: f7fc fe2a    	bl	0x10006124 <rp2040_pac::generic::mask_u32::hc7080cfa0562be4f> @ imm = #-0x33ac
100094d0: 4601         	mov	r1, r0
100094d2: 9803         	ldr	r0, [sp, #0xc]
100094d4: f7fc fee5    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x3236
100094d8: 9911         	ldr	r1, [sp, #0x44]
100094da: f7fd fcbd    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x2686
100094de: 4601         	mov	r1, r0
100094e0: 9804         	ldr	r0, [sp, #0x10]
100094e2: f7fd fc99    	bl	0x10006e18 <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::hc18d656116c887ea> @ imm = #-0x26ce
100094e6: 9810         	ldr	r0, [sp, #0x40]
100094e8: b014         	add	sp, #0x50
100094ea: bd80         	pop	{r7, pc}

100094ec <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::ClockDivision>::set_div::ha96273a28617531a>:
100094ec: b580         	push	{r7, lr}
100094ee: af00         	add	r7, sp, #0x0
100094f0: b092         	sub	sp, #0x48
100094f2: 9105         	str	r1, [sp, #0x14]
100094f4: 9006         	str	r0, [sp, #0x18]
100094f6: 1d00         	adds	r0, r0, #0x4
100094f8: f7fe f86a    	bl	0x100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2> @ imm = #-0x1f2c
100094fc: 9007         	str	r0, [sp, #0x1c]
100094fe: 3034         	adds	r0, #0x34
10009500: 9004         	str	r0, [sp, #0x10]
10009502: 900a         	str	r0, [sp, #0x28]
10009504: a905         	add	r1, sp, #0x14
10009506: 9103         	str	r1, [sp, #0xc]
10009508: 910b         	str	r1, [sp, #0x2c]
1000950a: 900d         	str	r0, [sp, #0x34]
1000950c: 900e         	str	r0, [sp, #0x38]
1000950e: f002 fdda    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x2bb4
10009512: 9001         	str	r0, [sp, #0x4]
10009514: 900c         	str	r0, [sp, #0x30]
10009516: 9008         	str	r0, [sp, #0x20]
10009518: 2000         	movs	r0, #0x0
1000951a: 9002         	str	r0, [sp, #0x8]
1000951c: f7fc fea2    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x32bc
10009520: 4601         	mov	r1, r0
10009522: 9801         	ldr	r0, [sp, #0x4]
10009524: f7fc febd    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x3286
10009528: 9902         	ldr	r1, [sp, #0x8]
1000952a: f7fc feb2    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x329c
1000952e: 4601         	mov	r1, r0
10009530: 9803         	ldr	r0, [sp, #0xc]
10009532: 9109         	str	r1, [sp, #0x24]
10009534: a908         	add	r1, sp, #0x20
10009536: aa09         	add	r2, sp, #0x24
10009538: f000 f80a    	bl	0x10009550 <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::ClockDivision>::set_div::{{closure}}::h839cc08f6a5fd136> @ imm = #0x14
1000953c: 4601         	mov	r1, r0
1000953e: 9804         	ldr	r0, [sp, #0x10]
10009540: 6809         	ldr	r1, [r1]
10009542: 900f         	str	r0, [sp, #0x3c]
10009544: 9110         	str	r1, [sp, #0x40]
10009546: 9011         	str	r0, [sp, #0x44]
10009548: f002 fe28    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x2c50
1000954c: b012         	add	sp, #0x48
1000954e: bd80         	pop	{r7, pc}

10009550 <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::ClockDivision>::set_div::{{closure}}::h839cc08f6a5fd136>:
10009550: b580         	push	{r7, lr}
10009552: af00         	add	r7, sp, #0x0
10009554: b086         	sub	sp, #0x18
10009556: 9200         	str	r2, [sp]
10009558: 4602         	mov	r2, r0
1000955a: 9800         	ldr	r0, [sp]
1000955c: 9201         	str	r2, [sp, #0x4]
1000955e: 9102         	str	r1, [sp, #0x8]
10009560: 9003         	str	r0, [sp, #0xc]
10009562: 9901         	ldr	r1, [sp, #0x4]
10009564: 6809         	ldr	r1, [r1]
10009566: 9004         	str	r0, [sp, #0x10]
10009568: 9105         	str	r1, [sp, #0x14]
1000956a: 6001         	str	r1, [r0]
1000956c: b006         	add	sp, #0x18
1000956e: bd80         	pop	{r7, pc}

10009570 <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::ClockDivision>::get_div::h747cd656b401677a>:
10009570: b580         	push	{r7, lr}
10009572: af00         	add	r7, sp, #0x0
10009574: b088         	sub	sp, #0x20
10009576: 9002         	str	r0, [sp, #0x8]
10009578: 1d00         	adds	r0, r0, #0x4
1000957a: f7fe f829    	bl	0x100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2> @ imm = #-0x1fae
1000957e: 9003         	str	r0, [sp, #0xc]
10009580: 3034         	adds	r0, #0x34
10009582: 9004         	str	r0, [sp, #0x10]
10009584: 9006         	str	r0, [sp, #0x18]
10009586: 9007         	str	r0, [sp, #0x1c]
10009588: f002 fd9d    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x2b3a
1000958c: 9001         	str	r0, [sp, #0x4]
1000958e: a801         	add	r0, sp, #0x4
10009590: 9005         	str	r0, [sp, #0x14]
10009592: 9801         	ldr	r0, [sp, #0x4]
10009594: b008         	add	sp, #0x20
10009596: bd80         	pop	{r7, pc}

10009598 <<rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Stable> as rp2040_hal::clocks::ValidSrc<rp2040_hal::clocks::ReferenceClock>>::is_aux::h3889bb850183a894>:
10009598: b580         	push	{r7, lr}
1000959a: af00         	add	r7, sp, #0x0
1000959c: b081         	sub	sp, #0x4
1000959e: 9000         	str	r0, [sp]
100095a0: 2000         	movs	r0, #0x0
100095a2: b001         	add	sp, #0x4
100095a4: bd80         	pop	{r7, pc}

100095a6 <<rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Stable> as rp2040_hal::clocks::ValidSrc<rp2040_hal::clocks::ReferenceClock>>::variant::he04c7c9ee46cd11c>:
100095a6: b580         	push	{r7, lr}
100095a8: af00         	add	r7, sp, #0x0
100095aa: b083         	sub	sp, #0xc
100095ac: 9002         	str	r0, [sp, #0x8]
100095ae: a901         	add	r1, sp, #0x4
100095b0: 2002         	movs	r0, #0x2
100095b2: 7008         	strb	r0, [r1]
100095b4: 9901         	ldr	r1, [sp, #0x4]
100095b6: 4668         	mov	r0, sp
100095b8: 7041         	strb	r1, [r0, #0x1]
100095ba: 2100         	movs	r1, #0x0
100095bc: 7001         	strb	r1, [r0]
100095be: 7841         	ldrb	r1, [r0, #0x1]
100095c0: 9800         	ldr	r0, [sp]
100095c2: b003         	add	sp, #0xc
100095c4: bd80         	pop	{r7, pc}
100095c6: d4d4         	bmi	0x10009572 <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::ClockDivision>::get_div::h747cd656b401677a+0x2> @ imm = #-0x58

100095c8 <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::GlitchlessClock>::await_select::hca01772bfe90a849>:
100095c8: b580         	push	{r7, lr}
100095ca: af00         	add	r7, sp, #0x0
100095cc: b08e         	sub	sp, #0x38
100095ce: 9100         	str	r1, [sp]
100095d0: 9005         	str	r0, [sp, #0x14]
100095d2: 9106         	str	r1, [sp, #0x18]
100095d4: 1d00         	adds	r0, r0, #0x4
100095d6: f7fd fffb    	bl	0x100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2> @ imm = #-0x200a
100095da: 9007         	str	r0, [sp, #0x1c]
100095dc: 9009         	str	r0, [sp, #0x24]
100095de: 3038         	adds	r0, #0x38
100095e0: 900a         	str	r0, [sp, #0x28]
100095e2: 900c         	str	r0, [sp, #0x30]
100095e4: 900d         	str	r0, [sp, #0x34]
100095e6: f002 fd6e    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x2adc
100095ea: 9900         	ldr	r1, [sp]
100095ec: 9004         	str	r0, [sp, #0x10]
100095ee: a804         	add	r0, sp, #0x10
100095f0: 900b         	str	r0, [sp, #0x2c]
100095f2: 9804         	ldr	r0, [sp, #0x10]
100095f4: 9001         	str	r0, [sp, #0x4]
100095f6: 9008         	str	r0, [sp, #0x20]
100095f8: 7808         	ldrb	r0, [r1]
100095fa: 9002         	str	r0, [sp, #0x8]
100095fc: 281f         	cmp	r0, #0x1f
100095fe: d809         	bhi	0x10009614 <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::GlitchlessClock>::await_select::hca01772bfe90a849+0x4c> @ imm = #0x12
10009600: e7ff         	b	0x10009602 <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::GlitchlessClock>::await_select::hca01772bfe90a849+0x3a> @ imm = #-0x2
10009602: 9801         	ldr	r0, [sp, #0x4]
10009604: 9a02         	ldr	r2, [sp, #0x8]
10009606: 211f         	movs	r1, #0x1f
10009608: 400a         	ands	r2, r1
1000960a: 2101         	movs	r1, #0x1
1000960c: 4091         	lsls	r1, r2
1000960e: 4288         	cmp	r0, r1
10009610: d107         	bne	0x10009622 <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::GlitchlessClock>::await_select::hca01772bfe90a849+0x5a> @ imm = #0xe
10009612: e002         	b	0x1000961a <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::GlitchlessClock>::await_select::hca01772bfe90a849+0x52> @ imm = #0x4
10009614: 4807         	ldr	r0, [pc, #0x1c]         @ 0x10009634 <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::GlitchlessClock>::await_select::hca01772bfe90a849+0x6c>
10009616: f003 ff41    	bl	0x1000d49c <core::panicking::panic_const::panic_const_shl_overflow::h42afea46a5d11e4a> @ imm = #0x3e82
1000961a: a903         	add	r1, sp, #0xc
1000961c: 2000         	movs	r0, #0x0
1000961e: 7008         	strb	r0, [r1]
10009620: e003         	b	0x1000962a <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::GlitchlessClock>::await_select::hca01772bfe90a849+0x62> @ imm = #0x6
10009622: a903         	add	r1, sp, #0xc
10009624: 2001         	movs	r0, #0x1
10009626: 7008         	strb	r0, [r1]
10009628: e7ff         	b	0x1000962a <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::GlitchlessClock>::await_select::hca01772bfe90a849+0x62> @ imm = #-0x2
1000962a: a803         	add	r0, sp, #0xc
1000962c: 7800         	ldrb	r0, [r0]
1000962e: b00e         	add	sp, #0x38
10009630: bd80         	pop	{r7, pc}
10009632: 46c0         	mov	r8, r8
10009634: 94 1f 01 10  	.word	0x10011f94

10009638 <rp2040_hal::clocks::ClkRefSrcType::get_clock_id::h9b9763dcadd0ff49>:
10009638: b580         	push	{r7, lr}
1000963a: af00         	add	r7, sp, #0x0
1000963c: b087         	sub	sp, #0x1c
1000963e: 9000         	str	r0, [sp]
10009640: 9004         	str	r0, [sp, #0x10]
10009642: 7800         	ldrb	r0, [r0]
10009644: 07c0         	lsls	r0, r0, #0x1f
10009646: 2800         	cmp	r0, #0x0
10009648: d10a         	bne	0x10009660 <rp2040_hal::clocks::ClkRefSrcType::get_clock_id::h9b9763dcadd0ff49+0x28> @ imm = #0x14
1000964a: e7ff         	b	0x1000964c <rp2040_hal::clocks::ClkRefSrcType::get_clock_id::h9b9763dcadd0ff49+0x14> @ imm = #-0x2
1000964c: 9800         	ldr	r0, [sp]
1000964e: 1c41         	adds	r1, r0, #0x1
10009650: 9105         	str	r1, [sp, #0x14]
10009652: 7840         	ldrb	r0, [r0, #0x1]
10009654: a902         	add	r1, sp, #0x8
10009656: 7008         	strb	r0, [r1]
10009658: 9802         	ldr	r0, [sp, #0x8]
1000965a: a901         	add	r1, sp, #0x4
1000965c: 7008         	strb	r0, [r1]
1000965e: e009         	b	0x10009674 <rp2040_hal::clocks::ClkRefSrcType::get_clock_id::h9b9763dcadd0ff49+0x3c> @ imm = #0x12
10009660: 9800         	ldr	r0, [sp]
10009662: 1c41         	adds	r1, r0, #0x1
10009664: 9106         	str	r1, [sp, #0x18]
10009666: 7840         	ldrb	r0, [r0, #0x1]
10009668: a903         	add	r1, sp, #0xc
1000966a: 7008         	strb	r0, [r1]
1000966c: 9803         	ldr	r0, [sp, #0xc]
1000966e: a901         	add	r1, sp, #0x4
10009670: 7008         	strb	r0, [r1]
10009672: e7ff         	b	0x10009674 <rp2040_hal::clocks::ClkRefSrcType::get_clock_id::h9b9763dcadd0ff49+0x3c> @ imm = #-0x2
10009674: 9801         	ldr	r0, [sp, #0x4]
10009676: b007         	add	sp, #0x1c
10009678: bd80         	pop	{r7, pc}
1000967a: d4d4         	bmi	0x10009626 <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::GlitchlessClock>::await_select::hca01772bfe90a849+0x5e> @ imm = #-0x58

1000967c <rp2040_hal::clocks::ClkRefSrcType::unwrap_src::h5e080c436bca01a7>:
1000967c: b580         	push	{r7, lr}
1000967e: af00         	add	r7, sp, #0x0
10009680: b084         	sub	sp, #0x10
10009682: 9001         	str	r0, [sp, #0x4]
10009684: 9002         	str	r0, [sp, #0x8]
10009686: 7800         	ldrb	r0, [r0]
10009688: 07c0         	lsls	r0, r0, #0x1f
1000968a: 2800         	cmp	r0, #0x0
1000968c: d106         	bne	0x1000969c <rp2040_hal::clocks::ClkRefSrcType::unwrap_src::h5e080c436bca01a7+0x20> @ imm = #0xc
1000968e: e7ff         	b	0x10009690 <rp2040_hal::clocks::ClkRefSrcType::unwrap_src::h5e080c436bca01a7+0x14> @ imm = #-0x2
10009690: 9801         	ldr	r0, [sp, #0x4]
10009692: 1c41         	adds	r1, r0, #0x1
10009694: 9103         	str	r1, [sp, #0xc]
10009696: 7840         	ldrb	r0, [r0, #0x1]
10009698: b004         	add	sp, #0x10
1000969a: bd80         	pop	{r7, pc}
1000969c: 4801         	ldr	r0, [pc, #0x4]          @ 0x100096a4 <rp2040_hal::clocks::ClkRefSrcType::unwrap_src::h5e080c436bca01a7+0x28>
1000969e: f000 fa67    	bl	0x10009b70 <rp2040_hal::clocks::ClkRefSrcType::unwrap_src::panic_cold_explicit::h45494417c372ac44> @ imm = #0x4ce
100096a2: 46c0         	mov	r8, r8
100096a4: 94 1f 01 10  	.word	0x10011f94

100096a8 <rp2040_hal::clocks::ClkRefSrcType::unwrap_aux::h1b3d324d006d5bbc>:
100096a8: b580         	push	{r7, lr}
100096aa: af00         	add	r7, sp, #0x0
100096ac: b084         	sub	sp, #0x10
100096ae: 9001         	str	r0, [sp, #0x4]
100096b0: 9002         	str	r0, [sp, #0x8]
100096b2: 7800         	ldrb	r0, [r0]
100096b4: 07c0         	lsls	r0, r0, #0x1f
100096b6: 2800         	cmp	r0, #0x0
100096b8: d103         	bne	0x100096c2 <rp2040_hal::clocks::ClkRefSrcType::unwrap_aux::h1b3d324d006d5bbc+0x1a> @ imm = #0x6
100096ba: e7ff         	b	0x100096bc <rp2040_hal::clocks::ClkRefSrcType::unwrap_aux::h1b3d324d006d5bbc+0x14> @ imm = #-0x2
100096bc: 4804         	ldr	r0, [pc, #0x10]         @ 0x100096d0 <rp2040_hal::clocks::ClkRefSrcType::unwrap_aux::h1b3d324d006d5bbc+0x28>
100096be: f000 fa5b    	bl	0x10009b78 <rp2040_hal::clocks::ClkRefSrcType::unwrap_aux::panic_cold_explicit::h34c6adba53770ff9> @ imm = #0x4b6
100096c2: 9801         	ldr	r0, [sp, #0x4]
100096c4: 1c41         	adds	r1, r0, #0x1
100096c6: 9103         	str	r1, [sp, #0xc]
100096c8: 7840         	ldrb	r0, [r0, #0x1]
100096ca: b004         	add	sp, #0x10
100096cc: bd80         	pop	{r7, pc}
100096ce: 46c0         	mov	r8, r8
100096d0: 94 1f 01 10  	.word	0x10011f94

100096d4 <rp2040_hal::clocks::ReferenceClock::reset_source_await::h2c80dcbb4ecac84f>:
100096d4: b580         	push	{r7, lr}
100096d6: af00         	add	r7, sp, #0x0
100096d8: b092         	sub	sp, #0x48
100096da: 9004         	str	r0, [sp, #0x10]
100096dc: 9005         	str	r0, [sp, #0x14]
100096de: 1d00         	adds	r0, r0, #0x4
100096e0: f7fd ff76    	bl	0x100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2> @ imm = #-0x2114
100096e4: 9904         	ldr	r1, [sp, #0x10]
100096e6: 9006         	str	r0, [sp, #0x18]
100096e8: 9007         	str	r0, [sp, #0x1c]
100096ea: 3030         	adds	r0, #0x30
100096ec: 9003         	str	r0, [sp, #0xc]
100096ee: 900a         	str	r0, [sp, #0x28]
100096f0: 910b         	str	r1, [sp, #0x2c]
100096f2: 900d         	str	r0, [sp, #0x34]
100096f4: 900e         	str	r0, [sp, #0x38]
100096f6: f002 fce6    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x29cc
100096fa: 9001         	str	r0, [sp, #0x4]
100096fc: 900c         	str	r0, [sp, #0x30]
100096fe: 9008         	str	r0, [sp, #0x20]
10009700: 2000         	movs	r0, #0x0
10009702: 9002         	str	r0, [sp, #0x8]
10009704: f7fc fdae    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x34a4
10009708: 4601         	mov	r1, r0
1000970a: 9801         	ldr	r0, [sp, #0x4]
1000970c: f7fc fdc9    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x346e
10009710: 9902         	ldr	r1, [sp, #0x8]
10009712: f7fc fdbe    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x3484
10009716: 4601         	mov	r1, r0
10009718: 9804         	ldr	r0, [sp, #0x10]
1000971a: 9109         	str	r1, [sp, #0x24]
1000971c: a908         	add	r1, sp, #0x20
1000971e: aa09         	add	r2, sp, #0x24
10009720: f000 f816    	bl	0x10009750 <rp2040_hal::clocks::ReferenceClock::reset_source_await::{{closure}}::he87886157ec57b62> @ imm = #0x2c
10009724: 4601         	mov	r1, r0
10009726: 9803         	ldr	r0, [sp, #0xc]
10009728: 6809         	ldr	r1, [r1]
1000972a: 900f         	str	r0, [sp, #0x3c]
1000972c: 9110         	str	r1, [sp, #0x40]
1000972e: 9011         	str	r0, [sp, #0x44]
10009730: f002 fd34    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x2a68
10009734: 200c         	movs	r0, #0xc
10009736: f7fc fda4    	bl	0x10006282 <<u32 as fugit::rate::ExtU32>::MHz::h808bfa1dcebc2205> @ imm = #-0x34b8
1000973a: 4601         	mov	r1, r0
1000973c: 9804         	ldr	r0, [sp, #0x10]
1000973e: 6001         	str	r1, [r0]
10009740: 4902         	ldr	r1, [pc, #0x8]          @ 0x1000974c <rp2040_hal::clocks::ReferenceClock::reset_source_await::h2c80dcbb4ecac84f+0x78>
10009742: f7ff ff41    	bl	0x100095c8 <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::GlitchlessClock>::await_select::hca01772bfe90a849> @ imm = #-0x17e
10009746: b012         	add	sp, #0x48
10009748: bd80         	pop	{r7, pc}
1000974a: 46c0         	mov	r8, r8
1000974c: a0 1b 01 10  	.word	0x10011ba0

10009750 <rp2040_hal::clocks::ReferenceClock::reset_source_await::{{closure}}::he87886157ec57b62>:
10009750: b580         	push	{r7, lr}
10009752: af00         	add	r7, sp, #0x0
10009754: b094         	sub	sp, #0x50
10009756: 9201         	str	r2, [sp, #0x4]
10009758: 9006         	str	r0, [sp, #0x18]
1000975a: 9107         	str	r1, [sp, #0x1c]
1000975c: 9208         	str	r2, [sp, #0x20]
1000975e: 9209         	str	r2, [sp, #0x24]
10009760: 920a         	str	r2, [sp, #0x28]
10009762: a90b         	add	r1, sp, #0x2c
10009764: 2000         	movs	r0, #0x0
10009766: 9002         	str	r0, [sp, #0x8]
10009768: 7008         	strb	r0, [r1]
1000976a: 9806         	ldr	r0, [sp, #0x18]
1000976c: f7fd ff4e    	bl	0x1000760c <rp2040_hal::clocks::ReferenceClock::get_default_clock_source::h6b407ad0945813e4> @ imm = #-0x2164
10009770: 9a01         	ldr	r2, [sp, #0x4]
10009772: 9902         	ldr	r1, [sp, #0x8]
10009774: 4603         	mov	r3, r0
10009776: 920c         	str	r2, [sp, #0x30]
10009778: a80c         	add	r0, sp, #0x30
1000977a: 7101         	strb	r1, [r0, #0x4]
1000977c: a80e         	add	r0, sp, #0x38
1000977e: 7003         	strb	r3, [r0]
10009780: a80f         	add	r0, sp, #0x3c
10009782: 7003         	strb	r3, [r0]
10009784: 7800         	ldrb	r0, [r0]
10009786: 9004         	str	r0, [sp, #0x10]
10009788: 9210         	str	r2, [sp, #0x40]
1000978a: aa10         	add	r2, sp, #0x40
1000978c: 7111         	strb	r1, [r2, #0x4]
1000978e: a912         	add	r1, sp, #0x48
10009790: 7008         	strb	r0, [r1]
10009792: 9810         	ldr	r0, [sp, #0x40]
10009794: 9003         	str	r0, [sp, #0xc]
10009796: f7fc fcc5    	bl	0x10006124 <rp2040_pac::generic::mask_u32::hc7080cfa0562be4f> @ imm = #-0x3676
1000979a: 9911         	ldr	r1, [sp, #0x44]
1000979c: f7fd fb5c    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x2948
100097a0: f7fc fd60    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x3540
100097a4: 4601         	mov	r1, r0
100097a6: 9803         	ldr	r0, [sp, #0xc]
100097a8: f7fd fb42    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x297c
100097ac: 9804         	ldr	r0, [sp, #0x10]
100097ae: 9910         	ldr	r1, [sp, #0x40]
100097b0: 9105         	str	r1, [sp, #0x14]
100097b2: a913         	add	r1, sp, #0x4c
100097b4: 7008         	strb	r0, [r1]
100097b6: f7fc fcb5    	bl	0x10006124 <rp2040_pac::generic::mask_u32::hc7080cfa0562be4f> @ imm = #-0x3696
100097ba: 4601         	mov	r1, r0
100097bc: 9804         	ldr	r0, [sp, #0x10]
100097be: f7fc fd70    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x3520
100097c2: 9911         	ldr	r1, [sp, #0x44]
100097c4: f7fd fb48    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x2970
100097c8: 4601         	mov	r1, r0
100097ca: 9805         	ldr	r0, [sp, #0x14]
100097cc: f7fd fb24    	bl	0x10006e18 <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::hc18d656116c887ea> @ imm = #-0x29b8
100097d0: 9810         	ldr	r0, [sp, #0x40]
100097d2: b014         	add	sp, #0x50
100097d4: bd80         	pop	{r7, pc}

100097d6 <rp2040_hal::clocks::ReferenceClock::set_src::h427a777dad33bb6b>:
100097d6: b580         	push	{r7, lr}
100097d8: af00         	add	r7, sp, #0x0
100097da: b094         	sub	sp, #0x50
100097dc: 9104         	str	r1, [sp, #0x10]
100097de: 9006         	str	r0, [sp, #0x18]
100097e0: 9107         	str	r1, [sp, #0x1c]
100097e2: 1d00         	adds	r0, r0, #0x4
100097e4: f7fd fef4    	bl	0x100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2> @ imm = #-0x2218
100097e8: 9904         	ldr	r1, [sp, #0x10]
100097ea: 9008         	str	r0, [sp, #0x20]
100097ec: 9009         	str	r0, [sp, #0x24]
100097ee: 3030         	adds	r0, #0x30
100097f0: 9003         	str	r0, [sp, #0xc]
100097f2: 900c         	str	r0, [sp, #0x30]
100097f4: 910d         	str	r1, [sp, #0x34]
100097f6: 900f         	str	r0, [sp, #0x3c]
100097f8: 9010         	str	r0, [sp, #0x40]
100097fa: f002 fc64    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x28c8
100097fe: 9001         	str	r0, [sp, #0x4]
10009800: 900e         	str	r0, [sp, #0x38]
10009802: 900a         	str	r0, [sp, #0x28]
10009804: 2000         	movs	r0, #0x0
10009806: 9002         	str	r0, [sp, #0x8]
10009808: f7fc fd2c    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x35a8
1000980c: 4601         	mov	r1, r0
1000980e: 9801         	ldr	r0, [sp, #0x4]
10009810: f7fc fd47    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x3572
10009814: 9902         	ldr	r1, [sp, #0x8]
10009816: f7fc fd3c    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x3588
1000981a: 4601         	mov	r1, r0
1000981c: 9804         	ldr	r0, [sp, #0x10]
1000981e: 910b         	str	r1, [sp, #0x2c]
10009820: a90a         	add	r1, sp, #0x28
10009822: aa0b         	add	r2, sp, #0x2c
10009824: f000 f815    	bl	0x10009852 <rp2040_hal::clocks::ReferenceClock::set_src::{{closure}}::h3bc3ccb2cd2fa250> @ imm = #0x2a
10009828: 4601         	mov	r1, r0
1000982a: 9803         	ldr	r0, [sp, #0xc]
1000982c: 6809         	ldr	r1, [r1]
1000982e: 9011         	str	r0, [sp, #0x44]
10009830: 9112         	str	r1, [sp, #0x48]
10009832: 9013         	str	r0, [sp, #0x4c]
10009834: f002 fcb2    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x2964
10009838: 9804         	ldr	r0, [sp, #0x10]
1000983a: f7ff feb4    	bl	0x100095a6 <<rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Stable> as rp2040_hal::clocks::ValidSrc<rp2040_hal::clocks::ReferenceClock>>::variant::he04c7c9ee46cd11c> @ imm = #-0x298
1000983e: 4602         	mov	r2, r0
10009840: 2001         	movs	r0, #0x1
10009842: 4002         	ands	r2, r0
10009844: a805         	add	r0, sp, #0x14
10009846: 7002         	strb	r2, [r0]
10009848: 7041         	strb	r1, [r0, #0x1]
1000984a: f7ff fef5    	bl	0x10009638 <rp2040_hal::clocks::ClkRefSrcType::get_clock_id::h9b9763dcadd0ff49> @ imm = #-0x216
1000984e: b014         	add	sp, #0x50
10009850: bd80         	pop	{r7, pc}

10009852 <rp2040_hal::clocks::ReferenceClock::set_src::{{closure}}::h3bc3ccb2cd2fa250>:
10009852: b580         	push	{r7, lr}
10009854: af00         	add	r7, sp, #0x0
10009856: b094         	sub	sp, #0x50
10009858: 9200         	str	r2, [sp]
1000985a: 9005         	str	r0, [sp, #0x14]
1000985c: 9107         	str	r1, [sp, #0x1c]
1000985e: 9208         	str	r2, [sp, #0x20]
10009860: 9209         	str	r2, [sp, #0x24]
10009862: 920a         	str	r2, [sp, #0x28]
10009864: a90b         	add	r1, sp, #0x2c
10009866: 2000         	movs	r0, #0x0
10009868: 9001         	str	r0, [sp, #0x4]
1000986a: 7008         	strb	r0, [r1]
1000986c: 9805         	ldr	r0, [sp, #0x14]
1000986e: f7ff fe9a    	bl	0x100095a6 <<rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Stable> as rp2040_hal::clocks::ValidSrc<rp2040_hal::clocks::ReferenceClock>>::variant::he04c7c9ee46cd11c> @ imm = #-0x2cc
10009872: 4602         	mov	r2, r0
10009874: 2001         	movs	r0, #0x1
10009876: 4002         	ands	r2, r0
10009878: a806         	add	r0, sp, #0x18
1000987a: 7002         	strb	r2, [r0]
1000987c: 7041         	strb	r1, [r0, #0x1]
1000987e: f7ff fefd    	bl	0x1000967c <rp2040_hal::clocks::ClkRefSrcType::unwrap_src::h5e080c436bca01a7> @ imm = #-0x206
10009882: 9a00         	ldr	r2, [sp]
10009884: 9901         	ldr	r1, [sp, #0x4]
10009886: 4603         	mov	r3, r0
10009888: 920c         	str	r2, [sp, #0x30]
1000988a: a80c         	add	r0, sp, #0x30
1000988c: 7101         	strb	r1, [r0, #0x4]
1000988e: a80e         	add	r0, sp, #0x38
10009890: 7003         	strb	r3, [r0]
10009892: a80f         	add	r0, sp, #0x3c
10009894: 7003         	strb	r3, [r0]
10009896: 7800         	ldrb	r0, [r0]
10009898: 9003         	str	r0, [sp, #0xc]
1000989a: 9210         	str	r2, [sp, #0x40]
1000989c: aa10         	add	r2, sp, #0x40
1000989e: 7111         	strb	r1, [r2, #0x4]
100098a0: a912         	add	r1, sp, #0x48
100098a2: 7008         	strb	r0, [r1]
100098a4: 9810         	ldr	r0, [sp, #0x40]
100098a6: 9002         	str	r0, [sp, #0x8]
100098a8: f7fc fc3c    	bl	0x10006124 <rp2040_pac::generic::mask_u32::hc7080cfa0562be4f> @ imm = #-0x3788
100098ac: 9911         	ldr	r1, [sp, #0x44]
100098ae: f7fd fad3    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x2a5a
100098b2: f7fc fcd7    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x3652
100098b6: 4601         	mov	r1, r0
100098b8: 9802         	ldr	r0, [sp, #0x8]
100098ba: f7fd fab9    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x2a8e
100098be: 9803         	ldr	r0, [sp, #0xc]
100098c0: 9910         	ldr	r1, [sp, #0x40]
100098c2: 9104         	str	r1, [sp, #0x10]
100098c4: a913         	add	r1, sp, #0x4c
100098c6: 7008         	strb	r0, [r1]
100098c8: f7fc fc2c    	bl	0x10006124 <rp2040_pac::generic::mask_u32::hc7080cfa0562be4f> @ imm = #-0x37a8
100098cc: 4601         	mov	r1, r0
100098ce: 9803         	ldr	r0, [sp, #0xc]
100098d0: f7fc fce7    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x3632
100098d4: 9911         	ldr	r1, [sp, #0x44]
100098d6: f7fd fabf    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x2a82
100098da: 4601         	mov	r1, r0
100098dc: 9804         	ldr	r0, [sp, #0x10]
100098de: f7fd fa9b    	bl	0x10006e18 <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::hc18d656116c887ea> @ imm = #-0x2aca
100098e2: 9810         	ldr	r0, [sp, #0x40]
100098e4: b014         	add	sp, #0x50
100098e6: bd80         	pop	{r7, pc}

100098e8 <rp2040_hal::clocks::ReferenceClock::set_self_aux_src::hc09f49b5e978b9d6>:
100098e8: b580         	push	{r7, lr}
100098ea: af00         	add	r7, sp, #0x0
100098ec: b092         	sub	sp, #0x48
100098ee: 9002         	str	r0, [sp, #0x8]
100098f0: 9006         	str	r0, [sp, #0x18]
100098f2: 1d00         	adds	r0, r0, #0x4
100098f4: f7fd fe6c    	bl	0x100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2> @ imm = #-0x2328
100098f8: 9902         	ldr	r1, [sp, #0x8]
100098fa: 9007         	str	r0, [sp, #0x1c]
100098fc: 3030         	adds	r0, #0x30
100098fe: 9003         	str	r0, [sp, #0xc]
10009900: 900a         	str	r0, [sp, #0x28]
10009902: 910b         	str	r1, [sp, #0x2c]
10009904: 900d         	str	r0, [sp, #0x34]
10009906: 900e         	str	r0, [sp, #0x38]
10009908: f002 fbdd    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x27ba
1000990c: 9001         	str	r0, [sp, #0x4]
1000990e: 900c         	str	r0, [sp, #0x30]
10009910: 9008         	str	r0, [sp, #0x20]
10009912: 2000         	movs	r0, #0x0
10009914: 9004         	str	r0, [sp, #0x10]
10009916: f7fc fca5    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x36b6
1000991a: 4601         	mov	r1, r0
1000991c: 9801         	ldr	r0, [sp, #0x4]
1000991e: f7fc fcc0    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x3680
10009922: 9904         	ldr	r1, [sp, #0x10]
10009924: f7fc fcb5    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x3696
10009928: 4601         	mov	r1, r0
1000992a: 9802         	ldr	r0, [sp, #0x8]
1000992c: 9109         	str	r1, [sp, #0x24]
1000992e: a908         	add	r1, sp, #0x20
10009930: aa09         	add	r2, sp, #0x24
10009932: f000 f817    	bl	0x10009964 <rp2040_hal::clocks::ReferenceClock::set_self_aux_src::{{closure}}::he94901a2811d43bb> @ imm = #0x2e
10009936: 4601         	mov	r1, r0
10009938: 9803         	ldr	r0, [sp, #0xc]
1000993a: 6809         	ldr	r1, [r1]
1000993c: 900f         	str	r0, [sp, #0x3c]
1000993e: 9110         	str	r1, [sp, #0x40]
10009940: 9011         	str	r0, [sp, #0x44]
10009942: f002 fc2b    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x2856
10009946: 9804         	ldr	r0, [sp, #0x10]
10009948: 2101         	movs	r1, #0x1
1000994a: 9105         	str	r1, [sp, #0x14]
1000994c: 2800         	cmp	r0, #0x0
1000994e: d103         	bne	0x10009958 <rp2040_hal::clocks::ReferenceClock::set_self_aux_src::hc09f49b5e978b9d6+0x70> @ imm = #0x6
10009950: e7ff         	b	0x10009952 <rp2040_hal::clocks::ReferenceClock::set_self_aux_src::hc09f49b5e978b9d6+0x6a> @ imm = #-0x2
10009952: 9805         	ldr	r0, [sp, #0x14]
10009954: b012         	add	sp, #0x48
10009956: bd80         	pop	{r7, pc}
10009958: 4801         	ldr	r0, [pc, #0x4]          @ 0x10009960 <rp2040_hal::clocks::ReferenceClock::set_self_aux_src::hc09f49b5e978b9d6+0x78>
1000995a: f003 fd69    	bl	0x1000d430 <core::panicking::panic_const::panic_const_add_overflow::h73b6e802431fc142> @ imm = #0x3ad2
1000995e: 46c0         	mov	r8, r8
10009960: 94 1f 01 10  	.word	0x10011f94

10009964 <rp2040_hal::clocks::ReferenceClock::set_self_aux_src::{{closure}}::he94901a2811d43bb>:
10009964: b580         	push	{r7, lr}
10009966: af00         	add	r7, sp, #0x0
10009968: b094         	sub	sp, #0x50
1000996a: 9201         	str	r2, [sp, #0x4]
1000996c: 9006         	str	r0, [sp, #0x18]
1000996e: 9107         	str	r1, [sp, #0x1c]
10009970: 9208         	str	r2, [sp, #0x20]
10009972: 9209         	str	r2, [sp, #0x24]
10009974: 920a         	str	r2, [sp, #0x28]
10009976: a90b         	add	r1, sp, #0x2c
10009978: 2000         	movs	r0, #0x0
1000997a: 9002         	str	r0, [sp, #0x8]
1000997c: 7008         	strb	r0, [r1]
1000997e: 9806         	ldr	r0, [sp, #0x18]
10009980: f7fd fe4e    	bl	0x10007620 <rp2040_hal::clocks::ReferenceClock::get_aux_source::h44b82294bc0adf8e> @ imm = #-0x2364
10009984: 9a01         	ldr	r2, [sp, #0x4]
10009986: 9902         	ldr	r1, [sp, #0x8]
10009988: 4603         	mov	r3, r0
1000998a: 920c         	str	r2, [sp, #0x30]
1000998c: a80c         	add	r0, sp, #0x30
1000998e: 7101         	strb	r1, [r0, #0x4]
10009990: a80e         	add	r0, sp, #0x38
10009992: 7003         	strb	r3, [r0]
10009994: a80f         	add	r0, sp, #0x3c
10009996: 7003         	strb	r3, [r0]
10009998: 7800         	ldrb	r0, [r0]
1000999a: 9004         	str	r0, [sp, #0x10]
1000999c: 9210         	str	r2, [sp, #0x40]
1000999e: aa10         	add	r2, sp, #0x40
100099a0: 7111         	strb	r1, [r2, #0x4]
100099a2: a912         	add	r1, sp, #0x48
100099a4: 7008         	strb	r0, [r1]
100099a6: 9810         	ldr	r0, [sp, #0x40]
100099a8: 9003         	str	r0, [sp, #0xc]
100099aa: f7fc fbbb    	bl	0x10006124 <rp2040_pac::generic::mask_u32::hc7080cfa0562be4f> @ imm = #-0x388a
100099ae: 9911         	ldr	r1, [sp, #0x44]
100099b0: f7fd fa52    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x2b5c
100099b4: f7fc fc56    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x3754
100099b8: 4601         	mov	r1, r0
100099ba: 9803         	ldr	r0, [sp, #0xc]
100099bc: f7fd fa38    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x2b90
100099c0: 9804         	ldr	r0, [sp, #0x10]
100099c2: 9910         	ldr	r1, [sp, #0x40]
100099c4: 9105         	str	r1, [sp, #0x14]
100099c6: a913         	add	r1, sp, #0x4c
100099c8: 7008         	strb	r0, [r1]
100099ca: f7fc fbab    	bl	0x10006124 <rp2040_pac::generic::mask_u32::hc7080cfa0562be4f> @ imm = #-0x38aa
100099ce: 4601         	mov	r1, r0
100099d0: 9804         	ldr	r0, [sp, #0x10]
100099d2: f7fc fc66    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x3734
100099d6: 9911         	ldr	r1, [sp, #0x44]
100099d8: f7fd fa3e    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x2b84
100099dc: 4601         	mov	r1, r0
100099de: 9805         	ldr	r0, [sp, #0x14]
100099e0: f7fd fa1a    	bl	0x10006e18 <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::hc18d656116c887ea> @ imm = #-0x2bcc
100099e4: 9810         	ldr	r0, [sp, #0x40]
100099e6: b014         	add	sp, #0x50
100099e8: bd80         	pop	{r7, pc}
100099ea: d4d4         	bmi	0x10009996 <rp2040_hal::clocks::ReferenceClock::set_self_aux_src::{{closure}}::he94901a2811d43bb+0x32> @ imm = #-0x58

100099ec <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::Clock>::configure_clock::h50a2a240bd230174>:
100099ec: b580         	push	{r7, lr}
100099ee: af00         	add	r7, sp, #0x0
100099f0: b0a2         	sub	sp, #0x88
100099f2: 9108         	str	r1, [sp, #0x20]
100099f4: 4601         	mov	r1, r0
100099f6: 9808         	ldr	r0, [sp, #0x20]
100099f8: 9109         	str	r1, [sp, #0x24]
100099fa: 920a         	str	r2, [sp, #0x28]
100099fc: 911b         	str	r1, [sp, #0x6c]
100099fe: 901c         	str	r0, [sp, #0x70]
10009a00: f7fd fdd8    	bl	0x100075b4 <rp2040_hal::clocks::clock_sources::<impl rp2040_hal::clocks::ClockSource for rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Stable>>::get_freq::hefd1a4c9e456aa74> @ imm = #-0x2450
10009a04: 4959         	ldr	r1, [pc, #0x164]        @ 0x10009b6c <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::Clock>::configure_clock::h50a2a240bd230174+0x180>
10009a06: f7fd fa00    	bl	0x10006e0a <<T as core::convert::Into<U>>::into::hd9da2216767de703> @ imm = #-0x2c00
10009a0a: 900c         	str	r0, [sp, #0x30]
10009a0c: a80a         	add	r0, sp, #0x28
10009a0e: a90c         	add	r1, sp, #0x30
10009a10: f7fc fc61    	bl	0x100062d6 <core::cmp::PartialOrd::gt::hda2a2854aba77a5e> @ imm = #-0x373e
10009a14: 2800         	cmp	r0, #0x0
10009a16: d121         	bne	0x10009a5c <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::Clock>::configure_clock::h50a2a240bd230174+0x70> @ imm = #0x42
10009a18: e7ff         	b	0x10009a1a <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::Clock>::configure_clock::h50a2a240bd230174+0x2e> @ imm = #-0x2
10009a1a: a80c         	add	r0, sp, #0x30
10009a1c: f7fd faa6    	bl	0x10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868> @ imm = #-0x2ab4
10009a20: 9004         	str	r0, [sp, #0x10]
10009a22: a80a         	add	r0, sp, #0x28
10009a24: f7fd faa2    	bl	0x10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868> @ imm = #-0x2abc
10009a28: 4601         	mov	r1, r0
10009a2a: 9804         	ldr	r0, [sp, #0x10]
10009a2c: f7fd ff9c    	bl	0x10007968 <rp2040_hal::clocks::fractional_div::hd140809978073745> @ imm = #-0x20c8
10009a30: 9005         	str	r0, [sp, #0x14]
10009a32: 460a         	mov	r2, r1
10009a34: 9905         	ldr	r1, [sp, #0x14]
10009a36: ab12         	add	r3, sp, #0x48
10009a38: 2002         	movs	r0, #0x2
10009a3a: 7018         	strb	r0, [r3]
10009a3c: 9b12         	ldr	r3, [sp, #0x48]
10009a3e: a810         	add	r0, sp, #0x40
10009a40: 9006         	str	r0, [sp, #0x18]
10009a42: f7fd f8a7    	bl	0x10006b94 <core::option::Option<T>::ok_or::h81824975fa84ee0f> @ imm = #-0x2eb2
10009a46: 9906         	ldr	r1, [sp, #0x18]
10009a48: a80e         	add	r0, sp, #0x38
10009a4a: 9007         	str	r0, [sp, #0x1c]
10009a4c: f7fd fbc9    	bl	0x100071e2 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h460b484606f6b3bdE> @ imm = #-0x286e
10009a50: 9807         	ldr	r0, [sp, #0x1c]
10009a52: 7800         	ldrb	r0, [r0]
10009a54: 07c0         	lsls	r0, r0, #0x1f
10009a56: 2800         	cmp	r0, #0x0
10009a58: d007         	beq	0x10009a6a <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::Clock>::configure_clock::h50a2a240bd230174+0x7e> @ imm = #0xe
10009a5a: e011         	b	0x10009a80 <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::Clock>::configure_clock::h50a2a240bd230174+0x94> @ imm = #0x22
10009a5c: a90d         	add	r1, sp, #0x34
10009a5e: 2000         	movs	r0, #0x0
10009a60: 7008         	strb	r0, [r1]
10009a62: 980d         	ldr	r0, [sp, #0x34]
10009a64: a90b         	add	r1, sp, #0x2c
10009a66: 7008         	strb	r0, [r1]
10009a68: e07d         	b	0x10009b66 <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::Clock>::configure_clock::h50a2a240bd230174+0x17a> @ imm = #0xfa
10009a6a: 9809         	ldr	r0, [sp, #0x24]
10009a6c: 990f         	ldr	r1, [sp, #0x3c]
10009a6e: 9103         	str	r1, [sp, #0xc]
10009a70: 911e         	str	r1, [sp, #0x78]
10009a72: f7ff fd7d    	bl	0x10009570 <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::ClockDivision>::get_div::h747cd656b401677a> @ imm = #-0x506
10009a76: 4601         	mov	r1, r0
10009a78: 9803         	ldr	r0, [sp, #0xc]
10009a7a: 4288         	cmp	r0, r1
10009a7c: d810         	bhi	0x10009aa0 <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::Clock>::configure_clock::h50a2a240bd230174+0xb4> @ imm = #0x20
10009a7e: e009         	b	0x10009a94 <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::Clock>::configure_clock::h50a2a240bd230174+0xa8> @ imm = #0x12
10009a80: a80e         	add	r0, sp, #0x38
10009a82: 7840         	ldrb	r0, [r0, #0x1]
10009a84: a921         	add	r1, sp, #0x84
10009a86: 7008         	strb	r0, [r1]
10009a88: 4938         	ldr	r1, [pc, #0xe0]         @ 0x10009b6c <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::Clock>::configure_clock::h50a2a240bd230174+0x180>
10009a8a: f7fc fb90    	bl	0x100061ae <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4d80d59e43eeb34cE> @ imm = #-0x38e0
10009a8e: a90b         	add	r1, sp, #0x2c
10009a90: 7008         	strb	r0, [r1]
10009a92: e068         	b	0x10009b66 <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::Clock>::configure_clock::h50a2a240bd230174+0x17a> @ imm = #0xd0
10009a94: 9808         	ldr	r0, [sp, #0x20]
10009a96: f7ff fd7f    	bl	0x10009598 <<rp2040_hal::xosc::CrystalOscillator<rp2040_hal::xosc::Stable> as rp2040_hal::clocks::ValidSrc<rp2040_hal::clocks::ReferenceClock>>::is_aux::h3889bb850183a894> @ imm = #-0x502
10009a9a: 2800         	cmp	r0, #0x0
10009a9c: d10c         	bne	0x10009ab8 <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::Clock>::configure_clock::h50a2a240bd230174+0xcc> @ imm = #0x18
10009a9e: e004         	b	0x10009aaa <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::Clock>::configure_clock::h50a2a240bd230174+0xbe> @ imm = #0x8
10009aa0: 9903         	ldr	r1, [sp, #0xc]
10009aa2: 9809         	ldr	r0, [sp, #0x24]
10009aa4: f7ff fd22    	bl	0x100094ec <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::ClockDivision>::set_div::ha96273a28617531a> @ imm = #-0x5bc
10009aa8: e7f4         	b	0x10009a94 <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::Clock>::configure_clock::h50a2a240bd230174+0xa8> @ imm = #-0x18
10009aaa: 9908         	ldr	r1, [sp, #0x20]
10009aac: 9809         	ldr	r0, [sp, #0x24]
10009aae: f7ff fe92    	bl	0x100097d6 <rp2040_hal::clocks::ReferenceClock::set_src::h427a777dad33bb6b> @ imm = #-0x2dc
10009ab2: a913         	add	r1, sp, #0x4c
10009ab4: 7008         	strb	r0, [r1]
10009ab6: e00a         	b	0x10009ace <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::Clock>::configure_clock::h50a2a240bd230174+0xe2> @ imm = #0x14
10009ab8: 9809         	ldr	r0, [sp, #0x24]
10009aba: f7ff fe0b    	bl	0x100096d4 <rp2040_hal::clocks::ReferenceClock::reset_source_await::h2c80dcbb4ecac84f> @ imm = #-0x3ea
10009abe: 4601         	mov	r1, r0
10009ac0: a814         	add	r0, sp, #0x50
10009ac2: 7001         	strb	r1, [r0]
10009ac4: 7800         	ldrb	r0, [r0]
10009ac6: 07c0         	lsls	r0, r0, #0x1f
10009ac8: 2800         	cmp	r0, #0x0
10009aca: d00c         	beq	0x10009ae6 <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::Clock>::configure_clock::h50a2a240bd230174+0xfa> @ imm = #0x18
10009acc: e015         	b	0x10009afa <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::Clock>::configure_clock::h50a2a240bd230174+0x10e> @ imm = #0x2a
10009ace: 9809         	ldr	r0, [sp, #0x24]
10009ad0: a913         	add	r1, sp, #0x4c
10009ad2: f7ff fd79    	bl	0x100095c8 <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::GlitchlessClock>::await_select::hca01772bfe90a849> @ imm = #-0x50e
10009ad6: 4601         	mov	r1, r0
10009ad8: a815         	add	r0, sp, #0x54
10009ada: 7001         	strb	r1, [r0]
10009adc: 7800         	ldrb	r0, [r0]
10009ade: 07c0         	lsls	r0, r0, #0x1f
10009ae0: 2800         	cmp	r0, #0x0
10009ae2: d00b         	beq	0x10009afc <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::Clock>::configure_clock::h50a2a240bd230174+0x110> @ imm = #0x16
10009ae4: e02a         	b	0x10009b3c <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::Clock>::configure_clock::h50a2a240bd230174+0x150> @ imm = #0x54
10009ae6: 9809         	ldr	r0, [sp, #0x24]
10009ae8: 9908         	ldr	r1, [sp, #0x20]
10009aea: f7ff fc81    	bl	0x100093f0 <rp2040_hal::clocks::ReferenceClock::set_aux::h9fa9f83cb0f026a5> @ imm = #-0x6fe
10009aee: 9809         	ldr	r0, [sp, #0x24]
10009af0: f7ff fefa    	bl	0x100098e8 <rp2040_hal::clocks::ReferenceClock::set_self_aux_src::hc09f49b5e978b9d6> @ imm = #-0x20c
10009af4: a913         	add	r1, sp, #0x4c
10009af6: 7008         	strb	r0, [r1]
10009af8: e7e9         	b	0x10009ace <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::Clock>::configure_clock::h50a2a240bd230174+0xe2> @ imm = #-0x2e
10009afa: e7dd         	b	0x10009ab8 <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::Clock>::configure_clock::h50a2a240bd230174+0xcc> @ imm = #-0x46
10009afc: 9903         	ldr	r1, [sp, #0xc]
10009afe: 9809         	ldr	r0, [sp, #0x24]
10009b00: f7ff fcf4    	bl	0x100094ec <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::ClockDivision>::set_div::ha96273a28617531a> @ imm = #-0x618
10009b04: a80c         	add	r0, sp, #0x30
10009b06: f7fd fa31    	bl	0x10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868> @ imm = #-0x2b9e
10009b0a: 9903         	ldr	r1, [sp, #0xc]
10009b0c: f7fd ff2c    	bl	0x10007968 <rp2040_hal::clocks::fractional_div::hd140809978073745> @ imm = #-0x21a8
10009b10: 9000         	str	r0, [sp]
10009b12: 460a         	mov	r2, r1
10009b14: 9900         	ldr	r1, [sp]
10009b16: ab1a         	add	r3, sp, #0x68
10009b18: 2001         	movs	r0, #0x1
10009b1a: 7018         	strb	r0, [r3]
10009b1c: 9b1a         	ldr	r3, [sp, #0x68]
10009b1e: a818         	add	r0, sp, #0x60
10009b20: 9001         	str	r0, [sp, #0x4]
10009b22: f7fd f837    	bl	0x10006b94 <core::option::Option<T>::ok_or::h81824975fa84ee0f> @ imm = #-0x2f92
10009b26: 9901         	ldr	r1, [sp, #0x4]
10009b28: a816         	add	r0, sp, #0x58
10009b2a: 9002         	str	r0, [sp, #0x8]
10009b2c: f7fd fb59    	bl	0x100071e2 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h460b484606f6b3bdE> @ imm = #-0x294e
10009b30: 9802         	ldr	r0, [sp, #0x8]
10009b32: 7800         	ldrb	r0, [r0]
10009b34: 07c0         	lsls	r0, r0, #0x1f
10009b36: 2800         	cmp	r0, #0x0
10009b38: d001         	beq	0x10009b3e <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::Clock>::configure_clock::h50a2a240bd230174+0x152> @ imm = #0x2
10009b3a: e00a         	b	0x10009b52 <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::Clock>::configure_clock::h50a2a240bd230174+0x166> @ imm = #0x14
10009b3c: e7c7         	b	0x10009ace <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::Clock>::configure_clock::h50a2a240bd230174+0xe2> @ imm = #-0x72
10009b3e: 9817         	ldr	r0, [sp, #0x5c]
10009b40: 901f         	str	r0, [sp, #0x7c]
10009b42: f7fc fb96    	bl	0x10006272 <<u32 as fugit::rate::ExtU32>::Hz::ha421d0a6a3793ef2> @ imm = #-0x38d4
10009b46: 9909         	ldr	r1, [sp, #0x24]
10009b48: 6008         	str	r0, [r1]
10009b4a: a90b         	add	r1, sp, #0x2c
10009b4c: 2003         	movs	r0, #0x3
10009b4e: 7008         	strb	r0, [r1]
10009b50: e009         	b	0x10009b66 <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::Clock>::configure_clock::h50a2a240bd230174+0x17a> @ imm = #0x12
10009b52: a816         	add	r0, sp, #0x58
10009b54: 7840         	ldrb	r0, [r0, #0x1]
10009b56: a920         	add	r1, sp, #0x80
10009b58: 7008         	strb	r0, [r1]
10009b5a: 4904         	ldr	r1, [pc, #0x10]         @ 0x10009b6c <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::Clock>::configure_clock::h50a2a240bd230174+0x180>
10009b5c: f7fc fb27    	bl	0x100061ae <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4d80d59e43eeb34cE> @ imm = #-0x39b2
10009b60: a90b         	add	r1, sp, #0x2c
10009b62: 7008         	strb	r0, [r1]
10009b64: e7ff         	b	0x10009b66 <<rp2040_hal::clocks::ReferenceClock as rp2040_hal::clocks::Clock>::configure_clock::h50a2a240bd230174+0x17a> @ imm = #-0x2
10009b66: 980b         	ldr	r0, [sp, #0x2c]
10009b68: b022         	add	sp, #0x88
10009b6a: bd80         	pop	{r7, pc}
10009b6c: 94 1f 01 10  	.word	0x10011f94

10009b70 <rp2040_hal::clocks::ClkRefSrcType::unwrap_src::panic_cold_explicit::h45494417c372ac44>:
10009b70: b580         	push	{r7, lr}
10009b72: af00         	add	r7, sp, #0x0
10009b74: f002 fc4a    	bl	0x1000c40c <core::panicking::panic_explicit::hab1f90333547f2f9> @ imm = #0x2894

10009b78 <rp2040_hal::clocks::ClkRefSrcType::unwrap_aux::panic_cold_explicit::h34c6adba53770ff9>:
10009b78: b580         	push	{r7, lr}
10009b7a: af00         	add	r7, sp, #0x0
10009b7c: f002 fc46    	bl	0x1000c40c <core::panicking::panic_explicit::hab1f90333547f2f9> @ imm = #0x288c

10009b80 <<rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locked,rp2040_pac::PLL_SYS> as rp2040_hal::clocks::ValidSrc<rp2040_hal::clocks::SystemClock>>::is_aux::hc754abb63bfca951>:
10009b80: b580         	push	{r7, lr}
10009b82: af00         	add	r7, sp, #0x0
10009b84: b081         	sub	sp, #0x4
10009b86: 9000         	str	r0, [sp]
10009b88: 2001         	movs	r0, #0x1
10009b8a: b001         	add	sp, #0x4
10009b8c: bd80         	pop	{r7, pc}

10009b8e <<rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locked,rp2040_pac::PLL_SYS> as rp2040_hal::clocks::ValidSrc<rp2040_hal::clocks::SystemClock>>::variant::h97bc1295d3e1580d>:
10009b8e: b580         	push	{r7, lr}
10009b90: af00         	add	r7, sp, #0x0
10009b92: b083         	sub	sp, #0xc
10009b94: 9002         	str	r0, [sp, #0x8]
10009b96: a901         	add	r1, sp, #0x4
10009b98: 2000         	movs	r0, #0x0
10009b9a: 7008         	strb	r0, [r1]
10009b9c: 9901         	ldr	r1, [sp, #0x4]
10009b9e: 4668         	mov	r0, sp
10009ba0: 7041         	strb	r1, [r0, #0x1]
10009ba2: 2101         	movs	r1, #0x1
10009ba4: 7001         	strb	r1, [r0]
10009ba6: 7841         	ldrb	r1, [r0, #0x1]
10009ba8: 9800         	ldr	r0, [sp]
10009baa: b003         	add	sp, #0xc
10009bac: bd80         	pop	{r7, pc}

10009bae <rp2040_hal::clocks::SystemClock::set_aux::h785c4ec9d44147ac>:
10009bae: b580         	push	{r7, lr}
10009bb0: af00         	add	r7, sp, #0x0
10009bb2: b092         	sub	sp, #0x48
10009bb4: 9102         	str	r1, [sp, #0x8]
10009bb6: 9004         	str	r0, [sp, #0x10]
10009bb8: 9105         	str	r1, [sp, #0x14]
10009bba: 1d00         	adds	r0, r0, #0x4
10009bbc: f7fd fd08    	bl	0x100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2> @ imm = #-0x25f0
10009bc0: 9902         	ldr	r1, [sp, #0x8]
10009bc2: 9006         	str	r0, [sp, #0x18]
10009bc4: 9007         	str	r0, [sp, #0x1c]
10009bc6: 303c         	adds	r0, #0x3c
10009bc8: 9003         	str	r0, [sp, #0xc]
10009bca: 900a         	str	r0, [sp, #0x28]
10009bcc: 910b         	str	r1, [sp, #0x2c]
10009bce: 900d         	str	r0, [sp, #0x34]
10009bd0: 900e         	str	r0, [sp, #0x38]
10009bd2: f002 fa78    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x24f0
10009bd6: 9000         	str	r0, [sp]
10009bd8: 900c         	str	r0, [sp, #0x30]
10009bda: 9008         	str	r0, [sp, #0x20]
10009bdc: 2000         	movs	r0, #0x0
10009bde: 9001         	str	r0, [sp, #0x4]
10009be0: f7fc fb40    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x3980
10009be4: 4601         	mov	r1, r0
10009be6: 9800         	ldr	r0, [sp]
10009be8: f7fc fb5b    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x394a
10009bec: 9901         	ldr	r1, [sp, #0x4]
10009bee: f7fc fb50    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x3960
10009bf2: 4601         	mov	r1, r0
10009bf4: 9802         	ldr	r0, [sp, #0x8]
10009bf6: 9109         	str	r1, [sp, #0x24]
10009bf8: a908         	add	r1, sp, #0x20
10009bfa: aa09         	add	r2, sp, #0x24
10009bfc: f000 f80a    	bl	0x10009c14 <rp2040_hal::clocks::SystemClock::set_aux::{{closure}}::hb9e15b87a568f119> @ imm = #0x14
10009c00: 4601         	mov	r1, r0
10009c02: 9803         	ldr	r0, [sp, #0xc]
10009c04: 6809         	ldr	r1, [r1]
10009c06: 900f         	str	r0, [sp, #0x3c]
10009c08: 9110         	str	r1, [sp, #0x40]
10009c0a: 9011         	str	r0, [sp, #0x44]
10009c0c: f002 fac6    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x258c
10009c10: b012         	add	sp, #0x48
10009c12: bd80         	pop	{r7, pc}

10009c14 <rp2040_hal::clocks::SystemClock::set_aux::{{closure}}::hb9e15b87a568f119>:
10009c14: b580         	push	{r7, lr}
10009c16: af00         	add	r7, sp, #0x0
10009c18: b094         	sub	sp, #0x50
10009c1a: 9200         	str	r2, [sp]
10009c1c: 9005         	str	r0, [sp, #0x14]
10009c1e: 9107         	str	r1, [sp, #0x1c]
10009c20: 9208         	str	r2, [sp, #0x20]
10009c22: 9209         	str	r2, [sp, #0x24]
10009c24: 920a         	str	r2, [sp, #0x28]
10009c26: a90b         	add	r1, sp, #0x2c
10009c28: 2005         	movs	r0, #0x5
10009c2a: 9001         	str	r0, [sp, #0x4]
10009c2c: 7008         	strb	r0, [r1]
10009c2e: 9805         	ldr	r0, [sp, #0x14]
10009c30: f7ff ffad    	bl	0x10009b8e <<rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locked,rp2040_pac::PLL_SYS> as rp2040_hal::clocks::ValidSrc<rp2040_hal::clocks::SystemClock>>::variant::h97bc1295d3e1580d> @ imm = #-0xa6
10009c34: 4602         	mov	r2, r0
10009c36: 2001         	movs	r0, #0x1
10009c38: 4002         	ands	r2, r0
10009c3a: a806         	add	r0, sp, #0x18
10009c3c: 7002         	strb	r2, [r0]
10009c3e: 7041         	strb	r1, [r0, #0x1]
10009c40: f000 f8fa    	bl	0x10009e38 <rp2040_hal::clocks::ClkSysSrcType::unwrap_aux::h8bd26362bf963589> @ imm = #0x1f4
10009c44: 9a00         	ldr	r2, [sp]
10009c46: 9901         	ldr	r1, [sp, #0x4]
10009c48: 4603         	mov	r3, r0
10009c4a: 920c         	str	r2, [sp, #0x30]
10009c4c: a80c         	add	r0, sp, #0x30
10009c4e: 7101         	strb	r1, [r0, #0x4]
10009c50: a80e         	add	r0, sp, #0x38
10009c52: 7003         	strb	r3, [r0]
10009c54: a80f         	add	r0, sp, #0x3c
10009c56: 7003         	strb	r3, [r0]
10009c58: 7800         	ldrb	r0, [r0]
10009c5a: 9003         	str	r0, [sp, #0xc]
10009c5c: 9210         	str	r2, [sp, #0x40]
10009c5e: aa10         	add	r2, sp, #0x40
10009c60: 7111         	strb	r1, [r2, #0x4]
10009c62: a912         	add	r1, sp, #0x48
10009c64: 7008         	strb	r0, [r1]
10009c66: 9810         	ldr	r0, [sp, #0x40]
10009c68: 9002         	str	r0, [sp, #0x8]
10009c6a: f7fc fa4d    	bl	0x10006108 <rp2040_pac::generic::mask_u32::h42ec560ca9ea22d1> @ imm = #-0x3b66
10009c6e: 9911         	ldr	r1, [sp, #0x44]
10009c70: f7fd f8f2    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x2e1c
10009c74: f7fc faf6    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x3a14
10009c78: 4601         	mov	r1, r0
10009c7a: 9802         	ldr	r0, [sp, #0x8]
10009c7c: f7fd f8d8    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x2e50
10009c80: 9803         	ldr	r0, [sp, #0xc]
10009c82: 9910         	ldr	r1, [sp, #0x40]
10009c84: 9104         	str	r1, [sp, #0x10]
10009c86: a913         	add	r1, sp, #0x4c
10009c88: 7008         	strb	r0, [r1]
10009c8a: f7fc fa3d    	bl	0x10006108 <rp2040_pac::generic::mask_u32::h42ec560ca9ea22d1> @ imm = #-0x3b86
10009c8e: 4601         	mov	r1, r0
10009c90: 9803         	ldr	r0, [sp, #0xc]
10009c92: f7fc fb06    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x39f4
10009c96: 9911         	ldr	r1, [sp, #0x44]
10009c98: f7fd f8de    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x2e44
10009c9c: 4601         	mov	r1, r0
10009c9e: 9804         	ldr	r0, [sp, #0x10]
10009ca0: f7fd f8ba    	bl	0x10006e18 <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::hc18d656116c887ea> @ imm = #-0x2e8c
10009ca4: 9810         	ldr	r0, [sp, #0x40]
10009ca6: b014         	add	sp, #0x50
10009ca8: bd80         	pop	{r7, pc}

10009caa <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::ClockDivision>::set_div::haefdd2284c50af21>:
10009caa: b580         	push	{r7, lr}
10009cac: af00         	add	r7, sp, #0x0
10009cae: b092         	sub	sp, #0x48
10009cb0: 9105         	str	r1, [sp, #0x14]
10009cb2: 9006         	str	r0, [sp, #0x18]
10009cb4: 1d00         	adds	r0, r0, #0x4
10009cb6: f7fd fc8b    	bl	0x100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2> @ imm = #-0x26ea
10009cba: 9007         	str	r0, [sp, #0x1c]
10009cbc: 3040         	adds	r0, #0x40
10009cbe: 9004         	str	r0, [sp, #0x10]
10009cc0: 900a         	str	r0, [sp, #0x28]
10009cc2: a905         	add	r1, sp, #0x14
10009cc4: 9103         	str	r1, [sp, #0xc]
10009cc6: 910b         	str	r1, [sp, #0x2c]
10009cc8: 900d         	str	r0, [sp, #0x34]
10009cca: 900e         	str	r0, [sp, #0x38]
10009ccc: f002 f9fb    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x23f6
10009cd0: 9001         	str	r0, [sp, #0x4]
10009cd2: 900c         	str	r0, [sp, #0x30]
10009cd4: 9008         	str	r0, [sp, #0x20]
10009cd6: 2000         	movs	r0, #0x0
10009cd8: 9002         	str	r0, [sp, #0x8]
10009cda: f7fc fac3    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x3a7a
10009cde: 4601         	mov	r1, r0
10009ce0: 9801         	ldr	r0, [sp, #0x4]
10009ce2: f7fc fade    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x3a44
10009ce6: 9902         	ldr	r1, [sp, #0x8]
10009ce8: f7fc fad3    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x3a5a
10009cec: 4601         	mov	r1, r0
10009cee: 9803         	ldr	r0, [sp, #0xc]
10009cf0: 9109         	str	r1, [sp, #0x24]
10009cf2: a908         	add	r1, sp, #0x20
10009cf4: aa09         	add	r2, sp, #0x24
10009cf6: f000 f80a    	bl	0x10009d0e <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::ClockDivision>::set_div::{{closure}}::hcf64cfab30f779da> @ imm = #0x14
10009cfa: 4601         	mov	r1, r0
10009cfc: 9804         	ldr	r0, [sp, #0x10]
10009cfe: 6809         	ldr	r1, [r1]
10009d00: 900f         	str	r0, [sp, #0x3c]
10009d02: 9110         	str	r1, [sp, #0x40]
10009d04: 9011         	str	r0, [sp, #0x44]
10009d06: f002 fa49    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x2492
10009d0a: b012         	add	sp, #0x48
10009d0c: bd80         	pop	{r7, pc}

10009d0e <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::ClockDivision>::set_div::{{closure}}::hcf64cfab30f779da>:
10009d0e: b580         	push	{r7, lr}
10009d10: af00         	add	r7, sp, #0x0
10009d12: b086         	sub	sp, #0x18
10009d14: 9200         	str	r2, [sp]
10009d16: 4602         	mov	r2, r0
10009d18: 9800         	ldr	r0, [sp]
10009d1a: 9201         	str	r2, [sp, #0x4]
10009d1c: 9102         	str	r1, [sp, #0x8]
10009d1e: 9003         	str	r0, [sp, #0xc]
10009d20: 9901         	ldr	r1, [sp, #0x4]
10009d22: 6809         	ldr	r1, [r1]
10009d24: 9004         	str	r0, [sp, #0x10]
10009d26: 9105         	str	r1, [sp, #0x14]
10009d28: 6001         	str	r1, [r0]
10009d2a: b006         	add	sp, #0x18
10009d2c: bd80         	pop	{r7, pc}

10009d2e <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::ClockDivision>::get_div::h33a3757ab77718c3>:
10009d2e: b580         	push	{r7, lr}
10009d30: af00         	add	r7, sp, #0x0
10009d32: b088         	sub	sp, #0x20
10009d34: 9002         	str	r0, [sp, #0x8]
10009d36: 1d00         	adds	r0, r0, #0x4
10009d38: f7fd fc4a    	bl	0x100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2> @ imm = #-0x276c
10009d3c: 9003         	str	r0, [sp, #0xc]
10009d3e: 3040         	adds	r0, #0x40
10009d40: 9004         	str	r0, [sp, #0x10]
10009d42: 9006         	str	r0, [sp, #0x18]
10009d44: 9007         	str	r0, [sp, #0x1c]
10009d46: f002 f9be    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x237c
10009d4a: 9001         	str	r0, [sp, #0x4]
10009d4c: a801         	add	r0, sp, #0x4
10009d4e: 9005         	str	r0, [sp, #0x14]
10009d50: 9801         	ldr	r0, [sp, #0x4]
10009d52: b008         	add	sp, #0x20
10009d54: bd80         	pop	{r7, pc}
10009d56: d4d4         	bmi	0x10009d02 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::ClockDivision>::set_div::haefdd2284c50af21+0x58> @ imm = #-0x58

10009d58 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::GlitchlessClock>::await_select::h00fedecfa2089d26>:
10009d58: b580         	push	{r7, lr}
10009d5a: af00         	add	r7, sp, #0x0
10009d5c: b08e         	sub	sp, #0x38
10009d5e: 9100         	str	r1, [sp]
10009d60: 9005         	str	r0, [sp, #0x14]
10009d62: 9106         	str	r1, [sp, #0x18]
10009d64: 1d00         	adds	r0, r0, #0x4
10009d66: f7fd fc33    	bl	0x100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2> @ imm = #-0x279a
10009d6a: 9007         	str	r0, [sp, #0x1c]
10009d6c: 9009         	str	r0, [sp, #0x24]
10009d6e: 3044         	adds	r0, #0x44
10009d70: 900a         	str	r0, [sp, #0x28]
10009d72: 900c         	str	r0, [sp, #0x30]
10009d74: 900d         	str	r0, [sp, #0x34]
10009d76: f002 f9a6    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x234c
10009d7a: 9900         	ldr	r1, [sp]
10009d7c: 9004         	str	r0, [sp, #0x10]
10009d7e: a804         	add	r0, sp, #0x10
10009d80: 900b         	str	r0, [sp, #0x2c]
10009d82: 9804         	ldr	r0, [sp, #0x10]
10009d84: 9001         	str	r0, [sp, #0x4]
10009d86: 9008         	str	r0, [sp, #0x20]
10009d88: 7808         	ldrb	r0, [r1]
10009d8a: 9002         	str	r0, [sp, #0x8]
10009d8c: 281f         	cmp	r0, #0x1f
10009d8e: d809         	bhi	0x10009da4 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::GlitchlessClock>::await_select::h00fedecfa2089d26+0x4c> @ imm = #0x12
10009d90: e7ff         	b	0x10009d92 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::GlitchlessClock>::await_select::h00fedecfa2089d26+0x3a> @ imm = #-0x2
10009d92: 9801         	ldr	r0, [sp, #0x4]
10009d94: 9a02         	ldr	r2, [sp, #0x8]
10009d96: 211f         	movs	r1, #0x1f
10009d98: 400a         	ands	r2, r1
10009d9a: 2101         	movs	r1, #0x1
10009d9c: 4091         	lsls	r1, r2
10009d9e: 4288         	cmp	r0, r1
10009da0: d107         	bne	0x10009db2 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::GlitchlessClock>::await_select::h00fedecfa2089d26+0x5a> @ imm = #0xe
10009da2: e002         	b	0x10009daa <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::GlitchlessClock>::await_select::h00fedecfa2089d26+0x52> @ imm = #0x4
10009da4: 4807         	ldr	r0, [pc, #0x1c]         @ 0x10009dc4 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::GlitchlessClock>::await_select::h00fedecfa2089d26+0x6c>
10009da6: f003 fb79    	bl	0x1000d49c <core::panicking::panic_const::panic_const_shl_overflow::h42afea46a5d11e4a> @ imm = #0x36f2
10009daa: a903         	add	r1, sp, #0xc
10009dac: 2000         	movs	r0, #0x0
10009dae: 7008         	strb	r0, [r1]
10009db0: e003         	b	0x10009dba <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::GlitchlessClock>::await_select::h00fedecfa2089d26+0x62> @ imm = #0x6
10009db2: a903         	add	r1, sp, #0xc
10009db4: 2001         	movs	r0, #0x1
10009db6: 7008         	strb	r0, [r1]
10009db8: e7ff         	b	0x10009dba <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::GlitchlessClock>::await_select::h00fedecfa2089d26+0x62> @ imm = #-0x2
10009dba: a803         	add	r0, sp, #0xc
10009dbc: 7800         	ldrb	r0, [r0]
10009dbe: b00e         	add	sp, #0x38
10009dc0: bd80         	pop	{r7, pc}
10009dc2: 46c0         	mov	r8, r8
10009dc4: 94 1f 01 10  	.word	0x10011f94

10009dc8 <rp2040_hal::clocks::ClkSysSrcType::get_clock_id::h773208d2526f16ad>:
10009dc8: b580         	push	{r7, lr}
10009dca: af00         	add	r7, sp, #0x0
10009dcc: b087         	sub	sp, #0x1c
10009dce: 9000         	str	r0, [sp]
10009dd0: 9004         	str	r0, [sp, #0x10]
10009dd2: 7800         	ldrb	r0, [r0]
10009dd4: 07c0         	lsls	r0, r0, #0x1f
10009dd6: 2800         	cmp	r0, #0x0
10009dd8: d10a         	bne	0x10009df0 <rp2040_hal::clocks::ClkSysSrcType::get_clock_id::h773208d2526f16ad+0x28> @ imm = #0x14
10009dda: e7ff         	b	0x10009ddc <rp2040_hal::clocks::ClkSysSrcType::get_clock_id::h773208d2526f16ad+0x14> @ imm = #-0x2
10009ddc: 9800         	ldr	r0, [sp]
10009dde: 1c41         	adds	r1, r0, #0x1
10009de0: 9105         	str	r1, [sp, #0x14]
10009de2: 7840         	ldrb	r0, [r0, #0x1]
10009de4: a902         	add	r1, sp, #0x8
10009de6: 7008         	strb	r0, [r1]
10009de8: 9802         	ldr	r0, [sp, #0x8]
10009dea: a901         	add	r1, sp, #0x4
10009dec: 7008         	strb	r0, [r1]
10009dee: e009         	b	0x10009e04 <rp2040_hal::clocks::ClkSysSrcType::get_clock_id::h773208d2526f16ad+0x3c> @ imm = #0x12
10009df0: 9800         	ldr	r0, [sp]
10009df2: 1c41         	adds	r1, r0, #0x1
10009df4: 9106         	str	r1, [sp, #0x18]
10009df6: 7840         	ldrb	r0, [r0, #0x1]
10009df8: a903         	add	r1, sp, #0xc
10009dfa: 7008         	strb	r0, [r1]
10009dfc: 9803         	ldr	r0, [sp, #0xc]
10009dfe: a901         	add	r1, sp, #0x4
10009e00: 7008         	strb	r0, [r1]
10009e02: e7ff         	b	0x10009e04 <rp2040_hal::clocks::ClkSysSrcType::get_clock_id::h773208d2526f16ad+0x3c> @ imm = #-0x2
10009e04: 9801         	ldr	r0, [sp, #0x4]
10009e06: b007         	add	sp, #0x1c
10009e08: bd80         	pop	{r7, pc}
10009e0a: d4d4         	bmi	0x10009db6 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::GlitchlessClock>::await_select::h00fedecfa2089d26+0x5e> @ imm = #-0x58

10009e0c <rp2040_hal::clocks::ClkSysSrcType::unwrap_src::h3e6e50e6fe5cda65>:
10009e0c: b580         	push	{r7, lr}
10009e0e: af00         	add	r7, sp, #0x0
10009e10: b084         	sub	sp, #0x10
10009e12: 9001         	str	r0, [sp, #0x4]
10009e14: 9002         	str	r0, [sp, #0x8]
10009e16: 7800         	ldrb	r0, [r0]
10009e18: 07c0         	lsls	r0, r0, #0x1f
10009e1a: 2800         	cmp	r0, #0x0
10009e1c: d106         	bne	0x10009e2c <rp2040_hal::clocks::ClkSysSrcType::unwrap_src::h3e6e50e6fe5cda65+0x20> @ imm = #0xc
10009e1e: e7ff         	b	0x10009e20 <rp2040_hal::clocks::ClkSysSrcType::unwrap_src::h3e6e50e6fe5cda65+0x14> @ imm = #-0x2
10009e20: 9801         	ldr	r0, [sp, #0x4]
10009e22: 1c41         	adds	r1, r0, #0x1
10009e24: 9103         	str	r1, [sp, #0xc]
10009e26: 7840         	ldrb	r0, [r0, #0x1]
10009e28: b004         	add	sp, #0x10
10009e2a: bd80         	pop	{r7, pc}
10009e2c: 4801         	ldr	r0, [pc, #0x4]          @ 0x10009e34 <rp2040_hal::clocks::ClkSysSrcType::unwrap_src::h3e6e50e6fe5cda65+0x28>
10009e2e: f000 fa65    	bl	0x1000a2fc <rp2040_hal::clocks::ClkSysSrcType::unwrap_src::panic_cold_explicit::h57800bd4cda8bb19> @ imm = #0x4ca
10009e32: 46c0         	mov	r8, r8
10009e34: 94 1f 01 10  	.word	0x10011f94

10009e38 <rp2040_hal::clocks::ClkSysSrcType::unwrap_aux::h8bd26362bf963589>:
10009e38: b580         	push	{r7, lr}
10009e3a: af00         	add	r7, sp, #0x0
10009e3c: b084         	sub	sp, #0x10
10009e3e: 9001         	str	r0, [sp, #0x4]
10009e40: 9002         	str	r0, [sp, #0x8]
10009e42: 7800         	ldrb	r0, [r0]
10009e44: 07c0         	lsls	r0, r0, #0x1f
10009e46: 2800         	cmp	r0, #0x0
10009e48: d103         	bne	0x10009e52 <rp2040_hal::clocks::ClkSysSrcType::unwrap_aux::h8bd26362bf963589+0x1a> @ imm = #0x6
10009e4a: e7ff         	b	0x10009e4c <rp2040_hal::clocks::ClkSysSrcType::unwrap_aux::h8bd26362bf963589+0x14> @ imm = #-0x2
10009e4c: 4804         	ldr	r0, [pc, #0x10]         @ 0x10009e60 <rp2040_hal::clocks::ClkSysSrcType::unwrap_aux::h8bd26362bf963589+0x28>
10009e4e: f000 fa59    	bl	0x1000a304 <rp2040_hal::clocks::ClkSysSrcType::unwrap_aux::panic_cold_explicit::hfcfcd3937cf61353> @ imm = #0x4b2
10009e52: 9801         	ldr	r0, [sp, #0x4]
10009e54: 1c41         	adds	r1, r0, #0x1
10009e56: 9103         	str	r1, [sp, #0xc]
10009e58: 7840         	ldrb	r0, [r0, #0x1]
10009e5a: b004         	add	sp, #0x10
10009e5c: bd80         	pop	{r7, pc}
10009e5e: 46c0         	mov	r8, r8
10009e60: 94 1f 01 10  	.word	0x10011f94

10009e64 <rp2040_hal::clocks::SystemClock::reset_source_await::hc2d2060efec5c693>:
10009e64: b580         	push	{r7, lr}
10009e66: af00         	add	r7, sp, #0x0
10009e68: b092         	sub	sp, #0x48
10009e6a: 9004         	str	r0, [sp, #0x10]
10009e6c: 9005         	str	r0, [sp, #0x14]
10009e6e: 1d00         	adds	r0, r0, #0x4
10009e70: f7fd fbae    	bl	0x100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2> @ imm = #-0x28a4
10009e74: 9904         	ldr	r1, [sp, #0x10]
10009e76: 9006         	str	r0, [sp, #0x18]
10009e78: 9007         	str	r0, [sp, #0x1c]
10009e7a: 303c         	adds	r0, #0x3c
10009e7c: 9003         	str	r0, [sp, #0xc]
10009e7e: 900a         	str	r0, [sp, #0x28]
10009e80: 910b         	str	r1, [sp, #0x2c]
10009e82: 900d         	str	r0, [sp, #0x34]
10009e84: 900e         	str	r0, [sp, #0x38]
10009e86: f002 f91e    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x223c
10009e8a: 9001         	str	r0, [sp, #0x4]
10009e8c: 900c         	str	r0, [sp, #0x30]
10009e8e: 9008         	str	r0, [sp, #0x20]
10009e90: 2000         	movs	r0, #0x0
10009e92: 9002         	str	r0, [sp, #0x8]
10009e94: f7fc f9e6    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x3c34
10009e98: 4601         	mov	r1, r0
10009e9a: 9801         	ldr	r0, [sp, #0x4]
10009e9c: f7fc fa01    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x3bfe
10009ea0: 9902         	ldr	r1, [sp, #0x8]
10009ea2: f7fc f9f6    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x3c14
10009ea6: 4601         	mov	r1, r0
10009ea8: 9804         	ldr	r0, [sp, #0x10]
10009eaa: 9109         	str	r1, [sp, #0x24]
10009eac: a908         	add	r1, sp, #0x20
10009eae: aa09         	add	r2, sp, #0x24
10009eb0: f000 f816    	bl	0x10009ee0 <rp2040_hal::clocks::SystemClock::reset_source_await::{{closure}}::h93ff4cad4874f44b> @ imm = #0x2c
10009eb4: 4601         	mov	r1, r0
10009eb6: 9803         	ldr	r0, [sp, #0xc]
10009eb8: 6809         	ldr	r1, [r1]
10009eba: 900f         	str	r0, [sp, #0x3c]
10009ebc: 9110         	str	r1, [sp, #0x40]
10009ebe: 9011         	str	r0, [sp, #0x44]
10009ec0: f002 f96c    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x22d8
10009ec4: 200c         	movs	r0, #0xc
10009ec6: f7fc f9dc    	bl	0x10006282 <<u32 as fugit::rate::ExtU32>::MHz::h808bfa1dcebc2205> @ imm = #-0x3c48
10009eca: 4601         	mov	r1, r0
10009ecc: 9804         	ldr	r0, [sp, #0x10]
10009ece: 6001         	str	r1, [r0]
10009ed0: 4902         	ldr	r1, [pc, #0x8]          @ 0x10009edc <rp2040_hal::clocks::SystemClock::reset_source_await::hc2d2060efec5c693+0x78>
10009ed2: f7ff ff41    	bl	0x10009d58 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::GlitchlessClock>::await_select::h00fedecfa2089d26> @ imm = #-0x17e
10009ed6: b012         	add	sp, #0x48
10009ed8: bd80         	pop	{r7, pc}
10009eda: 46c0         	mov	r8, r8
10009edc: a0 1b 01 10  	.word	0x10011ba0

10009ee0 <rp2040_hal::clocks::SystemClock::reset_source_await::{{closure}}::h93ff4cad4874f44b>:
10009ee0: b580         	push	{r7, lr}
10009ee2: af00         	add	r7, sp, #0x0
10009ee4: b094         	sub	sp, #0x50
10009ee6: 9200         	str	r2, [sp]
10009ee8: 9006         	str	r0, [sp, #0x18]
10009eea: 9107         	str	r1, [sp, #0x1c]
10009eec: 9208         	str	r2, [sp, #0x20]
10009eee: 9209         	str	r2, [sp, #0x24]
10009ef0: 920a         	str	r2, [sp, #0x28]
10009ef2: a90b         	add	r1, sp, #0x2c
10009ef4: 2000         	movs	r0, #0x0
10009ef6: 9001         	str	r0, [sp, #0x4]
10009ef8: 7008         	strb	r0, [r1]
10009efa: 9806         	ldr	r0, [sp, #0x18]
10009efc: f7fd fb72    	bl	0x100075e4 <rp2040_hal::clocks::SystemClock::get_default_clock_source::h6ebd65fb6d970ba6> @ imm = #-0x291c
10009f00: 9a00         	ldr	r2, [sp]
10009f02: 9901         	ldr	r1, [sp, #0x4]
10009f04: 4603         	mov	r3, r0
10009f06: 920c         	str	r2, [sp, #0x30]
10009f08: a80c         	add	r0, sp, #0x30
10009f0a: 7101         	strb	r1, [r0, #0x4]
10009f0c: a80e         	add	r0, sp, #0x38
10009f0e: 7003         	strb	r3, [r0]
10009f10: a80f         	add	r0, sp, #0x3c
10009f12: 7003         	strb	r3, [r0]
10009f14: 7800         	ldrb	r0, [r0]
10009f16: 9003         	str	r0, [sp, #0xc]
10009f18: 9210         	str	r2, [sp, #0x40]
10009f1a: aa10         	add	r2, sp, #0x40
10009f1c: 7111         	strb	r1, [r2, #0x4]
10009f1e: a912         	add	r1, sp, #0x48
10009f20: 7008         	strb	r0, [r1]
10009f22: 9810         	ldr	r0, [sp, #0x40]
10009f24: 9002         	str	r0, [sp, #0x8]
10009f26: 9911         	ldr	r1, [sp, #0x44]
10009f28: 2001         	movs	r0, #0x1
10009f2a: 9004         	str	r0, [sp, #0x10]
10009f2c: f7fc ff94    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x30d8
10009f30: f7fc f998    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x3cd0
10009f34: 4601         	mov	r1, r0
10009f36: 9802         	ldr	r0, [sp, #0x8]
10009f38: f7fc ff7a    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x310c
10009f3c: 9803         	ldr	r0, [sp, #0xc]
10009f3e: 9904         	ldr	r1, [sp, #0x10]
10009f40: 9a10         	ldr	r2, [sp, #0x40]
10009f42: 9205         	str	r2, [sp, #0x14]
10009f44: aa13         	add	r2, sp, #0x4c
10009f46: 7010         	strb	r0, [r2]
10009f48: f7fc f9ab    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x3caa
10009f4c: 9911         	ldr	r1, [sp, #0x44]
10009f4e: f7fc ff83    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x30fa
10009f52: 4601         	mov	r1, r0
10009f54: 9805         	ldr	r0, [sp, #0x14]
10009f56: f7fc ff5f    	bl	0x10006e18 <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::hc18d656116c887ea> @ imm = #-0x3142
10009f5a: 9810         	ldr	r0, [sp, #0x40]
10009f5c: b014         	add	sp, #0x50
10009f5e: bd80         	pop	{r7, pc}

10009f60 <rp2040_hal::clocks::SystemClock::set_src::h908a219f31c80807>:
10009f60: b580         	push	{r7, lr}
10009f62: af00         	add	r7, sp, #0x0
10009f64: b094         	sub	sp, #0x50
10009f66: 9104         	str	r1, [sp, #0x10]
10009f68: 9006         	str	r0, [sp, #0x18]
10009f6a: 9107         	str	r1, [sp, #0x1c]
10009f6c: 1d00         	adds	r0, r0, #0x4
10009f6e: f7fd fb2f    	bl	0x100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2> @ imm = #-0x29a2
10009f72: 9904         	ldr	r1, [sp, #0x10]
10009f74: 9008         	str	r0, [sp, #0x20]
10009f76: 9009         	str	r0, [sp, #0x24]
10009f78: 303c         	adds	r0, #0x3c
10009f7a: 9003         	str	r0, [sp, #0xc]
10009f7c: 900c         	str	r0, [sp, #0x30]
10009f7e: 910d         	str	r1, [sp, #0x34]
10009f80: 900f         	str	r0, [sp, #0x3c]
10009f82: 9010         	str	r0, [sp, #0x40]
10009f84: f002 f89f    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x213e
10009f88: 9001         	str	r0, [sp, #0x4]
10009f8a: 900e         	str	r0, [sp, #0x38]
10009f8c: 900a         	str	r0, [sp, #0x28]
10009f8e: 2000         	movs	r0, #0x0
10009f90: 9002         	str	r0, [sp, #0x8]
10009f92: f7fc f967    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x3d32
10009f96: 4601         	mov	r1, r0
10009f98: 9801         	ldr	r0, [sp, #0x4]
10009f9a: f7fc f982    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x3cfc
10009f9e: 9902         	ldr	r1, [sp, #0x8]
10009fa0: f7fc f977    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x3d12
10009fa4: 4601         	mov	r1, r0
10009fa6: 9804         	ldr	r0, [sp, #0x10]
10009fa8: 910b         	str	r1, [sp, #0x2c]
10009faa: a90a         	add	r1, sp, #0x28
10009fac: aa0b         	add	r2, sp, #0x2c
10009fae: f000 f815    	bl	0x10009fdc <rp2040_hal::clocks::SystemClock::set_src::{{closure}}::hba716b3708e6971e> @ imm = #0x2a
10009fb2: 4601         	mov	r1, r0
10009fb4: 9803         	ldr	r0, [sp, #0xc]
10009fb6: 6809         	ldr	r1, [r1]
10009fb8: 9011         	str	r0, [sp, #0x44]
10009fba: 9112         	str	r1, [sp, #0x48]
10009fbc: 9013         	str	r0, [sp, #0x4c]
10009fbe: f002 f8ed    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x21da
10009fc2: 9804         	ldr	r0, [sp, #0x10]
10009fc4: f7ff fde3    	bl	0x10009b8e <<rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locked,rp2040_pac::PLL_SYS> as rp2040_hal::clocks::ValidSrc<rp2040_hal::clocks::SystemClock>>::variant::h97bc1295d3e1580d> @ imm = #-0x43a
10009fc8: 4602         	mov	r2, r0
10009fca: 2001         	movs	r0, #0x1
10009fcc: 4002         	ands	r2, r0
10009fce: a805         	add	r0, sp, #0x14
10009fd0: 7002         	strb	r2, [r0]
10009fd2: 7041         	strb	r1, [r0, #0x1]
10009fd4: f7ff fef8    	bl	0x10009dc8 <rp2040_hal::clocks::ClkSysSrcType::get_clock_id::h773208d2526f16ad> @ imm = #-0x210
10009fd8: b014         	add	sp, #0x50
10009fda: bd80         	pop	{r7, pc}

10009fdc <rp2040_hal::clocks::SystemClock::set_src::{{closure}}::hba716b3708e6971e>:
10009fdc: b5d0         	push	{r4, r6, r7, lr}
10009fde: af02         	add	r7, sp, #0x8
10009fe0: b096         	sub	sp, #0x58
10009fe2: 9201         	str	r2, [sp, #0x4]
10009fe4: 9007         	str	r0, [sp, #0x1c]
10009fe6: 9109         	str	r1, [sp, #0x24]
10009fe8: 920a         	str	r2, [sp, #0x28]
10009fea: 920b         	str	r2, [sp, #0x2c]
10009fec: 920c         	str	r2, [sp, #0x30]
10009fee: a90d         	add	r1, sp, #0x34
10009ff0: 2000         	movs	r0, #0x0
10009ff2: 9002         	str	r0, [sp, #0x8]
10009ff4: 7008         	strb	r0, [r1]
10009ff6: 9807         	ldr	r0, [sp, #0x1c]
10009ff8: f7ff fdc9    	bl	0x10009b8e <<rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locked,rp2040_pac::PLL_SYS> as rp2040_hal::clocks::ValidSrc<rp2040_hal::clocks::SystemClock>>::variant::h97bc1295d3e1580d> @ imm = #-0x46e
10009ffc: 4602         	mov	r2, r0
10009ffe: 2001         	movs	r0, #0x1
1000a000: 9005         	str	r0, [sp, #0x14]
1000a002: 4002         	ands	r2, r0
1000a004: a808         	add	r0, sp, #0x20
1000a006: 7002         	strb	r2, [r0]
1000a008: 7041         	strb	r1, [r0, #0x1]
1000a00a: f7ff feff    	bl	0x10009e0c <rp2040_hal::clocks::ClkSysSrcType::unwrap_src::h3e6e50e6fe5cda65> @ imm = #-0x202
1000a00e: 9b01         	ldr	r3, [sp, #0x4]
1000a010: 9a02         	ldr	r2, [sp, #0x8]
1000a012: 4604         	mov	r4, r0
1000a014: 9805         	ldr	r0, [sp, #0x14]
1000a016: 930e         	str	r3, [sp, #0x38]
1000a018: a90e         	add	r1, sp, #0x38
1000a01a: 710a         	strb	r2, [r1, #0x4]
1000a01c: a910         	add	r1, sp, #0x40
1000a01e: 700c         	strb	r4, [r1]
1000a020: a911         	add	r1, sp, #0x44
1000a022: 700c         	strb	r4, [r1]
1000a024: 7809         	ldrb	r1, [r1]
1000a026: 9104         	str	r1, [sp, #0x10]
1000a028: 9312         	str	r3, [sp, #0x48]
1000a02a: ab12         	add	r3, sp, #0x48
1000a02c: 711a         	strb	r2, [r3, #0x4]
1000a02e: aa14         	add	r2, sp, #0x50
1000a030: 7011         	strb	r1, [r2]
1000a032: 9912         	ldr	r1, [sp, #0x48]
1000a034: 9103         	str	r1, [sp, #0xc]
1000a036: 9913         	ldr	r1, [sp, #0x4c]
1000a038: f7fc ff0e    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x31e4
1000a03c: f7fc f912    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x3ddc
1000a040: 4601         	mov	r1, r0
1000a042: 9803         	ldr	r0, [sp, #0xc]
1000a044: f7fc fef4    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x3218
1000a048: 9804         	ldr	r0, [sp, #0x10]
1000a04a: 9905         	ldr	r1, [sp, #0x14]
1000a04c: 9a12         	ldr	r2, [sp, #0x48]
1000a04e: 9206         	str	r2, [sp, #0x18]
1000a050: aa15         	add	r2, sp, #0x54
1000a052: 7010         	strb	r0, [r2]
1000a054: f7fc f925    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x3db6
1000a058: 9913         	ldr	r1, [sp, #0x4c]
1000a05a: f7fc fefd    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x3206
1000a05e: 4601         	mov	r1, r0
1000a060: 9806         	ldr	r0, [sp, #0x18]
1000a062: f7fc fed9    	bl	0x10006e18 <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::hc18d656116c887ea> @ imm = #-0x324e
1000a066: 9812         	ldr	r0, [sp, #0x48]
1000a068: b016         	add	sp, #0x58
1000a06a: bdd0         	pop	{r4, r6, r7, pc}

1000a06c <rp2040_hal::clocks::SystemClock::set_self_aux_src::h63d3e690dbab3bff>:
1000a06c: b580         	push	{r7, lr}
1000a06e: af00         	add	r7, sp, #0x0
1000a070: b092         	sub	sp, #0x48
1000a072: 9002         	str	r0, [sp, #0x8]
1000a074: 9006         	str	r0, [sp, #0x18]
1000a076: 1d00         	adds	r0, r0, #0x4
1000a078: f7fd faaa    	bl	0x100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2> @ imm = #-0x2aac
1000a07c: 9902         	ldr	r1, [sp, #0x8]
1000a07e: 9007         	str	r0, [sp, #0x1c]
1000a080: 303c         	adds	r0, #0x3c
1000a082: 9003         	str	r0, [sp, #0xc]
1000a084: 900a         	str	r0, [sp, #0x28]
1000a086: 910b         	str	r1, [sp, #0x2c]
1000a088: 900d         	str	r0, [sp, #0x34]
1000a08a: 900e         	str	r0, [sp, #0x38]
1000a08c: f002 f81b    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x2036
1000a090: 9001         	str	r0, [sp, #0x4]
1000a092: 900c         	str	r0, [sp, #0x30]
1000a094: 9008         	str	r0, [sp, #0x20]
1000a096: 2000         	movs	r0, #0x0
1000a098: 9004         	str	r0, [sp, #0x10]
1000a09a: f7fc f8e3    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x3e3a
1000a09e: 4601         	mov	r1, r0
1000a0a0: 9801         	ldr	r0, [sp, #0x4]
1000a0a2: f7fc f8fe    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x3e04
1000a0a6: 9904         	ldr	r1, [sp, #0x10]
1000a0a8: f7fc f8f3    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x3e1a
1000a0ac: 4601         	mov	r1, r0
1000a0ae: 9802         	ldr	r0, [sp, #0x8]
1000a0b0: 9109         	str	r1, [sp, #0x24]
1000a0b2: a908         	add	r1, sp, #0x20
1000a0b4: aa09         	add	r2, sp, #0x24
1000a0b6: f000 f817    	bl	0x1000a0e8 <rp2040_hal::clocks::SystemClock::set_self_aux_src::{{closure}}::h88cb43bfd90fdfdb> @ imm = #0x2e
1000a0ba: 4601         	mov	r1, r0
1000a0bc: 9803         	ldr	r0, [sp, #0xc]
1000a0be: 6809         	ldr	r1, [r1]
1000a0c0: 900f         	str	r0, [sp, #0x3c]
1000a0c2: 9110         	str	r1, [sp, #0x40]
1000a0c4: 9011         	str	r0, [sp, #0x44]
1000a0c6: f002 f869    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x20d2
1000a0ca: 9804         	ldr	r0, [sp, #0x10]
1000a0cc: 2101         	movs	r1, #0x1
1000a0ce: 9105         	str	r1, [sp, #0x14]
1000a0d0: 2800         	cmp	r0, #0x0
1000a0d2: d103         	bne	0x1000a0dc <rp2040_hal::clocks::SystemClock::set_self_aux_src::h63d3e690dbab3bff+0x70> @ imm = #0x6
1000a0d4: e7ff         	b	0x1000a0d6 <rp2040_hal::clocks::SystemClock::set_self_aux_src::h63d3e690dbab3bff+0x6a> @ imm = #-0x2
1000a0d6: 9805         	ldr	r0, [sp, #0x14]
1000a0d8: b012         	add	sp, #0x48
1000a0da: bd80         	pop	{r7, pc}
1000a0dc: 4801         	ldr	r0, [pc, #0x4]          @ 0x1000a0e4 <rp2040_hal::clocks::SystemClock::set_self_aux_src::h63d3e690dbab3bff+0x78>
1000a0de: f003 f9a7    	bl	0x1000d430 <core::panicking::panic_const::panic_const_add_overflow::h73b6e802431fc142> @ imm = #0x334e
1000a0e2: 46c0         	mov	r8, r8
1000a0e4: 94 1f 01 10  	.word	0x10011f94

1000a0e8 <rp2040_hal::clocks::SystemClock::set_self_aux_src::{{closure}}::h88cb43bfd90fdfdb>:
1000a0e8: b580         	push	{r7, lr}
1000a0ea: af00         	add	r7, sp, #0x0
1000a0ec: b094         	sub	sp, #0x50
1000a0ee: 9200         	str	r2, [sp]
1000a0f0: 9006         	str	r0, [sp, #0x18]
1000a0f2: 9107         	str	r1, [sp, #0x1c]
1000a0f4: 9208         	str	r2, [sp, #0x20]
1000a0f6: 9209         	str	r2, [sp, #0x24]
1000a0f8: 920a         	str	r2, [sp, #0x28]
1000a0fa: a90b         	add	r1, sp, #0x2c
1000a0fc: 2000         	movs	r0, #0x0
1000a0fe: 9001         	str	r0, [sp, #0x4]
1000a100: 7008         	strb	r0, [r1]
1000a102: 9806         	ldr	r0, [sp, #0x18]
1000a104: f7fd fa78    	bl	0x100075f8 <rp2040_hal::clocks::SystemClock::get_aux_source::h729a15dcd2ddb919> @ imm = #-0x2b10
1000a108: 9a00         	ldr	r2, [sp]
1000a10a: 9901         	ldr	r1, [sp, #0x4]
1000a10c: 4603         	mov	r3, r0
1000a10e: 920c         	str	r2, [sp, #0x30]
1000a110: a80c         	add	r0, sp, #0x30
1000a112: 7101         	strb	r1, [r0, #0x4]
1000a114: a80e         	add	r0, sp, #0x38
1000a116: 7003         	strb	r3, [r0]
1000a118: a80f         	add	r0, sp, #0x3c
1000a11a: 7003         	strb	r3, [r0]
1000a11c: 7800         	ldrb	r0, [r0]
1000a11e: 9003         	str	r0, [sp, #0xc]
1000a120: 9210         	str	r2, [sp, #0x40]
1000a122: aa10         	add	r2, sp, #0x40
1000a124: 7111         	strb	r1, [r2, #0x4]
1000a126: a912         	add	r1, sp, #0x48
1000a128: 7008         	strb	r0, [r1]
1000a12a: 9810         	ldr	r0, [sp, #0x40]
1000a12c: 9002         	str	r0, [sp, #0x8]
1000a12e: 9911         	ldr	r1, [sp, #0x44]
1000a130: 2001         	movs	r0, #0x1
1000a132: 9004         	str	r0, [sp, #0x10]
1000a134: f7fc fe90    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x32e0
1000a138: f7fc f894    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x3ed8
1000a13c: 4601         	mov	r1, r0
1000a13e: 9802         	ldr	r0, [sp, #0x8]
1000a140: f7fc fe76    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x3314
1000a144: 9803         	ldr	r0, [sp, #0xc]
1000a146: 9904         	ldr	r1, [sp, #0x10]
1000a148: 9a10         	ldr	r2, [sp, #0x40]
1000a14a: 9205         	str	r2, [sp, #0x14]
1000a14c: aa13         	add	r2, sp, #0x4c
1000a14e: 7010         	strb	r0, [r2]
1000a150: f7fc f8a7    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x3eb2
1000a154: 9911         	ldr	r1, [sp, #0x44]
1000a156: f7fc fe7f    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x3302
1000a15a: 4601         	mov	r1, r0
1000a15c: 9805         	ldr	r0, [sp, #0x14]
1000a15e: f7fc fe5b    	bl	0x10006e18 <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::hc18d656116c887ea> @ imm = #-0x334a
1000a162: 9810         	ldr	r0, [sp, #0x40]
1000a164: b014         	add	sp, #0x50
1000a166: bd80         	pop	{r7, pc}

1000a168 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::Clock>::freq::h49b977205ad25b21>:
1000a168: b580         	push	{r7, lr}
1000a16a: af00         	add	r7, sp, #0x0
1000a16c: b081         	sub	sp, #0x4
1000a16e: 9000         	str	r0, [sp]
1000a170: 6800         	ldr	r0, [r0]
1000a172: b001         	add	sp, #0x4
1000a174: bd80         	pop	{r7, pc}
1000a176: d4d4         	bmi	0x1000a122 <rp2040_hal::clocks::SystemClock::set_self_aux_src::{{closure}}::h88cb43bfd90fdfdb+0x3a> @ imm = #-0x58

1000a178 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::Clock>::configure_clock::h0c99206bbceb38d3>:
1000a178: b580         	push	{r7, lr}
1000a17a: af00         	add	r7, sp, #0x0
1000a17c: b0a2         	sub	sp, #0x88
1000a17e: 9108         	str	r1, [sp, #0x20]
1000a180: 4601         	mov	r1, r0
1000a182: 9808         	ldr	r0, [sp, #0x20]
1000a184: 9109         	str	r1, [sp, #0x24]
1000a186: 920a         	str	r2, [sp, #0x28]
1000a188: 911b         	str	r1, [sp, #0x6c]
1000a18a: 901c         	str	r0, [sp, #0x70]
1000a18c: f7fd f9fb    	bl	0x10007586 <rp2040_hal::clocks::clock_sources::<impl rp2040_hal::clocks::ClockSource for rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locked,rp2040_pac::PLL_SYS>>::get_freq::h4aaa9d5d79c03fa1> @ imm = #-0x2c0a
1000a190: 4959         	ldr	r1, [pc, #0x164]        @ 0x1000a2f8 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::Clock>::configure_clock::h0c99206bbceb38d3+0x180>
1000a192: f7fc fe3a    	bl	0x10006e0a <<T as core::convert::Into<U>>::into::hd9da2216767de703> @ imm = #-0x338c
1000a196: 900c         	str	r0, [sp, #0x30]
1000a198: a80a         	add	r0, sp, #0x28
1000a19a: a90c         	add	r1, sp, #0x30
1000a19c: f7fc f89b    	bl	0x100062d6 <core::cmp::PartialOrd::gt::hda2a2854aba77a5e> @ imm = #-0x3eca
1000a1a0: 2800         	cmp	r0, #0x0
1000a1a2: d121         	bne	0x1000a1e8 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::Clock>::configure_clock::h0c99206bbceb38d3+0x70> @ imm = #0x42
1000a1a4: e7ff         	b	0x1000a1a6 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::Clock>::configure_clock::h0c99206bbceb38d3+0x2e> @ imm = #-0x2
1000a1a6: a80c         	add	r0, sp, #0x30
1000a1a8: f7fc fee0    	bl	0x10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868> @ imm = #-0x3240
1000a1ac: 9004         	str	r0, [sp, #0x10]
1000a1ae: a80a         	add	r0, sp, #0x28
1000a1b0: f7fc fedc    	bl	0x10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868> @ imm = #-0x3248
1000a1b4: 4601         	mov	r1, r0
1000a1b6: 9804         	ldr	r0, [sp, #0x10]
1000a1b8: f7fd fbd6    	bl	0x10007968 <rp2040_hal::clocks::fractional_div::hd140809978073745> @ imm = #-0x2854
1000a1bc: 9005         	str	r0, [sp, #0x14]
1000a1be: 460a         	mov	r2, r1
1000a1c0: 9905         	ldr	r1, [sp, #0x14]
1000a1c2: ab12         	add	r3, sp, #0x48
1000a1c4: 2002         	movs	r0, #0x2
1000a1c6: 7018         	strb	r0, [r3]
1000a1c8: 9b12         	ldr	r3, [sp, #0x48]
1000a1ca: a810         	add	r0, sp, #0x40
1000a1cc: 9006         	str	r0, [sp, #0x18]
1000a1ce: f7fc fce1    	bl	0x10006b94 <core::option::Option<T>::ok_or::h81824975fa84ee0f> @ imm = #-0x363e
1000a1d2: 9906         	ldr	r1, [sp, #0x18]
1000a1d4: a80e         	add	r0, sp, #0x38
1000a1d6: 9007         	str	r0, [sp, #0x1c]
1000a1d8: f7fd f803    	bl	0x100071e2 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h460b484606f6b3bdE> @ imm = #-0x2ffa
1000a1dc: 9807         	ldr	r0, [sp, #0x1c]
1000a1de: 7800         	ldrb	r0, [r0]
1000a1e0: 07c0         	lsls	r0, r0, #0x1f
1000a1e2: 2800         	cmp	r0, #0x0
1000a1e4: d007         	beq	0x1000a1f6 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::Clock>::configure_clock::h0c99206bbceb38d3+0x7e> @ imm = #0xe
1000a1e6: e011         	b	0x1000a20c <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::Clock>::configure_clock::h0c99206bbceb38d3+0x94> @ imm = #0x22
1000a1e8: a90d         	add	r1, sp, #0x34
1000a1ea: 2000         	movs	r0, #0x0
1000a1ec: 7008         	strb	r0, [r1]
1000a1ee: 980d         	ldr	r0, [sp, #0x34]
1000a1f0: a90b         	add	r1, sp, #0x2c
1000a1f2: 7008         	strb	r0, [r1]
1000a1f4: e07d         	b	0x1000a2f2 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::Clock>::configure_clock::h0c99206bbceb38d3+0x17a> @ imm = #0xfa
1000a1f6: 9809         	ldr	r0, [sp, #0x24]
1000a1f8: 990f         	ldr	r1, [sp, #0x3c]
1000a1fa: 9103         	str	r1, [sp, #0xc]
1000a1fc: 911e         	str	r1, [sp, #0x78]
1000a1fe: f7ff fd96    	bl	0x10009d2e <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::ClockDivision>::get_div::h33a3757ab77718c3> @ imm = #-0x4d4
1000a202: 4601         	mov	r1, r0
1000a204: 9803         	ldr	r0, [sp, #0xc]
1000a206: 4288         	cmp	r0, r1
1000a208: d810         	bhi	0x1000a22c <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::Clock>::configure_clock::h0c99206bbceb38d3+0xb4> @ imm = #0x20
1000a20a: e009         	b	0x1000a220 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::Clock>::configure_clock::h0c99206bbceb38d3+0xa8> @ imm = #0x12
1000a20c: a80e         	add	r0, sp, #0x38
1000a20e: 7840         	ldrb	r0, [r0, #0x1]
1000a210: a921         	add	r1, sp, #0x84
1000a212: 7008         	strb	r0, [r1]
1000a214: 4938         	ldr	r1, [pc, #0xe0]         @ 0x1000a2f8 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::Clock>::configure_clock::h0c99206bbceb38d3+0x180>
1000a216: f7fb ffca    	bl	0x100061ae <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4d80d59e43eeb34cE> @ imm = #-0x406c
1000a21a: a90b         	add	r1, sp, #0x2c
1000a21c: 7008         	strb	r0, [r1]
1000a21e: e068         	b	0x1000a2f2 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::Clock>::configure_clock::h0c99206bbceb38d3+0x17a> @ imm = #0xd0
1000a220: 9808         	ldr	r0, [sp, #0x20]
1000a222: f7ff fcad    	bl	0x10009b80 <<rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locked,rp2040_pac::PLL_SYS> as rp2040_hal::clocks::ValidSrc<rp2040_hal::clocks::SystemClock>>::is_aux::hc754abb63bfca951> @ imm = #-0x6a6
1000a226: 2800         	cmp	r0, #0x0
1000a228: d10c         	bne	0x1000a244 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::Clock>::configure_clock::h0c99206bbceb38d3+0xcc> @ imm = #0x18
1000a22a: e004         	b	0x1000a236 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::Clock>::configure_clock::h0c99206bbceb38d3+0xbe> @ imm = #0x8
1000a22c: 9903         	ldr	r1, [sp, #0xc]
1000a22e: 9809         	ldr	r0, [sp, #0x24]
1000a230: f7ff fd3b    	bl	0x10009caa <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::ClockDivision>::set_div::haefdd2284c50af21> @ imm = #-0x58a
1000a234: e7f4         	b	0x1000a220 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::Clock>::configure_clock::h0c99206bbceb38d3+0xa8> @ imm = #-0x18
1000a236: 9908         	ldr	r1, [sp, #0x20]
1000a238: 9809         	ldr	r0, [sp, #0x24]
1000a23a: f7ff fe91    	bl	0x10009f60 <rp2040_hal::clocks::SystemClock::set_src::h908a219f31c80807> @ imm = #-0x2de
1000a23e: a913         	add	r1, sp, #0x4c
1000a240: 7008         	strb	r0, [r1]
1000a242: e00a         	b	0x1000a25a <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::Clock>::configure_clock::h0c99206bbceb38d3+0xe2> @ imm = #0x14
1000a244: 9809         	ldr	r0, [sp, #0x24]
1000a246: f7ff fe0d    	bl	0x10009e64 <rp2040_hal::clocks::SystemClock::reset_source_await::hc2d2060efec5c693> @ imm = #-0x3e6
1000a24a: 4601         	mov	r1, r0
1000a24c: a814         	add	r0, sp, #0x50
1000a24e: 7001         	strb	r1, [r0]
1000a250: 7800         	ldrb	r0, [r0]
1000a252: 07c0         	lsls	r0, r0, #0x1f
1000a254: 2800         	cmp	r0, #0x0
1000a256: d00c         	beq	0x1000a272 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::Clock>::configure_clock::h0c99206bbceb38d3+0xfa> @ imm = #0x18
1000a258: e015         	b	0x1000a286 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::Clock>::configure_clock::h0c99206bbceb38d3+0x10e> @ imm = #0x2a
1000a25a: 9809         	ldr	r0, [sp, #0x24]
1000a25c: a913         	add	r1, sp, #0x4c
1000a25e: f7ff fd7b    	bl	0x10009d58 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::GlitchlessClock>::await_select::h00fedecfa2089d26> @ imm = #-0x50a
1000a262: 4601         	mov	r1, r0
1000a264: a815         	add	r0, sp, #0x54
1000a266: 7001         	strb	r1, [r0]
1000a268: 7800         	ldrb	r0, [r0]
1000a26a: 07c0         	lsls	r0, r0, #0x1f
1000a26c: 2800         	cmp	r0, #0x0
1000a26e: d00b         	beq	0x1000a288 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::Clock>::configure_clock::h0c99206bbceb38d3+0x110> @ imm = #0x16
1000a270: e02a         	b	0x1000a2c8 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::Clock>::configure_clock::h0c99206bbceb38d3+0x150> @ imm = #0x54
1000a272: 9809         	ldr	r0, [sp, #0x24]
1000a274: 9908         	ldr	r1, [sp, #0x20]
1000a276: f7ff fc9a    	bl	0x10009bae <rp2040_hal::clocks::SystemClock::set_aux::h785c4ec9d44147ac> @ imm = #-0x6cc
1000a27a: 9809         	ldr	r0, [sp, #0x24]
1000a27c: f7ff fef6    	bl	0x1000a06c <rp2040_hal::clocks::SystemClock::set_self_aux_src::h63d3e690dbab3bff> @ imm = #-0x214
1000a280: a913         	add	r1, sp, #0x4c
1000a282: 7008         	strb	r0, [r1]
1000a284: e7e9         	b	0x1000a25a <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::Clock>::configure_clock::h0c99206bbceb38d3+0xe2> @ imm = #-0x2e
1000a286: e7dd         	b	0x1000a244 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::Clock>::configure_clock::h0c99206bbceb38d3+0xcc> @ imm = #-0x46
1000a288: 9903         	ldr	r1, [sp, #0xc]
1000a28a: 9809         	ldr	r0, [sp, #0x24]
1000a28c: f7ff fd0d    	bl	0x10009caa <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::ClockDivision>::set_div::haefdd2284c50af21> @ imm = #-0x5e6
1000a290: a80c         	add	r0, sp, #0x30
1000a292: f7fc fe6b    	bl	0x10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868> @ imm = #-0x332a
1000a296: 9903         	ldr	r1, [sp, #0xc]
1000a298: f7fd fb66    	bl	0x10007968 <rp2040_hal::clocks::fractional_div::hd140809978073745> @ imm = #-0x2934
1000a29c: 9000         	str	r0, [sp]
1000a29e: 460a         	mov	r2, r1
1000a2a0: 9900         	ldr	r1, [sp]
1000a2a2: ab1a         	add	r3, sp, #0x68
1000a2a4: 2001         	movs	r0, #0x1
1000a2a6: 7018         	strb	r0, [r3]
1000a2a8: 9b1a         	ldr	r3, [sp, #0x68]
1000a2aa: a818         	add	r0, sp, #0x60
1000a2ac: 9001         	str	r0, [sp, #0x4]
1000a2ae: f7fc fc71    	bl	0x10006b94 <core::option::Option<T>::ok_or::h81824975fa84ee0f> @ imm = #-0x371e
1000a2b2: 9901         	ldr	r1, [sp, #0x4]
1000a2b4: a816         	add	r0, sp, #0x58
1000a2b6: 9002         	str	r0, [sp, #0x8]
1000a2b8: f7fc ff93    	bl	0x100071e2 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h460b484606f6b3bdE> @ imm = #-0x30da
1000a2bc: 9802         	ldr	r0, [sp, #0x8]
1000a2be: 7800         	ldrb	r0, [r0]
1000a2c0: 07c0         	lsls	r0, r0, #0x1f
1000a2c2: 2800         	cmp	r0, #0x0
1000a2c4: d001         	beq	0x1000a2ca <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::Clock>::configure_clock::h0c99206bbceb38d3+0x152> @ imm = #0x2
1000a2c6: e00a         	b	0x1000a2de <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::Clock>::configure_clock::h0c99206bbceb38d3+0x166> @ imm = #0x14
1000a2c8: e7c7         	b	0x1000a25a <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::Clock>::configure_clock::h0c99206bbceb38d3+0xe2> @ imm = #-0x72
1000a2ca: 9817         	ldr	r0, [sp, #0x5c]
1000a2cc: 901f         	str	r0, [sp, #0x7c]
1000a2ce: f7fb ffd0    	bl	0x10006272 <<u32 as fugit::rate::ExtU32>::Hz::ha421d0a6a3793ef2> @ imm = #-0x4060
1000a2d2: 9909         	ldr	r1, [sp, #0x24]
1000a2d4: 6008         	str	r0, [r1]
1000a2d6: a90b         	add	r1, sp, #0x2c
1000a2d8: 2003         	movs	r0, #0x3
1000a2da: 7008         	strb	r0, [r1]
1000a2dc: e009         	b	0x1000a2f2 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::Clock>::configure_clock::h0c99206bbceb38d3+0x17a> @ imm = #0x12
1000a2de: a816         	add	r0, sp, #0x58
1000a2e0: 7840         	ldrb	r0, [r0, #0x1]
1000a2e2: a920         	add	r1, sp, #0x80
1000a2e4: 7008         	strb	r0, [r1]
1000a2e6: 4904         	ldr	r1, [pc, #0x10]         @ 0x1000a2f8 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::Clock>::configure_clock::h0c99206bbceb38d3+0x180>
1000a2e8: f7fb ff61    	bl	0x100061ae <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4d80d59e43eeb34cE> @ imm = #-0x413e
1000a2ec: a90b         	add	r1, sp, #0x2c
1000a2ee: 7008         	strb	r0, [r1]
1000a2f0: e7ff         	b	0x1000a2f2 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::Clock>::configure_clock::h0c99206bbceb38d3+0x17a> @ imm = #-0x2
1000a2f2: 980b         	ldr	r0, [sp, #0x2c]
1000a2f4: b022         	add	sp, #0x88
1000a2f6: bd80         	pop	{r7, pc}
1000a2f8: 94 1f 01 10  	.word	0x10011f94

1000a2fc <rp2040_hal::clocks::ClkSysSrcType::unwrap_src::panic_cold_explicit::h57800bd4cda8bb19>:
1000a2fc: b580         	push	{r7, lr}
1000a2fe: af00         	add	r7, sp, #0x0
1000a300: f002 f884    	bl	0x1000c40c <core::panicking::panic_explicit::hab1f90333547f2f9> @ imm = #0x2108

1000a304 <rp2040_hal::clocks::ClkSysSrcType::unwrap_aux::panic_cold_explicit::hfcfcd3937cf61353>:
1000a304: b580         	push	{r7, lr}
1000a306: af00         	add	r7, sp, #0x0
1000a308: f002 f880    	bl	0x1000c40c <core::panicking::panic_explicit::hab1f90333547f2f9> @ imm = #0x2100

1000a30c <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::ClockDivision>::set_div::h37685a45b8d1e223>:
1000a30c: b580         	push	{r7, lr}
1000a30e: af00         	add	r7, sp, #0x0
1000a310: b082         	sub	sp, #0x8
1000a312: 9000         	str	r0, [sp]
1000a314: 9101         	str	r1, [sp, #0x4]
1000a316: b002         	add	sp, #0x8
1000a318: bd80         	pop	{r7, pc}

1000a31a <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::ClockDivision>::get_div::h1dba861c29fcbc13>:
1000a31a: b580         	push	{r7, lr}
1000a31c: af00         	add	r7, sp, #0x0
1000a31e: b081         	sub	sp, #0x4
1000a320: 9000         	str	r0, [sp]
1000a322: 2001         	movs	r0, #0x1
1000a324: b001         	add	sp, #0x4
1000a326: bd80         	pop	{r7, pc}

1000a328 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::ValidSrc<rp2040_hal::clocks::PeripheralClock>>::variant::h2f19a08520752d7f>:
1000a328: b580         	push	{r7, lr}
1000a32a: af00         	add	r7, sp, #0x0
1000a32c: b083         	sub	sp, #0xc
1000a32e: 9002         	str	r0, [sp, #0x8]
1000a330: a901         	add	r1, sp, #0x4
1000a332: 2000         	movs	r0, #0x0
1000a334: 7008         	strb	r0, [r1]
1000a336: 9801         	ldr	r0, [sp, #0x4]
1000a338: 4669         	mov	r1, sp
1000a33a: 7008         	strb	r0, [r1]
1000a33c: 9800         	ldr	r0, [sp]
1000a33e: b003         	add	sp, #0xc
1000a340: bd80         	pop	{r7, pc}

1000a342 <rp2040_hal::clocks::PeripheralClock::set_aux::hafa9144b18038b28>:
1000a342: b580         	push	{r7, lr}
1000a344: af00         	add	r7, sp, #0x0
1000a346: b092         	sub	sp, #0x48
1000a348: 9102         	str	r1, [sp, #0x8]
1000a34a: 9004         	str	r0, [sp, #0x10]
1000a34c: 9105         	str	r1, [sp, #0x14]
1000a34e: 1d00         	adds	r0, r0, #0x4
1000a350: f7fd f93e    	bl	0x100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2> @ imm = #-0x2d84
1000a354: 9902         	ldr	r1, [sp, #0x8]
1000a356: 9006         	str	r0, [sp, #0x18]
1000a358: 9007         	str	r0, [sp, #0x1c]
1000a35a: 3048         	adds	r0, #0x48
1000a35c: 9003         	str	r0, [sp, #0xc]
1000a35e: 900a         	str	r0, [sp, #0x28]
1000a360: 910b         	str	r1, [sp, #0x2c]
1000a362: 900d         	str	r0, [sp, #0x34]
1000a364: 900e         	str	r0, [sp, #0x38]
1000a366: f001 feae    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x1d5c
1000a36a: 9000         	str	r0, [sp]
1000a36c: 900c         	str	r0, [sp, #0x30]
1000a36e: 9008         	str	r0, [sp, #0x20]
1000a370: 2000         	movs	r0, #0x0
1000a372: 9001         	str	r0, [sp, #0x4]
1000a374: f7fb ff76    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x4114
1000a378: 4601         	mov	r1, r0
1000a37a: 9800         	ldr	r0, [sp]
1000a37c: f7fb ff91    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x40de
1000a380: 9901         	ldr	r1, [sp, #0x4]
1000a382: f7fb ff86    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x40f4
1000a386: 4601         	mov	r1, r0
1000a388: 9802         	ldr	r0, [sp, #0x8]
1000a38a: 9109         	str	r1, [sp, #0x24]
1000a38c: a908         	add	r1, sp, #0x20
1000a38e: aa09         	add	r2, sp, #0x24
1000a390: f000 f80a    	bl	0x1000a3a8 <rp2040_hal::clocks::PeripheralClock::set_aux::{{closure}}::hf88efd49ec5bc3b2> @ imm = #0x14
1000a394: 4601         	mov	r1, r0
1000a396: 9803         	ldr	r0, [sp, #0xc]
1000a398: 6809         	ldr	r1, [r1]
1000a39a: 900f         	str	r0, [sp, #0x3c]
1000a39c: 9110         	str	r1, [sp, #0x40]
1000a39e: 9011         	str	r0, [sp, #0x44]
1000a3a0: f001 fefc    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x1df8
1000a3a4: b012         	add	sp, #0x48
1000a3a6: bd80         	pop	{r7, pc}

1000a3a8 <rp2040_hal::clocks::PeripheralClock::set_aux::{{closure}}::hf88efd49ec5bc3b2>:
1000a3a8: b580         	push	{r7, lr}
1000a3aa: af00         	add	r7, sp, #0x0
1000a3ac: b094         	sub	sp, #0x50
1000a3ae: 9200         	str	r2, [sp]
1000a3b0: 9005         	str	r0, [sp, #0x14]
1000a3b2: 9107         	str	r1, [sp, #0x1c]
1000a3b4: 9208         	str	r2, [sp, #0x20]
1000a3b6: 9209         	str	r2, [sp, #0x24]
1000a3b8: 920a         	str	r2, [sp, #0x28]
1000a3ba: a90b         	add	r1, sp, #0x2c
1000a3bc: 2005         	movs	r0, #0x5
1000a3be: 9001         	str	r0, [sp, #0x4]
1000a3c0: 7008         	strb	r0, [r1]
1000a3c2: 9805         	ldr	r0, [sp, #0x14]
1000a3c4: f7ff ffb0    	bl	0x1000a328 <<rp2040_hal::clocks::SystemClock as rp2040_hal::clocks::ValidSrc<rp2040_hal::clocks::PeripheralClock>>::variant::h2f19a08520752d7f> @ imm = #-0xa0
1000a3c8: 4601         	mov	r1, r0
1000a3ca: a806         	add	r0, sp, #0x18
1000a3cc: 7001         	strb	r1, [r0]
1000a3ce: f000 f833    	bl	0x1000a438 <rp2040_hal::clocks::ClkPeriSrcType::unwrap_aux::h9b79c8250754cedf> @ imm = #0x66
1000a3d2: 9a00         	ldr	r2, [sp]
1000a3d4: 9901         	ldr	r1, [sp, #0x4]
1000a3d6: 4603         	mov	r3, r0
1000a3d8: 920c         	str	r2, [sp, #0x30]
1000a3da: a80c         	add	r0, sp, #0x30
1000a3dc: 7101         	strb	r1, [r0, #0x4]
1000a3de: a80e         	add	r0, sp, #0x38
1000a3e0: 7003         	strb	r3, [r0]
1000a3e2: a80f         	add	r0, sp, #0x3c
1000a3e4: 7003         	strb	r3, [r0]
1000a3e6: 7800         	ldrb	r0, [r0]
1000a3e8: 9003         	str	r0, [sp, #0xc]
1000a3ea: 9210         	str	r2, [sp, #0x40]
1000a3ec: aa10         	add	r2, sp, #0x40
1000a3ee: 7111         	strb	r1, [r2, #0x4]
1000a3f0: a912         	add	r1, sp, #0x48
1000a3f2: 7008         	strb	r0, [r1]
1000a3f4: 9810         	ldr	r0, [sp, #0x40]
1000a3f6: 9002         	str	r0, [sp, #0x8]
1000a3f8: f7fb fe86    	bl	0x10006108 <rp2040_pac::generic::mask_u32::h42ec560ca9ea22d1> @ imm = #-0x42f4
1000a3fc: 9911         	ldr	r1, [sp, #0x44]
1000a3fe: f7fc fd2b    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x35aa
1000a402: f7fb ff2f    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x41a2
1000a406: 4601         	mov	r1, r0
1000a408: 9802         	ldr	r0, [sp, #0x8]
1000a40a: f7fc fd11    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x35de
1000a40e: 9803         	ldr	r0, [sp, #0xc]
1000a410: 9910         	ldr	r1, [sp, #0x40]
1000a412: 9104         	str	r1, [sp, #0x10]
1000a414: a913         	add	r1, sp, #0x4c
1000a416: 7008         	strb	r0, [r1]
1000a418: f7fb fe76    	bl	0x10006108 <rp2040_pac::generic::mask_u32::h42ec560ca9ea22d1> @ imm = #-0x4314
1000a41c: 4601         	mov	r1, r0
1000a41e: 9803         	ldr	r0, [sp, #0xc]
1000a420: f7fb ff3f    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x4182
1000a424: 9911         	ldr	r1, [sp, #0x44]
1000a426: f7fc fd17    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x35d2
1000a42a: 4601         	mov	r1, r0
1000a42c: 9804         	ldr	r0, [sp, #0x10]
1000a42e: f7fc fcf3    	bl	0x10006e18 <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::hc18d656116c887ea> @ imm = #-0x361a
1000a432: 9810         	ldr	r0, [sp, #0x40]
1000a434: b014         	add	sp, #0x50
1000a436: bd80         	pop	{r7, pc}

1000a438 <rp2040_hal::clocks::ClkPeriSrcType::unwrap_aux::h9b79c8250754cedf>:
1000a438: b580         	push	{r7, lr}
1000a43a: af00         	add	r7, sp, #0x0
1000a43c: b082         	sub	sp, #0x8
1000a43e: 9000         	str	r0, [sp]
1000a440: 9001         	str	r0, [sp, #0x4]
1000a442: 7800         	ldrb	r0, [r0]
1000a444: b002         	add	sp, #0x8
1000a446: bd80         	pop	{r7, pc}

1000a448 <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::StoppableClock>::enable::hdc5daffd160e6924>:
1000a448: b580         	push	{r7, lr}
1000a44a: af00         	add	r7, sp, #0x0
1000a44c: b08e         	sub	sp, #0x38
1000a44e: 9003         	str	r0, [sp, #0xc]
1000a450: 1d00         	adds	r0, r0, #0x4
1000a452: f7fd f8bd    	bl	0x100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2> @ imm = #-0x2e86
1000a456: 9004         	str	r0, [sp, #0x10]
1000a458: 3048         	adds	r0, #0x48
1000a45a: 9002         	str	r0, [sp, #0x8]
1000a45c: 9007         	str	r0, [sp, #0x1c]
1000a45e: 9009         	str	r0, [sp, #0x24]
1000a460: 900a         	str	r0, [sp, #0x28]
1000a462: f001 fe30    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x1c60
1000a466: 9000         	str	r0, [sp]
1000a468: 9008         	str	r0, [sp, #0x20]
1000a46a: 9005         	str	r0, [sp, #0x14]
1000a46c: 2000         	movs	r0, #0x0
1000a46e: 9001         	str	r0, [sp, #0x4]
1000a470: f7fb fef8    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x4210
1000a474: 4601         	mov	r1, r0
1000a476: 9800         	ldr	r0, [sp]
1000a478: f7fb ff13    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x41da
1000a47c: 9901         	ldr	r1, [sp, #0x4]
1000a47e: f7fb ff08    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x41f0
1000a482: 9006         	str	r0, [sp, #0x18]
1000a484: a805         	add	r0, sp, #0x14
1000a486: a906         	add	r1, sp, #0x18
1000a488: f000 f80a    	bl	0x1000a4a0 <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::StoppableClock>::enable::{{closure}}::h72f03b25de5ee004> @ imm = #0x14
1000a48c: 4601         	mov	r1, r0
1000a48e: 9802         	ldr	r0, [sp, #0x8]
1000a490: 6809         	ldr	r1, [r1]
1000a492: 900b         	str	r0, [sp, #0x2c]
1000a494: 910c         	str	r1, [sp, #0x30]
1000a496: 900d         	str	r0, [sp, #0x34]
1000a498: f001 fe80    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x1d00
1000a49c: b00e         	add	sp, #0x38
1000a49e: bd80         	pop	{r7, pc}

1000a4a0 <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::StoppableClock>::enable::{{closure}}::h72f03b25de5ee004>:
1000a4a0: b580         	push	{r7, lr}
1000a4a2: af00         	add	r7, sp, #0x0
1000a4a4: b08a         	sub	sp, #0x28
1000a4a6: aa03         	add	r2, sp, #0xc
1000a4a8: 9201         	str	r2, [sp, #0x4]
1000a4aa: 460a         	mov	r2, r1
1000a4ac: 4601         	mov	r1, r0
1000a4ae: 9801         	ldr	r0, [sp, #0x4]
1000a4b0: 6001         	str	r1, [r0]
1000a4b2: 6042         	str	r2, [r0, #0x4]
1000a4b4: 6082         	str	r2, [r0, #0x8]
1000a4b6: 60c2         	str	r2, [r0, #0xc]
1000a4b8: ab07         	add	r3, sp, #0x1c
1000a4ba: 210b         	movs	r1, #0xb
1000a4bc: 7019         	strb	r1, [r3]
1000a4be: 6142         	str	r2, [r0, #0x14]
1000a4c0: aa08         	add	r2, sp, #0x20
1000a4c2: 7111         	strb	r1, [r2, #0x4]
1000a4c4: 6941         	ldr	r1, [r0, #0x14]
1000a4c6: 9100         	str	r1, [sp]
1000a4c8: 6981         	ldr	r1, [r0, #0x18]
1000a4ca: 2001         	movs	r0, #0x1
1000a4cc: f7fc fcc4    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x3678
1000a4d0: 4601         	mov	r1, r0
1000a4d2: 9800         	ldr	r0, [sp]
1000a4d4: f7fc fca0    	bl	0x10006e18 <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::hc18d656116c887ea> @ imm = #-0x36c0
1000a4d8: 9801         	ldr	r0, [sp, #0x4]
1000a4da: 6940         	ldr	r0, [r0, #0x14]
1000a4dc: b00a         	add	sp, #0x28
1000a4de: bd80         	pop	{r7, pc}

1000a4e0 <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::StoppableClock>::disable::h88dd0dfcb4751774>:
1000a4e0: b580         	push	{r7, lr}
1000a4e2: af00         	add	r7, sp, #0x0
1000a4e4: b08e         	sub	sp, #0x38
1000a4e6: 9003         	str	r0, [sp, #0xc]
1000a4e8: 1d00         	adds	r0, r0, #0x4
1000a4ea: f7fd f871    	bl	0x100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2> @ imm = #-0x2f1e
1000a4ee: 9004         	str	r0, [sp, #0x10]
1000a4f0: 3048         	adds	r0, #0x48
1000a4f2: 9002         	str	r0, [sp, #0x8]
1000a4f4: 9007         	str	r0, [sp, #0x1c]
1000a4f6: 9009         	str	r0, [sp, #0x24]
1000a4f8: 900a         	str	r0, [sp, #0x28]
1000a4fa: f001 fde4    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x1bc8
1000a4fe: 9000         	str	r0, [sp]
1000a500: 9008         	str	r0, [sp, #0x20]
1000a502: 9005         	str	r0, [sp, #0x14]
1000a504: 2000         	movs	r0, #0x0
1000a506: 9001         	str	r0, [sp, #0x4]
1000a508: f7fb feac    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x42a8
1000a50c: 4601         	mov	r1, r0
1000a50e: 9800         	ldr	r0, [sp]
1000a510: f7fb fec7    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x4272
1000a514: 9901         	ldr	r1, [sp, #0x4]
1000a516: f7fb febc    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x4288
1000a51a: 9006         	str	r0, [sp, #0x18]
1000a51c: a805         	add	r0, sp, #0x14
1000a51e: a906         	add	r1, sp, #0x18
1000a520: f000 f80a    	bl	0x1000a538 <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::StoppableClock>::disable::{{closure}}::ha2fea45ca50521d1> @ imm = #0x14
1000a524: 4601         	mov	r1, r0
1000a526: 9802         	ldr	r0, [sp, #0x8]
1000a528: 6809         	ldr	r1, [r1]
1000a52a: 900b         	str	r0, [sp, #0x2c]
1000a52c: 910c         	str	r1, [sp, #0x30]
1000a52e: 900d         	str	r0, [sp, #0x34]
1000a530: f001 fe34    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x1c68
1000a534: b00e         	add	sp, #0x38
1000a536: bd80         	pop	{r7, pc}

1000a538 <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::StoppableClock>::disable::{{closure}}::ha2fea45ca50521d1>:
1000a538: b580         	push	{r7, lr}
1000a53a: af00         	add	r7, sp, #0x0
1000a53c: b08a         	sub	sp, #0x28
1000a53e: aa03         	add	r2, sp, #0xc
1000a540: 9201         	str	r2, [sp, #0x4]
1000a542: 460a         	mov	r2, r1
1000a544: 4601         	mov	r1, r0
1000a546: 9801         	ldr	r0, [sp, #0x4]
1000a548: 6001         	str	r1, [r0]
1000a54a: 6042         	str	r2, [r0, #0x4]
1000a54c: 6082         	str	r2, [r0, #0x8]
1000a54e: 60c2         	str	r2, [r0, #0xc]
1000a550: ab07         	add	r3, sp, #0x1c
1000a552: 210b         	movs	r1, #0xb
1000a554: 7019         	strb	r1, [r3]
1000a556: 6142         	str	r2, [r0, #0x14]
1000a558: aa08         	add	r2, sp, #0x20
1000a55a: 7111         	strb	r1, [r2, #0x4]
1000a55c: 6941         	ldr	r1, [r0, #0x14]
1000a55e: 9100         	str	r1, [sp]
1000a560: 6981         	ldr	r1, [r0, #0x18]
1000a562: 2001         	movs	r0, #0x1
1000a564: f7fc fc78    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x3710
1000a568: f7fb fe7c    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x4308
1000a56c: 4601         	mov	r1, r0
1000a56e: 9800         	ldr	r0, [sp]
1000a570: f7fc fc5e    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x3744
1000a574: 9801         	ldr	r0, [sp, #0x4]
1000a576: 6940         	ldr	r0, [r0, #0x14]
1000a578: b00a         	add	sp, #0x28
1000a57a: bd80         	pop	{r7, pc}

1000a57c <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::Clock>::configure_clock::hf1be23259c04c0f3>:
1000a57c: b580         	push	{r7, lr}
1000a57e: af00         	add	r7, sp, #0x0
1000a580: b0a4         	sub	sp, #0x90
1000a582: 910b         	str	r1, [sp, #0x2c]
1000a584: 4601         	mov	r1, r0
1000a586: 980b         	ldr	r0, [sp, #0x2c]
1000a588: 910c         	str	r1, [sp, #0x30]
1000a58a: 920d         	str	r2, [sp, #0x34]
1000a58c: 911c         	str	r1, [sp, #0x70]
1000a58e: 901d         	str	r0, [sp, #0x74]
1000a590: 495d         	ldr	r1, [pc, #0x174]        @ 0x1000a708 <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::Clock>::configure_clock::hf1be23259c04c0f3+0x18c>
1000a592: 911e         	str	r1, [sp, #0x78]
1000a594: f7fd f807    	bl	0x100075a6 <rp2040_hal::clocks::clock_sources::<impl rp2040_hal::clocks::ClockSource for rp2040_hal::clocks::SystemClock>::get_freq::ha64ece02063e6906> @ imm = #-0x2ff2
1000a598: 495c         	ldr	r1, [pc, #0x170]        @ 0x1000a70c <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::Clock>::configure_clock::hf1be23259c04c0f3+0x190>
1000a59a: f7fc fc36    	bl	0x10006e0a <<T as core::convert::Into<U>>::into::hd9da2216767de703> @ imm = #-0x3794
1000a59e: 900f         	str	r0, [sp, #0x3c]
1000a5a0: a80d         	add	r0, sp, #0x34
1000a5a2: a90f         	add	r1, sp, #0x3c
1000a5a4: f7fb fe97    	bl	0x100062d6 <core::cmp::PartialOrd::gt::hda2a2854aba77a5e> @ imm = #-0x42d2
1000a5a8: 2800         	cmp	r0, #0x0
1000a5aa: d121         	bne	0x1000a5f0 <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::Clock>::configure_clock::hf1be23259c04c0f3+0x74> @ imm = #0x42
1000a5ac: e7ff         	b	0x1000a5ae <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::Clock>::configure_clock::hf1be23259c04c0f3+0x32> @ imm = #-0x2
1000a5ae: a80f         	add	r0, sp, #0x3c
1000a5b0: f7fc fcdc    	bl	0x10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868> @ imm = #-0x3648
1000a5b4: 9007         	str	r0, [sp, #0x1c]
1000a5b6: a80d         	add	r0, sp, #0x34
1000a5b8: f7fc fcd8    	bl	0x10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868> @ imm = #-0x3650
1000a5bc: 4601         	mov	r1, r0
1000a5be: 9807         	ldr	r0, [sp, #0x1c]
1000a5c0: f7fd f9d2    	bl	0x10007968 <rp2040_hal::clocks::fractional_div::hd140809978073745> @ imm = #-0x2c5c
1000a5c4: 9008         	str	r0, [sp, #0x20]
1000a5c6: 460a         	mov	r2, r1
1000a5c8: 9908         	ldr	r1, [sp, #0x20]
1000a5ca: ab15         	add	r3, sp, #0x54
1000a5cc: 2002         	movs	r0, #0x2
1000a5ce: 7018         	strb	r0, [r3]
1000a5d0: 9b15         	ldr	r3, [sp, #0x54]
1000a5d2: a813         	add	r0, sp, #0x4c
1000a5d4: 9009         	str	r0, [sp, #0x24]
1000a5d6: f7fc fadd    	bl	0x10006b94 <core::option::Option<T>::ok_or::h81824975fa84ee0f> @ imm = #-0x3a46
1000a5da: 9909         	ldr	r1, [sp, #0x24]
1000a5dc: a811         	add	r0, sp, #0x44
1000a5de: 900a         	str	r0, [sp, #0x28]
1000a5e0: f7fc fdff    	bl	0x100071e2 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h460b484606f6b3bdE> @ imm = #-0x3402
1000a5e4: 980a         	ldr	r0, [sp, #0x28]
1000a5e6: 7800         	ldrb	r0, [r0]
1000a5e8: 07c0         	lsls	r0, r0, #0x1f
1000a5ea: 2800         	cmp	r0, #0x0
1000a5ec: d007         	beq	0x1000a5fe <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::Clock>::configure_clock::hf1be23259c04c0f3+0x82> @ imm = #0xe
1000a5ee: e011         	b	0x1000a614 <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::Clock>::configure_clock::hf1be23259c04c0f3+0x98> @ imm = #0x22
1000a5f0: a910         	add	r1, sp, #0x40
1000a5f2: 2000         	movs	r0, #0x0
1000a5f4: 7008         	strb	r0, [r1]
1000a5f6: 9810         	ldr	r0, [sp, #0x40]
1000a5f8: a90e         	add	r1, sp, #0x38
1000a5fa: 7008         	strb	r0, [r1]
1000a5fc: e080         	b	0x1000a700 <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::Clock>::configure_clock::hf1be23259c04c0f3+0x184> @ imm = #0x100
1000a5fe: 980c         	ldr	r0, [sp, #0x30]
1000a600: 9912         	ldr	r1, [sp, #0x48]
1000a602: 9106         	str	r1, [sp, #0x18]
1000a604: 911f         	str	r1, [sp, #0x7c]
1000a606: f7ff fe88    	bl	0x1000a31a <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::ClockDivision>::get_div::h1dba861c29fcbc13> @ imm = #-0x2f0
1000a60a: 4601         	mov	r1, r0
1000a60c: 9806         	ldr	r0, [sp, #0x18]
1000a60e: 4288         	cmp	r0, r1
1000a610: d819         	bhi	0x1000a646 <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::Clock>::configure_clock::hf1be23259c04c0f3+0xca> @ imm = #0x32
1000a612: e009         	b	0x1000a628 <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::Clock>::configure_clock::hf1be23259c04c0f3+0xac> @ imm = #0x12
1000a614: a811         	add	r0, sp, #0x44
1000a616: 7840         	ldrb	r0, [r0, #0x1]
1000a618: a923         	add	r1, sp, #0x8c
1000a61a: 7008         	strb	r0, [r1]
1000a61c: 493b         	ldr	r1, [pc, #0xec]         @ 0x1000a70c <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::Clock>::configure_clock::hf1be23259c04c0f3+0x190>
1000a61e: f7fb fdc6    	bl	0x100061ae <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4d80d59e43eeb34cE> @ imm = #-0x4474
1000a622: a90e         	add	r1, sp, #0x38
1000a624: 7008         	strb	r0, [r1]
1000a626: e06b         	b	0x1000a700 <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::Clock>::configure_clock::hf1be23259c04c0f3+0x184> @ imm = #0xd6
1000a628: 980c         	ldr	r0, [sp, #0x30]
1000a62a: f7ff ff59    	bl	0x1000a4e0 <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::StoppableClock>::disable::h88dd0dfcb4751774> @ imm = #-0x14e
1000a62e: 2000         	movs	r0, #0x0
1000a630: f7fc fc6c    	bl	0x10006f0c <fugit::rate::Rate<u32,_,_>::Hz::hf33f06883bd1b051> @ imm = #-0x3728
1000a634: 4601         	mov	r1, r0
1000a636: 980c         	ldr	r0, [sp, #0x30]
1000a638: 9116         	str	r1, [sp, #0x58]
1000a63a: a916         	add	r1, sp, #0x58
1000a63c: f7fb fe4b    	bl	0x100062d6 <core::cmp::PartialOrd::gt::hda2a2854aba77a5e> @ imm = #-0x436a
1000a640: 2800         	cmp	r0, #0x0
1000a642: d12c         	bne	0x1000a69e <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::Clock>::configure_clock::hf1be23259c04c0f3+0x122> @ imm = #0x58
1000a644: e004         	b	0x1000a650 <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::Clock>::configure_clock::hf1be23259c04c0f3+0xd4> @ imm = #0x8
1000a646: 9906         	ldr	r1, [sp, #0x18]
1000a648: 980c         	ldr	r0, [sp, #0x30]
1000a64a: f7ff fe5f    	bl	0x1000a30c <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::ClockDivision>::set_div::h37685a45b8d1e223> @ imm = #-0x342
1000a64e: e7eb         	b	0x1000a628 <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::Clock>::configure_clock::hf1be23259c04c0f3+0xac> @ imm = #-0x2a
1000a650: 980c         	ldr	r0, [sp, #0x30]
1000a652: 990b         	ldr	r1, [sp, #0x2c]
1000a654: f7ff fe75    	bl	0x1000a342 <rp2040_hal::clocks::PeripheralClock::set_aux::hafa9144b18038b28> @ imm = #-0x316
1000a658: 980c         	ldr	r0, [sp, #0x30]
1000a65a: f7ff fef5    	bl	0x1000a448 <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::StoppableClock>::enable::hdc5daffd160e6924> @ imm = #-0x216
1000a65e: 980c         	ldr	r0, [sp, #0x30]
1000a660: 9906         	ldr	r1, [sp, #0x18]
1000a662: f7ff fe53    	bl	0x1000a30c <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::ClockDivision>::set_div::h37685a45b8d1e223> @ imm = #-0x35a
1000a666: a80f         	add	r0, sp, #0x3c
1000a668: f7fc fc80    	bl	0x10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868> @ imm = #-0x3700
1000a66c: 9906         	ldr	r1, [sp, #0x18]
1000a66e: f7fd f97b    	bl	0x10007968 <rp2040_hal::clocks::fractional_div::hd140809978073745> @ imm = #-0x2d0a
1000a672: 9003         	str	r0, [sp, #0xc]
1000a674: 460a         	mov	r2, r1
1000a676: 9903         	ldr	r1, [sp, #0xc]
1000a678: ab1b         	add	r3, sp, #0x6c
1000a67a: 2001         	movs	r0, #0x1
1000a67c: 7018         	strb	r0, [r3]
1000a67e: 9b1b         	ldr	r3, [sp, #0x6c]
1000a680: a819         	add	r0, sp, #0x64
1000a682: 9004         	str	r0, [sp, #0x10]
1000a684: f7fc fa86    	bl	0x10006b94 <core::option::Option<T>::ok_or::h81824975fa84ee0f> @ imm = #-0x3af4
1000a688: 9904         	ldr	r1, [sp, #0x10]
1000a68a: a817         	add	r0, sp, #0x5c
1000a68c: 9005         	str	r0, [sp, #0x14]
1000a68e: f7fc fda8    	bl	0x100071e2 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h460b484606f6b3bdE> @ imm = #-0x34b0
1000a692: 9805         	ldr	r0, [sp, #0x14]
1000a694: 7800         	ldrb	r0, [r0]
1000a696: 07c0         	lsls	r0, r0, #0x1f
1000a698: 2800         	cmp	r0, #0x0
1000a69a: d01d         	beq	0x1000a6d8 <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::Clock>::configure_clock::hf1be23259c04c0f3+0x15c> @ imm = #0x3a
1000a69c: e026         	b	0x1000a6ec <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::Clock>::configure_clock::hf1be23259c04c0f3+0x170> @ imm = #0x4c
1000a69e: 980c         	ldr	r0, [sp, #0x30]
1000a6a0: f7fc fc64    	bl	0x10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868> @ imm = #-0x3738
1000a6a4: 4601         	mov	r1, r0
1000a6a6: 9102         	str	r1, [sp, #0x8]
1000a6a8: 2800         	cmp	r0, #0x0
1000a6aa: d00a         	beq	0x1000a6c2 <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::Clock>::configure_clock::hf1be23259c04c0f3+0x146> @ imm = #0x14
1000a6ac: e7ff         	b	0x1000a6ae <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::Clock>::configure_clock::hf1be23259c04c0f3+0x132> @ imm = #-0x2
1000a6ae: 9902         	ldr	r1, [sp, #0x8]
1000a6b0: 4815         	ldr	r0, [pc, #0x54]         @ 0x1000a708 <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::Clock>::configure_clock::hf1be23259c04c0f3+0x18c>
1000a6b2: f003 f873    	bl	0x1000d79c <__aeabi_uidiv> @ imm = #0x30e6
1000a6b6: 1c40         	adds	r0, r0, #0x1
1000a6b8: 9001         	str	r0, [sp, #0x4]
1000a6ba: 2000         	movs	r0, #0x0
1000a6bc: 2800         	cmp	r0, #0x0
1000a6be: d108         	bne	0x1000a6d2 <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::Clock>::configure_clock::hf1be23259c04c0f3+0x156> @ imm = #0x10
1000a6c0: e002         	b	0x1000a6c8 <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::Clock>::configure_clock::hf1be23259c04c0f3+0x14c> @ imm = #0x4
1000a6c2: 4812         	ldr	r0, [pc, #0x48]         @ 0x1000a70c <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::Clock>::configure_clock::hf1be23259c04c0f3+0x190>
1000a6c4: f002 fefc    	bl	0x1000d4c0 <core::panicking::panic_const::panic_const_div_by_zero::ha09f740279da4cf0> @ imm = #0x2df8
1000a6c8: 9801         	ldr	r0, [sp, #0x4]
1000a6ca: 9020         	str	r0, [sp, #0x80]
1000a6cc: f7fc fede    	bl	0x1000748c <cortex_m::asm::delay::h59aaecaf49566739> @ imm = #-0x3244
1000a6d0: e7be         	b	0x1000a650 <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::Clock>::configure_clock::hf1be23259c04c0f3+0xd4> @ imm = #-0x84
1000a6d2: 480e         	ldr	r0, [pc, #0x38]         @ 0x1000a70c <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::Clock>::configure_clock::hf1be23259c04c0f3+0x190>
1000a6d4: f002 feac    	bl	0x1000d430 <core::panicking::panic_const::panic_const_add_overflow::h73b6e802431fc142> @ imm = #0x2d58
1000a6d8: 9818         	ldr	r0, [sp, #0x60]
1000a6da: 9021         	str	r0, [sp, #0x84]
1000a6dc: f7fb fdc9    	bl	0x10006272 <<u32 as fugit::rate::ExtU32>::Hz::ha421d0a6a3793ef2> @ imm = #-0x446e
1000a6e0: 990c         	ldr	r1, [sp, #0x30]
1000a6e2: 6008         	str	r0, [r1]
1000a6e4: a90e         	add	r1, sp, #0x38
1000a6e6: 2003         	movs	r0, #0x3
1000a6e8: 7008         	strb	r0, [r1]
1000a6ea: e009         	b	0x1000a700 <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::Clock>::configure_clock::hf1be23259c04c0f3+0x184> @ imm = #0x12
1000a6ec: a817         	add	r0, sp, #0x5c
1000a6ee: 7840         	ldrb	r0, [r0, #0x1]
1000a6f0: a922         	add	r1, sp, #0x88
1000a6f2: 7008         	strb	r0, [r1]
1000a6f4: 4905         	ldr	r1, [pc, #0x14]         @ 0x1000a70c <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::Clock>::configure_clock::hf1be23259c04c0f3+0x190>
1000a6f6: f7fb fd5a    	bl	0x100061ae <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4d80d59e43eeb34cE> @ imm = #-0x454c
1000a6fa: a90e         	add	r1, sp, #0x38
1000a6fc: 7008         	strb	r0, [r1]
1000a6fe: e7ff         	b	0x1000a700 <<rp2040_hal::clocks::PeripheralClock as rp2040_hal::clocks::Clock>::configure_clock::hf1be23259c04c0f3+0x184> @ imm = #-0x2
1000a700: 980e         	ldr	r0, [sp, #0x38]
1000a702: b024         	add	sp, #0x90
1000a704: bd80         	pop	{r7, pc}
1000a706: 46c0         	mov	r8, r8
1000a708: 40 59 73 07  	.word	0x07735940
1000a70c: 94 1f 01 10  	.word	0x10011f94

1000a710 <<rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locked,rp2040_pac::PLL_USB> as rp2040_hal::clocks::ValidSrc<rp2040_hal::clocks::UsbClock>>::variant::hce036066e1a733aa>:
1000a710: b580         	push	{r7, lr}
1000a712: af00         	add	r7, sp, #0x0
1000a714: b083         	sub	sp, #0xc
1000a716: 9002         	str	r0, [sp, #0x8]
1000a718: a901         	add	r1, sp, #0x4
1000a71a: 2000         	movs	r0, #0x0
1000a71c: 7008         	strb	r0, [r1]
1000a71e: 9801         	ldr	r0, [sp, #0x4]
1000a720: 4669         	mov	r1, sp
1000a722: 7008         	strb	r0, [r1]
1000a724: 9800         	ldr	r0, [sp]
1000a726: b003         	add	sp, #0xc
1000a728: bd80         	pop	{r7, pc}

1000a72a <rp2040_hal::clocks::UsbClock::set_aux::h4aac456c695e5c0f>:
1000a72a: b580         	push	{r7, lr}
1000a72c: af00         	add	r7, sp, #0x0
1000a72e: b092         	sub	sp, #0x48
1000a730: 9102         	str	r1, [sp, #0x8]
1000a732: 9004         	str	r0, [sp, #0x10]
1000a734: 9105         	str	r1, [sp, #0x14]
1000a736: 1d00         	adds	r0, r0, #0x4
1000a738: f7fc ff4a    	bl	0x100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2> @ imm = #-0x316c
1000a73c: 9902         	ldr	r1, [sp, #0x8]
1000a73e: 9006         	str	r0, [sp, #0x18]
1000a740: 9007         	str	r0, [sp, #0x1c]
1000a742: 3054         	adds	r0, #0x54
1000a744: 9003         	str	r0, [sp, #0xc]
1000a746: 900a         	str	r0, [sp, #0x28]
1000a748: 910b         	str	r1, [sp, #0x2c]
1000a74a: 900d         	str	r0, [sp, #0x34]
1000a74c: 900e         	str	r0, [sp, #0x38]
1000a74e: f001 fcba    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x1974
1000a752: 9000         	str	r0, [sp]
1000a754: 900c         	str	r0, [sp, #0x30]
1000a756: 9008         	str	r0, [sp, #0x20]
1000a758: 2000         	movs	r0, #0x0
1000a75a: 9001         	str	r0, [sp, #0x4]
1000a75c: f7fb fd82    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x44fc
1000a760: 4601         	mov	r1, r0
1000a762: 9800         	ldr	r0, [sp]
1000a764: f7fb fd9d    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x44c6
1000a768: 9901         	ldr	r1, [sp, #0x4]
1000a76a: f7fb fd92    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x44dc
1000a76e: 4601         	mov	r1, r0
1000a770: 9802         	ldr	r0, [sp, #0x8]
1000a772: 9109         	str	r1, [sp, #0x24]
1000a774: a908         	add	r1, sp, #0x20
1000a776: aa09         	add	r2, sp, #0x24
1000a778: f000 f80a    	bl	0x1000a790 <rp2040_hal::clocks::UsbClock::set_aux::{{closure}}::h63cc0e3f5270067e> @ imm = #0x14
1000a77c: 4601         	mov	r1, r0
1000a77e: 9803         	ldr	r0, [sp, #0xc]
1000a780: 6809         	ldr	r1, [r1]
1000a782: 900f         	str	r0, [sp, #0x3c]
1000a784: 9110         	str	r1, [sp, #0x40]
1000a786: 9011         	str	r0, [sp, #0x44]
1000a788: f001 fd08    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x1a10
1000a78c: b012         	add	sp, #0x48
1000a78e: bd80         	pop	{r7, pc}

1000a790 <rp2040_hal::clocks::UsbClock::set_aux::{{closure}}::h63cc0e3f5270067e>:
1000a790: b580         	push	{r7, lr}
1000a792: af00         	add	r7, sp, #0x0
1000a794: b094         	sub	sp, #0x50
1000a796: 9200         	str	r2, [sp]
1000a798: 9005         	str	r0, [sp, #0x14]
1000a79a: 9107         	str	r1, [sp, #0x1c]
1000a79c: 9208         	str	r2, [sp, #0x20]
1000a79e: 9209         	str	r2, [sp, #0x24]
1000a7a0: 920a         	str	r2, [sp, #0x28]
1000a7a2: a90b         	add	r1, sp, #0x2c
1000a7a4: 2005         	movs	r0, #0x5
1000a7a6: 9001         	str	r0, [sp, #0x4]
1000a7a8: 7008         	strb	r0, [r1]
1000a7aa: 9805         	ldr	r0, [sp, #0x14]
1000a7ac: f7ff ffb0    	bl	0x1000a710 <<rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locked,rp2040_pac::PLL_USB> as rp2040_hal::clocks::ValidSrc<rp2040_hal::clocks::UsbClock>>::variant::hce036066e1a733aa> @ imm = #-0xa0
1000a7b0: 4601         	mov	r1, r0
1000a7b2: a806         	add	r0, sp, #0x18
1000a7b4: 7001         	strb	r1, [r0]
1000a7b6: f000 f889    	bl	0x1000a8cc <rp2040_hal::clocks::ClkUsbSrcType::unwrap_aux::h35428313eb3c4689> @ imm = #0x112
1000a7ba: 9a00         	ldr	r2, [sp]
1000a7bc: 9901         	ldr	r1, [sp, #0x4]
1000a7be: 4603         	mov	r3, r0
1000a7c0: 920c         	str	r2, [sp, #0x30]
1000a7c2: a80c         	add	r0, sp, #0x30
1000a7c4: 7101         	strb	r1, [r0, #0x4]
1000a7c6: a80e         	add	r0, sp, #0x38
1000a7c8: 7003         	strb	r3, [r0]
1000a7ca: a80f         	add	r0, sp, #0x3c
1000a7cc: 7003         	strb	r3, [r0]
1000a7ce: 7800         	ldrb	r0, [r0]
1000a7d0: 9003         	str	r0, [sp, #0xc]
1000a7d2: 9210         	str	r2, [sp, #0x40]
1000a7d4: aa10         	add	r2, sp, #0x40
1000a7d6: 7111         	strb	r1, [r2, #0x4]
1000a7d8: a912         	add	r1, sp, #0x48
1000a7da: 7008         	strb	r0, [r1]
1000a7dc: 9810         	ldr	r0, [sp, #0x40]
1000a7de: 9002         	str	r0, [sp, #0x8]
1000a7e0: f7fb fc92    	bl	0x10006108 <rp2040_pac::generic::mask_u32::h42ec560ca9ea22d1> @ imm = #-0x46dc
1000a7e4: 9911         	ldr	r1, [sp, #0x44]
1000a7e6: f7fc fb37    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x3992
1000a7ea: f7fb fd3b    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x458a
1000a7ee: 4601         	mov	r1, r0
1000a7f0: 9802         	ldr	r0, [sp, #0x8]
1000a7f2: f7fc fb1d    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x39c6
1000a7f6: 9803         	ldr	r0, [sp, #0xc]
1000a7f8: 9910         	ldr	r1, [sp, #0x40]
1000a7fa: 9104         	str	r1, [sp, #0x10]
1000a7fc: a913         	add	r1, sp, #0x4c
1000a7fe: 7008         	strb	r0, [r1]
1000a800: f7fb fc82    	bl	0x10006108 <rp2040_pac::generic::mask_u32::h42ec560ca9ea22d1> @ imm = #-0x46fc
1000a804: 4601         	mov	r1, r0
1000a806: 9803         	ldr	r0, [sp, #0xc]
1000a808: f7fb fd4b    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x456a
1000a80c: 9911         	ldr	r1, [sp, #0x44]
1000a80e: f7fc fb23    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x39ba
1000a812: 4601         	mov	r1, r0
1000a814: 9804         	ldr	r0, [sp, #0x10]
1000a816: f7fc faff    	bl	0x10006e18 <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::hc18d656116c887ea> @ imm = #-0x3a02
1000a81a: 9810         	ldr	r0, [sp, #0x40]
1000a81c: b014         	add	sp, #0x50
1000a81e: bd80         	pop	{r7, pc}

1000a820 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::ClockDivision>::set_div::h1df8774304ef0812>:
1000a820: b580         	push	{r7, lr}
1000a822: af00         	add	r7, sp, #0x0
1000a824: b092         	sub	sp, #0x48
1000a826: 9105         	str	r1, [sp, #0x14]
1000a828: 9006         	str	r0, [sp, #0x18]
1000a82a: 1d00         	adds	r0, r0, #0x4
1000a82c: f7fc fed0    	bl	0x100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2> @ imm = #-0x3260
1000a830: 9007         	str	r0, [sp, #0x1c]
1000a832: 3058         	adds	r0, #0x58
1000a834: 9004         	str	r0, [sp, #0x10]
1000a836: 900a         	str	r0, [sp, #0x28]
1000a838: a905         	add	r1, sp, #0x14
1000a83a: 9103         	str	r1, [sp, #0xc]
1000a83c: 910b         	str	r1, [sp, #0x2c]
1000a83e: 900d         	str	r0, [sp, #0x34]
1000a840: 900e         	str	r0, [sp, #0x38]
1000a842: f001 fc40    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x1880
1000a846: 9001         	str	r0, [sp, #0x4]
1000a848: 900c         	str	r0, [sp, #0x30]
1000a84a: 9008         	str	r0, [sp, #0x20]
1000a84c: 2000         	movs	r0, #0x0
1000a84e: 9002         	str	r0, [sp, #0x8]
1000a850: f7fb fd08    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x45f0
1000a854: 4601         	mov	r1, r0
1000a856: 9801         	ldr	r0, [sp, #0x4]
1000a858: f7fb fd23    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x45ba
1000a85c: 9902         	ldr	r1, [sp, #0x8]
1000a85e: f7fb fd18    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x45d0
1000a862: 4601         	mov	r1, r0
1000a864: 9803         	ldr	r0, [sp, #0xc]
1000a866: 9109         	str	r1, [sp, #0x24]
1000a868: a908         	add	r1, sp, #0x20
1000a86a: aa09         	add	r2, sp, #0x24
1000a86c: f000 f80a    	bl	0x1000a884 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::ClockDivision>::set_div::{{closure}}::hdd6a09c12fc9e00b> @ imm = #0x14
1000a870: 4601         	mov	r1, r0
1000a872: 9804         	ldr	r0, [sp, #0x10]
1000a874: 6809         	ldr	r1, [r1]
1000a876: 900f         	str	r0, [sp, #0x3c]
1000a878: 9110         	str	r1, [sp, #0x40]
1000a87a: 9011         	str	r0, [sp, #0x44]
1000a87c: f001 fc8e    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x191c
1000a880: b012         	add	sp, #0x48
1000a882: bd80         	pop	{r7, pc}

1000a884 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::ClockDivision>::set_div::{{closure}}::hdd6a09c12fc9e00b>:
1000a884: b580         	push	{r7, lr}
1000a886: af00         	add	r7, sp, #0x0
1000a888: b086         	sub	sp, #0x18
1000a88a: 9200         	str	r2, [sp]
1000a88c: 4602         	mov	r2, r0
1000a88e: 9800         	ldr	r0, [sp]
1000a890: 9201         	str	r2, [sp, #0x4]
1000a892: 9102         	str	r1, [sp, #0x8]
1000a894: 9003         	str	r0, [sp, #0xc]
1000a896: 9901         	ldr	r1, [sp, #0x4]
1000a898: 6809         	ldr	r1, [r1]
1000a89a: 9004         	str	r0, [sp, #0x10]
1000a89c: 9105         	str	r1, [sp, #0x14]
1000a89e: 6001         	str	r1, [r0]
1000a8a0: b006         	add	sp, #0x18
1000a8a2: bd80         	pop	{r7, pc}

1000a8a4 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::ClockDivision>::get_div::h61610d6d7d6191ad>:
1000a8a4: b580         	push	{r7, lr}
1000a8a6: af00         	add	r7, sp, #0x0
1000a8a8: b088         	sub	sp, #0x20
1000a8aa: 9002         	str	r0, [sp, #0x8]
1000a8ac: 1d00         	adds	r0, r0, #0x4
1000a8ae: f7fc fe8f    	bl	0x100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2> @ imm = #-0x32e2
1000a8b2: 9003         	str	r0, [sp, #0xc]
1000a8b4: 3058         	adds	r0, #0x58
1000a8b6: 9004         	str	r0, [sp, #0x10]
1000a8b8: 9006         	str	r0, [sp, #0x18]
1000a8ba: 9007         	str	r0, [sp, #0x1c]
1000a8bc: f001 fc03    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x1806
1000a8c0: 9001         	str	r0, [sp, #0x4]
1000a8c2: a801         	add	r0, sp, #0x4
1000a8c4: 9005         	str	r0, [sp, #0x14]
1000a8c6: 9801         	ldr	r0, [sp, #0x4]
1000a8c8: b008         	add	sp, #0x20
1000a8ca: bd80         	pop	{r7, pc}

1000a8cc <rp2040_hal::clocks::ClkUsbSrcType::unwrap_aux::h35428313eb3c4689>:
1000a8cc: b580         	push	{r7, lr}
1000a8ce: af00         	add	r7, sp, #0x0
1000a8d0: b082         	sub	sp, #0x8
1000a8d2: 9000         	str	r0, [sp]
1000a8d4: 9001         	str	r0, [sp, #0x4]
1000a8d6: 7800         	ldrb	r0, [r0]
1000a8d8: b002         	add	sp, #0x8
1000a8da: bd80         	pop	{r7, pc}

1000a8dc <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::StoppableClock>::enable::h67e3758c6a4b1d9b>:
1000a8dc: b580         	push	{r7, lr}
1000a8de: af00         	add	r7, sp, #0x0
1000a8e0: b08e         	sub	sp, #0x38
1000a8e2: 9003         	str	r0, [sp, #0xc]
1000a8e4: 1d00         	adds	r0, r0, #0x4
1000a8e6: f7fc fe73    	bl	0x100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2> @ imm = #-0x331a
1000a8ea: 9004         	str	r0, [sp, #0x10]
1000a8ec: 3054         	adds	r0, #0x54
1000a8ee: 9002         	str	r0, [sp, #0x8]
1000a8f0: 9007         	str	r0, [sp, #0x1c]
1000a8f2: 9009         	str	r0, [sp, #0x24]
1000a8f4: 900a         	str	r0, [sp, #0x28]
1000a8f6: f001 fbe6    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x17cc
1000a8fa: 9000         	str	r0, [sp]
1000a8fc: 9008         	str	r0, [sp, #0x20]
1000a8fe: 9005         	str	r0, [sp, #0x14]
1000a900: 2000         	movs	r0, #0x0
1000a902: 9001         	str	r0, [sp, #0x4]
1000a904: f7fb fcae    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x46a4
1000a908: 4601         	mov	r1, r0
1000a90a: 9800         	ldr	r0, [sp]
1000a90c: f7fb fcc9    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x466e
1000a910: 9901         	ldr	r1, [sp, #0x4]
1000a912: f7fb fcbe    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x4684
1000a916: 9006         	str	r0, [sp, #0x18]
1000a918: a805         	add	r0, sp, #0x14
1000a91a: a906         	add	r1, sp, #0x18
1000a91c: f000 f80a    	bl	0x1000a934 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::StoppableClock>::enable::{{closure}}::hde0aa172b4b517bb> @ imm = #0x14
1000a920: 4601         	mov	r1, r0
1000a922: 9802         	ldr	r0, [sp, #0x8]
1000a924: 6809         	ldr	r1, [r1]
1000a926: 900b         	str	r0, [sp, #0x2c]
1000a928: 910c         	str	r1, [sp, #0x30]
1000a92a: 900d         	str	r0, [sp, #0x34]
1000a92c: f001 fc36    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x186c
1000a930: b00e         	add	sp, #0x38
1000a932: bd80         	pop	{r7, pc}

1000a934 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::StoppableClock>::enable::{{closure}}::hde0aa172b4b517bb>:
1000a934: b580         	push	{r7, lr}
1000a936: af00         	add	r7, sp, #0x0
1000a938: b08a         	sub	sp, #0x28
1000a93a: aa03         	add	r2, sp, #0xc
1000a93c: 9201         	str	r2, [sp, #0x4]
1000a93e: 460a         	mov	r2, r1
1000a940: 4601         	mov	r1, r0
1000a942: 9801         	ldr	r0, [sp, #0x4]
1000a944: 6001         	str	r1, [r0]
1000a946: 6042         	str	r2, [r0, #0x4]
1000a948: 6082         	str	r2, [r0, #0x8]
1000a94a: 60c2         	str	r2, [r0, #0xc]
1000a94c: ab07         	add	r3, sp, #0x1c
1000a94e: 210b         	movs	r1, #0xb
1000a950: 7019         	strb	r1, [r3]
1000a952: 6142         	str	r2, [r0, #0x14]
1000a954: aa08         	add	r2, sp, #0x20
1000a956: 7111         	strb	r1, [r2, #0x4]
1000a958: 6941         	ldr	r1, [r0, #0x14]
1000a95a: 9100         	str	r1, [sp]
1000a95c: 6981         	ldr	r1, [r0, #0x18]
1000a95e: 2001         	movs	r0, #0x1
1000a960: f7fc fa7a    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x3b0c
1000a964: 4601         	mov	r1, r0
1000a966: 9800         	ldr	r0, [sp]
1000a968: f7fc fa56    	bl	0x10006e18 <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::hc18d656116c887ea> @ imm = #-0x3b54
1000a96c: 9801         	ldr	r0, [sp, #0x4]
1000a96e: 6940         	ldr	r0, [r0, #0x14]
1000a970: b00a         	add	sp, #0x28
1000a972: bd80         	pop	{r7, pc}

1000a974 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::StoppableClock>::disable::h4b96c32870d427f1>:
1000a974: b580         	push	{r7, lr}
1000a976: af00         	add	r7, sp, #0x0
1000a978: b08e         	sub	sp, #0x38
1000a97a: 9003         	str	r0, [sp, #0xc]
1000a97c: 1d00         	adds	r0, r0, #0x4
1000a97e: f7fc fe27    	bl	0x100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2> @ imm = #-0x33b2
1000a982: 9004         	str	r0, [sp, #0x10]
1000a984: 3054         	adds	r0, #0x54
1000a986: 9002         	str	r0, [sp, #0x8]
1000a988: 9007         	str	r0, [sp, #0x1c]
1000a98a: 9009         	str	r0, [sp, #0x24]
1000a98c: 900a         	str	r0, [sp, #0x28]
1000a98e: f001 fb9a    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x1734
1000a992: 9000         	str	r0, [sp]
1000a994: 9008         	str	r0, [sp, #0x20]
1000a996: 9005         	str	r0, [sp, #0x14]
1000a998: 2000         	movs	r0, #0x0
1000a99a: 9001         	str	r0, [sp, #0x4]
1000a99c: f7fb fc62    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x473c
1000a9a0: 4601         	mov	r1, r0
1000a9a2: 9800         	ldr	r0, [sp]
1000a9a4: f7fb fc7d    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x4706
1000a9a8: 9901         	ldr	r1, [sp, #0x4]
1000a9aa: f7fb fc72    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x471c
1000a9ae: 9006         	str	r0, [sp, #0x18]
1000a9b0: a805         	add	r0, sp, #0x14
1000a9b2: a906         	add	r1, sp, #0x18
1000a9b4: f000 f80a    	bl	0x1000a9cc <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::StoppableClock>::disable::{{closure}}::h03e9a6bde779d4fc> @ imm = #0x14
1000a9b8: 4601         	mov	r1, r0
1000a9ba: 9802         	ldr	r0, [sp, #0x8]
1000a9bc: 6809         	ldr	r1, [r1]
1000a9be: 900b         	str	r0, [sp, #0x2c]
1000a9c0: 910c         	str	r1, [sp, #0x30]
1000a9c2: 900d         	str	r0, [sp, #0x34]
1000a9c4: f001 fbea    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x17d4
1000a9c8: b00e         	add	sp, #0x38
1000a9ca: bd80         	pop	{r7, pc}

1000a9cc <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::StoppableClock>::disable::{{closure}}::h03e9a6bde779d4fc>:
1000a9cc: b580         	push	{r7, lr}
1000a9ce: af00         	add	r7, sp, #0x0
1000a9d0: b08a         	sub	sp, #0x28
1000a9d2: aa03         	add	r2, sp, #0xc
1000a9d4: 9201         	str	r2, [sp, #0x4]
1000a9d6: 460a         	mov	r2, r1
1000a9d8: 4601         	mov	r1, r0
1000a9da: 9801         	ldr	r0, [sp, #0x4]
1000a9dc: 6001         	str	r1, [r0]
1000a9de: 6042         	str	r2, [r0, #0x4]
1000a9e0: 6082         	str	r2, [r0, #0x8]
1000a9e2: 60c2         	str	r2, [r0, #0xc]
1000a9e4: ab07         	add	r3, sp, #0x1c
1000a9e6: 210b         	movs	r1, #0xb
1000a9e8: 7019         	strb	r1, [r3]
1000a9ea: 6142         	str	r2, [r0, #0x14]
1000a9ec: aa08         	add	r2, sp, #0x20
1000a9ee: 7111         	strb	r1, [r2, #0x4]
1000a9f0: 6941         	ldr	r1, [r0, #0x14]
1000a9f2: 9100         	str	r1, [sp]
1000a9f4: 6981         	ldr	r1, [r0, #0x18]
1000a9f6: 2001         	movs	r0, #0x1
1000a9f8: f7fc fa2e    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x3ba4
1000a9fc: f7fb fc32    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x479c
1000aa00: 4601         	mov	r1, r0
1000aa02: 9800         	ldr	r0, [sp]
1000aa04: f7fc fa14    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x3bd8
1000aa08: 9801         	ldr	r0, [sp, #0x4]
1000aa0a: 6940         	ldr	r0, [r0, #0x14]
1000aa0c: b00a         	add	sp, #0x28
1000aa0e: bd80         	pop	{r7, pc}

1000aa10 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::Clock>::configure_clock::h0631b64c497acbbf>:
1000aa10: b580         	push	{r7, lr}
1000aa12: af00         	add	r7, sp, #0x0
1000aa14: b0a4         	sub	sp, #0x90
1000aa16: 910b         	str	r1, [sp, #0x2c]
1000aa18: 4601         	mov	r1, r0
1000aa1a: 980b         	ldr	r0, [sp, #0x2c]
1000aa1c: 910c         	str	r1, [sp, #0x30]
1000aa1e: 920d         	str	r2, [sp, #0x34]
1000aa20: 911c         	str	r1, [sp, #0x70]
1000aa22: 901d         	str	r0, [sp, #0x74]
1000aa24: 495d         	ldr	r1, [pc, #0x174]        @ 0x1000ab9c <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::Clock>::configure_clock::h0631b64c497acbbf+0x18c>
1000aa26: 911e         	str	r1, [sp, #0x78]
1000aa28: f7fc fdb5    	bl	0x10007596 <rp2040_hal::clocks::clock_sources::<impl rp2040_hal::clocks::ClockSource for rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locked,rp2040_pac::PLL_USB>>::get_freq::he7a0e396da435ca1> @ imm = #-0x3496
1000aa2c: 495c         	ldr	r1, [pc, #0x170]        @ 0x1000aba0 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::Clock>::configure_clock::h0631b64c497acbbf+0x190>
1000aa2e: f7fc f9ec    	bl	0x10006e0a <<T as core::convert::Into<U>>::into::hd9da2216767de703> @ imm = #-0x3c28
1000aa32: 900f         	str	r0, [sp, #0x3c]
1000aa34: a80d         	add	r0, sp, #0x34
1000aa36: a90f         	add	r1, sp, #0x3c
1000aa38: f7fb fc4d    	bl	0x100062d6 <core::cmp::PartialOrd::gt::hda2a2854aba77a5e> @ imm = #-0x4766
1000aa3c: 2800         	cmp	r0, #0x0
1000aa3e: d121         	bne	0x1000aa84 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::Clock>::configure_clock::h0631b64c497acbbf+0x74> @ imm = #0x42
1000aa40: e7ff         	b	0x1000aa42 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::Clock>::configure_clock::h0631b64c497acbbf+0x32> @ imm = #-0x2
1000aa42: a80f         	add	r0, sp, #0x3c
1000aa44: f7fc fa92    	bl	0x10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868> @ imm = #-0x3adc
1000aa48: 9007         	str	r0, [sp, #0x1c]
1000aa4a: a80d         	add	r0, sp, #0x34
1000aa4c: f7fc fa8e    	bl	0x10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868> @ imm = #-0x3ae4
1000aa50: 4601         	mov	r1, r0
1000aa52: 9807         	ldr	r0, [sp, #0x1c]
1000aa54: f7fc ff88    	bl	0x10007968 <rp2040_hal::clocks::fractional_div::hd140809978073745> @ imm = #-0x30f0
1000aa58: 9008         	str	r0, [sp, #0x20]
1000aa5a: 460a         	mov	r2, r1
1000aa5c: 9908         	ldr	r1, [sp, #0x20]
1000aa5e: ab15         	add	r3, sp, #0x54
1000aa60: 2002         	movs	r0, #0x2
1000aa62: 7018         	strb	r0, [r3]
1000aa64: 9b15         	ldr	r3, [sp, #0x54]
1000aa66: a813         	add	r0, sp, #0x4c
1000aa68: 9009         	str	r0, [sp, #0x24]
1000aa6a: f7fc f893    	bl	0x10006b94 <core::option::Option<T>::ok_or::h81824975fa84ee0f> @ imm = #-0x3eda
1000aa6e: 9909         	ldr	r1, [sp, #0x24]
1000aa70: a811         	add	r0, sp, #0x44
1000aa72: 900a         	str	r0, [sp, #0x28]
1000aa74: f7fc fbb5    	bl	0x100071e2 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h460b484606f6b3bdE> @ imm = #-0x3896
1000aa78: 980a         	ldr	r0, [sp, #0x28]
1000aa7a: 7800         	ldrb	r0, [r0]
1000aa7c: 07c0         	lsls	r0, r0, #0x1f
1000aa7e: 2800         	cmp	r0, #0x0
1000aa80: d007         	beq	0x1000aa92 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::Clock>::configure_clock::h0631b64c497acbbf+0x82> @ imm = #0xe
1000aa82: e011         	b	0x1000aaa8 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::Clock>::configure_clock::h0631b64c497acbbf+0x98> @ imm = #0x22
1000aa84: a910         	add	r1, sp, #0x40
1000aa86: 2000         	movs	r0, #0x0
1000aa88: 7008         	strb	r0, [r1]
1000aa8a: 9810         	ldr	r0, [sp, #0x40]
1000aa8c: a90e         	add	r1, sp, #0x38
1000aa8e: 7008         	strb	r0, [r1]
1000aa90: e080         	b	0x1000ab94 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::Clock>::configure_clock::h0631b64c497acbbf+0x184> @ imm = #0x100
1000aa92: 980c         	ldr	r0, [sp, #0x30]
1000aa94: 9912         	ldr	r1, [sp, #0x48]
1000aa96: 9106         	str	r1, [sp, #0x18]
1000aa98: 911f         	str	r1, [sp, #0x7c]
1000aa9a: f7ff ff03    	bl	0x1000a8a4 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::ClockDivision>::get_div::h61610d6d7d6191ad> @ imm = #-0x1fa
1000aa9e: 4601         	mov	r1, r0
1000aaa0: 9806         	ldr	r0, [sp, #0x18]
1000aaa2: 4288         	cmp	r0, r1
1000aaa4: d819         	bhi	0x1000aada <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::Clock>::configure_clock::h0631b64c497acbbf+0xca> @ imm = #0x32
1000aaa6: e009         	b	0x1000aabc <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::Clock>::configure_clock::h0631b64c497acbbf+0xac> @ imm = #0x12
1000aaa8: a811         	add	r0, sp, #0x44
1000aaaa: 7840         	ldrb	r0, [r0, #0x1]
1000aaac: a923         	add	r1, sp, #0x8c
1000aaae: 7008         	strb	r0, [r1]
1000aab0: 493b         	ldr	r1, [pc, #0xec]         @ 0x1000aba0 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::Clock>::configure_clock::h0631b64c497acbbf+0x190>
1000aab2: f7fb fb7c    	bl	0x100061ae <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4d80d59e43eeb34cE> @ imm = #-0x4908
1000aab6: a90e         	add	r1, sp, #0x38
1000aab8: 7008         	strb	r0, [r1]
1000aaba: e06b         	b	0x1000ab94 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::Clock>::configure_clock::h0631b64c497acbbf+0x184> @ imm = #0xd6
1000aabc: 980c         	ldr	r0, [sp, #0x30]
1000aabe: f7ff ff59    	bl	0x1000a974 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::StoppableClock>::disable::h4b96c32870d427f1> @ imm = #-0x14e
1000aac2: 2000         	movs	r0, #0x0
1000aac4: f7fc fa22    	bl	0x10006f0c <fugit::rate::Rate<u32,_,_>::Hz::hf33f06883bd1b051> @ imm = #-0x3bbc
1000aac8: 4601         	mov	r1, r0
1000aaca: 980c         	ldr	r0, [sp, #0x30]
1000aacc: 9116         	str	r1, [sp, #0x58]
1000aace: a916         	add	r1, sp, #0x58
1000aad0: f7fb fc01    	bl	0x100062d6 <core::cmp::PartialOrd::gt::hda2a2854aba77a5e> @ imm = #-0x47fe
1000aad4: 2800         	cmp	r0, #0x0
1000aad6: d12c         	bne	0x1000ab32 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::Clock>::configure_clock::h0631b64c497acbbf+0x122> @ imm = #0x58
1000aad8: e004         	b	0x1000aae4 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::Clock>::configure_clock::h0631b64c497acbbf+0xd4> @ imm = #0x8
1000aada: 9906         	ldr	r1, [sp, #0x18]
1000aadc: 980c         	ldr	r0, [sp, #0x30]
1000aade: f7ff fe9f    	bl	0x1000a820 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::ClockDivision>::set_div::h1df8774304ef0812> @ imm = #-0x2c2
1000aae2: e7eb         	b	0x1000aabc <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::Clock>::configure_clock::h0631b64c497acbbf+0xac> @ imm = #-0x2a
1000aae4: 980c         	ldr	r0, [sp, #0x30]
1000aae6: 990b         	ldr	r1, [sp, #0x2c]
1000aae8: f7ff fe1f    	bl	0x1000a72a <rp2040_hal::clocks::UsbClock::set_aux::h4aac456c695e5c0f> @ imm = #-0x3c2
1000aaec: 980c         	ldr	r0, [sp, #0x30]
1000aaee: f7ff fef5    	bl	0x1000a8dc <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::StoppableClock>::enable::h67e3758c6a4b1d9b> @ imm = #-0x216
1000aaf2: 980c         	ldr	r0, [sp, #0x30]
1000aaf4: 9906         	ldr	r1, [sp, #0x18]
1000aaf6: f7ff fe93    	bl	0x1000a820 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::ClockDivision>::set_div::h1df8774304ef0812> @ imm = #-0x2da
1000aafa: a80f         	add	r0, sp, #0x3c
1000aafc: f7fc fa36    	bl	0x10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868> @ imm = #-0x3b94
1000ab00: 9906         	ldr	r1, [sp, #0x18]
1000ab02: f7fc ff31    	bl	0x10007968 <rp2040_hal::clocks::fractional_div::hd140809978073745> @ imm = #-0x319e
1000ab06: 9003         	str	r0, [sp, #0xc]
1000ab08: 460a         	mov	r2, r1
1000ab0a: 9903         	ldr	r1, [sp, #0xc]
1000ab0c: ab1b         	add	r3, sp, #0x6c
1000ab0e: 2001         	movs	r0, #0x1
1000ab10: 7018         	strb	r0, [r3]
1000ab12: 9b1b         	ldr	r3, [sp, #0x6c]
1000ab14: a819         	add	r0, sp, #0x64
1000ab16: 9004         	str	r0, [sp, #0x10]
1000ab18: f7fc f83c    	bl	0x10006b94 <core::option::Option<T>::ok_or::h81824975fa84ee0f> @ imm = #-0x3f88
1000ab1c: 9904         	ldr	r1, [sp, #0x10]
1000ab1e: a817         	add	r0, sp, #0x5c
1000ab20: 9005         	str	r0, [sp, #0x14]
1000ab22: f7fc fb5e    	bl	0x100071e2 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h460b484606f6b3bdE> @ imm = #-0x3944
1000ab26: 9805         	ldr	r0, [sp, #0x14]
1000ab28: 7800         	ldrb	r0, [r0]
1000ab2a: 07c0         	lsls	r0, r0, #0x1f
1000ab2c: 2800         	cmp	r0, #0x0
1000ab2e: d01d         	beq	0x1000ab6c <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::Clock>::configure_clock::h0631b64c497acbbf+0x15c> @ imm = #0x3a
1000ab30: e026         	b	0x1000ab80 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::Clock>::configure_clock::h0631b64c497acbbf+0x170> @ imm = #0x4c
1000ab32: 980c         	ldr	r0, [sp, #0x30]
1000ab34: f7fc fa1a    	bl	0x10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868> @ imm = #-0x3bcc
1000ab38: 4601         	mov	r1, r0
1000ab3a: 9102         	str	r1, [sp, #0x8]
1000ab3c: 2800         	cmp	r0, #0x0
1000ab3e: d00a         	beq	0x1000ab56 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::Clock>::configure_clock::h0631b64c497acbbf+0x146> @ imm = #0x14
1000ab40: e7ff         	b	0x1000ab42 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::Clock>::configure_clock::h0631b64c497acbbf+0x132> @ imm = #-0x2
1000ab42: 9902         	ldr	r1, [sp, #0x8]
1000ab44: 4815         	ldr	r0, [pc, #0x54]         @ 0x1000ab9c <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::Clock>::configure_clock::h0631b64c497acbbf+0x18c>
1000ab46: f002 fe29    	bl	0x1000d79c <__aeabi_uidiv> @ imm = #0x2c52
1000ab4a: 1c40         	adds	r0, r0, #0x1
1000ab4c: 9001         	str	r0, [sp, #0x4]
1000ab4e: 2000         	movs	r0, #0x0
1000ab50: 2800         	cmp	r0, #0x0
1000ab52: d108         	bne	0x1000ab66 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::Clock>::configure_clock::h0631b64c497acbbf+0x156> @ imm = #0x10
1000ab54: e002         	b	0x1000ab5c <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::Clock>::configure_clock::h0631b64c497acbbf+0x14c> @ imm = #0x4
1000ab56: 4812         	ldr	r0, [pc, #0x48]         @ 0x1000aba0 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::Clock>::configure_clock::h0631b64c497acbbf+0x190>
1000ab58: f002 fcb2    	bl	0x1000d4c0 <core::panicking::panic_const::panic_const_div_by_zero::ha09f740279da4cf0> @ imm = #0x2964
1000ab5c: 9801         	ldr	r0, [sp, #0x4]
1000ab5e: 9020         	str	r0, [sp, #0x80]
1000ab60: f7fc fc94    	bl	0x1000748c <cortex_m::asm::delay::h59aaecaf49566739> @ imm = #-0x36d8
1000ab64: e7be         	b	0x1000aae4 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::Clock>::configure_clock::h0631b64c497acbbf+0xd4> @ imm = #-0x84
1000ab66: 480e         	ldr	r0, [pc, #0x38]         @ 0x1000aba0 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::Clock>::configure_clock::h0631b64c497acbbf+0x190>
1000ab68: f002 fc62    	bl	0x1000d430 <core::panicking::panic_const::panic_const_add_overflow::h73b6e802431fc142> @ imm = #0x28c4
1000ab6c: 9818         	ldr	r0, [sp, #0x60]
1000ab6e: 9021         	str	r0, [sp, #0x84]
1000ab70: f7fb fb7f    	bl	0x10006272 <<u32 as fugit::rate::ExtU32>::Hz::ha421d0a6a3793ef2> @ imm = #-0x4902
1000ab74: 990c         	ldr	r1, [sp, #0x30]
1000ab76: 6008         	str	r0, [r1]
1000ab78: a90e         	add	r1, sp, #0x38
1000ab7a: 2003         	movs	r0, #0x3
1000ab7c: 7008         	strb	r0, [r1]
1000ab7e: e009         	b	0x1000ab94 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::Clock>::configure_clock::h0631b64c497acbbf+0x184> @ imm = #0x12
1000ab80: a817         	add	r0, sp, #0x5c
1000ab82: 7840         	ldrb	r0, [r0, #0x1]
1000ab84: a922         	add	r1, sp, #0x88
1000ab86: 7008         	strb	r0, [r1]
1000ab88: 4905         	ldr	r1, [pc, #0x14]         @ 0x1000aba0 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::Clock>::configure_clock::h0631b64c497acbbf+0x190>
1000ab8a: f7fb fb10    	bl	0x100061ae <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4d80d59e43eeb34cE> @ imm = #-0x49e0
1000ab8e: a90e         	add	r1, sp, #0x38
1000ab90: 7008         	strb	r0, [r1]
1000ab92: e7ff         	b	0x1000ab94 <<rp2040_hal::clocks::UsbClock as rp2040_hal::clocks::Clock>::configure_clock::h0631b64c497acbbf+0x184> @ imm = #-0x2
1000ab94: 980e         	ldr	r0, [sp, #0x38]
1000ab96: b024         	add	sp, #0x90
1000ab98: bd80         	pop	{r7, pc}
1000ab9a: 46c0         	mov	r8, r8
1000ab9c: 40 59 73 07  	.word	0x07735940
1000aba0: 94 1f 01 10  	.word	0x10011f94

1000aba4 <<rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locked,rp2040_pac::PLL_USB> as rp2040_hal::clocks::ValidSrc<rp2040_hal::clocks::AdcClock>>::variant::h32bf5f543f050d34>:
1000aba4: b580         	push	{r7, lr}
1000aba6: af00         	add	r7, sp, #0x0
1000aba8: b083         	sub	sp, #0xc
1000abaa: 9002         	str	r0, [sp, #0x8]
1000abac: a901         	add	r1, sp, #0x4
1000abae: 2000         	movs	r0, #0x0
1000abb0: 7008         	strb	r0, [r1]
1000abb2: 9801         	ldr	r0, [sp, #0x4]
1000abb4: 4669         	mov	r1, sp
1000abb6: 7008         	strb	r0, [r1]
1000abb8: 9800         	ldr	r0, [sp]
1000abba: b003         	add	sp, #0xc
1000abbc: bd80         	pop	{r7, pc}

1000abbe <rp2040_hal::clocks::AdcClock::set_aux::h3d327221df055b73>:
1000abbe: b580         	push	{r7, lr}
1000abc0: af00         	add	r7, sp, #0x0
1000abc2: b092         	sub	sp, #0x48
1000abc4: 9102         	str	r1, [sp, #0x8]
1000abc6: 9004         	str	r0, [sp, #0x10]
1000abc8: 9105         	str	r1, [sp, #0x14]
1000abca: 1d00         	adds	r0, r0, #0x4
1000abcc: f7fc fd00    	bl	0x100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2> @ imm = #-0x3600
1000abd0: 9902         	ldr	r1, [sp, #0x8]
1000abd2: 9006         	str	r0, [sp, #0x18]
1000abd4: 9007         	str	r0, [sp, #0x1c]
1000abd6: 3060         	adds	r0, #0x60
1000abd8: 9003         	str	r0, [sp, #0xc]
1000abda: 900a         	str	r0, [sp, #0x28]
1000abdc: 910b         	str	r1, [sp, #0x2c]
1000abde: 900d         	str	r0, [sp, #0x34]
1000abe0: 900e         	str	r0, [sp, #0x38]
1000abe2: f001 fa70    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x14e0
1000abe6: 9000         	str	r0, [sp]
1000abe8: 900c         	str	r0, [sp, #0x30]
1000abea: 9008         	str	r0, [sp, #0x20]
1000abec: 2000         	movs	r0, #0x0
1000abee: 9001         	str	r0, [sp, #0x4]
1000abf0: f7fb fb38    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x4990
1000abf4: 4601         	mov	r1, r0
1000abf6: 9800         	ldr	r0, [sp]
1000abf8: f7fb fb53    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x495a
1000abfc: 9901         	ldr	r1, [sp, #0x4]
1000abfe: f7fb fb48    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x4970
1000ac02: 4601         	mov	r1, r0
1000ac04: 9802         	ldr	r0, [sp, #0x8]
1000ac06: 9109         	str	r1, [sp, #0x24]
1000ac08: a908         	add	r1, sp, #0x20
1000ac0a: aa09         	add	r2, sp, #0x24
1000ac0c: f000 f80a    	bl	0x1000ac24 <rp2040_hal::clocks::AdcClock::set_aux::{{closure}}::h2e8880405f740abd> @ imm = #0x14
1000ac10: 4601         	mov	r1, r0
1000ac12: 9803         	ldr	r0, [sp, #0xc]
1000ac14: 6809         	ldr	r1, [r1]
1000ac16: 900f         	str	r0, [sp, #0x3c]
1000ac18: 9110         	str	r1, [sp, #0x40]
1000ac1a: 9011         	str	r0, [sp, #0x44]
1000ac1c: f001 fabe    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x157c
1000ac20: b012         	add	sp, #0x48
1000ac22: bd80         	pop	{r7, pc}

1000ac24 <rp2040_hal::clocks::AdcClock::set_aux::{{closure}}::h2e8880405f740abd>:
1000ac24: b580         	push	{r7, lr}
1000ac26: af00         	add	r7, sp, #0x0
1000ac28: b094         	sub	sp, #0x50
1000ac2a: 9200         	str	r2, [sp]
1000ac2c: 9005         	str	r0, [sp, #0x14]
1000ac2e: 9107         	str	r1, [sp, #0x1c]
1000ac30: 9208         	str	r2, [sp, #0x20]
1000ac32: 9209         	str	r2, [sp, #0x24]
1000ac34: 920a         	str	r2, [sp, #0x28]
1000ac36: a90b         	add	r1, sp, #0x2c
1000ac38: 2005         	movs	r0, #0x5
1000ac3a: 9001         	str	r0, [sp, #0x4]
1000ac3c: 7008         	strb	r0, [r1]
1000ac3e: 9805         	ldr	r0, [sp, #0x14]
1000ac40: f7ff ffb0    	bl	0x1000aba4 <<rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locked,rp2040_pac::PLL_USB> as rp2040_hal::clocks::ValidSrc<rp2040_hal::clocks::AdcClock>>::variant::h32bf5f543f050d34> @ imm = #-0xa0
1000ac44: 4601         	mov	r1, r0
1000ac46: a806         	add	r0, sp, #0x18
1000ac48: 7001         	strb	r1, [r0]
1000ac4a: f000 f889    	bl	0x1000ad60 <rp2040_hal::clocks::ClkAdcSrcType::unwrap_aux::hc93567faf03e8d55> @ imm = #0x112
1000ac4e: 9a00         	ldr	r2, [sp]
1000ac50: 9901         	ldr	r1, [sp, #0x4]
1000ac52: 4603         	mov	r3, r0
1000ac54: 920c         	str	r2, [sp, #0x30]
1000ac56: a80c         	add	r0, sp, #0x30
1000ac58: 7101         	strb	r1, [r0, #0x4]
1000ac5a: a80e         	add	r0, sp, #0x38
1000ac5c: 7003         	strb	r3, [r0]
1000ac5e: a80f         	add	r0, sp, #0x3c
1000ac60: 7003         	strb	r3, [r0]
1000ac62: 7800         	ldrb	r0, [r0]
1000ac64: 9003         	str	r0, [sp, #0xc]
1000ac66: 9210         	str	r2, [sp, #0x40]
1000ac68: aa10         	add	r2, sp, #0x40
1000ac6a: 7111         	strb	r1, [r2, #0x4]
1000ac6c: a912         	add	r1, sp, #0x48
1000ac6e: 7008         	strb	r0, [r1]
1000ac70: 9810         	ldr	r0, [sp, #0x40]
1000ac72: 9002         	str	r0, [sp, #0x8]
1000ac74: f7fb fa48    	bl	0x10006108 <rp2040_pac::generic::mask_u32::h42ec560ca9ea22d1> @ imm = #-0x4b70
1000ac78: 9911         	ldr	r1, [sp, #0x44]
1000ac7a: f7fc f8ed    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x3e26
1000ac7e: f7fb faf1    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x4a1e
1000ac82: 4601         	mov	r1, r0
1000ac84: 9802         	ldr	r0, [sp, #0x8]
1000ac86: f7fc f8d3    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x3e5a
1000ac8a: 9803         	ldr	r0, [sp, #0xc]
1000ac8c: 9910         	ldr	r1, [sp, #0x40]
1000ac8e: 9104         	str	r1, [sp, #0x10]
1000ac90: a913         	add	r1, sp, #0x4c
1000ac92: 7008         	strb	r0, [r1]
1000ac94: f7fb fa38    	bl	0x10006108 <rp2040_pac::generic::mask_u32::h42ec560ca9ea22d1> @ imm = #-0x4b90
1000ac98: 4601         	mov	r1, r0
1000ac9a: 9803         	ldr	r0, [sp, #0xc]
1000ac9c: f7fb fb01    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x49fe
1000aca0: 9911         	ldr	r1, [sp, #0x44]
1000aca2: f7fc f8d9    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x3e4e
1000aca6: 4601         	mov	r1, r0
1000aca8: 9804         	ldr	r0, [sp, #0x10]
1000acaa: f7fc f8b5    	bl	0x10006e18 <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::hc18d656116c887ea> @ imm = #-0x3e96
1000acae: 9810         	ldr	r0, [sp, #0x40]
1000acb0: b014         	add	sp, #0x50
1000acb2: bd80         	pop	{r7, pc}

1000acb4 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::ClockDivision>::set_div::h675649ab6929660b>:
1000acb4: b580         	push	{r7, lr}
1000acb6: af00         	add	r7, sp, #0x0
1000acb8: b092         	sub	sp, #0x48
1000acba: 9105         	str	r1, [sp, #0x14]
1000acbc: 9006         	str	r0, [sp, #0x18]
1000acbe: 1d00         	adds	r0, r0, #0x4
1000acc0: f7fc fc86    	bl	0x100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2> @ imm = #-0x36f4
1000acc4: 9007         	str	r0, [sp, #0x1c]
1000acc6: 3064         	adds	r0, #0x64
1000acc8: 9004         	str	r0, [sp, #0x10]
1000acca: 900a         	str	r0, [sp, #0x28]
1000accc: a905         	add	r1, sp, #0x14
1000acce: 9103         	str	r1, [sp, #0xc]
1000acd0: 910b         	str	r1, [sp, #0x2c]
1000acd2: 900d         	str	r0, [sp, #0x34]
1000acd4: 900e         	str	r0, [sp, #0x38]
1000acd6: f001 f9f6    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x13ec
1000acda: 9001         	str	r0, [sp, #0x4]
1000acdc: 900c         	str	r0, [sp, #0x30]
1000acde: 9008         	str	r0, [sp, #0x20]
1000ace0: 2000         	movs	r0, #0x0
1000ace2: 9002         	str	r0, [sp, #0x8]
1000ace4: f7fb fabe    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x4a84
1000ace8: 4601         	mov	r1, r0
1000acea: 9801         	ldr	r0, [sp, #0x4]
1000acec: f7fb fad9    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x4a4e
1000acf0: 9902         	ldr	r1, [sp, #0x8]
1000acf2: f7fb face    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x4a64
1000acf6: 4601         	mov	r1, r0
1000acf8: 9803         	ldr	r0, [sp, #0xc]
1000acfa: 9109         	str	r1, [sp, #0x24]
1000acfc: a908         	add	r1, sp, #0x20
1000acfe: aa09         	add	r2, sp, #0x24
1000ad00: f000 f80a    	bl	0x1000ad18 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::ClockDivision>::set_div::{{closure}}::hc76e3e265b47107f> @ imm = #0x14
1000ad04: 4601         	mov	r1, r0
1000ad06: 9804         	ldr	r0, [sp, #0x10]
1000ad08: 6809         	ldr	r1, [r1]
1000ad0a: 900f         	str	r0, [sp, #0x3c]
1000ad0c: 9110         	str	r1, [sp, #0x40]
1000ad0e: 9011         	str	r0, [sp, #0x44]
1000ad10: f001 fa44    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x1488
1000ad14: b012         	add	sp, #0x48
1000ad16: bd80         	pop	{r7, pc}

1000ad18 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::ClockDivision>::set_div::{{closure}}::hc76e3e265b47107f>:
1000ad18: b580         	push	{r7, lr}
1000ad1a: af00         	add	r7, sp, #0x0
1000ad1c: b086         	sub	sp, #0x18
1000ad1e: 9200         	str	r2, [sp]
1000ad20: 4602         	mov	r2, r0
1000ad22: 9800         	ldr	r0, [sp]
1000ad24: 9201         	str	r2, [sp, #0x4]
1000ad26: 9102         	str	r1, [sp, #0x8]
1000ad28: 9003         	str	r0, [sp, #0xc]
1000ad2a: 9901         	ldr	r1, [sp, #0x4]
1000ad2c: 6809         	ldr	r1, [r1]
1000ad2e: 9004         	str	r0, [sp, #0x10]
1000ad30: 9105         	str	r1, [sp, #0x14]
1000ad32: 6001         	str	r1, [r0]
1000ad34: b006         	add	sp, #0x18
1000ad36: bd80         	pop	{r7, pc}

1000ad38 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::ClockDivision>::get_div::h5bf8296cdce922d0>:
1000ad38: b580         	push	{r7, lr}
1000ad3a: af00         	add	r7, sp, #0x0
1000ad3c: b088         	sub	sp, #0x20
1000ad3e: 9002         	str	r0, [sp, #0x8]
1000ad40: 1d00         	adds	r0, r0, #0x4
1000ad42: f7fc fc45    	bl	0x100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2> @ imm = #-0x3776
1000ad46: 9003         	str	r0, [sp, #0xc]
1000ad48: 3064         	adds	r0, #0x64
1000ad4a: 9004         	str	r0, [sp, #0x10]
1000ad4c: 9006         	str	r0, [sp, #0x18]
1000ad4e: 9007         	str	r0, [sp, #0x1c]
1000ad50: f001 f9b9    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x1372
1000ad54: 9001         	str	r0, [sp, #0x4]
1000ad56: a801         	add	r0, sp, #0x4
1000ad58: 9005         	str	r0, [sp, #0x14]
1000ad5a: 9801         	ldr	r0, [sp, #0x4]
1000ad5c: b008         	add	sp, #0x20
1000ad5e: bd80         	pop	{r7, pc}

1000ad60 <rp2040_hal::clocks::ClkAdcSrcType::unwrap_aux::hc93567faf03e8d55>:
1000ad60: b580         	push	{r7, lr}
1000ad62: af00         	add	r7, sp, #0x0
1000ad64: b082         	sub	sp, #0x8
1000ad66: 9000         	str	r0, [sp]
1000ad68: 9001         	str	r0, [sp, #0x4]
1000ad6a: 7800         	ldrb	r0, [r0]
1000ad6c: b002         	add	sp, #0x8
1000ad6e: bd80         	pop	{r7, pc}

1000ad70 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::StoppableClock>::enable::hb4cec49bb9708cea>:
1000ad70: b580         	push	{r7, lr}
1000ad72: af00         	add	r7, sp, #0x0
1000ad74: b08e         	sub	sp, #0x38
1000ad76: 9003         	str	r0, [sp, #0xc]
1000ad78: 1d00         	adds	r0, r0, #0x4
1000ad7a: f7fc fc29    	bl	0x100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2> @ imm = #-0x37ae
1000ad7e: 9004         	str	r0, [sp, #0x10]
1000ad80: 3060         	adds	r0, #0x60
1000ad82: 9002         	str	r0, [sp, #0x8]
1000ad84: 9007         	str	r0, [sp, #0x1c]
1000ad86: 9009         	str	r0, [sp, #0x24]
1000ad88: 900a         	str	r0, [sp, #0x28]
1000ad8a: f001 f99c    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x1338
1000ad8e: 9000         	str	r0, [sp]
1000ad90: 9008         	str	r0, [sp, #0x20]
1000ad92: 9005         	str	r0, [sp, #0x14]
1000ad94: 2000         	movs	r0, #0x0
1000ad96: 9001         	str	r0, [sp, #0x4]
1000ad98: f7fb fa64    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x4b38
1000ad9c: 4601         	mov	r1, r0
1000ad9e: 9800         	ldr	r0, [sp]
1000ada0: f7fb fa7f    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x4b02
1000ada4: 9901         	ldr	r1, [sp, #0x4]
1000ada6: f7fb fa74    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x4b18
1000adaa: 9006         	str	r0, [sp, #0x18]
1000adac: a805         	add	r0, sp, #0x14
1000adae: a906         	add	r1, sp, #0x18
1000adb0: f000 f80a    	bl	0x1000adc8 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::StoppableClock>::enable::{{closure}}::hde19c008a98cbdef> @ imm = #0x14
1000adb4: 4601         	mov	r1, r0
1000adb6: 9802         	ldr	r0, [sp, #0x8]
1000adb8: 6809         	ldr	r1, [r1]
1000adba: 900b         	str	r0, [sp, #0x2c]
1000adbc: 910c         	str	r1, [sp, #0x30]
1000adbe: 900d         	str	r0, [sp, #0x34]
1000adc0: f001 f9ec    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x13d8
1000adc4: b00e         	add	sp, #0x38
1000adc6: bd80         	pop	{r7, pc}

1000adc8 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::StoppableClock>::enable::{{closure}}::hde19c008a98cbdef>:
1000adc8: b580         	push	{r7, lr}
1000adca: af00         	add	r7, sp, #0x0
1000adcc: b08a         	sub	sp, #0x28
1000adce: aa03         	add	r2, sp, #0xc
1000add0: 9201         	str	r2, [sp, #0x4]
1000add2: 460a         	mov	r2, r1
1000add4: 4601         	mov	r1, r0
1000add6: 9801         	ldr	r0, [sp, #0x4]
1000add8: 6001         	str	r1, [r0]
1000adda: 6042         	str	r2, [r0, #0x4]
1000addc: 6082         	str	r2, [r0, #0x8]
1000adde: 60c2         	str	r2, [r0, #0xc]
1000ade0: ab07         	add	r3, sp, #0x1c
1000ade2: 210b         	movs	r1, #0xb
1000ade4: 7019         	strb	r1, [r3]
1000ade6: 6142         	str	r2, [r0, #0x14]
1000ade8: aa08         	add	r2, sp, #0x20
1000adea: 7111         	strb	r1, [r2, #0x4]
1000adec: 6941         	ldr	r1, [r0, #0x14]
1000adee: 9100         	str	r1, [sp]
1000adf0: 6981         	ldr	r1, [r0, #0x18]
1000adf2: 2001         	movs	r0, #0x1
1000adf4: f7fc f830    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x3fa0
1000adf8: 4601         	mov	r1, r0
1000adfa: 9800         	ldr	r0, [sp]
1000adfc: f7fc f80c    	bl	0x10006e18 <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::hc18d656116c887ea> @ imm = #-0x3fe8
1000ae00: 9801         	ldr	r0, [sp, #0x4]
1000ae02: 6940         	ldr	r0, [r0, #0x14]
1000ae04: b00a         	add	sp, #0x28
1000ae06: bd80         	pop	{r7, pc}

1000ae08 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::StoppableClock>::disable::h0ffc2896f08b15a8>:
1000ae08: b580         	push	{r7, lr}
1000ae0a: af00         	add	r7, sp, #0x0
1000ae0c: b08e         	sub	sp, #0x38
1000ae0e: 9003         	str	r0, [sp, #0xc]
1000ae10: 1d00         	adds	r0, r0, #0x4
1000ae12: f7fc fbdd    	bl	0x100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2> @ imm = #-0x3846
1000ae16: 9004         	str	r0, [sp, #0x10]
1000ae18: 3060         	adds	r0, #0x60
1000ae1a: 9002         	str	r0, [sp, #0x8]
1000ae1c: 9007         	str	r0, [sp, #0x1c]
1000ae1e: 9009         	str	r0, [sp, #0x24]
1000ae20: 900a         	str	r0, [sp, #0x28]
1000ae22: f001 f950    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x12a0
1000ae26: 9000         	str	r0, [sp]
1000ae28: 9008         	str	r0, [sp, #0x20]
1000ae2a: 9005         	str	r0, [sp, #0x14]
1000ae2c: 2000         	movs	r0, #0x0
1000ae2e: 9001         	str	r0, [sp, #0x4]
1000ae30: f7fb fa18    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x4bd0
1000ae34: 4601         	mov	r1, r0
1000ae36: 9800         	ldr	r0, [sp]
1000ae38: f7fb fa33    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x4b9a
1000ae3c: 9901         	ldr	r1, [sp, #0x4]
1000ae3e: f7fb fa28    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x4bb0
1000ae42: 9006         	str	r0, [sp, #0x18]
1000ae44: a805         	add	r0, sp, #0x14
1000ae46: a906         	add	r1, sp, #0x18
1000ae48: f000 f80a    	bl	0x1000ae60 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::StoppableClock>::disable::{{closure}}::h602e0bfcd678f412> @ imm = #0x14
1000ae4c: 4601         	mov	r1, r0
1000ae4e: 9802         	ldr	r0, [sp, #0x8]
1000ae50: 6809         	ldr	r1, [r1]
1000ae52: 900b         	str	r0, [sp, #0x2c]
1000ae54: 910c         	str	r1, [sp, #0x30]
1000ae56: 900d         	str	r0, [sp, #0x34]
1000ae58: f001 f9a0    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x1340
1000ae5c: b00e         	add	sp, #0x38
1000ae5e: bd80         	pop	{r7, pc}

1000ae60 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::StoppableClock>::disable::{{closure}}::h602e0bfcd678f412>:
1000ae60: b580         	push	{r7, lr}
1000ae62: af00         	add	r7, sp, #0x0
1000ae64: b08a         	sub	sp, #0x28
1000ae66: aa03         	add	r2, sp, #0xc
1000ae68: 9201         	str	r2, [sp, #0x4]
1000ae6a: 460a         	mov	r2, r1
1000ae6c: 4601         	mov	r1, r0
1000ae6e: 9801         	ldr	r0, [sp, #0x4]
1000ae70: 6001         	str	r1, [r0]
1000ae72: 6042         	str	r2, [r0, #0x4]
1000ae74: 6082         	str	r2, [r0, #0x8]
1000ae76: 60c2         	str	r2, [r0, #0xc]
1000ae78: ab07         	add	r3, sp, #0x1c
1000ae7a: 210b         	movs	r1, #0xb
1000ae7c: 7019         	strb	r1, [r3]
1000ae7e: 6142         	str	r2, [r0, #0x14]
1000ae80: aa08         	add	r2, sp, #0x20
1000ae82: 7111         	strb	r1, [r2, #0x4]
1000ae84: 6941         	ldr	r1, [r0, #0x14]
1000ae86: 9100         	str	r1, [sp]
1000ae88: 6981         	ldr	r1, [r0, #0x18]
1000ae8a: 2001         	movs	r0, #0x1
1000ae8c: f7fb ffe4    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x4038
1000ae90: f7fb f9e8    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x4c30
1000ae94: 4601         	mov	r1, r0
1000ae96: 9800         	ldr	r0, [sp]
1000ae98: f7fb ffca    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x406c
1000ae9c: 9801         	ldr	r0, [sp, #0x4]
1000ae9e: 6940         	ldr	r0, [r0, #0x14]
1000aea0: b00a         	add	sp, #0x28
1000aea2: bd80         	pop	{r7, pc}

1000aea4 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::Clock>::configure_clock::hc833b9d4e1e86ec7>:
1000aea4: b580         	push	{r7, lr}
1000aea6: af00         	add	r7, sp, #0x0
1000aea8: b0a4         	sub	sp, #0x90
1000aeaa: 910b         	str	r1, [sp, #0x2c]
1000aeac: 4601         	mov	r1, r0
1000aeae: 980b         	ldr	r0, [sp, #0x2c]
1000aeb0: 910c         	str	r1, [sp, #0x30]
1000aeb2: 920d         	str	r2, [sp, #0x34]
1000aeb4: 911c         	str	r1, [sp, #0x70]
1000aeb6: 901d         	str	r0, [sp, #0x74]
1000aeb8: 495d         	ldr	r1, [pc, #0x174]        @ 0x1000b030 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::Clock>::configure_clock::hc833b9d4e1e86ec7+0x18c>
1000aeba: 911e         	str	r1, [sp, #0x78]
1000aebc: f7fc fb6b    	bl	0x10007596 <rp2040_hal::clocks::clock_sources::<impl rp2040_hal::clocks::ClockSource for rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locked,rp2040_pac::PLL_USB>>::get_freq::he7a0e396da435ca1> @ imm = #-0x392a
1000aec0: 495c         	ldr	r1, [pc, #0x170]        @ 0x1000b034 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::Clock>::configure_clock::hc833b9d4e1e86ec7+0x190>
1000aec2: f7fb ffa2    	bl	0x10006e0a <<T as core::convert::Into<U>>::into::hd9da2216767de703> @ imm = #-0x40bc
1000aec6: 900f         	str	r0, [sp, #0x3c]
1000aec8: a80d         	add	r0, sp, #0x34
1000aeca: a90f         	add	r1, sp, #0x3c
1000aecc: f7fb fa03    	bl	0x100062d6 <core::cmp::PartialOrd::gt::hda2a2854aba77a5e> @ imm = #-0x4bfa
1000aed0: 2800         	cmp	r0, #0x0
1000aed2: d121         	bne	0x1000af18 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::Clock>::configure_clock::hc833b9d4e1e86ec7+0x74> @ imm = #0x42
1000aed4: e7ff         	b	0x1000aed6 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::Clock>::configure_clock::hc833b9d4e1e86ec7+0x32> @ imm = #-0x2
1000aed6: a80f         	add	r0, sp, #0x3c
1000aed8: f7fc f848    	bl	0x10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868> @ imm = #-0x3f70
1000aedc: 9007         	str	r0, [sp, #0x1c]
1000aede: a80d         	add	r0, sp, #0x34
1000aee0: f7fc f844    	bl	0x10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868> @ imm = #-0x3f78
1000aee4: 4601         	mov	r1, r0
1000aee6: 9807         	ldr	r0, [sp, #0x1c]
1000aee8: f7fc fd3e    	bl	0x10007968 <rp2040_hal::clocks::fractional_div::hd140809978073745> @ imm = #-0x3584
1000aeec: 9008         	str	r0, [sp, #0x20]
1000aeee: 460a         	mov	r2, r1
1000aef0: 9908         	ldr	r1, [sp, #0x20]
1000aef2: ab15         	add	r3, sp, #0x54
1000aef4: 2002         	movs	r0, #0x2
1000aef6: 7018         	strb	r0, [r3]
1000aef8: 9b15         	ldr	r3, [sp, #0x54]
1000aefa: a813         	add	r0, sp, #0x4c
1000aefc: 9009         	str	r0, [sp, #0x24]
1000aefe: f7fb fe49    	bl	0x10006b94 <core::option::Option<T>::ok_or::h81824975fa84ee0f> @ imm = #-0x436e
1000af02: 9909         	ldr	r1, [sp, #0x24]
1000af04: a811         	add	r0, sp, #0x44
1000af06: 900a         	str	r0, [sp, #0x28]
1000af08: f7fc f96b    	bl	0x100071e2 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h460b484606f6b3bdE> @ imm = #-0x3d2a
1000af0c: 980a         	ldr	r0, [sp, #0x28]
1000af0e: 7800         	ldrb	r0, [r0]
1000af10: 07c0         	lsls	r0, r0, #0x1f
1000af12: 2800         	cmp	r0, #0x0
1000af14: d007         	beq	0x1000af26 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::Clock>::configure_clock::hc833b9d4e1e86ec7+0x82> @ imm = #0xe
1000af16: e011         	b	0x1000af3c <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::Clock>::configure_clock::hc833b9d4e1e86ec7+0x98> @ imm = #0x22
1000af18: a910         	add	r1, sp, #0x40
1000af1a: 2000         	movs	r0, #0x0
1000af1c: 7008         	strb	r0, [r1]
1000af1e: 9810         	ldr	r0, [sp, #0x40]
1000af20: a90e         	add	r1, sp, #0x38
1000af22: 7008         	strb	r0, [r1]
1000af24: e080         	b	0x1000b028 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::Clock>::configure_clock::hc833b9d4e1e86ec7+0x184> @ imm = #0x100
1000af26: 980c         	ldr	r0, [sp, #0x30]
1000af28: 9912         	ldr	r1, [sp, #0x48]
1000af2a: 9106         	str	r1, [sp, #0x18]
1000af2c: 911f         	str	r1, [sp, #0x7c]
1000af2e: f7ff ff03    	bl	0x1000ad38 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::ClockDivision>::get_div::h5bf8296cdce922d0> @ imm = #-0x1fa
1000af32: 4601         	mov	r1, r0
1000af34: 9806         	ldr	r0, [sp, #0x18]
1000af36: 4288         	cmp	r0, r1
1000af38: d819         	bhi	0x1000af6e <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::Clock>::configure_clock::hc833b9d4e1e86ec7+0xca> @ imm = #0x32
1000af3a: e009         	b	0x1000af50 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::Clock>::configure_clock::hc833b9d4e1e86ec7+0xac> @ imm = #0x12
1000af3c: a811         	add	r0, sp, #0x44
1000af3e: 7840         	ldrb	r0, [r0, #0x1]
1000af40: a923         	add	r1, sp, #0x8c
1000af42: 7008         	strb	r0, [r1]
1000af44: 493b         	ldr	r1, [pc, #0xec]         @ 0x1000b034 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::Clock>::configure_clock::hc833b9d4e1e86ec7+0x190>
1000af46: f7fb f932    	bl	0x100061ae <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4d80d59e43eeb34cE> @ imm = #-0x4d9c
1000af4a: a90e         	add	r1, sp, #0x38
1000af4c: 7008         	strb	r0, [r1]
1000af4e: e06b         	b	0x1000b028 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::Clock>::configure_clock::hc833b9d4e1e86ec7+0x184> @ imm = #0xd6
1000af50: 980c         	ldr	r0, [sp, #0x30]
1000af52: f7ff ff59    	bl	0x1000ae08 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::StoppableClock>::disable::h0ffc2896f08b15a8> @ imm = #-0x14e
1000af56: 2000         	movs	r0, #0x0
1000af58: f7fb ffd8    	bl	0x10006f0c <fugit::rate::Rate<u32,_,_>::Hz::hf33f06883bd1b051> @ imm = #-0x4050
1000af5c: 4601         	mov	r1, r0
1000af5e: 980c         	ldr	r0, [sp, #0x30]
1000af60: 9116         	str	r1, [sp, #0x58]
1000af62: a916         	add	r1, sp, #0x58
1000af64: f7fb f9b7    	bl	0x100062d6 <core::cmp::PartialOrd::gt::hda2a2854aba77a5e> @ imm = #-0x4c92
1000af68: 2800         	cmp	r0, #0x0
1000af6a: d12c         	bne	0x1000afc6 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::Clock>::configure_clock::hc833b9d4e1e86ec7+0x122> @ imm = #0x58
1000af6c: e004         	b	0x1000af78 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::Clock>::configure_clock::hc833b9d4e1e86ec7+0xd4> @ imm = #0x8
1000af6e: 9906         	ldr	r1, [sp, #0x18]
1000af70: 980c         	ldr	r0, [sp, #0x30]
1000af72: f7ff fe9f    	bl	0x1000acb4 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::ClockDivision>::set_div::h675649ab6929660b> @ imm = #-0x2c2
1000af76: e7eb         	b	0x1000af50 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::Clock>::configure_clock::hc833b9d4e1e86ec7+0xac> @ imm = #-0x2a
1000af78: 980c         	ldr	r0, [sp, #0x30]
1000af7a: 990b         	ldr	r1, [sp, #0x2c]
1000af7c: f7ff fe1f    	bl	0x1000abbe <rp2040_hal::clocks::AdcClock::set_aux::h3d327221df055b73> @ imm = #-0x3c2
1000af80: 980c         	ldr	r0, [sp, #0x30]
1000af82: f7ff fef5    	bl	0x1000ad70 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::StoppableClock>::enable::hb4cec49bb9708cea> @ imm = #-0x216
1000af86: 980c         	ldr	r0, [sp, #0x30]
1000af88: 9906         	ldr	r1, [sp, #0x18]
1000af8a: f7ff fe93    	bl	0x1000acb4 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::ClockDivision>::set_div::h675649ab6929660b> @ imm = #-0x2da
1000af8e: a80f         	add	r0, sp, #0x3c
1000af90: f7fb ffec    	bl	0x10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868> @ imm = #-0x4028
1000af94: 9906         	ldr	r1, [sp, #0x18]
1000af96: f7fc fce7    	bl	0x10007968 <rp2040_hal::clocks::fractional_div::hd140809978073745> @ imm = #-0x3632
1000af9a: 9003         	str	r0, [sp, #0xc]
1000af9c: 460a         	mov	r2, r1
1000af9e: 9903         	ldr	r1, [sp, #0xc]
1000afa0: ab1b         	add	r3, sp, #0x6c
1000afa2: 2001         	movs	r0, #0x1
1000afa4: 7018         	strb	r0, [r3]
1000afa6: 9b1b         	ldr	r3, [sp, #0x6c]
1000afa8: a819         	add	r0, sp, #0x64
1000afaa: 9004         	str	r0, [sp, #0x10]
1000afac: f7fb fdf2    	bl	0x10006b94 <core::option::Option<T>::ok_or::h81824975fa84ee0f> @ imm = #-0x441c
1000afb0: 9904         	ldr	r1, [sp, #0x10]
1000afb2: a817         	add	r0, sp, #0x5c
1000afb4: 9005         	str	r0, [sp, #0x14]
1000afb6: f7fc f914    	bl	0x100071e2 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h460b484606f6b3bdE> @ imm = #-0x3dd8
1000afba: 9805         	ldr	r0, [sp, #0x14]
1000afbc: 7800         	ldrb	r0, [r0]
1000afbe: 07c0         	lsls	r0, r0, #0x1f
1000afc0: 2800         	cmp	r0, #0x0
1000afc2: d01d         	beq	0x1000b000 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::Clock>::configure_clock::hc833b9d4e1e86ec7+0x15c> @ imm = #0x3a
1000afc4: e026         	b	0x1000b014 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::Clock>::configure_clock::hc833b9d4e1e86ec7+0x170> @ imm = #0x4c
1000afc6: 980c         	ldr	r0, [sp, #0x30]
1000afc8: f7fb ffd0    	bl	0x10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868> @ imm = #-0x4060
1000afcc: 4601         	mov	r1, r0
1000afce: 9102         	str	r1, [sp, #0x8]
1000afd0: 2800         	cmp	r0, #0x0
1000afd2: d00a         	beq	0x1000afea <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::Clock>::configure_clock::hc833b9d4e1e86ec7+0x146> @ imm = #0x14
1000afd4: e7ff         	b	0x1000afd6 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::Clock>::configure_clock::hc833b9d4e1e86ec7+0x132> @ imm = #-0x2
1000afd6: 9902         	ldr	r1, [sp, #0x8]
1000afd8: 4815         	ldr	r0, [pc, #0x54]         @ 0x1000b030 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::Clock>::configure_clock::hc833b9d4e1e86ec7+0x18c>
1000afda: f002 fbdf    	bl	0x1000d79c <__aeabi_uidiv> @ imm = #0x27be
1000afde: 1c40         	adds	r0, r0, #0x1
1000afe0: 9001         	str	r0, [sp, #0x4]
1000afe2: 2000         	movs	r0, #0x0
1000afe4: 2800         	cmp	r0, #0x0
1000afe6: d108         	bne	0x1000affa <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::Clock>::configure_clock::hc833b9d4e1e86ec7+0x156> @ imm = #0x10
1000afe8: e002         	b	0x1000aff0 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::Clock>::configure_clock::hc833b9d4e1e86ec7+0x14c> @ imm = #0x4
1000afea: 4812         	ldr	r0, [pc, #0x48]         @ 0x1000b034 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::Clock>::configure_clock::hc833b9d4e1e86ec7+0x190>
1000afec: f002 fa68    	bl	0x1000d4c0 <core::panicking::panic_const::panic_const_div_by_zero::ha09f740279da4cf0> @ imm = #0x24d0
1000aff0: 9801         	ldr	r0, [sp, #0x4]
1000aff2: 9020         	str	r0, [sp, #0x80]
1000aff4: f7fc fa4a    	bl	0x1000748c <cortex_m::asm::delay::h59aaecaf49566739> @ imm = #-0x3b6c
1000aff8: e7be         	b	0x1000af78 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::Clock>::configure_clock::hc833b9d4e1e86ec7+0xd4> @ imm = #-0x84
1000affa: 480e         	ldr	r0, [pc, #0x38]         @ 0x1000b034 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::Clock>::configure_clock::hc833b9d4e1e86ec7+0x190>
1000affc: f002 fa18    	bl	0x1000d430 <core::panicking::panic_const::panic_const_add_overflow::h73b6e802431fc142> @ imm = #0x2430
1000b000: 9818         	ldr	r0, [sp, #0x60]
1000b002: 9021         	str	r0, [sp, #0x84]
1000b004: f7fb f935    	bl	0x10006272 <<u32 as fugit::rate::ExtU32>::Hz::ha421d0a6a3793ef2> @ imm = #-0x4d96
1000b008: 990c         	ldr	r1, [sp, #0x30]
1000b00a: 6008         	str	r0, [r1]
1000b00c: a90e         	add	r1, sp, #0x38
1000b00e: 2003         	movs	r0, #0x3
1000b010: 7008         	strb	r0, [r1]
1000b012: e009         	b	0x1000b028 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::Clock>::configure_clock::hc833b9d4e1e86ec7+0x184> @ imm = #0x12
1000b014: a817         	add	r0, sp, #0x5c
1000b016: 7840         	ldrb	r0, [r0, #0x1]
1000b018: a922         	add	r1, sp, #0x88
1000b01a: 7008         	strb	r0, [r1]
1000b01c: 4905         	ldr	r1, [pc, #0x14]         @ 0x1000b034 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::Clock>::configure_clock::hc833b9d4e1e86ec7+0x190>
1000b01e: f7fb f8c6    	bl	0x100061ae <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4d80d59e43eeb34cE> @ imm = #-0x4e74
1000b022: a90e         	add	r1, sp, #0x38
1000b024: 7008         	strb	r0, [r1]
1000b026: e7ff         	b	0x1000b028 <<rp2040_hal::clocks::AdcClock as rp2040_hal::clocks::Clock>::configure_clock::hc833b9d4e1e86ec7+0x184> @ imm = #-0x2
1000b028: 980e         	ldr	r0, [sp, #0x38]
1000b02a: b024         	add	sp, #0x90
1000b02c: bd80         	pop	{r7, pc}
1000b02e: 46c0         	mov	r8, r8
1000b030: 40 59 73 07  	.word	0x07735940
1000b034: 94 1f 01 10  	.word	0x10011f94

1000b038 <<rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locked,rp2040_pac::PLL_USB> as rp2040_hal::clocks::ValidSrc<rp2040_hal::clocks::RtcClock>>::variant::h2fc934882dd0d235>:
1000b038: b580         	push	{r7, lr}
1000b03a: af00         	add	r7, sp, #0x0
1000b03c: b083         	sub	sp, #0xc
1000b03e: 9002         	str	r0, [sp, #0x8]
1000b040: a901         	add	r1, sp, #0x4
1000b042: 2000         	movs	r0, #0x0
1000b044: 7008         	strb	r0, [r1]
1000b046: 9801         	ldr	r0, [sp, #0x4]
1000b048: 4669         	mov	r1, sp
1000b04a: 7008         	strb	r0, [r1]
1000b04c: 9800         	ldr	r0, [sp]
1000b04e: b003         	add	sp, #0xc
1000b050: bd80         	pop	{r7, pc}

1000b052 <rp2040_hal::clocks::RtcClock::set_aux::h4e5143d68d1f631a>:
1000b052: b580         	push	{r7, lr}
1000b054: af00         	add	r7, sp, #0x0
1000b056: b092         	sub	sp, #0x48
1000b058: 9102         	str	r1, [sp, #0x8]
1000b05a: 9004         	str	r0, [sp, #0x10]
1000b05c: 9105         	str	r1, [sp, #0x14]
1000b05e: 1d00         	adds	r0, r0, #0x4
1000b060: f7fc fab6    	bl	0x100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2> @ imm = #-0x3a94
1000b064: 9902         	ldr	r1, [sp, #0x8]
1000b066: 9006         	str	r0, [sp, #0x18]
1000b068: 9007         	str	r0, [sp, #0x1c]
1000b06a: 306c         	adds	r0, #0x6c
1000b06c: 9003         	str	r0, [sp, #0xc]
1000b06e: 900a         	str	r0, [sp, #0x28]
1000b070: 910b         	str	r1, [sp, #0x2c]
1000b072: 900d         	str	r0, [sp, #0x34]
1000b074: 900e         	str	r0, [sp, #0x38]
1000b076: f001 f826    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x104c
1000b07a: 9000         	str	r0, [sp]
1000b07c: 900c         	str	r0, [sp, #0x30]
1000b07e: 9008         	str	r0, [sp, #0x20]
1000b080: 2000         	movs	r0, #0x0
1000b082: 9001         	str	r0, [sp, #0x4]
1000b084: f7fb f8ee    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x4e24
1000b088: 4601         	mov	r1, r0
1000b08a: 9800         	ldr	r0, [sp]
1000b08c: f7fb f909    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x4dee
1000b090: 9901         	ldr	r1, [sp, #0x4]
1000b092: f7fb f8fe    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x4e04
1000b096: 4601         	mov	r1, r0
1000b098: 9802         	ldr	r0, [sp, #0x8]
1000b09a: 9109         	str	r1, [sp, #0x24]
1000b09c: a908         	add	r1, sp, #0x20
1000b09e: aa09         	add	r2, sp, #0x24
1000b0a0: f000 f80a    	bl	0x1000b0b8 <rp2040_hal::clocks::RtcClock::set_aux::{{closure}}::h11468820d515e348> @ imm = #0x14
1000b0a4: 4601         	mov	r1, r0
1000b0a6: 9803         	ldr	r0, [sp, #0xc]
1000b0a8: 6809         	ldr	r1, [r1]
1000b0aa: 900f         	str	r0, [sp, #0x3c]
1000b0ac: 9110         	str	r1, [sp, #0x40]
1000b0ae: 9011         	str	r0, [sp, #0x44]
1000b0b0: f001 f874    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x10e8
1000b0b4: b012         	add	sp, #0x48
1000b0b6: bd80         	pop	{r7, pc}

1000b0b8 <rp2040_hal::clocks::RtcClock::set_aux::{{closure}}::h11468820d515e348>:
1000b0b8: b580         	push	{r7, lr}
1000b0ba: af00         	add	r7, sp, #0x0
1000b0bc: b094         	sub	sp, #0x50
1000b0be: 9200         	str	r2, [sp]
1000b0c0: 9005         	str	r0, [sp, #0x14]
1000b0c2: 9107         	str	r1, [sp, #0x1c]
1000b0c4: 9208         	str	r2, [sp, #0x20]
1000b0c6: 9209         	str	r2, [sp, #0x24]
1000b0c8: 920a         	str	r2, [sp, #0x28]
1000b0ca: a90b         	add	r1, sp, #0x2c
1000b0cc: 2005         	movs	r0, #0x5
1000b0ce: 9001         	str	r0, [sp, #0x4]
1000b0d0: 7008         	strb	r0, [r1]
1000b0d2: 9805         	ldr	r0, [sp, #0x14]
1000b0d4: f7ff ffb0    	bl	0x1000b038 <<rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locked,rp2040_pac::PLL_USB> as rp2040_hal::clocks::ValidSrc<rp2040_hal::clocks::RtcClock>>::variant::h2fc934882dd0d235> @ imm = #-0xa0
1000b0d8: 4601         	mov	r1, r0
1000b0da: a806         	add	r0, sp, #0x18
1000b0dc: 7001         	strb	r1, [r0]
1000b0de: f000 f889    	bl	0x1000b1f4 <rp2040_hal::clocks::ClkRtcSrcType::unwrap_aux::h6f955f2b955fc9fb> @ imm = #0x112
1000b0e2: 9a00         	ldr	r2, [sp]
1000b0e4: 9901         	ldr	r1, [sp, #0x4]
1000b0e6: 4603         	mov	r3, r0
1000b0e8: 920c         	str	r2, [sp, #0x30]
1000b0ea: a80c         	add	r0, sp, #0x30
1000b0ec: 7101         	strb	r1, [r0, #0x4]
1000b0ee: a80e         	add	r0, sp, #0x38
1000b0f0: 7003         	strb	r3, [r0]
1000b0f2: a80f         	add	r0, sp, #0x3c
1000b0f4: 7003         	strb	r3, [r0]
1000b0f6: 7800         	ldrb	r0, [r0]
1000b0f8: 9003         	str	r0, [sp, #0xc]
1000b0fa: 9210         	str	r2, [sp, #0x40]
1000b0fc: aa10         	add	r2, sp, #0x40
1000b0fe: 7111         	strb	r1, [r2, #0x4]
1000b100: a912         	add	r1, sp, #0x48
1000b102: 7008         	strb	r0, [r1]
1000b104: 9810         	ldr	r0, [sp, #0x40]
1000b106: 9002         	str	r0, [sp, #0x8]
1000b108: f7fa fffe    	bl	0x10006108 <rp2040_pac::generic::mask_u32::h42ec560ca9ea22d1> @ imm = #-0x5004
1000b10c: 9911         	ldr	r1, [sp, #0x44]
1000b10e: f7fb fea3    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x42ba
1000b112: f7fb f8a7    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x4eb2
1000b116: 4601         	mov	r1, r0
1000b118: 9802         	ldr	r0, [sp, #0x8]
1000b11a: f7fb fe89    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x42ee
1000b11e: 9803         	ldr	r0, [sp, #0xc]
1000b120: 9910         	ldr	r1, [sp, #0x40]
1000b122: 9104         	str	r1, [sp, #0x10]
1000b124: a913         	add	r1, sp, #0x4c
1000b126: 7008         	strb	r0, [r1]
1000b128: f7fa ffee    	bl	0x10006108 <rp2040_pac::generic::mask_u32::h42ec560ca9ea22d1> @ imm = #-0x5024
1000b12c: 4601         	mov	r1, r0
1000b12e: 9803         	ldr	r0, [sp, #0xc]
1000b130: f7fb f8b7    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x4e92
1000b134: 9911         	ldr	r1, [sp, #0x44]
1000b136: f7fb fe8f    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x42e2
1000b13a: 4601         	mov	r1, r0
1000b13c: 9804         	ldr	r0, [sp, #0x10]
1000b13e: f7fb fe6b    	bl	0x10006e18 <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::hc18d656116c887ea> @ imm = #-0x432a
1000b142: 9810         	ldr	r0, [sp, #0x40]
1000b144: b014         	add	sp, #0x50
1000b146: bd80         	pop	{r7, pc}

1000b148 <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::ClockDivision>::set_div::h3f43d08c2b8e1482>:
1000b148: b580         	push	{r7, lr}
1000b14a: af00         	add	r7, sp, #0x0
1000b14c: b092         	sub	sp, #0x48
1000b14e: 9105         	str	r1, [sp, #0x14]
1000b150: 9006         	str	r0, [sp, #0x18]
1000b152: 1d00         	adds	r0, r0, #0x4
1000b154: f7fc fa3c    	bl	0x100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2> @ imm = #-0x3b88
1000b158: 9007         	str	r0, [sp, #0x1c]
1000b15a: 3070         	adds	r0, #0x70
1000b15c: 9004         	str	r0, [sp, #0x10]
1000b15e: 900a         	str	r0, [sp, #0x28]
1000b160: a905         	add	r1, sp, #0x14
1000b162: 9103         	str	r1, [sp, #0xc]
1000b164: 910b         	str	r1, [sp, #0x2c]
1000b166: 900d         	str	r0, [sp, #0x34]
1000b168: 900e         	str	r0, [sp, #0x38]
1000b16a: f000 ffac    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0xf58
1000b16e: 9001         	str	r0, [sp, #0x4]
1000b170: 900c         	str	r0, [sp, #0x30]
1000b172: 9008         	str	r0, [sp, #0x20]
1000b174: 2000         	movs	r0, #0x0
1000b176: 9002         	str	r0, [sp, #0x8]
1000b178: f7fb f874    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x4f18
1000b17c: 4601         	mov	r1, r0
1000b17e: 9801         	ldr	r0, [sp, #0x4]
1000b180: f7fb f88f    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x4ee2
1000b184: 9902         	ldr	r1, [sp, #0x8]
1000b186: f7fb f884    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x4ef8
1000b18a: 4601         	mov	r1, r0
1000b18c: 9803         	ldr	r0, [sp, #0xc]
1000b18e: 9109         	str	r1, [sp, #0x24]
1000b190: a908         	add	r1, sp, #0x20
1000b192: aa09         	add	r2, sp, #0x24
1000b194: f000 f80a    	bl	0x1000b1ac <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::ClockDivision>::set_div::{{closure}}::h140459df2d686c84> @ imm = #0x14
1000b198: 4601         	mov	r1, r0
1000b19a: 9804         	ldr	r0, [sp, #0x10]
1000b19c: 6809         	ldr	r1, [r1]
1000b19e: 900f         	str	r0, [sp, #0x3c]
1000b1a0: 9110         	str	r1, [sp, #0x40]
1000b1a2: 9011         	str	r0, [sp, #0x44]
1000b1a4: f000 fffa    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0xff4
1000b1a8: b012         	add	sp, #0x48
1000b1aa: bd80         	pop	{r7, pc}

1000b1ac <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::ClockDivision>::set_div::{{closure}}::h140459df2d686c84>:
1000b1ac: b580         	push	{r7, lr}
1000b1ae: af00         	add	r7, sp, #0x0
1000b1b0: b086         	sub	sp, #0x18
1000b1b2: 9200         	str	r2, [sp]
1000b1b4: 4602         	mov	r2, r0
1000b1b6: 9800         	ldr	r0, [sp]
1000b1b8: 9201         	str	r2, [sp, #0x4]
1000b1ba: 9102         	str	r1, [sp, #0x8]
1000b1bc: 9003         	str	r0, [sp, #0xc]
1000b1be: 9901         	ldr	r1, [sp, #0x4]
1000b1c0: 6809         	ldr	r1, [r1]
1000b1c2: 9004         	str	r0, [sp, #0x10]
1000b1c4: 9105         	str	r1, [sp, #0x14]
1000b1c6: 6001         	str	r1, [r0]
1000b1c8: b006         	add	sp, #0x18
1000b1ca: bd80         	pop	{r7, pc}

1000b1cc <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::ClockDivision>::get_div::h2ebc0b35b7a25979>:
1000b1cc: b580         	push	{r7, lr}
1000b1ce: af00         	add	r7, sp, #0x0
1000b1d0: b088         	sub	sp, #0x20
1000b1d2: 9002         	str	r0, [sp, #0x8]
1000b1d4: 1d00         	adds	r0, r0, #0x4
1000b1d6: f7fc f9fb    	bl	0x100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2> @ imm = #-0x3c0a
1000b1da: 9003         	str	r0, [sp, #0xc]
1000b1dc: 3070         	adds	r0, #0x70
1000b1de: 9004         	str	r0, [sp, #0x10]
1000b1e0: 9006         	str	r0, [sp, #0x18]
1000b1e2: 9007         	str	r0, [sp, #0x1c]
1000b1e4: f000 ff6f    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0xede
1000b1e8: 9001         	str	r0, [sp, #0x4]
1000b1ea: a801         	add	r0, sp, #0x4
1000b1ec: 9005         	str	r0, [sp, #0x14]
1000b1ee: 9801         	ldr	r0, [sp, #0x4]
1000b1f0: b008         	add	sp, #0x20
1000b1f2: bd80         	pop	{r7, pc}

1000b1f4 <rp2040_hal::clocks::ClkRtcSrcType::unwrap_aux::h6f955f2b955fc9fb>:
1000b1f4: b580         	push	{r7, lr}
1000b1f6: af00         	add	r7, sp, #0x0
1000b1f8: b082         	sub	sp, #0x8
1000b1fa: 9000         	str	r0, [sp]
1000b1fc: 9001         	str	r0, [sp, #0x4]
1000b1fe: 7800         	ldrb	r0, [r0]
1000b200: b002         	add	sp, #0x8
1000b202: bd80         	pop	{r7, pc}

1000b204 <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::StoppableClock>::enable::h41ee2edb5902db82>:
1000b204: b580         	push	{r7, lr}
1000b206: af00         	add	r7, sp, #0x0
1000b208: b08e         	sub	sp, #0x38
1000b20a: 9003         	str	r0, [sp, #0xc]
1000b20c: 1d00         	adds	r0, r0, #0x4
1000b20e: f7fc f9df    	bl	0x100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2> @ imm = #-0x3c42
1000b212: 9004         	str	r0, [sp, #0x10]
1000b214: 306c         	adds	r0, #0x6c
1000b216: 9002         	str	r0, [sp, #0x8]
1000b218: 9007         	str	r0, [sp, #0x1c]
1000b21a: 9009         	str	r0, [sp, #0x24]
1000b21c: 900a         	str	r0, [sp, #0x28]
1000b21e: f000 ff52    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0xea4
1000b222: 9000         	str	r0, [sp]
1000b224: 9008         	str	r0, [sp, #0x20]
1000b226: 9005         	str	r0, [sp, #0x14]
1000b228: 2000         	movs	r0, #0x0
1000b22a: 9001         	str	r0, [sp, #0x4]
1000b22c: f7fb f81a    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x4fcc
1000b230: 4601         	mov	r1, r0
1000b232: 9800         	ldr	r0, [sp]
1000b234: f7fb f835    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x4f96
1000b238: 9901         	ldr	r1, [sp, #0x4]
1000b23a: f7fb f82a    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x4fac
1000b23e: 9006         	str	r0, [sp, #0x18]
1000b240: a805         	add	r0, sp, #0x14
1000b242: a906         	add	r1, sp, #0x18
1000b244: f000 f80a    	bl	0x1000b25c <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::StoppableClock>::enable::{{closure}}::h3334150c12381b84> @ imm = #0x14
1000b248: 4601         	mov	r1, r0
1000b24a: 9802         	ldr	r0, [sp, #0x8]
1000b24c: 6809         	ldr	r1, [r1]
1000b24e: 900b         	str	r0, [sp, #0x2c]
1000b250: 910c         	str	r1, [sp, #0x30]
1000b252: 900d         	str	r0, [sp, #0x34]
1000b254: f000 ffa2    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0xf44
1000b258: b00e         	add	sp, #0x38
1000b25a: bd80         	pop	{r7, pc}

1000b25c <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::StoppableClock>::enable::{{closure}}::h3334150c12381b84>:
1000b25c: b580         	push	{r7, lr}
1000b25e: af00         	add	r7, sp, #0x0
1000b260: b08a         	sub	sp, #0x28
1000b262: aa03         	add	r2, sp, #0xc
1000b264: 9201         	str	r2, [sp, #0x4]
1000b266: 460a         	mov	r2, r1
1000b268: 4601         	mov	r1, r0
1000b26a: 9801         	ldr	r0, [sp, #0x4]
1000b26c: 6001         	str	r1, [r0]
1000b26e: 6042         	str	r2, [r0, #0x4]
1000b270: 6082         	str	r2, [r0, #0x8]
1000b272: 60c2         	str	r2, [r0, #0xc]
1000b274: ab07         	add	r3, sp, #0x1c
1000b276: 210b         	movs	r1, #0xb
1000b278: 7019         	strb	r1, [r3]
1000b27a: 6142         	str	r2, [r0, #0x14]
1000b27c: aa08         	add	r2, sp, #0x20
1000b27e: 7111         	strb	r1, [r2, #0x4]
1000b280: 6941         	ldr	r1, [r0, #0x14]
1000b282: 9100         	str	r1, [sp]
1000b284: 6981         	ldr	r1, [r0, #0x18]
1000b286: 2001         	movs	r0, #0x1
1000b288: f7fb fde6    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x4434
1000b28c: 4601         	mov	r1, r0
1000b28e: 9800         	ldr	r0, [sp]
1000b290: f7fb fdc2    	bl	0x10006e18 <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::hc18d656116c887ea> @ imm = #-0x447c
1000b294: 9801         	ldr	r0, [sp, #0x4]
1000b296: 6940         	ldr	r0, [r0, #0x14]
1000b298: b00a         	add	sp, #0x28
1000b29a: bd80         	pop	{r7, pc}

1000b29c <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::StoppableClock>::disable::h39c992e01a04cc90>:
1000b29c: b580         	push	{r7, lr}
1000b29e: af00         	add	r7, sp, #0x0
1000b2a0: b08e         	sub	sp, #0x38
1000b2a2: 9003         	str	r0, [sp, #0xc]
1000b2a4: 1d00         	adds	r0, r0, #0x4
1000b2a6: f7fc f993    	bl	0x100075d0 <rp2040_hal::clocks::ShareableClocks::get::h5ad35f6972a797f2> @ imm = #-0x3cda
1000b2aa: 9004         	str	r0, [sp, #0x10]
1000b2ac: 306c         	adds	r0, #0x6c
1000b2ae: 9002         	str	r0, [sp, #0x8]
1000b2b0: 9007         	str	r0, [sp, #0x1c]
1000b2b2: 9009         	str	r0, [sp, #0x24]
1000b2b4: 900a         	str	r0, [sp, #0x28]
1000b2b6: f000 ff06    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0xe0c
1000b2ba: 9000         	str	r0, [sp]
1000b2bc: 9008         	str	r0, [sp, #0x20]
1000b2be: 9005         	str	r0, [sp, #0x14]
1000b2c0: 2000         	movs	r0, #0x0
1000b2c2: 9001         	str	r0, [sp, #0x4]
1000b2c4: f7fa ffce    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x5064
1000b2c8: 4601         	mov	r1, r0
1000b2ca: 9800         	ldr	r0, [sp]
1000b2cc: f7fa ffe9    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x502e
1000b2d0: 9901         	ldr	r1, [sp, #0x4]
1000b2d2: f7fa ffde    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x5044
1000b2d6: 9006         	str	r0, [sp, #0x18]
1000b2d8: a805         	add	r0, sp, #0x14
1000b2da: a906         	add	r1, sp, #0x18
1000b2dc: f000 f80a    	bl	0x1000b2f4 <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::StoppableClock>::disable::{{closure}}::h85cf440c7656dea6> @ imm = #0x14
1000b2e0: 4601         	mov	r1, r0
1000b2e2: 9802         	ldr	r0, [sp, #0x8]
1000b2e4: 6809         	ldr	r1, [r1]
1000b2e6: 900b         	str	r0, [sp, #0x2c]
1000b2e8: 910c         	str	r1, [sp, #0x30]
1000b2ea: 900d         	str	r0, [sp, #0x34]
1000b2ec: f000 ff56    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0xeac
1000b2f0: b00e         	add	sp, #0x38
1000b2f2: bd80         	pop	{r7, pc}

1000b2f4 <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::StoppableClock>::disable::{{closure}}::h85cf440c7656dea6>:
1000b2f4: b580         	push	{r7, lr}
1000b2f6: af00         	add	r7, sp, #0x0
1000b2f8: b08a         	sub	sp, #0x28
1000b2fa: aa03         	add	r2, sp, #0xc
1000b2fc: 9201         	str	r2, [sp, #0x4]
1000b2fe: 460a         	mov	r2, r1
1000b300: 4601         	mov	r1, r0
1000b302: 9801         	ldr	r0, [sp, #0x4]
1000b304: 6001         	str	r1, [r0]
1000b306: 6042         	str	r2, [r0, #0x4]
1000b308: 6082         	str	r2, [r0, #0x8]
1000b30a: 60c2         	str	r2, [r0, #0xc]
1000b30c: ab07         	add	r3, sp, #0x1c
1000b30e: 210b         	movs	r1, #0xb
1000b310: 7019         	strb	r1, [r3]
1000b312: 6142         	str	r2, [r0, #0x14]
1000b314: aa08         	add	r2, sp, #0x20
1000b316: 7111         	strb	r1, [r2, #0x4]
1000b318: 6941         	ldr	r1, [r0, #0x14]
1000b31a: 9100         	str	r1, [sp]
1000b31c: 6981         	ldr	r1, [r0, #0x18]
1000b31e: 2001         	movs	r0, #0x1
1000b320: f7fb fd9a    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x44cc
1000b324: f7fa ff9e    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x50c4
1000b328: 4601         	mov	r1, r0
1000b32a: 9800         	ldr	r0, [sp]
1000b32c: f7fb fd80    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x4500
1000b330: 9801         	ldr	r0, [sp, #0x4]
1000b332: 6940         	ldr	r0, [r0, #0x14]
1000b334: b00a         	add	sp, #0x28
1000b336: bd80         	pop	{r7, pc}

1000b338 <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::Clock>::configure_clock::ha356c9e7d40f9e12>:
1000b338: b580         	push	{r7, lr}
1000b33a: af00         	add	r7, sp, #0x0
1000b33c: b0a4         	sub	sp, #0x90
1000b33e: 910b         	str	r1, [sp, #0x2c]
1000b340: 4601         	mov	r1, r0
1000b342: 980b         	ldr	r0, [sp, #0x2c]
1000b344: 910c         	str	r1, [sp, #0x30]
1000b346: 920d         	str	r2, [sp, #0x34]
1000b348: 911c         	str	r1, [sp, #0x70]
1000b34a: 901d         	str	r0, [sp, #0x74]
1000b34c: 495d         	ldr	r1, [pc, #0x174]        @ 0x1000b4c4 <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::Clock>::configure_clock::ha356c9e7d40f9e12+0x18c>
1000b34e: 911e         	str	r1, [sp, #0x78]
1000b350: f7fc f921    	bl	0x10007596 <rp2040_hal::clocks::clock_sources::<impl rp2040_hal::clocks::ClockSource for rp2040_hal::pll::PhaseLockedLoop<rp2040_hal::pll::Locked,rp2040_pac::PLL_USB>>::get_freq::he7a0e396da435ca1> @ imm = #-0x3dbe
1000b354: 495c         	ldr	r1, [pc, #0x170]        @ 0x1000b4c8 <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::Clock>::configure_clock::ha356c9e7d40f9e12+0x190>
1000b356: f7fb fd58    	bl	0x10006e0a <<T as core::convert::Into<U>>::into::hd9da2216767de703> @ imm = #-0x4550
1000b35a: 900f         	str	r0, [sp, #0x3c]
1000b35c: a80d         	add	r0, sp, #0x34
1000b35e: a90f         	add	r1, sp, #0x3c
1000b360: f7fa ffb9    	bl	0x100062d6 <core::cmp::PartialOrd::gt::hda2a2854aba77a5e> @ imm = #-0x508e
1000b364: 2800         	cmp	r0, #0x0
1000b366: d121         	bne	0x1000b3ac <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::Clock>::configure_clock::ha356c9e7d40f9e12+0x74> @ imm = #0x42
1000b368: e7ff         	b	0x1000b36a <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::Clock>::configure_clock::ha356c9e7d40f9e12+0x32> @ imm = #-0x2
1000b36a: a80f         	add	r0, sp, #0x3c
1000b36c: f7fb fdfe    	bl	0x10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868> @ imm = #-0x4404
1000b370: 9007         	str	r0, [sp, #0x1c]
1000b372: a80d         	add	r0, sp, #0x34
1000b374: f7fb fdfa    	bl	0x10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868> @ imm = #-0x440c
1000b378: 4601         	mov	r1, r0
1000b37a: 9807         	ldr	r0, [sp, #0x1c]
1000b37c: f7fc faf4    	bl	0x10007968 <rp2040_hal::clocks::fractional_div::hd140809978073745> @ imm = #-0x3a18
1000b380: 9008         	str	r0, [sp, #0x20]
1000b382: 460a         	mov	r2, r1
1000b384: 9908         	ldr	r1, [sp, #0x20]
1000b386: ab15         	add	r3, sp, #0x54
1000b388: 2002         	movs	r0, #0x2
1000b38a: 7018         	strb	r0, [r3]
1000b38c: 9b15         	ldr	r3, [sp, #0x54]
1000b38e: a813         	add	r0, sp, #0x4c
1000b390: 9009         	str	r0, [sp, #0x24]
1000b392: f7fb fbff    	bl	0x10006b94 <core::option::Option<T>::ok_or::h81824975fa84ee0f> @ imm = #-0x4802
1000b396: 9909         	ldr	r1, [sp, #0x24]
1000b398: a811         	add	r0, sp, #0x44
1000b39a: 900a         	str	r0, [sp, #0x28]
1000b39c: f7fb ff21    	bl	0x100071e2 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h460b484606f6b3bdE> @ imm = #-0x41be
1000b3a0: 980a         	ldr	r0, [sp, #0x28]
1000b3a2: 7800         	ldrb	r0, [r0]
1000b3a4: 07c0         	lsls	r0, r0, #0x1f
1000b3a6: 2800         	cmp	r0, #0x0
1000b3a8: d007         	beq	0x1000b3ba <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::Clock>::configure_clock::ha356c9e7d40f9e12+0x82> @ imm = #0xe
1000b3aa: e011         	b	0x1000b3d0 <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::Clock>::configure_clock::ha356c9e7d40f9e12+0x98> @ imm = #0x22
1000b3ac: a910         	add	r1, sp, #0x40
1000b3ae: 2000         	movs	r0, #0x0
1000b3b0: 7008         	strb	r0, [r1]
1000b3b2: 9810         	ldr	r0, [sp, #0x40]
1000b3b4: a90e         	add	r1, sp, #0x38
1000b3b6: 7008         	strb	r0, [r1]
1000b3b8: e080         	b	0x1000b4bc <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::Clock>::configure_clock::ha356c9e7d40f9e12+0x184> @ imm = #0x100
1000b3ba: 980c         	ldr	r0, [sp, #0x30]
1000b3bc: 9912         	ldr	r1, [sp, #0x48]
1000b3be: 9106         	str	r1, [sp, #0x18]
1000b3c0: 911f         	str	r1, [sp, #0x7c]
1000b3c2: f7ff ff03    	bl	0x1000b1cc <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::ClockDivision>::get_div::h2ebc0b35b7a25979> @ imm = #-0x1fa
1000b3c6: 4601         	mov	r1, r0
1000b3c8: 9806         	ldr	r0, [sp, #0x18]
1000b3ca: 4288         	cmp	r0, r1
1000b3cc: d819         	bhi	0x1000b402 <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::Clock>::configure_clock::ha356c9e7d40f9e12+0xca> @ imm = #0x32
1000b3ce: e009         	b	0x1000b3e4 <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::Clock>::configure_clock::ha356c9e7d40f9e12+0xac> @ imm = #0x12
1000b3d0: a811         	add	r0, sp, #0x44
1000b3d2: 7840         	ldrb	r0, [r0, #0x1]
1000b3d4: a923         	add	r1, sp, #0x8c
1000b3d6: 7008         	strb	r0, [r1]
1000b3d8: 493b         	ldr	r1, [pc, #0xec]         @ 0x1000b4c8 <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::Clock>::configure_clock::ha356c9e7d40f9e12+0x190>
1000b3da: f7fa fee8    	bl	0x100061ae <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4d80d59e43eeb34cE> @ imm = #-0x5230
1000b3de: a90e         	add	r1, sp, #0x38
1000b3e0: 7008         	strb	r0, [r1]
1000b3e2: e06b         	b	0x1000b4bc <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::Clock>::configure_clock::ha356c9e7d40f9e12+0x184> @ imm = #0xd6
1000b3e4: 980c         	ldr	r0, [sp, #0x30]
1000b3e6: f7ff ff59    	bl	0x1000b29c <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::StoppableClock>::disable::h39c992e01a04cc90> @ imm = #-0x14e
1000b3ea: 2000         	movs	r0, #0x0
1000b3ec: f7fb fd8e    	bl	0x10006f0c <fugit::rate::Rate<u32,_,_>::Hz::hf33f06883bd1b051> @ imm = #-0x44e4
1000b3f0: 4601         	mov	r1, r0
1000b3f2: 980c         	ldr	r0, [sp, #0x30]
1000b3f4: 9116         	str	r1, [sp, #0x58]
1000b3f6: a916         	add	r1, sp, #0x58
1000b3f8: f7fa ff6d    	bl	0x100062d6 <core::cmp::PartialOrd::gt::hda2a2854aba77a5e> @ imm = #-0x5126
1000b3fc: 2800         	cmp	r0, #0x0
1000b3fe: d12c         	bne	0x1000b45a <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::Clock>::configure_clock::ha356c9e7d40f9e12+0x122> @ imm = #0x58
1000b400: e004         	b	0x1000b40c <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::Clock>::configure_clock::ha356c9e7d40f9e12+0xd4> @ imm = #0x8
1000b402: 9906         	ldr	r1, [sp, #0x18]
1000b404: 980c         	ldr	r0, [sp, #0x30]
1000b406: f7ff fe9f    	bl	0x1000b148 <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::ClockDivision>::set_div::h3f43d08c2b8e1482> @ imm = #-0x2c2
1000b40a: e7eb         	b	0x1000b3e4 <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::Clock>::configure_clock::ha356c9e7d40f9e12+0xac> @ imm = #-0x2a
1000b40c: 980c         	ldr	r0, [sp, #0x30]
1000b40e: 990b         	ldr	r1, [sp, #0x2c]
1000b410: f7ff fe1f    	bl	0x1000b052 <rp2040_hal::clocks::RtcClock::set_aux::h4e5143d68d1f631a> @ imm = #-0x3c2
1000b414: 980c         	ldr	r0, [sp, #0x30]
1000b416: f7ff fef5    	bl	0x1000b204 <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::StoppableClock>::enable::h41ee2edb5902db82> @ imm = #-0x216
1000b41a: 980c         	ldr	r0, [sp, #0x30]
1000b41c: 9906         	ldr	r1, [sp, #0x18]
1000b41e: f7ff fe93    	bl	0x1000b148 <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::ClockDivision>::set_div::h3f43d08c2b8e1482> @ imm = #-0x2da
1000b422: a80f         	add	r0, sp, #0x3c
1000b424: f7fb fda2    	bl	0x10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868> @ imm = #-0x44bc
1000b428: 9906         	ldr	r1, [sp, #0x18]
1000b42a: f7fc fa9d    	bl	0x10007968 <rp2040_hal::clocks::fractional_div::hd140809978073745> @ imm = #-0x3ac6
1000b42e: 9003         	str	r0, [sp, #0xc]
1000b430: 460a         	mov	r2, r1
1000b432: 9903         	ldr	r1, [sp, #0xc]
1000b434: ab1b         	add	r3, sp, #0x6c
1000b436: 2001         	movs	r0, #0x1
1000b438: 7018         	strb	r0, [r3]
1000b43a: 9b1b         	ldr	r3, [sp, #0x6c]
1000b43c: a819         	add	r0, sp, #0x64
1000b43e: 9004         	str	r0, [sp, #0x10]
1000b440: f7fb fba8    	bl	0x10006b94 <core::option::Option<T>::ok_or::h81824975fa84ee0f> @ imm = #-0x48b0
1000b444: 9904         	ldr	r1, [sp, #0x10]
1000b446: a817         	add	r0, sp, #0x5c
1000b448: 9005         	str	r0, [sp, #0x14]
1000b44a: f7fb feca    	bl	0x100071e2 <_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h460b484606f6b3bdE> @ imm = #-0x426c
1000b44e: 9805         	ldr	r0, [sp, #0x14]
1000b450: 7800         	ldrb	r0, [r0]
1000b452: 07c0         	lsls	r0, r0, #0x1f
1000b454: 2800         	cmp	r0, #0x0
1000b456: d01d         	beq	0x1000b494 <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::Clock>::configure_clock::ha356c9e7d40f9e12+0x15c> @ imm = #0x3a
1000b458: e026         	b	0x1000b4a8 <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::Clock>::configure_clock::ha356c9e7d40f9e12+0x170> @ imm = #0x4c
1000b45a: 980c         	ldr	r0, [sp, #0x30]
1000b45c: f7fb fd86    	bl	0x10006f6c <fugit::rate::Rate<u32,_,_>::to_Hz::h102baf28001c2868> @ imm = #-0x44f4
1000b460: 4601         	mov	r1, r0
1000b462: 9102         	str	r1, [sp, #0x8]
1000b464: 2800         	cmp	r0, #0x0
1000b466: d00a         	beq	0x1000b47e <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::Clock>::configure_clock::ha356c9e7d40f9e12+0x146> @ imm = #0x14
1000b468: e7ff         	b	0x1000b46a <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::Clock>::configure_clock::ha356c9e7d40f9e12+0x132> @ imm = #-0x2
1000b46a: 9902         	ldr	r1, [sp, #0x8]
1000b46c: 4815         	ldr	r0, [pc, #0x54]         @ 0x1000b4c4 <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::Clock>::configure_clock::ha356c9e7d40f9e12+0x18c>
1000b46e: f002 f995    	bl	0x1000d79c <__aeabi_uidiv> @ imm = #0x232a
1000b472: 1c40         	adds	r0, r0, #0x1
1000b474: 9001         	str	r0, [sp, #0x4]
1000b476: 2000         	movs	r0, #0x0
1000b478: 2800         	cmp	r0, #0x0
1000b47a: d108         	bne	0x1000b48e <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::Clock>::configure_clock::ha356c9e7d40f9e12+0x156> @ imm = #0x10
1000b47c: e002         	b	0x1000b484 <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::Clock>::configure_clock::ha356c9e7d40f9e12+0x14c> @ imm = #0x4
1000b47e: 4812         	ldr	r0, [pc, #0x48]         @ 0x1000b4c8 <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::Clock>::configure_clock::ha356c9e7d40f9e12+0x190>
1000b480: f002 f81e    	bl	0x1000d4c0 <core::panicking::panic_const::panic_const_div_by_zero::ha09f740279da4cf0> @ imm = #0x203c
1000b484: 9801         	ldr	r0, [sp, #0x4]
1000b486: 9020         	str	r0, [sp, #0x80]
1000b488: f7fc f800    	bl	0x1000748c <cortex_m::asm::delay::h59aaecaf49566739> @ imm = #-0x4000
1000b48c: e7be         	b	0x1000b40c <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::Clock>::configure_clock::ha356c9e7d40f9e12+0xd4> @ imm = #-0x84
1000b48e: 480e         	ldr	r0, [pc, #0x38]         @ 0x1000b4c8 <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::Clock>::configure_clock::ha356c9e7d40f9e12+0x190>
1000b490: f001 ffce    	bl	0x1000d430 <core::panicking::panic_const::panic_const_add_overflow::h73b6e802431fc142> @ imm = #0x1f9c
1000b494: 9818         	ldr	r0, [sp, #0x60]
1000b496: 9021         	str	r0, [sp, #0x84]
1000b498: f7fa feeb    	bl	0x10006272 <<u32 as fugit::rate::ExtU32>::Hz::ha421d0a6a3793ef2> @ imm = #-0x522a
1000b49c: 990c         	ldr	r1, [sp, #0x30]
1000b49e: 6008         	str	r0, [r1]
1000b4a0: a90e         	add	r1, sp, #0x38
1000b4a2: 2003         	movs	r0, #0x3
1000b4a4: 7008         	strb	r0, [r1]
1000b4a6: e009         	b	0x1000b4bc <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::Clock>::configure_clock::ha356c9e7d40f9e12+0x184> @ imm = #0x12
1000b4a8: a817         	add	r0, sp, #0x5c
1000b4aa: 7840         	ldrb	r0, [r0, #0x1]
1000b4ac: a922         	add	r1, sp, #0x88
1000b4ae: 7008         	strb	r0, [r1]
1000b4b0: 4905         	ldr	r1, [pc, #0x14]         @ 0x1000b4c8 <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::Clock>::configure_clock::ha356c9e7d40f9e12+0x190>
1000b4b2: f7fa fe7c    	bl	0x100061ae <_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h4d80d59e43eeb34cE> @ imm = #-0x5308
1000b4b6: a90e         	add	r1, sp, #0x38
1000b4b8: 7008         	strb	r0, [r1]
1000b4ba: e7ff         	b	0x1000b4bc <<rp2040_hal::clocks::RtcClock as rp2040_hal::clocks::Clock>::configure_clock::ha356c9e7d40f9e12+0x184> @ imm = #-0x2
1000b4bc: 980e         	ldr	r0, [sp, #0x38]
1000b4be: b024         	add	sp, #0x90
1000b4c0: bd80         	pop	{r7, pc}
1000b4c2: 46c0         	mov	r8, r8
1000b4c4: 40 59 73 07  	.word	0x07735940
1000b4c8: 94 1f 01 10  	.word	0x10011f94

1000b4cc <rp2040_hal::clocks::InitError::XoscErr::h22520728be2cfe7b>:
1000b4cc: b580         	push	{r7, lr}
1000b4ce: af00         	add	r7, sp, #0x0
1000b4d0: b082         	sub	sp, #0x8
1000b4d2: 4601         	mov	r1, r0
1000b4d4: a801         	add	r0, sp, #0x4
1000b4d6: 7001         	strb	r1, [r0]
1000b4d8: 4668         	mov	r0, sp
1000b4da: 7041         	strb	r1, [r0, #0x1]
1000b4dc: 2100         	movs	r1, #0x0
1000b4de: 7001         	strb	r1, [r0]
1000b4e0: 7841         	ldrb	r1, [r0, #0x1]
1000b4e2: 9800         	ldr	r0, [sp]
1000b4e4: b002         	add	sp, #0x8
1000b4e6: bd80         	pop	{r7, pc}

1000b4e8 <rp2040_hal::clocks::InitError::PllError::hbdfa688b1c849207>:
1000b4e8: b580         	push	{r7, lr}
1000b4ea: af00         	add	r7, sp, #0x0
1000b4ec: b082         	sub	sp, #0x8
1000b4ee: 4601         	mov	r1, r0
1000b4f0: a801         	add	r0, sp, #0x4
1000b4f2: 7001         	strb	r1, [r0]
1000b4f4: 4668         	mov	r0, sp
1000b4f6: 7041         	strb	r1, [r0, #0x1]
1000b4f8: 2101         	movs	r1, #0x1
1000b4fa: 7001         	strb	r1, [r0]
1000b4fc: 7841         	ldrb	r1, [r0, #0x1]
1000b4fe: 9800         	ldr	r0, [sp]
1000b500: b002         	add	sp, #0x8
1000b502: bd80         	pop	{r7, pc}

1000b504 <rp2040_hal::clocks::InitError::ClockError::h068304f60d6b59cc>:
1000b504: b580         	push	{r7, lr}
1000b506: af00         	add	r7, sp, #0x0
1000b508: b082         	sub	sp, #0x8
1000b50a: 4601         	mov	r1, r0
1000b50c: a801         	add	r0, sp, #0x4
1000b50e: 7001         	strb	r1, [r0]
1000b510: 4668         	mov	r0, sp
1000b512: 7041         	strb	r1, [r0, #0x1]
1000b514: 2102         	movs	r1, #0x2
1000b516: 7001         	strb	r1, [r0]
1000b518: 7841         	ldrb	r1, [r0, #0x1]
1000b51a: 9800         	ldr	r0, [sp]
1000b51c: b002         	add	sp, #0x8
1000b51e: bd80         	pop	{r7, pc}

1000b520 <_critical_section_1_0_acquire>:
1000b520: b580         	push	{r7, lr}
1000b522: af00         	add	r7, sp, #0x0
1000b524: f7fc faa4    	bl	0x10007a70 <<rp2040_hal::critical_section_impl::RpSpinlockCs as critical_section::Impl>::acquire::h5203de78caa15032> @ imm = #-0x3ab8
1000b528: bd80         	pop	{r7, pc}

1000b52a <_critical_section_1_0_release>:
1000b52a: b580         	push	{r7, lr}
1000b52c: af00         	add	r7, sp, #0x0
1000b52e: b082         	sub	sp, #0x8
1000b530: a901         	add	r1, sp, #0x4
1000b532: 7008         	strb	r0, [r1]
1000b534: f7fc faa1    	bl	0x10007a7a <<rp2040_hal::critical_section_impl::RpSpinlockCs as critical_section::Impl>::release::ha39b8ce8c5a5f2e6> @ imm = #-0x3abe
1000b538: b002         	add	sp, #0x8
1000b53a: bd80         	pop	{r7, pc}

1000b53c <<rp2040_hal::gpio::pin::DynBankId as core::cmp::PartialEq>::eq::hb496cef8c886c6e3>:
1000b53c: b580         	push	{r7, lr}
1000b53e: af00         	add	r7, sp, #0x0
1000b540: b084         	sub	sp, #0x10
1000b542: 9000         	str	r0, [sp]
1000b544: 9101         	str	r1, [sp, #0x4]
1000b546: 7800         	ldrb	r0, [r0]
1000b548: 9002         	str	r0, [sp, #0x8]
1000b54a: 7809         	ldrb	r1, [r1]
1000b54c: 9103         	str	r1, [sp, #0xc]
1000b54e: 1a40         	subs	r0, r0, r1
1000b550: 4241         	rsbs	r1, r0, #0
1000b552: 4148         	adcs	r0, r1
1000b554: b004         	add	sp, #0x10
1000b556: bd80         	pop	{r7, pc}

1000b558 <<rp2040_hal::gpio::pull::PullDown as rp2040_hal::gpio::pull::pull_sealed::PullType>::from::h504018fbb4edbe1d>:
1000b558: b580         	push	{r7, lr}
1000b55a: af00         	add	r7, sp, #0x0
1000b55c: b081         	sub	sp, #0x4
1000b55e: 4669         	mov	r1, sp
1000b560: 7008         	strb	r0, [r1]
1000b562: b001         	add	sp, #0x4
1000b564: bd80         	pop	{r7, pc}

1000b566 <<rp2040_hal::gpio::pull::PullDown as rp2040_hal::gpio::pull::pull_sealed::PullType>::as_dyn::h1158ba87f242af5b>:
1000b566: b580         	push	{r7, lr}
1000b568: af00         	add	r7, sp, #0x0
1000b56a: b082         	sub	sp, #0x8
1000b56c: 9001         	str	r0, [sp, #0x4]
1000b56e: 4669         	mov	r1, sp
1000b570: 2002         	movs	r0, #0x2
1000b572: 7008         	strb	r0, [r1]
1000b574: 9800         	ldr	r0, [sp]
1000b576: b002         	add	sp, #0x8
1000b578: bd80         	pop	{r7, pc}
1000b57a: d4d4         	bmi	0x1000b526 <_critical_section_1_0_acquire+0x6> @ imm = #-0x58

1000b57c <rp2040_hal::gpio::bank0::Pins::new::he02fec9b5a9b4354>:
1000b57c: b580         	push	{r7, lr}
1000b57e: af00         	add	r7, sp, #0x0
1000b580: b0bc         	sub	sp, #0xf0
1000b582: 4601         	mov	r1, r0
1000b584: 9109         	str	r1, [sp, #0x24]
1000b586: 9118         	str	r1, [sp, #0x60]
1000b588: a80b         	add	r0, sp, #0x2c
1000b58a: f000 fa15    	bl	0x1000b9b8 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PADS_BANK0>::reset_bring_down::h3f1e964befebf085> @ imm = #0x42a
1000b58e: 9909         	ldr	r1, [sp, #0x24]
1000b590: a80a         	add	r0, sp, #0x28
1000b592: f000 facd    	bl	0x1000bb30 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::IO_BANK0>::reset_bring_down::ha3d5c1033c503aee> @ imm = #0x59a
1000b596: 200d         	movs	r0, #0xd
1000b598: 0700         	lsls	r0, r0, #0x1c
1000b59a: 901a         	str	r0, [sp, #0x68]
1000b59c: 4948         	ldr	r1, [pc, #0x120]        @ 0x1000b6c0 <rp2040_hal::gpio::bank0::Pins::new::he02fec9b5a9b4354+0x144>
1000b59e: 4608         	mov	r0, r1
1000b5a0: f7ff ffcc    	bl	0x1000b53c <<rp2040_hal::gpio::pin::DynBankId as core::cmp::PartialEq>::eq::hb496cef8c886c6e3> @ imm = #-0x68
1000b5a4: 2800         	cmp	r0, #0x0
1000b5a6: d118         	bne	0x1000b5da <rp2040_hal::gpio::bank0::Pins::new::he02fec9b5a9b4354+0x5e> @ imm = #0x30
1000b5a8: e7ff         	b	0x1000b5aa <rp2040_hal::gpio::bank0::Pins::new::he02fec9b5a9b4354+0x2e> @ imm = #-0x2
1000b5aa: 200d         	movs	r0, #0xd
1000b5ac: 0700         	lsls	r0, r0, #0x1c
1000b5ae: 9007         	str	r0, [sp, #0x1c]
1000b5b0: 901e         	str	r0, [sp, #0x78]
1000b5b2: 4844         	ldr	r0, [pc, #0x110]        @ 0x1000b6c4 <rp2040_hal::gpio::bank0::Pins::new::he02fec9b5a9b4354+0x148>
1000b5b4: 9025         	str	r0, [sp, #0x94]
1000b5b6: 902f         	str	r0, [sp, #0xbc]
1000b5b8: 2100         	movs	r1, #0x0
1000b5ba: 9108         	str	r1, [sp, #0x20]
1000b5bc: 9130         	str	r1, [sp, #0xc0]
1000b5be: 9031         	str	r0, [sp, #0xc4]
1000b5c0: f000 fdec    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0xbd8
1000b5c4: 9807         	ldr	r0, [sp, #0x1c]
1000b5c6: 9908         	ldr	r1, [sp, #0x20]
1000b5c8: 901f         	str	r0, [sp, #0x7c]
1000b5ca: 483f         	ldr	r0, [pc, #0xfc]         @ 0x1000b6c8 <rp2040_hal::gpio::bank0::Pins::new::he02fec9b5a9b4354+0x14c>
1000b5cc: 9023         	str	r0, [sp, #0x8c]
1000b5ce: 9035         	str	r0, [sp, #0xd4]
1000b5d0: 9136         	str	r1, [sp, #0xd8]
1000b5d2: 9037         	str	r0, [sp, #0xdc]
1000b5d4: f000 fde2    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0xbc4
1000b5d8: e017         	b	0x1000b60a <rp2040_hal::gpio::bank0::Pins::new::he02fec9b5a9b4354+0x8e> @ imm = #0x2e
1000b5da: 200d         	movs	r0, #0xd
1000b5dc: 0700         	lsls	r0, r0, #0x1c
1000b5de: 9005         	str	r0, [sp, #0x14]
1000b5e0: 9020         	str	r0, [sp, #0x80]
1000b5e2: 483a         	ldr	r0, [pc, #0xe8]         @ 0x1000b6cc <rp2040_hal::gpio::bank0::Pins::new::he02fec9b5a9b4354+0x150>
1000b5e4: 9024         	str	r0, [sp, #0x90]
1000b5e6: 9032         	str	r0, [sp, #0xc8]
1000b5e8: 2100         	movs	r1, #0x0
1000b5ea: 9106         	str	r1, [sp, #0x18]
1000b5ec: 9133         	str	r1, [sp, #0xcc]
1000b5ee: 9034         	str	r0, [sp, #0xd0]
1000b5f0: f000 fdd4    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0xba8
1000b5f4: 9805         	ldr	r0, [sp, #0x14]
1000b5f6: 9906         	ldr	r1, [sp, #0x18]
1000b5f8: 9021         	str	r0, [sp, #0x84]
1000b5fa: 4835         	ldr	r0, [pc, #0xd4]         @ 0x1000b6d0 <rp2040_hal::gpio::bank0::Pins::new::he02fec9b5a9b4354+0x154>
1000b5fc: 9022         	str	r0, [sp, #0x88]
1000b5fe: 9038         	str	r0, [sp, #0xe0]
1000b600: 9139         	str	r1, [sp, #0xe4]
1000b602: 903a         	str	r0, [sp, #0xe8]
1000b604: f000 fdca    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0xb94
1000b608: e7ff         	b	0x1000b60a <rp2040_hal::gpio::bank0::Pins::new::he02fec9b5a9b4354+0x8e> @ imm = #-0x2
1000b60a: 9909         	ldr	r1, [sp, #0x24]
1000b60c: a80a         	add	r0, sp, #0x28
1000b60e: f000 fa21    	bl	0x1000ba54 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::IO_BANK0>::reset_bring_up::h8ee8d60b7ddca591> @ imm = #0x442
1000b612: 9909         	ldr	r1, [sp, #0x24]
1000b614: a80b         	add	r0, sp, #0x2c
1000b616: f000 f961    	bl	0x1000b8dc <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PADS_BANK0>::reset_bring_up::h1629dab20d6441cc> @ imm = #0x2c2
1000b61a: a80f         	add	r0, sp, #0x3c
1000b61c: 9004         	str	r0, [sp, #0x10]
1000b61e: 2100         	movs	r1, #0x0
1000b620: 221d         	movs	r2, #0x1d
1000b622: f7fb f964    	bl	0x100068ee <core::ops::range::RangeInclusive<Idx>::new::hb333347fec324ac4> @ imm = #-0x4d38
1000b626: 9904         	ldr	r1, [sp, #0x10]
1000b628: a80c         	add	r0, sp, #0x30
1000b62a: f7fb fd21    	bl	0x10007070 <<I as core::iter::traits::collect::IntoIterator>::into_iter::h7bb2183b6de5bb54> @ imm = #-0x45be
1000b62e: 980e         	ldr	r0, [sp, #0x38]
1000b630: 9014         	str	r0, [sp, #0x50]
1000b632: 980d         	ldr	r0, [sp, #0x34]
1000b634: 9013         	str	r0, [sp, #0x4c]
1000b636: 980c         	ldr	r0, [sp, #0x30]
1000b638: 9012         	str	r0, [sp, #0x48]
1000b63a: e7ff         	b	0x1000b63c <rp2040_hal::gpio::bank0::Pins::new::he02fec9b5a9b4354+0xc0> @ imm = #-0x2
1000b63c: a812         	add	r0, sp, #0x48
1000b63e: f7fb f9a5    	bl	0x1000698c <core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive<A>>::next::h3917bafb1c641006> @ imm = #-0x4cb6
1000b642: 9015         	str	r0, [sp, #0x54]
1000b644: 9116         	str	r1, [sp, #0x58]
1000b646: 9815         	ldr	r0, [sp, #0x54]
1000b648: 2800         	cmp	r0, #0x0
1000b64a: d102         	bne	0x1000b652 <rp2040_hal::gpio::bank0::Pins::new::he02fec9b5a9b4354+0xd6> @ imm = #0x4
1000b64c: e7ff         	b	0x1000b64e <rp2040_hal::gpio::bank0::Pins::new::he02fec9b5a9b4354+0xd2> @ imm = #-0x2
1000b64e: b03c         	add	sp, #0xf0
1000b650: bd80         	pop	{r7, pc}
1000b652: 9816         	ldr	r0, [sp, #0x58]
1000b654: 9003         	str	r0, [sp, #0xc]
1000b656: 901b         	str	r0, [sp, #0x6c]
1000b658: a90b         	add	r1, sp, #0x2c
1000b65a: 913b         	str	r1, [sp, #0xec]
1000b65c: 491d         	ldr	r1, [pc, #0x74]         @ 0x1000b6d4 <rp2040_hal::gpio::bank0::Pins::new::he02fec9b5a9b4354+0x158>
1000b65e: 911c         	str	r1, [sp, #0x70]
1000b660: 901d         	str	r0, [sp, #0x74]
1000b662: 281e         	cmp	r0, #0x1e
1000b664: d305         	blo	0x1000b672 <rp2040_hal::gpio::bank0::Pins::new::he02fec9b5a9b4354+0xf6> @ imm = #0xa
1000b666: e7ff         	b	0x1000b668 <rp2040_hal::gpio::bank0::Pins::new::he02fec9b5a9b4354+0xec> @ imm = #-0x2
1000b668: 9803         	ldr	r0, [sp, #0xc]
1000b66a: 4a1b         	ldr	r2, [pc, #0x6c]         @ 0x1000b6d8 <rp2040_hal::gpio::bank0::Pins::new::he02fec9b5a9b4354+0x15c>
1000b66c: 211e         	movs	r1, #0x1e
1000b66e: f000 fee7    	bl	0x1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86> @ imm = #0xdce
1000b672: 9803         	ldr	r0, [sp, #0xc]
1000b674: 0080         	lsls	r0, r0, #0x2
1000b676: 4919         	ldr	r1, [pc, #0x64]         @ 0x1000b6dc <rp2040_hal::gpio::bank0::Pins::new::he02fec9b5a9b4354+0x160>
1000b678: 1840         	adds	r0, r0, r1
1000b67a: 9002         	str	r0, [sp, #0x8]
1000b67c: 9028         	str	r0, [sp, #0xa0]
1000b67e: 902a         	str	r0, [sp, #0xa8]
1000b680: 902b         	str	r0, [sp, #0xac]
1000b682: f000 fd20    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0xa40
1000b686: 9000         	str	r0, [sp]
1000b688: 9029         	str	r0, [sp, #0xa4]
1000b68a: 9026         	str	r0, [sp, #0x98]
1000b68c: 2000         	movs	r0, #0x0
1000b68e: 9001         	str	r0, [sp, #0x4]
1000b690: f7fa fde8    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x5430
1000b694: 4601         	mov	r1, r0
1000b696: 9800         	ldr	r0, [sp]
1000b698: f7fa fe03    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x53fa
1000b69c: 9901         	ldr	r1, [sp, #0x4]
1000b69e: f7fa fdf8    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x5410
1000b6a2: 9027         	str	r0, [sp, #0x9c]
1000b6a4: a826         	add	r0, sp, #0x98
1000b6a6: a927         	add	r1, sp, #0x9c
1000b6a8: f000 f81a    	bl	0x1000b6e0 <rp2040_hal::gpio::bank0::Pins::new::{{closure}}::hfce27f6ed0a42ffe> @ imm = #0x34
1000b6ac: 4601         	mov	r1, r0
1000b6ae: 9802         	ldr	r0, [sp, #0x8]
1000b6b0: 6809         	ldr	r1, [r1]
1000b6b2: 902c         	str	r0, [sp, #0xb0]
1000b6b4: 912d         	str	r1, [sp, #0xb4]
1000b6b6: 902e         	str	r0, [sp, #0xb8]
1000b6b8: f000 fd70    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0xae0
1000b6bc: e7be         	b	0x1000b63c <rp2040_hal::gpio::bank0::Pins::new::he02fec9b5a9b4354+0xc0> @ imm = #-0x84
1000b6be: 46c0         	mov	r8, r8
1000b6c0: a0 1b 01 10  	.word	0x10011ba0
1000b6c4: 40 00 00 d0  	.word	0xd0000040
1000b6c8: 30 00 00 d0  	.word	0xd0000030
1000b6cc: 20 00 00 d0  	.word	0xd0000020
1000b6d0: 10 00 00 d0  	.word	0xd0000010
1000b6d4: 00 c0 01 40  	.word	0x4001c000
1000b6d8: fc 17 01 10  	.word	0x100117fc
1000b6dc: 04 c0 01 40  	.word	0x4001c004

1000b6e0 <rp2040_hal::gpio::bank0::Pins::new::{{closure}}::hfce27f6ed0a42ffe>:
1000b6e0: b580         	push	{r7, lr}
1000b6e2: af00         	add	r7, sp, #0x0
1000b6e4: b08a         	sub	sp, #0x28
1000b6e6: aa03         	add	r2, sp, #0xc
1000b6e8: 9201         	str	r2, [sp, #0x4]
1000b6ea: 460a         	mov	r2, r1
1000b6ec: 4601         	mov	r1, r0
1000b6ee: 9801         	ldr	r0, [sp, #0x4]
1000b6f0: 6001         	str	r1, [r0]
1000b6f2: 6042         	str	r2, [r0, #0x4]
1000b6f4: 6082         	str	r2, [r0, #0x8]
1000b6f6: 60c2         	str	r2, [r0, #0xc]
1000b6f8: ab07         	add	r3, sp, #0x1c
1000b6fa: 2106         	movs	r1, #0x6
1000b6fc: 7019         	strb	r1, [r3]
1000b6fe: 6142         	str	r2, [r0, #0x14]
1000b700: aa08         	add	r2, sp, #0x20
1000b702: 7111         	strb	r1, [r2, #0x4]
1000b704: 6941         	ldr	r1, [r0, #0x14]
1000b706: 9100         	str	r1, [sp]
1000b708: 6981         	ldr	r1, [r0, #0x18]
1000b70a: 2001         	movs	r0, #0x1
1000b70c: f7fb fba4    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x48b8
1000b710: f7fa fda8    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x54b0
1000b714: 4601         	mov	r1, r0
1000b716: 9800         	ldr	r0, [sp]
1000b718: f7fb fb8a    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x48ec
1000b71c: 9801         	ldr	r0, [sp, #0x4]
1000b71e: 6940         	ldr	r0, [r0, #0x14]
1000b720: b00a         	add	sp, #0x28
1000b722: bd80         	pop	{r7, pc}

1000b724 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PLL_USB>::reset_bring_up::h3231a3c8ffd7831f>:
1000b724: b580         	push	{r7, lr}
1000b726: af00         	add	r7, sp, #0x0
1000b728: b09c         	sub	sp, #0x70
1000b72a: 9100         	str	r1, [sp]
1000b72c: 9006         	str	r0, [sp, #0x18]
1000b72e: 9107         	str	r1, [sp, #0x1c]
1000b730: 911b         	str	r1, [sp, #0x6c]
1000b732: 4820         	ldr	r0, [pc, #0x80]         @ 0x1000b7b4 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PLL_USB>::reset_bring_up::h3231a3c8ffd7831f+0x90>
1000b734: 9003         	str	r0, [sp, #0xc]
1000b736: 900a         	str	r0, [sp, #0x28]
1000b738: 900e         	str	r0, [sp, #0x38]
1000b73a: 9013         	str	r0, [sp, #0x4c]
1000b73c: 9014         	str	r0, [sp, #0x50]
1000b73e: f000 fcc2    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x984
1000b742: 9001         	str	r0, [sp, #0x4]
1000b744: 900f         	str	r0, [sp, #0x3c]
1000b746: 900c         	str	r0, [sp, #0x30]
1000b748: 2000         	movs	r0, #0x0
1000b74a: 9002         	str	r0, [sp, #0x8]
1000b74c: f7fa fd8a    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x54ec
1000b750: 4601         	mov	r1, r0
1000b752: 9801         	ldr	r0, [sp, #0x4]
1000b754: f7fa fda5    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x54b6
1000b758: 9902         	ldr	r1, [sp, #0x8]
1000b75a: f7fa fd9a    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x54cc
1000b75e: 900d         	str	r0, [sp, #0x34]
1000b760: a80c         	add	r0, sp, #0x30
1000b762: a90d         	add	r1, sp, #0x34
1000b764: f000 f82a    	bl	0x1000b7bc <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PLL_USB>::reset_bring_up::{{closure}}::hbe131f5b89dcac28> @ imm = #0x54
1000b768: 4601         	mov	r1, r0
1000b76a: 9803         	ldr	r0, [sp, #0xc]
1000b76c: 6809         	ldr	r1, [r1]
1000b76e: 9017         	str	r0, [sp, #0x5c]
1000b770: 9118         	str	r1, [sp, #0x60]
1000b772: 9019         	str	r0, [sp, #0x64]
1000b774: f000 fd12    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0xa24
1000b778: e7ff         	b	0x1000b77a <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PLL_USB>::reset_bring_up::h3231a3c8ffd7831f+0x56> @ imm = #-0x2
1000b77a: 9800         	ldr	r0, [sp]
1000b77c: 901a         	str	r0, [sp, #0x68]
1000b77e: 480d         	ldr	r0, [pc, #0x34]         @ 0x1000b7b4 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PLL_USB>::reset_bring_up::h3231a3c8ffd7831f+0x90>
1000b780: 9009         	str	r0, [sp, #0x24]
1000b782: 480d         	ldr	r0, [pc, #0x34]         @ 0x1000b7b8 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PLL_USB>::reset_bring_up::h3231a3c8ffd7831f+0x94>
1000b784: 900b         	str	r0, [sp, #0x2c]
1000b786: 9015         	str	r0, [sp, #0x54]
1000b788: 9016         	str	r0, [sp, #0x58]
1000b78a: f000 fc9c    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x938
1000b78e: 9005         	str	r0, [sp, #0x14]
1000b790: a805         	add	r0, sp, #0x14
1000b792: 9008         	str	r0, [sp, #0x20]
1000b794: 9805         	ldr	r0, [sp, #0x14]
1000b796: 0480         	lsls	r0, r0, #0x12
1000b798: 0fc1         	lsrs	r1, r0, #0x1f
1000b79a: a810         	add	r0, sp, #0x40
1000b79c: 7001         	strb	r1, [r0]
1000b79e: a804         	add	r0, sp, #0x10
1000b7a0: 7001         	strb	r1, [r0]
1000b7a2: 9011         	str	r0, [sp, #0x44]
1000b7a4: 9012         	str	r0, [sp, #0x48]
1000b7a6: 7800         	ldrb	r0, [r0]
1000b7a8: 07c0         	lsls	r0, r0, #0x1f
1000b7aa: 2800         	cmp	r0, #0x0
1000b7ac: d0e5         	beq	0x1000b77a <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PLL_USB>::reset_bring_up::h3231a3c8ffd7831f+0x56> @ imm = #-0x36
1000b7ae: e7ff         	b	0x1000b7b0 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PLL_USB>::reset_bring_up::h3231a3c8ffd7831f+0x8c> @ imm = #-0x2
1000b7b0: b01c         	add	sp, #0x70
1000b7b2: bd80         	pop	{r7, pc}
1000b7b4: 00 c0 00 40  	.word	0x4000c000
1000b7b8: 08 c0 00 40  	.word	0x4000c008

1000b7bc <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PLL_USB>::reset_bring_up::{{closure}}::hbe131f5b89dcac28>:
1000b7bc: b580         	push	{r7, lr}
1000b7be: af00         	add	r7, sp, #0x0
1000b7c0: b08a         	sub	sp, #0x28
1000b7c2: aa03         	add	r2, sp, #0xc
1000b7c4: 9201         	str	r2, [sp, #0x4]
1000b7c6: 460a         	mov	r2, r1
1000b7c8: 4601         	mov	r1, r0
1000b7ca: 9801         	ldr	r0, [sp, #0x4]
1000b7cc: 6001         	str	r1, [r0]
1000b7ce: 6042         	str	r2, [r0, #0x4]
1000b7d0: 6082         	str	r2, [r0, #0x8]
1000b7d2: 60c2         	str	r2, [r0, #0xc]
1000b7d4: ab07         	add	r3, sp, #0x1c
1000b7d6: 210d         	movs	r1, #0xd
1000b7d8: 7019         	strb	r1, [r3]
1000b7da: 6142         	str	r2, [r0, #0x14]
1000b7dc: aa08         	add	r2, sp, #0x20
1000b7de: 7111         	strb	r1, [r2, #0x4]
1000b7e0: 6941         	ldr	r1, [r0, #0x14]
1000b7e2: 9100         	str	r1, [sp]
1000b7e4: 6981         	ldr	r1, [r0, #0x18]
1000b7e6: 2001         	movs	r0, #0x1
1000b7e8: f7fb fb36    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x4994
1000b7ec: f7fa fd3a    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x558c
1000b7f0: 4601         	mov	r1, r0
1000b7f2: 9800         	ldr	r0, [sp]
1000b7f4: f7fb fb1c    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x49c8
1000b7f8: 9801         	ldr	r0, [sp, #0x4]
1000b7fa: 6940         	ldr	r0, [r0, #0x14]
1000b7fc: b00a         	add	sp, #0x28
1000b7fe: bd80         	pop	{r7, pc}

1000b800 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PLL_SYS>::reset_bring_up::hc1bf34968d60e42c>:
1000b800: b580         	push	{r7, lr}
1000b802: af00         	add	r7, sp, #0x0
1000b804: b09c         	sub	sp, #0x70
1000b806: 9100         	str	r1, [sp]
1000b808: 9006         	str	r0, [sp, #0x18]
1000b80a: 9107         	str	r1, [sp, #0x1c]
1000b80c: 911b         	str	r1, [sp, #0x6c]
1000b80e: 4820         	ldr	r0, [pc, #0x80]         @ 0x1000b890 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PLL_SYS>::reset_bring_up::hc1bf34968d60e42c+0x90>
1000b810: 9003         	str	r0, [sp, #0xc]
1000b812: 900a         	str	r0, [sp, #0x28]
1000b814: 900e         	str	r0, [sp, #0x38]
1000b816: 9013         	str	r0, [sp, #0x4c]
1000b818: 9014         	str	r0, [sp, #0x50]
1000b81a: f000 fc54    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x8a8
1000b81e: 9001         	str	r0, [sp, #0x4]
1000b820: 900f         	str	r0, [sp, #0x3c]
1000b822: 900c         	str	r0, [sp, #0x30]
1000b824: 2000         	movs	r0, #0x0
1000b826: 9002         	str	r0, [sp, #0x8]
1000b828: f7fa fd1c    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x55c8
1000b82c: 4601         	mov	r1, r0
1000b82e: 9801         	ldr	r0, [sp, #0x4]
1000b830: f7fa fd37    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x5592
1000b834: 9902         	ldr	r1, [sp, #0x8]
1000b836: f7fa fd2c    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x55a8
1000b83a: 900d         	str	r0, [sp, #0x34]
1000b83c: a80c         	add	r0, sp, #0x30
1000b83e: a90d         	add	r1, sp, #0x34
1000b840: f000 f82a    	bl	0x1000b898 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PLL_SYS>::reset_bring_up::{{closure}}::h25c380684605f8c2> @ imm = #0x54
1000b844: 4601         	mov	r1, r0
1000b846: 9803         	ldr	r0, [sp, #0xc]
1000b848: 6809         	ldr	r1, [r1]
1000b84a: 9017         	str	r0, [sp, #0x5c]
1000b84c: 9118         	str	r1, [sp, #0x60]
1000b84e: 9019         	str	r0, [sp, #0x64]
1000b850: f000 fca4    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x948
1000b854: e7ff         	b	0x1000b856 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PLL_SYS>::reset_bring_up::hc1bf34968d60e42c+0x56> @ imm = #-0x2
1000b856: 9800         	ldr	r0, [sp]
1000b858: 901a         	str	r0, [sp, #0x68]
1000b85a: 480d         	ldr	r0, [pc, #0x34]         @ 0x1000b890 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PLL_SYS>::reset_bring_up::hc1bf34968d60e42c+0x90>
1000b85c: 9009         	str	r0, [sp, #0x24]
1000b85e: 480d         	ldr	r0, [pc, #0x34]         @ 0x1000b894 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PLL_SYS>::reset_bring_up::hc1bf34968d60e42c+0x94>
1000b860: 900b         	str	r0, [sp, #0x2c]
1000b862: 9015         	str	r0, [sp, #0x54]
1000b864: 9016         	str	r0, [sp, #0x58]
1000b866: f000 fc2e    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x85c
1000b86a: 9005         	str	r0, [sp, #0x14]
1000b86c: a805         	add	r0, sp, #0x14
1000b86e: 9008         	str	r0, [sp, #0x20]
1000b870: 9805         	ldr	r0, [sp, #0x14]
1000b872: 04c0         	lsls	r0, r0, #0x13
1000b874: 0fc1         	lsrs	r1, r0, #0x1f
1000b876: a810         	add	r0, sp, #0x40
1000b878: 7001         	strb	r1, [r0]
1000b87a: a804         	add	r0, sp, #0x10
1000b87c: 7001         	strb	r1, [r0]
1000b87e: 9011         	str	r0, [sp, #0x44]
1000b880: 9012         	str	r0, [sp, #0x48]
1000b882: 7800         	ldrb	r0, [r0]
1000b884: 07c0         	lsls	r0, r0, #0x1f
1000b886: 2800         	cmp	r0, #0x0
1000b888: d0e5         	beq	0x1000b856 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PLL_SYS>::reset_bring_up::hc1bf34968d60e42c+0x56> @ imm = #-0x36
1000b88a: e7ff         	b	0x1000b88c <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PLL_SYS>::reset_bring_up::hc1bf34968d60e42c+0x8c> @ imm = #-0x2
1000b88c: b01c         	add	sp, #0x70
1000b88e: bd80         	pop	{r7, pc}
1000b890: 00 c0 00 40  	.word	0x4000c000
1000b894: 08 c0 00 40  	.word	0x4000c008

1000b898 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PLL_SYS>::reset_bring_up::{{closure}}::h25c380684605f8c2>:
1000b898: b580         	push	{r7, lr}
1000b89a: af00         	add	r7, sp, #0x0
1000b89c: b08a         	sub	sp, #0x28
1000b89e: aa03         	add	r2, sp, #0xc
1000b8a0: 9201         	str	r2, [sp, #0x4]
1000b8a2: 460a         	mov	r2, r1
1000b8a4: 4601         	mov	r1, r0
1000b8a6: 9801         	ldr	r0, [sp, #0x4]
1000b8a8: 6001         	str	r1, [r0]
1000b8aa: 6042         	str	r2, [r0, #0x4]
1000b8ac: 6082         	str	r2, [r0, #0x8]
1000b8ae: 60c2         	str	r2, [r0, #0xc]
1000b8b0: ab07         	add	r3, sp, #0x1c
1000b8b2: 210c         	movs	r1, #0xc
1000b8b4: 7019         	strb	r1, [r3]
1000b8b6: 6142         	str	r2, [r0, #0x14]
1000b8b8: aa08         	add	r2, sp, #0x20
1000b8ba: 7111         	strb	r1, [r2, #0x4]
1000b8bc: 6941         	ldr	r1, [r0, #0x14]
1000b8be: 9100         	str	r1, [sp]
1000b8c0: 6981         	ldr	r1, [r0, #0x18]
1000b8c2: 2001         	movs	r0, #0x1
1000b8c4: f7fb fac8    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x4a70
1000b8c8: f7fa fccc    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x5668
1000b8cc: 4601         	mov	r1, r0
1000b8ce: 9800         	ldr	r0, [sp]
1000b8d0: f7fb faae    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x4aa4
1000b8d4: 9801         	ldr	r0, [sp, #0x4]
1000b8d6: 6940         	ldr	r0, [r0, #0x14]
1000b8d8: b00a         	add	sp, #0x28
1000b8da: bd80         	pop	{r7, pc}

1000b8dc <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PADS_BANK0>::reset_bring_up::h1629dab20d6441cc>:
1000b8dc: b580         	push	{r7, lr}
1000b8de: af00         	add	r7, sp, #0x0
1000b8e0: b09c         	sub	sp, #0x70
1000b8e2: 9100         	str	r1, [sp]
1000b8e4: 9006         	str	r0, [sp, #0x18]
1000b8e6: 9107         	str	r1, [sp, #0x1c]
1000b8e8: 911b         	str	r1, [sp, #0x6c]
1000b8ea: 4820         	ldr	r0, [pc, #0x80]         @ 0x1000b96c <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PADS_BANK0>::reset_bring_up::h1629dab20d6441cc+0x90>
1000b8ec: 9003         	str	r0, [sp, #0xc]
1000b8ee: 900a         	str	r0, [sp, #0x28]
1000b8f0: 900e         	str	r0, [sp, #0x38]
1000b8f2: 9013         	str	r0, [sp, #0x4c]
1000b8f4: 9014         	str	r0, [sp, #0x50]
1000b8f6: f000 fbe6    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x7cc
1000b8fa: 9001         	str	r0, [sp, #0x4]
1000b8fc: 900f         	str	r0, [sp, #0x3c]
1000b8fe: 900c         	str	r0, [sp, #0x30]
1000b900: 2000         	movs	r0, #0x0
1000b902: 9002         	str	r0, [sp, #0x8]
1000b904: f7fa fcae    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x56a4
1000b908: 4601         	mov	r1, r0
1000b90a: 9801         	ldr	r0, [sp, #0x4]
1000b90c: f7fa fcc9    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x566e
1000b910: 9902         	ldr	r1, [sp, #0x8]
1000b912: f7fa fcbe    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x5684
1000b916: 900d         	str	r0, [sp, #0x34]
1000b918: a80c         	add	r0, sp, #0x30
1000b91a: a90d         	add	r1, sp, #0x34
1000b91c: f000 f82a    	bl	0x1000b974 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PADS_BANK0>::reset_bring_up::{{closure}}::h45d9c096496538a9> @ imm = #0x54
1000b920: 4601         	mov	r1, r0
1000b922: 9803         	ldr	r0, [sp, #0xc]
1000b924: 6809         	ldr	r1, [r1]
1000b926: 9017         	str	r0, [sp, #0x5c]
1000b928: 9118         	str	r1, [sp, #0x60]
1000b92a: 9019         	str	r0, [sp, #0x64]
1000b92c: f000 fc36    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x86c
1000b930: e7ff         	b	0x1000b932 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PADS_BANK0>::reset_bring_up::h1629dab20d6441cc+0x56> @ imm = #-0x2
1000b932: 9800         	ldr	r0, [sp]
1000b934: 901a         	str	r0, [sp, #0x68]
1000b936: 480d         	ldr	r0, [pc, #0x34]         @ 0x1000b96c <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PADS_BANK0>::reset_bring_up::h1629dab20d6441cc+0x90>
1000b938: 9009         	str	r0, [sp, #0x24]
1000b93a: 480d         	ldr	r0, [pc, #0x34]         @ 0x1000b970 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PADS_BANK0>::reset_bring_up::h1629dab20d6441cc+0x94>
1000b93c: 900b         	str	r0, [sp, #0x2c]
1000b93e: 9015         	str	r0, [sp, #0x54]
1000b940: 9016         	str	r0, [sp, #0x58]
1000b942: f000 fbc0    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x780
1000b946: 9005         	str	r0, [sp, #0x14]
1000b948: a805         	add	r0, sp, #0x14
1000b94a: 9008         	str	r0, [sp, #0x20]
1000b94c: 7841         	ldrb	r1, [r0, #0x1]
1000b94e: 2001         	movs	r0, #0x1
1000b950: 4001         	ands	r1, r0
1000b952: a810         	add	r0, sp, #0x40
1000b954: 7001         	strb	r1, [r0]
1000b956: a804         	add	r0, sp, #0x10
1000b958: 7001         	strb	r1, [r0]
1000b95a: 9011         	str	r0, [sp, #0x44]
1000b95c: 9012         	str	r0, [sp, #0x48]
1000b95e: 7800         	ldrb	r0, [r0]
1000b960: 07c0         	lsls	r0, r0, #0x1f
1000b962: 2800         	cmp	r0, #0x0
1000b964: d0e5         	beq	0x1000b932 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PADS_BANK0>::reset_bring_up::h1629dab20d6441cc+0x56> @ imm = #-0x36
1000b966: e7ff         	b	0x1000b968 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PADS_BANK0>::reset_bring_up::h1629dab20d6441cc+0x8c> @ imm = #-0x2
1000b968: b01c         	add	sp, #0x70
1000b96a: bd80         	pop	{r7, pc}
1000b96c: 00 c0 00 40  	.word	0x4000c000
1000b970: 08 c0 00 40  	.word	0x4000c008

1000b974 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PADS_BANK0>::reset_bring_up::{{closure}}::h45d9c096496538a9>:
1000b974: b580         	push	{r7, lr}
1000b976: af00         	add	r7, sp, #0x0
1000b978: b08a         	sub	sp, #0x28
1000b97a: aa03         	add	r2, sp, #0xc
1000b97c: 9201         	str	r2, [sp, #0x4]
1000b97e: 460a         	mov	r2, r1
1000b980: 4601         	mov	r1, r0
1000b982: 9801         	ldr	r0, [sp, #0x4]
1000b984: 6001         	str	r1, [r0]
1000b986: 6042         	str	r2, [r0, #0x4]
1000b988: 6082         	str	r2, [r0, #0x8]
1000b98a: 60c2         	str	r2, [r0, #0xc]
1000b98c: ab07         	add	r3, sp, #0x1c
1000b98e: 2108         	movs	r1, #0x8
1000b990: 7019         	strb	r1, [r3]
1000b992: 6142         	str	r2, [r0, #0x14]
1000b994: aa08         	add	r2, sp, #0x20
1000b996: 7111         	strb	r1, [r2, #0x4]
1000b998: 6941         	ldr	r1, [r0, #0x14]
1000b99a: 9100         	str	r1, [sp]
1000b99c: 6981         	ldr	r1, [r0, #0x18]
1000b99e: 2001         	movs	r0, #0x1
1000b9a0: f7fb fa5a    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x4b4c
1000b9a4: f7fa fc5e    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x5744
1000b9a8: 4601         	mov	r1, r0
1000b9aa: 9800         	ldr	r0, [sp]
1000b9ac: f7fb fa40    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x4b80
1000b9b0: 9801         	ldr	r0, [sp, #0x4]
1000b9b2: 6940         	ldr	r0, [r0, #0x14]
1000b9b4: b00a         	add	sp, #0x28
1000b9b6: bd80         	pop	{r7, pc}

1000b9b8 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PADS_BANK0>::reset_bring_down::h3f1e964befebf085>:
1000b9b8: b580         	push	{r7, lr}
1000b9ba: af00         	add	r7, sp, #0x0
1000b9bc: b090         	sub	sp, #0x40
1000b9be: 9003         	str	r0, [sp, #0xc]
1000b9c0: 9104         	str	r1, [sp, #0x10]
1000b9c2: 910f         	str	r1, [sp, #0x3c]
1000b9c4: 4812         	ldr	r0, [pc, #0x48]         @ 0x1000ba10 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PADS_BANK0>::reset_bring_down::h3f1e964befebf085+0x58>
1000b9c6: 9002         	str	r0, [sp, #0x8]
1000b9c8: 9005         	str	r0, [sp, #0x14]
1000b9ca: 9008         	str	r0, [sp, #0x20]
1000b9cc: 900a         	str	r0, [sp, #0x28]
1000b9ce: 900b         	str	r0, [sp, #0x2c]
1000b9d0: f000 fb79    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x6f2
1000b9d4: 9000         	str	r0, [sp]
1000b9d6: 9009         	str	r0, [sp, #0x24]
1000b9d8: 9006         	str	r0, [sp, #0x18]
1000b9da: 2000         	movs	r0, #0x0
1000b9dc: 9001         	str	r0, [sp, #0x4]
1000b9de: f7fa fc41    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x577e
1000b9e2: 4601         	mov	r1, r0
1000b9e4: 9800         	ldr	r0, [sp]
1000b9e6: f7fa fc5c    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x5748
1000b9ea: 9901         	ldr	r1, [sp, #0x4]
1000b9ec: f7fa fc51    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x575e
1000b9f0: 9007         	str	r0, [sp, #0x1c]
1000b9f2: a806         	add	r0, sp, #0x18
1000b9f4: a907         	add	r1, sp, #0x1c
1000b9f6: f000 f80d    	bl	0x1000ba14 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PADS_BANK0>::reset_bring_down::{{closure}}::hfadc54edb1bb6c25> @ imm = #0x1a
1000b9fa: 4601         	mov	r1, r0
1000b9fc: 9802         	ldr	r0, [sp, #0x8]
1000b9fe: 6809         	ldr	r1, [r1]
1000ba00: 900c         	str	r0, [sp, #0x30]
1000ba02: 910d         	str	r1, [sp, #0x34]
1000ba04: 900e         	str	r0, [sp, #0x38]
1000ba06: f000 fbc9    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x792
1000ba0a: b010         	add	sp, #0x40
1000ba0c: bd80         	pop	{r7, pc}
1000ba0e: 46c0         	mov	r8, r8
1000ba10: 00 c0 00 40  	.word	0x4000c000

1000ba14 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::PADS_BANK0>::reset_bring_down::{{closure}}::hfadc54edb1bb6c25>:
1000ba14: b580         	push	{r7, lr}
1000ba16: af00         	add	r7, sp, #0x0
1000ba18: b08a         	sub	sp, #0x28
1000ba1a: aa03         	add	r2, sp, #0xc
1000ba1c: 9201         	str	r2, [sp, #0x4]
1000ba1e: 460a         	mov	r2, r1
1000ba20: 4601         	mov	r1, r0
1000ba22: 9801         	ldr	r0, [sp, #0x4]
1000ba24: 6001         	str	r1, [r0]
1000ba26: 6042         	str	r2, [r0, #0x4]
1000ba28: 6082         	str	r2, [r0, #0x8]
1000ba2a: 60c2         	str	r2, [r0, #0xc]
1000ba2c: ab07         	add	r3, sp, #0x1c
1000ba2e: 2108         	movs	r1, #0x8
1000ba30: 7019         	strb	r1, [r3]
1000ba32: 6142         	str	r2, [r0, #0x14]
1000ba34: aa08         	add	r2, sp, #0x20
1000ba36: 7111         	strb	r1, [r2, #0x4]
1000ba38: 6941         	ldr	r1, [r0, #0x14]
1000ba3a: 9100         	str	r1, [sp]
1000ba3c: 6981         	ldr	r1, [r0, #0x18]
1000ba3e: 2001         	movs	r0, #0x1
1000ba40: f7fb fa0a    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x4bec
1000ba44: 4601         	mov	r1, r0
1000ba46: 9800         	ldr	r0, [sp]
1000ba48: f7fb f9e6    	bl	0x10006e18 <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::hc18d656116c887ea> @ imm = #-0x4c34
1000ba4c: 9801         	ldr	r0, [sp, #0x4]
1000ba4e: 6940         	ldr	r0, [r0, #0x14]
1000ba50: b00a         	add	sp, #0x28
1000ba52: bd80         	pop	{r7, pc}

1000ba54 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::IO_BANK0>::reset_bring_up::h8ee8d60b7ddca591>:
1000ba54: b580         	push	{r7, lr}
1000ba56: af00         	add	r7, sp, #0x0
1000ba58: b09c         	sub	sp, #0x70
1000ba5a: 9100         	str	r1, [sp]
1000ba5c: 9006         	str	r0, [sp, #0x18]
1000ba5e: 9107         	str	r1, [sp, #0x1c]
1000ba60: 911b         	str	r1, [sp, #0x6c]
1000ba62: 4820         	ldr	r0, [pc, #0x80]         @ 0x1000bae4 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::IO_BANK0>::reset_bring_up::h8ee8d60b7ddca591+0x90>
1000ba64: 9003         	str	r0, [sp, #0xc]
1000ba66: 900a         	str	r0, [sp, #0x28]
1000ba68: 900e         	str	r0, [sp, #0x38]
1000ba6a: 9013         	str	r0, [sp, #0x4c]
1000ba6c: 9014         	str	r0, [sp, #0x50]
1000ba6e: f000 fb2a    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x654
1000ba72: 9001         	str	r0, [sp, #0x4]
1000ba74: 900f         	str	r0, [sp, #0x3c]
1000ba76: 900c         	str	r0, [sp, #0x30]
1000ba78: 2000         	movs	r0, #0x0
1000ba7a: 9002         	str	r0, [sp, #0x8]
1000ba7c: f7fa fbf2    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x581c
1000ba80: 4601         	mov	r1, r0
1000ba82: 9801         	ldr	r0, [sp, #0x4]
1000ba84: f7fa fc0d    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x57e6
1000ba88: 9902         	ldr	r1, [sp, #0x8]
1000ba8a: f7fa fc02    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x57fc
1000ba8e: 900d         	str	r0, [sp, #0x34]
1000ba90: a80c         	add	r0, sp, #0x30
1000ba92: a90d         	add	r1, sp, #0x34
1000ba94: f000 f82a    	bl	0x1000baec <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::IO_BANK0>::reset_bring_up::{{closure}}::h852cdea6ab475600> @ imm = #0x54
1000ba98: 4601         	mov	r1, r0
1000ba9a: 9803         	ldr	r0, [sp, #0xc]
1000ba9c: 6809         	ldr	r1, [r1]
1000ba9e: 9017         	str	r0, [sp, #0x5c]
1000baa0: 9118         	str	r1, [sp, #0x60]
1000baa2: 9019         	str	r0, [sp, #0x64]
1000baa4: f000 fb7a    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x6f4
1000baa8: e7ff         	b	0x1000baaa <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::IO_BANK0>::reset_bring_up::h8ee8d60b7ddca591+0x56> @ imm = #-0x2
1000baaa: 9800         	ldr	r0, [sp]
1000baac: 901a         	str	r0, [sp, #0x68]
1000baae: 480d         	ldr	r0, [pc, #0x34]         @ 0x1000bae4 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::IO_BANK0>::reset_bring_up::h8ee8d60b7ddca591+0x90>
1000bab0: 9009         	str	r0, [sp, #0x24]
1000bab2: 480d         	ldr	r0, [pc, #0x34]         @ 0x1000bae8 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::IO_BANK0>::reset_bring_up::h8ee8d60b7ddca591+0x94>
1000bab4: 900b         	str	r0, [sp, #0x2c]
1000bab6: 9015         	str	r0, [sp, #0x54]
1000bab8: 9016         	str	r0, [sp, #0x58]
1000baba: f000 fb04    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x608
1000babe: 9005         	str	r0, [sp, #0x14]
1000bac0: a805         	add	r0, sp, #0x14
1000bac2: 9008         	str	r0, [sp, #0x20]
1000bac4: 9805         	ldr	r0, [sp, #0x14]
1000bac6: 0680         	lsls	r0, r0, #0x1a
1000bac8: 0fc1         	lsrs	r1, r0, #0x1f
1000baca: a810         	add	r0, sp, #0x40
1000bacc: 7001         	strb	r1, [r0]
1000bace: a804         	add	r0, sp, #0x10
1000bad0: 7001         	strb	r1, [r0]
1000bad2: 9011         	str	r0, [sp, #0x44]
1000bad4: 9012         	str	r0, [sp, #0x48]
1000bad6: 7800         	ldrb	r0, [r0]
1000bad8: 07c0         	lsls	r0, r0, #0x1f
1000bada: 2800         	cmp	r0, #0x0
1000badc: d0e5         	beq	0x1000baaa <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::IO_BANK0>::reset_bring_up::h8ee8d60b7ddca591+0x56> @ imm = #-0x36
1000bade: e7ff         	b	0x1000bae0 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::IO_BANK0>::reset_bring_up::h8ee8d60b7ddca591+0x8c> @ imm = #-0x2
1000bae0: b01c         	add	sp, #0x70
1000bae2: bd80         	pop	{r7, pc}
1000bae4: 00 c0 00 40  	.word	0x4000c000
1000bae8: 08 c0 00 40  	.word	0x4000c008

1000baec <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::IO_BANK0>::reset_bring_up::{{closure}}::h852cdea6ab475600>:
1000baec: b580         	push	{r7, lr}
1000baee: af00         	add	r7, sp, #0x0
1000baf0: b08a         	sub	sp, #0x28
1000baf2: aa03         	add	r2, sp, #0xc
1000baf4: 9201         	str	r2, [sp, #0x4]
1000baf6: 460a         	mov	r2, r1
1000baf8: 4601         	mov	r1, r0
1000bafa: 9801         	ldr	r0, [sp, #0x4]
1000bafc: 6001         	str	r1, [r0]
1000bafe: 6042         	str	r2, [r0, #0x4]
1000bb00: 6082         	str	r2, [r0, #0x8]
1000bb02: 60c2         	str	r2, [r0, #0xc]
1000bb04: ab07         	add	r3, sp, #0x1c
1000bb06: 2105         	movs	r1, #0x5
1000bb08: 7019         	strb	r1, [r3]
1000bb0a: 6142         	str	r2, [r0, #0x14]
1000bb0c: aa08         	add	r2, sp, #0x20
1000bb0e: 7111         	strb	r1, [r2, #0x4]
1000bb10: 6941         	ldr	r1, [r0, #0x14]
1000bb12: 9100         	str	r1, [sp]
1000bb14: 6981         	ldr	r1, [r0, #0x18]
1000bb16: 2001         	movs	r0, #0x1
1000bb18: f7fb f99e    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x4cc4
1000bb1c: f7fa fba2    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x58bc
1000bb20: 4601         	mov	r1, r0
1000bb22: 9800         	ldr	r0, [sp]
1000bb24: f7fb f984    	bl	0x10006e30 <<u32 as core::ops::bit::BitAndAssign>::bitand_assign::h7650ef8782722fee> @ imm = #-0x4cf8
1000bb28: 9801         	ldr	r0, [sp, #0x4]
1000bb2a: 6940         	ldr	r0, [r0, #0x14]
1000bb2c: b00a         	add	sp, #0x28
1000bb2e: bd80         	pop	{r7, pc}

1000bb30 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::IO_BANK0>::reset_bring_down::ha3d5c1033c503aee>:
1000bb30: b580         	push	{r7, lr}
1000bb32: af00         	add	r7, sp, #0x0
1000bb34: b090         	sub	sp, #0x40
1000bb36: 9003         	str	r0, [sp, #0xc]
1000bb38: 9104         	str	r1, [sp, #0x10]
1000bb3a: 910f         	str	r1, [sp, #0x3c]
1000bb3c: 4812         	ldr	r0, [pc, #0x48]         @ 0x1000bb88 <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::IO_BANK0>::reset_bring_down::ha3d5c1033c503aee+0x58>
1000bb3e: 9002         	str	r0, [sp, #0x8]
1000bb40: 9005         	str	r0, [sp, #0x14]
1000bb42: 9008         	str	r0, [sp, #0x20]
1000bb44: 900a         	str	r0, [sp, #0x28]
1000bb46: 900b         	str	r0, [sp, #0x2c]
1000bb48: f000 fabd    	bl	0x1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd> @ imm = #0x57a
1000bb4c: 9000         	str	r0, [sp]
1000bb4e: 9009         	str	r0, [sp, #0x24]
1000bb50: 9006         	str	r0, [sp, #0x18]
1000bb52: 2000         	movs	r0, #0x0
1000bb54: 9001         	str	r0, [sp, #0x4]
1000bb56: f7fa fb85    	bl	0x10006264 <<u32 as core::ops::bit::Not>::not::h2cd34669e924c746> @ imm = #-0x58f6
1000bb5a: 4601         	mov	r1, r0
1000bb5c: 9800         	ldr	r0, [sp]
1000bb5e: f7fa fba0    	bl	0x100062a2 <<u32 as core::ops::bit::BitAnd>::bitand::hd3727fee93421b4a> @ imm = #-0x58c0
1000bb62: 9901         	ldr	r1, [sp, #0x4]
1000bb64: f7fa fb95    	bl	0x10006292 <<u32 as core::ops::bit::BitOr>::bitor::hd918e3c38785c757> @ imm = #-0x58d6
1000bb68: 9007         	str	r0, [sp, #0x1c]
1000bb6a: a806         	add	r0, sp, #0x18
1000bb6c: a907         	add	r1, sp, #0x1c
1000bb6e: f000 f80d    	bl	0x1000bb8c <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::IO_BANK0>::reset_bring_down::{{closure}}::h6d5bf578a1c40617> @ imm = #0x1a
1000bb72: 4601         	mov	r1, r0
1000bb74: 9802         	ldr	r0, [sp, #0x8]
1000bb76: 6809         	ldr	r1, [r1]
1000bb78: 900c         	str	r0, [sp, #0x30]
1000bb7a: 910d         	str	r1, [sp, #0x34]
1000bb7c: 900e         	str	r0, [sp, #0x38]
1000bb7e: f000 fb0d    	bl	0x1000c19c <core::ptr::write_volatile::h8b17083d0b12d783> @ imm = #0x61a
1000bb82: b010         	add	sp, #0x40
1000bb84: bd80         	pop	{r7, pc}
1000bb86: 46c0         	mov	r8, r8
1000bb88: 00 c0 00 40  	.word	0x4000c000

1000bb8c <rp2040_hal::resets::<impl rp2040_hal::resets::private::SubsystemReset for rp2040_pac::IO_BANK0>::reset_bring_down::{{closure}}::h6d5bf578a1c40617>:
1000bb8c: b580         	push	{r7, lr}
1000bb8e: af00         	add	r7, sp, #0x0
1000bb90: b08a         	sub	sp, #0x28
1000bb92: aa03         	add	r2, sp, #0xc
1000bb94: 9201         	str	r2, [sp, #0x4]
1000bb96: 460a         	mov	r2, r1
1000bb98: 4601         	mov	r1, r0
1000bb9a: 9801         	ldr	r0, [sp, #0x4]
1000bb9c: 6001         	str	r1, [r0]
1000bb9e: 6042         	str	r2, [r0, #0x4]
1000bba0: 6082         	str	r2, [r0, #0x8]
1000bba2: 60c2         	str	r2, [r0, #0xc]
1000bba4: ab07         	add	r3, sp, #0x1c
1000bba6: 2105         	movs	r1, #0x5
1000bba8: 7019         	strb	r1, [r3]
1000bbaa: 6142         	str	r2, [r0, #0x14]
1000bbac: aa08         	add	r2, sp, #0x20
1000bbae: 7111         	strb	r1, [r2, #0x4]
1000bbb0: 6941         	ldr	r1, [r0, #0x14]
1000bbb2: 9100         	str	r1, [sp]
1000bbb4: 6981         	ldr	r1, [r0, #0x18]
1000bbb6: 2001         	movs	r0, #0x1
1000bbb8: f7fb f94e    	bl	0x10006e58 <<u32 as core::ops::bit::Shl<u8>>::shl::h908213182e5abe3e> @ imm = #-0x4d64
1000bbbc: 4601         	mov	r1, r0
1000bbbe: 9800         	ldr	r0, [sp]
1000bbc0: f7fb f92a    	bl	0x10006e18 <<u32 as core::ops::bit::BitOrAssign>::bitor_assign::hc18d656116c887ea> @ imm = #-0x4dac
1000bbc4: 9801         	ldr	r0, [sp, #0x4]
1000bbc6: 6940         	ldr	r0, [r0, #0x14]
1000bbc8: b00a         	add	sp, #0x28
1000bbca: bd80         	pop	{r7, pc}

1000bbcc <<&T as core::fmt::Display>::fmt::h25bd0648ac15a6b3>:
1000bbcc: b580         	push	{r7, lr}
1000bbce: af00         	add	r7, sp, #0x0
1000bbd0: b082         	sub	sp, #0x8
1000bbd2: 4602         	mov	r2, r0
1000bbd4: 9200         	str	r2, [sp]
1000bbd6: 9101         	str	r1, [sp, #0x4]
1000bbd8: 6810         	ldr	r0, [r2]
1000bbda: 6852         	ldr	r2, [r2, #0x4]
1000bbdc: 68d2         	ldr	r2, [r2, #0xc]
1000bbde: 4790         	blx	r2
1000bbe0: b002         	add	sp, #0x8
1000bbe2: bd80         	pop	{r7, pc}

1000bbe4 <core::fmt::rt::Argument::new_display::h6bcff6f0be1f4aa6>:
1000bbe4: b580         	push	{r7, lr}
1000bbe6: af00         	add	r7, sp, #0x0
1000bbe8: b084         	sub	sp, #0x10
1000bbea: 9100         	str	r1, [sp]
1000bbec: 4601         	mov	r1, r0
1000bbee: 9800         	ldr	r0, [sp]
1000bbf0: 9003         	str	r0, [sp, #0xc]
1000bbf2: 9001         	str	r0, [sp, #0x4]
1000bbf4: 4803         	ldr	r0, [pc, #0xc]          @ 0x1000bc04 <core::fmt::rt::Argument::new_display::h6bcff6f0be1f4aa6+0x20>
1000bbf6: 9002         	str	r0, [sp, #0x8]
1000bbf8: 9802         	ldr	r0, [sp, #0x8]
1000bbfa: 6048         	str	r0, [r1, #0x4]
1000bbfc: 9801         	ldr	r0, [sp, #0x4]
1000bbfe: 6008         	str	r0, [r1]
1000bc00: b004         	add	sp, #0x10
1000bc02: bd80         	pop	{r7, pc}
1000bc04: cd bb 00 10  	.word	0x1000bbcd

1000bc08 <core::fmt::Write::write_char::h8a334ba330005574>:
1000bc08: b580         	push	{r7, lr}
1000bc0a: af00         	add	r7, sp, #0x0
1000bc0c: b08a         	sub	sp, #0x28
1000bc0e: 9100         	str	r1, [sp]
1000bc10: 4601         	mov	r1, r0
1000bc12: 9800         	ldr	r0, [sp]
1000bc14: 9101         	str	r1, [sp, #0x4]
1000bc16: 9104         	str	r1, [sp, #0x10]
1000bc18: 9005         	str	r0, [sp, #0x14]
1000bc1a: 2100         	movs	r1, #0x0
1000bc1c: 9103         	str	r1, [sp, #0xc]
1000bc1e: a903         	add	r1, sp, #0xc
1000bc20: 9106         	str	r1, [sp, #0x18]
1000bc22: 2204         	movs	r2, #0x4
1000bc24: 9207         	str	r2, [sp, #0x1c]
1000bc26: f000 f835    	bl	0x1000bc94 <core::char::methods::encode_utf8_raw::he42dd5d6285df2a1> @ imm = #0x6a
1000bc2a: 4602         	mov	r2, r0
1000bc2c: 9801         	ldr	r0, [sp, #0x4]
1000bc2e: 9202         	str	r2, [sp, #0x8]
1000bc30: 460a         	mov	r2, r1
1000bc32: 9902         	ldr	r1, [sp, #0x8]
1000bc34: 9108         	str	r1, [sp, #0x20]
1000bc36: 9209         	str	r2, [sp, #0x24]
1000bc38: f000 fa14    	bl	0x1000c064 <<defmt::export::FmtWrite as core::fmt::Write>::write_str::h72bfd4c2e3c8d516> @ imm = #0x428
1000bc3c: b00a         	add	sp, #0x28
1000bc3e: bd80         	pop	{r7, pc}

1000bc40 <core::fmt::Write::write_fmt::h02cf07ef85c92752>:
1000bc40: b580         	push	{r7, lr}
1000bc42: af00         	add	r7, sp, #0x0
1000bc44: b082         	sub	sp, #0x8
1000bc46: 9001         	str	r0, [sp, #0x4]
1000bc48: f000 f94a    	bl	0x1000bee0 <<&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt::hc4174b861e6caaf0> @ imm = #0x294
1000bc4c: b002         	add	sp, #0x8
1000bc4e: bd80         	pop	{r7, pc}

1000bc50 <core::fmt::Arguments::new_v1::h0f83b50060746513>:
1000bc50: b580         	push	{r7, lr}
1000bc52: af00         	add	r7, sp, #0x0
1000bc54: b083         	sub	sp, #0xc
1000bc56: 9100         	str	r1, [sp]
1000bc58: 4601         	mov	r1, r0
1000bc5a: 9800         	ldr	r0, [sp]
1000bc5c: 9001         	str	r0, [sp, #0x4]
1000bc5e: 9202         	str	r2, [sp, #0x8]
1000bc60: 6008         	str	r0, [r1]
1000bc62: 2001         	movs	r0, #0x1
1000bc64: 6048         	str	r0, [r1, #0x4]
1000bc66: 2300         	movs	r3, #0x0
1000bc68: 610b         	str	r3, [r1, #0x10]
1000bc6a: 608a         	str	r2, [r1, #0x8]
1000bc6c: 60c8         	str	r0, [r1, #0xc]
1000bc6e: b003         	add	sp, #0xc
1000bc70: bd80         	pop	{r7, pc}

1000bc72 <core::num::<impl u16>::to_le_bytes::hfa2a3692f4f41df2>:
1000bc72: b580         	push	{r7, lr}
1000bc74: af00         	add	r7, sp, #0x0
1000bc76: b082         	sub	sp, #0x8
1000bc78: 4601         	mov	r1, r0
1000bc7a: a801         	add	r0, sp, #0x4
1000bc7c: 8001         	strh	r1, [r0]
1000bc7e: 0a0a         	lsrs	r2, r1, #0x8
1000bc80: 4668         	mov	r0, sp
1000bc82: 7042         	strb	r2, [r0, #0x1]
1000bc84: 7001         	strb	r1, [r0]
1000bc86: 7801         	ldrb	r1, [r0]
1000bc88: 7840         	ldrb	r0, [r0, #0x1]
1000bc8a: 0200         	lsls	r0, r0, #0x8
1000bc8c: 1840         	adds	r0, r0, r1
1000bc8e: b002         	add	sp, #0x8
1000bc90: bd80         	pop	{r7, pc}
1000bc92: d4d4         	bmi	0x1000bc3e <core::fmt::Write::write_char::h8a334ba330005574+0x36> @ imm = #-0x58

1000bc94 <core::char::methods::encode_utf8_raw::he42dd5d6285df2a1>:
1000bc94: b580         	push	{r7, lr}
1000bc96: af00         	add	r7, sp, #0x0
1000bc98: b096         	sub	sp, #0x58
1000bc9a: 9201         	str	r2, [sp, #0x4]
1000bc9c: 9102         	str	r1, [sp, #0x8]
1000bc9e: 9003         	str	r0, [sp, #0xc]
1000bca0: 9005         	str	r0, [sp, #0x14]
1000bca2: 9106         	str	r1, [sp, #0x18]
1000bca4: 9207         	str	r2, [sp, #0x1c]
1000bca6: 2880         	cmp	r0, #0x80
1000bca8: d305         	blo	0x1000bcb6 <core::char::methods::encode_utf8_raw::he42dd5d6285df2a1+0x22> @ imm = #0xa
1000bcaa: e7ff         	b	0x1000bcac <core::char::methods::encode_utf8_raw::he42dd5d6285df2a1+0x18> @ imm = #-0x2
1000bcac: 9803         	ldr	r0, [sp, #0xc]
1000bcae: 0ac0         	lsrs	r0, r0, #0xb
1000bcb0: 2800         	cmp	r0, #0x0
1000bcb2: d00b         	beq	0x1000bccc <core::char::methods::encode_utf8_raw::he42dd5d6285df2a1+0x38> @ imm = #0x16
1000bcb4: e005         	b	0x1000bcc2 <core::char::methods::encode_utf8_raw::he42dd5d6285df2a1+0x2e> @ imm = #0xa
1000bcb6: 9801         	ldr	r0, [sp, #0x4]
1000bcb8: 2101         	movs	r1, #0x1
1000bcba: 9104         	str	r1, [sp, #0x10]
1000bcbc: 2800         	cmp	r0, #0x0
1000bcbe: d161         	bne	0x1000bd84 <core::char::methods::encode_utf8_raw::he42dd5d6285df2a1+0xf0> @ imm = #0xc2
1000bcc0: e016         	b	0x1000bcf0 <core::char::methods::encode_utf8_raw::he42dd5d6285df2a1+0x5c> @ imm = #0x2c
1000bcc2: 9803         	ldr	r0, [sp, #0xc]
1000bcc4: 0c00         	lsrs	r0, r0, #0x10
1000bcc6: 2800         	cmp	r0, #0x0
1000bcc8: d00c         	beq	0x1000bce4 <core::char::methods::encode_utf8_raw::he42dd5d6285df2a1+0x50> @ imm = #0x18
1000bcca: e005         	b	0x1000bcd8 <core::char::methods::encode_utf8_raw::he42dd5d6285df2a1+0x44> @ imm = #0xa
1000bccc: 9801         	ldr	r0, [sp, #0x4]
1000bcce: 2102         	movs	r1, #0x2
1000bcd0: 9104         	str	r1, [sp, #0x10]
1000bcd2: 2801         	cmp	r0, #0x1
1000bcd4: d848         	bhi	0x1000bd68 <core::char::methods::encode_utf8_raw::he42dd5d6285df2a1+0xd4> @ imm = #0x90
1000bcd6: e00b         	b	0x1000bcf0 <core::char::methods::encode_utf8_raw::he42dd5d6285df2a1+0x5c> @ imm = #0x16
1000bcd8: 9801         	ldr	r0, [sp, #0x4]
1000bcda: 2104         	movs	r1, #0x4
1000bcdc: 9104         	str	r1, [sp, #0x10]
1000bcde: 2803         	cmp	r0, #0x3
1000bce0: d80e         	bhi	0x1000bd00 <core::char::methods::encode_utf8_raw::he42dd5d6285df2a1+0x6c> @ imm = #0x1c
1000bce2: e005         	b	0x1000bcf0 <core::char::methods::encode_utf8_raw::he42dd5d6285df2a1+0x5c> @ imm = #0xa
1000bce4: 9801         	ldr	r0, [sp, #0x4]
1000bce6: 2103         	movs	r1, #0x3
1000bce8: 9104         	str	r1, [sp, #0x10]
1000bcea: 2802         	cmp	r0, #0x2
1000bcec: d828         	bhi	0x1000bd40 <core::char::methods::encode_utf8_raw::he42dd5d6285df2a1+0xac> @ imm = #0x50
1000bcee: e7ff         	b	0x1000bcf0 <core::char::methods::encode_utf8_raw::he42dd5d6285df2a1+0x5c> @ imm = #-0x2
1000bcf0: 9a01         	ldr	r2, [sp, #0x4]
1000bcf2: 9803         	ldr	r0, [sp, #0xc]
1000bcf4: 9904         	ldr	r1, [sp, #0x10]
1000bcf6: 9111         	str	r1, [sp, #0x44]
1000bcf8: 9212         	str	r2, [sp, #0x48]
1000bcfa: 4b2a         	ldr	r3, [pc, #0xa8]         @ 0x1000bda4 <core::char::methods::encode_utf8_raw::he42dd5d6285df2a1+0x110>
1000bcfc: f001 fb58    	bl	0x1000d3b0 <core::char::methods::encode_utf8_raw::do_panic::runtime::h924ba3dcc7dd7cd5> @ imm = #0x16b0
1000bd00: 9902         	ldr	r1, [sp, #0x8]
1000bd02: 9803         	ldr	r0, [sp, #0xc]
1000bd04: 9108         	str	r1, [sp, #0x20]
1000bd06: 1c4a         	adds	r2, r1, #0x1
1000bd08: 9209         	str	r2, [sp, #0x24]
1000bd0a: 1c8a         	adds	r2, r1, #0x2
1000bd0c: 920a         	str	r2, [sp, #0x28]
1000bd0e: 1cca         	adds	r2, r1, #0x3
1000bd10: 920b         	str	r2, [sp, #0x2c]
1000bd12: 02c2         	lsls	r2, r0, #0xb
1000bd14: 0f52         	lsrs	r2, r2, #0x1d
1000bd16: 32f0         	adds	r2, #0xf0
1000bd18: 700a         	strb	r2, [r1]
1000bd1a: 0382         	lsls	r2, r0, #0xe
1000bd1c: 0e92         	lsrs	r2, r2, #0x1a
1000bd1e: 3280         	adds	r2, #0x80
1000bd20: 704a         	strb	r2, [r1, #0x1]
1000bd22: 0502         	lsls	r2, r0, #0x14
1000bd24: 0e92         	lsrs	r2, r2, #0x1a
1000bd26: 3280         	adds	r2, #0x80
1000bd28: 708a         	strb	r2, [r1, #0x2]
1000bd2a: 223f         	movs	r2, #0x3f
1000bd2c: 4010         	ands	r0, r2
1000bd2e: 3080         	adds	r0, #0x80
1000bd30: 70c8         	strb	r0, [r1, #0x3]
1000bd32: e7ff         	b	0x1000bd34 <core::char::methods::encode_utf8_raw::he42dd5d6285df2a1+0xa0> @ imm = #-0x2
1000bd34: 9802         	ldr	r0, [sp, #0x8]
1000bd36: 9014         	str	r0, [sp, #0x50]
1000bd38: 9804         	ldr	r0, [sp, #0x10]
1000bd3a: 9000         	str	r0, [sp]
1000bd3c: 9015         	str	r0, [sp, #0x54]
1000bd3e: e026         	b	0x1000bd8e <core::char::methods::encode_utf8_raw::he42dd5d6285df2a1+0xfa> @ imm = #0x4c
1000bd40: 9902         	ldr	r1, [sp, #0x8]
1000bd42: 9803         	ldr	r0, [sp, #0xc]
1000bd44: 910c         	str	r1, [sp, #0x30]
1000bd46: 1c4a         	adds	r2, r1, #0x1
1000bd48: 920d         	str	r2, [sp, #0x34]
1000bd4a: 1c8a         	adds	r2, r1, #0x2
1000bd4c: 920e         	str	r2, [sp, #0x38]
1000bd4e: 0402         	lsls	r2, r0, #0x10
1000bd50: 0f12         	lsrs	r2, r2, #0x1c
1000bd52: 32e0         	adds	r2, #0xe0
1000bd54: 700a         	strb	r2, [r1]
1000bd56: 0502         	lsls	r2, r0, #0x14
1000bd58: 0e92         	lsrs	r2, r2, #0x1a
1000bd5a: 3280         	adds	r2, #0x80
1000bd5c: 704a         	strb	r2, [r1, #0x1]
1000bd5e: 223f         	movs	r2, #0x3f
1000bd60: 4010         	ands	r0, r2
1000bd62: 3080         	adds	r0, #0x80
1000bd64: 7088         	strb	r0, [r1, #0x2]
1000bd66: e7e5         	b	0x1000bd34 <core::char::methods::encode_utf8_raw::he42dd5d6285df2a1+0xa0> @ imm = #-0x36
1000bd68: 9902         	ldr	r1, [sp, #0x8]
1000bd6a: 9803         	ldr	r0, [sp, #0xc]
1000bd6c: 910f         	str	r1, [sp, #0x3c]
1000bd6e: 1c4a         	adds	r2, r1, #0x1
1000bd70: 9210         	str	r2, [sp, #0x40]
1000bd72: 0542         	lsls	r2, r0, #0x15
1000bd74: 0ed2         	lsrs	r2, r2, #0x1b
1000bd76: 32c0         	adds	r2, #0xc0
1000bd78: 700a         	strb	r2, [r1]
1000bd7a: 223f         	movs	r2, #0x3f
1000bd7c: 4010         	ands	r0, r2
1000bd7e: 3080         	adds	r0, #0x80
1000bd80: 7048         	strb	r0, [r1, #0x1]
1000bd82: e7d7         	b	0x1000bd34 <core::char::methods::encode_utf8_raw::he42dd5d6285df2a1+0xa0> @ imm = #-0x52
1000bd84: 9803         	ldr	r0, [sp, #0xc]
1000bd86: 9902         	ldr	r1, [sp, #0x8]
1000bd88: 9113         	str	r1, [sp, #0x4c]
1000bd8a: 7008         	strb	r0, [r1]
1000bd8c: e7d2         	b	0x1000bd34 <core::char::methods::encode_utf8_raw::he42dd5d6285df2a1+0xa0> @ imm = #-0x5c
1000bd8e: 9b00         	ldr	r3, [sp]
1000bd90: 9802         	ldr	r0, [sp, #0x8]
1000bd92: 2201         	movs	r2, #0x1
1000bd94: 4611         	mov	r1, r2
1000bd96: f000 f807    	bl	0x1000bda8 <core::slice::raw::from_raw_parts_mut::precondition_check::hf8792114bfee73a7> @ imm = #0xe
1000bd9a: e7ff         	b	0x1000bd9c <core::char::methods::encode_utf8_raw::he42dd5d6285df2a1+0x108> @ imm = #-0x2
1000bd9c: 9900         	ldr	r1, [sp]
1000bd9e: 9802         	ldr	r0, [sp, #0x8]
1000bda0: b016         	add	sp, #0x58
1000bda2: bd80         	pop	{r7, pc}
1000bda4: 18 20 01 10  	.word	0x10012018

1000bda8 <core::slice::raw::from_raw_parts_mut::precondition_check::hf8792114bfee73a7>:
1000bda8: b580         	push	{r7, lr}
1000bdaa: af00         	add	r7, sp, #0x0
1000bdac: b096         	sub	sp, #0x58
1000bdae: 9302         	str	r3, [sp, #0x8]
1000bdb0: 9203         	str	r2, [sp, #0xc]
1000bdb2: 9104         	str	r1, [sp, #0x10]
1000bdb4: 9005         	str	r0, [sp, #0x14]
1000bdb6: 900d         	str	r0, [sp, #0x34]
1000bdb8: 910e         	str	r1, [sp, #0x38]
1000bdba: 920f         	str	r2, [sp, #0x3c]
1000bdbc: 9310         	str	r3, [sp, #0x40]
1000bdbe: ab11         	add	r3, sp, #0x44
1000bdc0: 2100         	movs	r1, #0x0
1000bdc2: 7019         	strb	r1, [r3]
1000bdc4: ab12         	add	r3, sp, #0x48
1000bdc6: 7019         	strb	r1, [r3]
1000bdc8: 492d         	ldr	r1, [pc, #0xb4]         @ 0x1000be80 <core::slice::raw::from_raw_parts_mut::precondition_check::hf8792114bfee73a7+0xd8>
1000bdca: 9113         	str	r1, [sp, #0x4c]
1000bdcc: 9014         	str	r0, [sp, #0x50]
1000bdce: 0850         	lsrs	r0, r2, #0x1
1000bdd0: 492c         	ldr	r1, [pc, #0xb0]         @ 0x1000be84 <core::slice::raw::from_raw_parts_mut::precondition_check::hf8792114bfee73a7+0xdc>
1000bdd2: 4008         	ands	r0, r1
1000bdd4: 1a11         	subs	r1, r2, r0
1000bdd6: 4a2c         	ldr	r2, [pc, #0xb0]         @ 0x1000be88 <core::slice::raw::from_raw_parts_mut::precondition_check::hf8792114bfee73a7+0xe0>
1000bdd8: 4608         	mov	r0, r1
1000bdda: 4010         	ands	r0, r2
1000bddc: 0889         	lsrs	r1, r1, #0x2
1000bdde: 4011         	ands	r1, r2
1000bde0: 1840         	adds	r0, r0, r1
1000bde2: 0901         	lsrs	r1, r0, #0x4
1000bde4: 1841         	adds	r1, r0, r1
1000bde6: 4829         	ldr	r0, [pc, #0xa4]         @ 0x1000be8c <core::slice::raw::from_raw_parts_mut::precondition_check::hf8792114bfee73a7+0xe4>
1000bde8: 4001         	ands	r1, r0
1000bdea: 4829         	ldr	r0, [pc, #0xa4]         @ 0x1000be90 <core::slice::raw::from_raw_parts_mut::precondition_check::hf8792114bfee73a7+0xe8>
1000bdec: 4348         	muls	r0, r1, r0
1000bdee: 0e00         	lsrs	r0, r0, #0x18
1000bdf0: 9015         	str	r0, [sp, #0x54]
1000bdf2: 9815         	ldr	r0, [sp, #0x54]
1000bdf4: 2801         	cmp	r0, #0x1
1000bdf6: d108         	bne	0x1000be0a <core::slice::raw::from_raw_parts_mut::precondition_check::hf8792114bfee73a7+0x62> @ imm = #0x10
1000bdf8: e7ff         	b	0x1000bdfa <core::slice::raw::from_raw_parts_mut::precondition_check::hf8792114bfee73a7+0x52> @ imm = #-0x2
1000bdfa: 9805         	ldr	r0, [sp, #0x14]
1000bdfc: 9903         	ldr	r1, [sp, #0xc]
1000bdfe: 4602         	mov	r2, r0
1000be00: 9201         	str	r2, [sp, #0x4]
1000be02: 1e49         	subs	r1, r1, #0x1
1000be04: 4208         	tst	r0, r1
1000be06: d00d         	beq	0x1000be24 <core::slice::raw::from_raw_parts_mut::precondition_check::hf8792114bfee73a7+0x7c> @ imm = #0x1a
1000be08: e010         	b	0x1000be2c <core::slice::raw::from_raw_parts_mut::precondition_check::hf8792114bfee73a7+0x84> @ imm = #0x20
1000be0a: 481d         	ldr	r0, [pc, #0x74]         @ 0x1000be80 <core::slice::raw::from_raw_parts_mut::precondition_check::hf8792114bfee73a7+0xd8>
1000be0c: 9006         	str	r0, [sp, #0x18]
1000be0e: 2001         	movs	r0, #0x1
1000be10: 9007         	str	r0, [sp, #0x1c]
1000be12: 2000         	movs	r0, #0x0
1000be14: 900a         	str	r0, [sp, #0x28]
1000be16: 2104         	movs	r1, #0x4
1000be18: 9108         	str	r1, [sp, #0x20]
1000be1a: 9009         	str	r0, [sp, #0x24]
1000be1c: 491d         	ldr	r1, [pc, #0x74]         @ 0x1000be94 <core::slice::raw::from_raw_parts_mut::precondition_check::hf8792114bfee73a7+0xec>
1000be1e: a806         	add	r0, sp, #0x18
1000be20: f000 faac    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #0x558
1000be24: 9801         	ldr	r0, [sp, #0x4]
1000be26: 2800         	cmp	r0, #0x0
1000be28: d102         	bne	0x1000be30 <core::slice::raw::from_raw_parts_mut::precondition_check::hf8792114bfee73a7+0x88> @ imm = #0x4
1000be2a: e000         	b	0x1000be2e <core::slice::raw::from_raw_parts_mut::precondition_check::hf8792114bfee73a7+0x86> @ imm = #0x0
1000be2c: e7ff         	b	0x1000be2e <core::slice::raw::from_raw_parts_mut::precondition_check::hf8792114bfee73a7+0x86> @ imm = #-0x2
1000be2e: e021         	b	0x1000be74 <core::slice::raw::from_raw_parts_mut::precondition_check::hf8792114bfee73a7+0xcc> @ imm = #0x42
1000be30: 9804         	ldr	r0, [sp, #0x10]
1000be32: 4242         	rsbs	r2, r0, #0
1000be34: 4601         	mov	r1, r0
1000be36: 4151         	adcs	r1, r2
1000be38: 9100         	str	r1, [sp]
1000be3a: 2800         	cmp	r0, #0x0
1000be3c: d104         	bne	0x1000be48 <core::slice::raw::from_raw_parts_mut::precondition_check::hf8792114bfee73a7+0xa0> @ imm = #0x8
1000be3e: e7ff         	b	0x1000be40 <core::slice::raw::from_raw_parts_mut::precondition_check::hf8792114bfee73a7+0x98> @ imm = #-0x2
1000be40: 2000         	movs	r0, #0x0
1000be42: 43c0         	mvns	r0, r0
1000be44: 900c         	str	r0, [sp, #0x30]
1000be46: e004         	b	0x1000be52 <core::slice::raw::from_raw_parts_mut::precondition_check::hf8792114bfee73a7+0xaa> @ imm = #0x8
1000be48: 9800         	ldr	r0, [sp]
1000be4a: 07c0         	lsls	r0, r0, #0x1f
1000be4c: 2800         	cmp	r0, #0x0
1000be4e: d10b         	bne	0x1000be68 <core::slice::raw::from_raw_parts_mut::precondition_check::hf8792114bfee73a7+0xc0> @ imm = #0x16
1000be50: e004         	b	0x1000be5c <core::slice::raw::from_raw_parts_mut::precondition_check::hf8792114bfee73a7+0xb4> @ imm = #0x8
1000be52: 9802         	ldr	r0, [sp, #0x8]
1000be54: 990c         	ldr	r1, [sp, #0x30]
1000be56: 4288         	cmp	r0, r1
1000be58: d90a         	bls	0x1000be70 <core::slice::raw::from_raw_parts_mut::precondition_check::hf8792114bfee73a7+0xc8> @ imm = #0x14
1000be5a: e008         	b	0x1000be6e <core::slice::raw::from_raw_parts_mut::precondition_check::hf8792114bfee73a7+0xc6> @ imm = #0x10
1000be5c: 9904         	ldr	r1, [sp, #0x10]
1000be5e: 480e         	ldr	r0, [pc, #0x38]         @ 0x1000be98 <core::slice::raw::from_raw_parts_mut::precondition_check::hf8792114bfee73a7+0xf0>
1000be60: f001 fc9c    	bl	0x1000d79c <__aeabi_uidiv> @ imm = #0x1938
1000be64: 900c         	str	r0, [sp, #0x30]
1000be66: e7f4         	b	0x1000be52 <core::slice::raw::from_raw_parts_mut::precondition_check::hf8792114bfee73a7+0xaa> @ imm = #-0x18
1000be68: 480c         	ldr	r0, [pc, #0x30]         @ 0x1000be9c <core::slice::raw::from_raw_parts_mut::precondition_check::hf8792114bfee73a7+0xf4>
1000be6a: f001 fb29    	bl	0x1000d4c0 <core::panicking::panic_const::panic_const_div_by_zero::ha09f740279da4cf0> @ imm = #0x1652
1000be6e: e001         	b	0x1000be74 <core::slice::raw::from_raw_parts_mut::precondition_check::hf8792114bfee73a7+0xcc> @ imm = #0x2
1000be70: b016         	add	sp, #0x58
1000be72: bd80         	pop	{r7, pc}
1000be74: 480a         	ldr	r0, [pc, #0x28]         @ 0x1000bea0 <core::slice::raw::from_raw_parts_mut::precondition_check::hf8792114bfee73a7+0xf8>
1000be76: 21ff         	movs	r1, #0xff
1000be78: 311c         	adds	r1, #0x1c
1000be7a: f000 fab1    	bl	0x1000c3e0 <core::panicking::panic_nounwind::h6901392fec1083b6> @ imm = #0x562
1000be7e: 46c0         	mov	r8, r8
1000be80: 54 20 01 10  	.word	0x10012054
1000be84: 55 55 55 55  	.word	0x55555555
1000be88: 33 33 33 33  	.word	0x33333333
1000be8c: 0f 0f 0f 0f  	.word	0x0f0f0f0f
1000be90: 01 01 01 01  	.word	0x01010101
1000be94: 70 22 01 10  	.word	0x10012270
1000be98: ff ff ff 7f  	.word	0x7fffffff
1000be9c: d0 20 01 10  	.word	0x100120d0
1000bea0: e0 20 01 10  	.word	0x100120e0

1000bea4 <_ZN4core6result19Result$LT$T$C$E$GT$2ok17ha1fbfcfc3b7a8095E>:
1000bea4: b580         	push	{r7, lr}
1000bea6: af00         	add	r7, sp, #0x0
1000bea8: b082         	sub	sp, #0x8
1000beaa: 4601         	mov	r1, r0
1000beac: 4668         	mov	r0, sp
1000beae: 7001         	strb	r1, [r0]
1000beb0: 7800         	ldrb	r0, [r0]
1000beb2: 07c0         	lsls	r0, r0, #0x1f
1000beb4: 2800         	cmp	r0, #0x0
1000beb6: d104         	bne	0x1000bec2 <_ZN4core6result19Result$LT$T$C$E$GT$2ok17ha1fbfcfc3b7a8095E+0x1e> @ imm = #0x8
1000beb8: e7ff         	b	0x1000beba <_ZN4core6result19Result$LT$T$C$E$GT$2ok17ha1fbfcfc3b7a8095E+0x16> @ imm = #-0x2
1000beba: a901         	add	r1, sp, #0x4
1000bebc: 2001         	movs	r0, #0x1
1000bebe: 7008         	strb	r0, [r1]
1000bec0: e003         	b	0x1000beca <_ZN4core6result19Result$LT$T$C$E$GT$2ok17ha1fbfcfc3b7a8095E+0x26> @ imm = #0x6
1000bec2: a901         	add	r1, sp, #0x4
1000bec4: 2000         	movs	r0, #0x0
1000bec6: 7008         	strb	r0, [r1]
1000bec8: e7ff         	b	0x1000beca <_ZN4core6result19Result$LT$T$C$E$GT$2ok17ha1fbfcfc3b7a8095E+0x26> @ imm = #-0x2
1000beca: 4668         	mov	r0, sp
1000becc: 7800         	ldrb	r0, [r0]
1000bece: 07c0         	lsls	r0, r0, #0x1f
1000bed0: 2800         	cmp	r0, #0x0
1000bed2: d104         	bne	0x1000bede <_ZN4core6result19Result$LT$T$C$E$GT$2ok17ha1fbfcfc3b7a8095E+0x3a> @ imm = #0x8
1000bed4: e7ff         	b	0x1000bed6 <_ZN4core6result19Result$LT$T$C$E$GT$2ok17ha1fbfcfc3b7a8095E+0x32> @ imm = #-0x2
1000bed6: a801         	add	r0, sp, #0x4
1000bed8: 7800         	ldrb	r0, [r0]
1000beda: b002         	add	sp, #0x8
1000bedc: bd80         	pop	{r7, pc}
1000bede: e7fa         	b	0x1000bed6 <_ZN4core6result19Result$LT$T$C$E$GT$2ok17ha1fbfcfc3b7a8095E+0x32> @ imm = #-0xc

1000bee0 <<&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt::hc4174b861e6caaf0>:
1000bee0: b5f0         	push	{r4, r5, r6, r7, lr}
1000bee2: af03         	add	r7, sp, #0xc
1000bee4: b097         	sub	sp, #0x5c
1000bee6: 9100         	str	r1, [sp]
1000bee8: 9001         	str	r0, [sp, #0x4]
1000beea: 900a         	str	r0, [sp, #0x28]
1000beec: 910b         	str	r1, [sp, #0x2c]
1000beee: 6808         	ldr	r0, [r1]
1000bef0: 9002         	str	r0, [sp, #0x8]
1000bef2: 6848         	ldr	r0, [r1, #0x4]
1000bef4: 9003         	str	r0, [sp, #0xc]
1000bef6: 68c9         	ldr	r1, [r1, #0xc]
1000bef8: 9104         	str	r1, [sp, #0x10]
1000befa: 2800         	cmp	r0, #0x0
1000befc: d104         	bne	0x1000bf08 <<&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt::hc4174b861e6caaf0+0x28> @ imm = #0x8
1000befe: e7ff         	b	0x1000bf00 <<&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt::hc4174b861e6caaf0+0x20> @ imm = #-0x2
1000bf00: 9804         	ldr	r0, [sp, #0x10]
1000bf02: 2800         	cmp	r0, #0x0
1000bf04: d004         	beq	0x1000bf10 <<&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt::hc4174b861e6caaf0+0x30> @ imm = #0x8
1000bf06: e008         	b	0x1000bf1a <<&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt::hc4174b861e6caaf0+0x3a> @ imm = #0x10
1000bf08: 9803         	ldr	r0, [sp, #0xc]
1000bf0a: 2801         	cmp	r0, #0x1
1000bf0c: d012         	beq	0x1000bf34 <<&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt::hc4174b861e6caaf0+0x54> @ imm = #0x24
1000bf0e: e004         	b	0x1000bf1a <<&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt::hc4174b861e6caaf0+0x3a> @ imm = #0x8
1000bf10: 2001         	movs	r0, #0x1
1000bf12: 9008         	str	r0, [sp, #0x20]
1000bf14: 2000         	movs	r0, #0x0
1000bf16: 9009         	str	r0, [sp, #0x24]
1000bf18: e002         	b	0x1000bf20 <<&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt::hc4174b861e6caaf0+0x40> @ imm = #0x4
1000bf1a: 2000         	movs	r0, #0x0
1000bf1c: 9008         	str	r0, [sp, #0x20]
1000bf1e: e7ff         	b	0x1000bf20 <<&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt::hc4174b861e6caaf0+0x40> @ imm = #-0x2
1000bf20: a808         	add	r0, sp, #0x20
1000bf22: 900d         	str	r0, [sp, #0x34]
1000bf24: a80e         	add	r0, sp, #0x38
1000bf26: 2100         	movs	r1, #0x0
1000bf28: 7001         	strb	r1, [r0]
1000bf2a: 7800         	ldrb	r0, [r0]
1000bf2c: 07c0         	lsls	r0, r0, #0x1f
1000bf2e: 2800         	cmp	r0, #0x0
1000bf30: d10c         	bne	0x1000bf4c <<&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt::hc4174b861e6caaf0+0x6c> @ imm = #0x18
1000bf32: e00a         	b	0x1000bf4a <<&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt::hc4174b861e6caaf0+0x6a> @ imm = #0x14
1000bf34: 9804         	ldr	r0, [sp, #0x10]
1000bf36: 2800         	cmp	r0, #0x0
1000bf38: d1ef         	bne	0x1000bf1a <<&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt::hc4174b861e6caaf0+0x3a> @ imm = #-0x22
1000bf3a: e7ff         	b	0x1000bf3c <<&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt::hc4174b861e6caaf0+0x5c> @ imm = #-0x2
1000bf3c: 9802         	ldr	r0, [sp, #0x8]
1000bf3e: 900c         	str	r0, [sp, #0x30]
1000bf40: 6801         	ldr	r1, [r0]
1000bf42: 6840         	ldr	r0, [r0, #0x4]
1000bf44: 9108         	str	r1, [sp, #0x20]
1000bf46: 9009         	str	r0, [sp, #0x24]
1000bf48: e7ea         	b	0x1000bf20 <<&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt::hc4174b861e6caaf0+0x40> @ imm = #-0x2c
1000bf4a: e007         	b	0x1000bf5c <<&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt::hc4174b861e6caaf0+0x7c> @ imm = #0xe
1000bf4c: 9908         	ldr	r1, [sp, #0x20]
1000bf4e: 9809         	ldr	r0, [sp, #0x24]
1000bf50: 9106         	str	r1, [sp, #0x18]
1000bf52: 9007         	str	r0, [sp, #0x1c]
1000bf54: 9806         	ldr	r0, [sp, #0x18]
1000bf56: 2800         	cmp	r0, #0x0
1000bf58: d10e         	bne	0x1000bf78 <<&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt::hc4174b861e6caaf0+0x98> @ imm = #0x1c
1000bf5a: e7ff         	b	0x1000bf5c <<&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt::hc4174b861e6caaf0+0x7c> @ imm = #-0x2
1000bf5c: 9801         	ldr	r0, [sp, #0x4]
1000bf5e: 9b00         	ldr	r3, [sp]
1000bf60: aa11         	add	r2, sp, #0x44
1000bf62: 4611         	mov	r1, r2
1000bf64: cb70         	ldm	r3!, {r4, r5, r6}
1000bf66: c170         	stm	r1!, {r4, r5, r6}
1000bf68: cb70         	ldm	r3!, {r4, r5, r6}
1000bf6a: c170         	stm	r1!, {r4, r5, r6}
1000bf6c: 4909         	ldr	r1, [pc, #0x24]         @ 0x1000bf94 <<&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt::hc4174b861e6caaf0+0xb4>
1000bf6e: f000 fca5    	bl	0x1000c8bc <core::fmt::write::h7bf3e0e265c649d5> @ imm = #0x94a
1000bf72: a905         	add	r1, sp, #0x14
1000bf74: 7008         	strb	r0, [r1]
1000bf76: e009         	b	0x1000bf8c <<&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt::hc4174b861e6caaf0+0xac> @ imm = #0x12
1000bf78: 9801         	ldr	r0, [sp, #0x4]
1000bf7a: 9906         	ldr	r1, [sp, #0x18]
1000bf7c: 9a07         	ldr	r2, [sp, #0x1c]
1000bf7e: 910f         	str	r1, [sp, #0x3c]
1000bf80: 9210         	str	r2, [sp, #0x40]
1000bf82: f000 f86f    	bl	0x1000c064 <<defmt::export::FmtWrite as core::fmt::Write>::write_str::h72bfd4c2e3c8d516> @ imm = #0xde
1000bf86: a905         	add	r1, sp, #0x14
1000bf88: 7008         	strb	r0, [r1]
1000bf8a: e7ff         	b	0x1000bf8c <<&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt::hc4174b861e6caaf0+0xac> @ imm = #-0x2
1000bf8c: a805         	add	r0, sp, #0x14
1000bf8e: 7800         	ldrb	r0, [r0]
1000bf90: b017         	add	sp, #0x5c
1000bf92: bdf0         	pop	{r4, r5, r6, r7, pc}
1000bf94: 80 22 01 10  	.word	0x10012280

1000bf98 <defmt::export::make_istr::hdc5301bbf45c9956>:
1000bf98: b580         	push	{r7, lr}
1000bf9a: af00         	add	r7, sp, #0x0
1000bf9c: b081         	sub	sp, #0x4
1000bf9e: 4669         	mov	r1, sp
1000bfa0: 8008         	strh	r0, [r1]
1000bfa2: b001         	add	sp, #0x4
1000bfa4: bd80         	pop	{r7, pc}

1000bfa6 <defmt::export::make_formatter::h19688d4fb5ac1b30>:
1000bfa6: b580         	push	{r7, lr}
1000bfa8: af00         	add	r7, sp, #0x0
1000bfaa: bd80         	pop	{r7, pc}

1000bfac <defmt::export::istr::hf36cdaa391ec7b8c>:
1000bfac: b580         	push	{r7, lr}
1000bfae: af00         	add	r7, sp, #0x0
1000bfb0: b086         	sub	sp, #0x18
1000bfb2: 9002         	str	r0, [sp, #0x8]
1000bfb4: 8800         	ldrh	r0, [r0]
1000bfb6: f7ff fe5c    	bl	0x1000bc72 <core::num::<impl u16>::to_le_bytes::hfa2a3692f4f41df2> @ imm = #-0x348
1000bfba: a903         	add	r1, sp, #0xc
1000bfbc: 8008         	strh	r0, [r1]
1000bfbe: 9903         	ldr	r1, [sp, #0xc]
1000bfc0: a801         	add	r0, sp, #0x4
1000bfc2: 8001         	strh	r1, [r0]
1000bfc4: 9004         	str	r0, [sp, #0x10]
1000bfc6: 2102         	movs	r1, #0x2
1000bfc8: 9105         	str	r1, [sp, #0x14]
1000bfca: f7f9 ff09    	bl	0x10005de0 <_defmt_write> @ imm = #-0x61ee
1000bfce: b006         	add	sp, #0x18
1000bfd0: bd80         	pop	{r7, pc}
1000bfd2: d4d4         	bmi	0x1000bf7e <<&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt::hc4174b861e6caaf0+0x9e> @ imm = #-0x58

1000bfd4 <defmt::export::display::h417f11bff0b70874>:
1000bfd4: b580         	push	{r7, lr}
1000bfd6: af00         	add	r7, sp, #0x0
1000bfd8: b090         	sub	sp, #0x40
1000bfda: 9001         	str	r0, [sp, #0x4]
1000bfdc: 9102         	str	r1, [sp, #0x8]
1000bfde: a80c         	add	r0, sp, #0x30
1000bfe0: a901         	add	r1, sp, #0x4
1000bfe2: f7ff fdff    	bl	0x1000bbe4 <core::fmt::rt::Argument::new_display::h6bcff6f0be1f4aa6> @ imm = #-0x402
1000bfe6: 980d         	ldr	r0, [sp, #0x34]
1000bfe8: 900b         	str	r0, [sp, #0x2c]
1000bfea: 980c         	ldr	r0, [sp, #0x30]
1000bfec: 900a         	str	r0, [sp, #0x28]
1000bfee: 490a         	ldr	r1, [pc, #0x28]         @ 0x1000c018 <defmt::export::display::h417f11bff0b70874+0x44>
1000bff0: a804         	add	r0, sp, #0x10
1000bff2: 9000         	str	r0, [sp]
1000bff4: aa0a         	add	r2, sp, #0x28
1000bff6: f7ff fe2b    	bl	0x1000bc50 <core::fmt::Arguments::new_v1::h0f83b50060746513> @ imm = #-0x3aa
1000bffa: 9900         	ldr	r1, [sp]
1000bffc: a803         	add	r0, sp, #0xc
1000bffe: f7ff fe1f    	bl	0x1000bc40 <core::fmt::Write::write_fmt::h02cf07ef85c92752> @ imm = #-0x3c2
1000c002: f7ff ff4f    	bl	0x1000bea4 <_ZN4core6result19Result$LT$T$C$E$GT$2ok17ha1fbfcfc3b7a8095E> @ imm = #-0x162
1000c006: 4805         	ldr	r0, [pc, #0x14]         @ 0x1000c01c <defmt::export::display::h417f11bff0b70874+0x48>
1000c008: 900e         	str	r0, [sp, #0x38]
1000c00a: 2101         	movs	r1, #0x1
1000c00c: 910f         	str	r1, [sp, #0x3c]
1000c00e: f7f9 fee7    	bl	0x10005de0 <_defmt_write> @ imm = #-0x6232
1000c012: b010         	add	sp, #0x40
1000c014: bd80         	pop	{r7, pc}
1000c016: 46c0         	mov	r8, r8
1000c018: 98 22 01 10  	.word	0x10012298
1000c01c: a0 22 01 10  	.word	0x100122a0

1000c020 <defmt::export::acquire_and_header::h238bd5e7e1bdce90>:
1000c020: b580         	push	{r7, lr}
1000c022: af00         	add	r7, sp, #0x0
1000c024: b082         	sub	sp, #0x8
1000c026: 9000         	str	r0, [sp]
1000c028: 9001         	str	r0, [sp, #0x4]
1000c02a: f7f9 fecf    	bl	0x10005dcc <_defmt_acquire> @ imm = #-0x6262
1000c02e: 9800         	ldr	r0, [sp]
1000c030: f7ff ffbc    	bl	0x1000bfac <defmt::export::istr::hf36cdaa391ec7b8c> @ imm = #-0x88
1000c034: f7ff ffb7    	bl	0x1000bfa6 <defmt::export::make_formatter::h19688d4fb5ac1b30> @ imm = #-0x92
1000c038: f000 f82c    	bl	0x1000c094 <_defmt_timestamp> @ imm = #0x58
1000c03c: b002         	add	sp, #0x8
1000c03e: bd80         	pop	{r7, pc}

1000c040 <defmt::export::acquire_header_and_release::h2c3ea15bddfdad62>:
1000c040: b580         	push	{r7, lr}
1000c042: af00         	add	r7, sp, #0x0
1000c044: b082         	sub	sp, #0x8
1000c046: 9000         	str	r0, [sp]
1000c048: 9001         	str	r0, [sp, #0x4]
1000c04a: f7f9 febf    	bl	0x10005dcc <_defmt_acquire> @ imm = #-0x6282
1000c04e: 9800         	ldr	r0, [sp]
1000c050: f7ff ffac    	bl	0x1000bfac <defmt::export::istr::hf36cdaa391ec7b8c> @ imm = #-0xa8
1000c054: f7ff ffa7    	bl	0x1000bfa6 <defmt::export::make_formatter::h19688d4fb5ac1b30> @ imm = #-0xb2
1000c058: f000 f81c    	bl	0x1000c094 <_defmt_timestamp> @ imm = #0x38
1000c05c: f7f9 febb    	bl	0x10005dd6 <_defmt_release> @ imm = #-0x628a
1000c060: b002         	add	sp, #0x8
1000c062: bd80         	pop	{r7, pc}

1000c064 <<defmt::export::FmtWrite as core::fmt::Write>::write_str::h72bfd4c2e3c8d516>:
1000c064: b580         	push	{r7, lr}
1000c066: af00         	add	r7, sp, #0x0
1000c068: b08a         	sub	sp, #0x28
1000c06a: 9200         	str	r2, [sp]
1000c06c: 460a         	mov	r2, r1
1000c06e: 9900         	ldr	r1, [sp]
1000c070: 9201         	str	r2, [sp, #0x4]
1000c072: 4602         	mov	r2, r0
1000c074: 9801         	ldr	r0, [sp, #0x4]
1000c076: 9203         	str	r2, [sp, #0xc]
1000c078: 9004         	str	r0, [sp, #0x10]
1000c07a: 9105         	str	r1, [sp, #0x14]
1000c07c: 9006         	str	r0, [sp, #0x18]
1000c07e: 9107         	str	r1, [sp, #0x1c]
1000c080: 9008         	str	r0, [sp, #0x20]
1000c082: 9109         	str	r1, [sp, #0x24]
1000c084: f7f9 feac    	bl	0x10005de0 <_defmt_write> @ imm = #-0x62a8
1000c088: a802         	add	r0, sp, #0x8
1000c08a: 2100         	movs	r1, #0x0
1000c08c: 7001         	strb	r1, [r0]
1000c08e: 7800         	ldrb	r0, [r0]
1000c090: b00a         	add	sp, #0x28
1000c092: bd80         	pop	{r7, pc}

1000c094 <_defmt_timestamp>:
1000c094: b580         	push	{r7, lr}
1000c096: af00         	add	r7, sp, #0x0
1000c098: b081         	sub	sp, #0x4
1000c09a: b001         	add	sp, #0x4
1000c09c: bd80         	pop	{r7, pc}
1000c09e: d4d4         	bmi	0x1000c04a <defmt::export::acquire_header_and_release::h2c3ea15bddfdad62+0xa> @ imm = #-0x58

1000c0a0 <_defmt_panic>:
1000c0a0: b580         	push	{r7, lr}
1000c0a2: af00         	add	r7, sp, #0x0
1000c0a4: 4801         	ldr	r0, [pc, #0x4]          @ 0x1000c0ac <_defmt_panic+0xc>
1000c0a6: f000 f803    	bl	0x1000c0b0 <defmt::default_panic::panic_cold_explicit::h178940ebd49dd2a0> @ imm = #0x6
1000c0aa: 46c0         	mov	r8, r8
1000c0ac: f8 22 01 10  	.word	0x100122f8

1000c0b0 <defmt::default_panic::panic_cold_explicit::h178940ebd49dd2a0>:
1000c0b0: b580         	push	{r7, lr}
1000c0b2: af00         	add	r7, sp, #0x0
1000c0b4: f000 f9aa    	bl	0x1000c40c <core::panicking::panic_explicit::hab1f90333547f2f9> @ imm = #0x354

1000c0b8 <XIP_IRQ>:
1000c0b8: b580         	push	{r7, lr}
1000c0ba: af00         	add	r7, sp, #0x0
1000c0bc: e7ff         	b	0x1000c0be <XIP_IRQ+0x6> @ imm = #-0x2
1000c0be: e7fe         	b	0x1000c0be <XIP_IRQ+0x6> @ imm = #-0x4

1000c0c0 <__pre_init>:
1000c0c0: b580         	push	{r7, lr}
1000c0c2: af00         	add	r7, sp, #0x0
1000c0c4: bd80         	pop	{r7, pc}

1000c0c6 <core::ptr::read_volatile::ha8f0641342a9fdfd>:
1000c0c6: b580         	push	{r7, lr}
1000c0c8: af00         	add	r7, sp, #0x0
1000c0ca: b084         	sub	sp, #0x10
1000c0cc: 9001         	str	r0, [sp, #0x4]
1000c0ce: 9002         	str	r0, [sp, #0x8]
1000c0d0: e7ff         	b	0x1000c0d2 <core::ptr::read_volatile::ha8f0641342a9fdfd+0xc> @ imm = #-0x2
1000c0d2: 9801         	ldr	r0, [sp, #0x4]
1000c0d4: 2104         	movs	r1, #0x4
1000c0d6: 2200         	movs	r2, #0x0
1000c0d8: f000 f808    	bl	0x1000c0ec <core::ptr::read_volatile::precondition_check::h9920ab0873abbb3d> @ imm = #0x10
1000c0dc: e7ff         	b	0x1000c0de <core::ptr::read_volatile::ha8f0641342a9fdfd+0x18> @ imm = #-0x2
1000c0de: 9801         	ldr	r0, [sp, #0x4]
1000c0e0: 6800         	ldr	r0, [r0]
1000c0e2: 9003         	str	r0, [sp, #0xc]
1000c0e4: 9803         	ldr	r0, [sp, #0xc]
1000c0e6: b004         	add	sp, #0x10
1000c0e8: bd80         	pop	{r7, pc}
1000c0ea: d4d4         	bmi	0x1000c096 <_defmt_timestamp+0x2> @ imm = #-0x58

1000c0ec <core::ptr::read_volatile::precondition_check::h9920ab0873abbb3d>:
1000c0ec: b580         	push	{r7, lr}
1000c0ee: af00         	add	r7, sp, #0x0
1000c0f0: b090         	sub	sp, #0x40
1000c0f2: 9102         	str	r1, [sp, #0x8]
1000c0f4: 9003         	str	r0, [sp, #0xc]
1000c0f6: 4613         	mov	r3, r2
1000c0f8: 9304         	str	r3, [sp, #0x10]
1000c0fa: 900b         	str	r0, [sp, #0x2c]
1000c0fc: 910c         	str	r1, [sp, #0x30]
1000c0fe: a80d         	add	r0, sp, #0x34
1000c100: 7002         	strb	r2, [r0]
1000c102: 481f         	ldr	r0, [pc, #0x7c]         @ 0x1000c180 <core::ptr::read_volatile::precondition_check::h9920ab0873abbb3d+0x94>
1000c104: 900e         	str	r0, [sp, #0x38]
1000c106: 0848         	lsrs	r0, r1, #0x1
1000c108: 4a1e         	ldr	r2, [pc, #0x78]         @ 0x1000c184 <core::ptr::read_volatile::precondition_check::h9920ab0873abbb3d+0x98>
1000c10a: 4010         	ands	r0, r2
1000c10c: 1a09         	subs	r1, r1, r0
1000c10e: 4a1e         	ldr	r2, [pc, #0x78]         @ 0x1000c188 <core::ptr::read_volatile::precondition_check::h9920ab0873abbb3d+0x9c>
1000c110: 4608         	mov	r0, r1
1000c112: 4010         	ands	r0, r2
1000c114: 0889         	lsrs	r1, r1, #0x2
1000c116: 4011         	ands	r1, r2
1000c118: 1840         	adds	r0, r0, r1
1000c11a: 0901         	lsrs	r1, r0, #0x4
1000c11c: 1841         	adds	r1, r0, r1
1000c11e: 481b         	ldr	r0, [pc, #0x6c]         @ 0x1000c18c <core::ptr::read_volatile::precondition_check::h9920ab0873abbb3d+0xa0>
1000c120: 4001         	ands	r1, r0
1000c122: 481b         	ldr	r0, [pc, #0x6c]         @ 0x1000c190 <core::ptr::read_volatile::precondition_check::h9920ab0873abbb3d+0xa4>
1000c124: 4348         	muls	r0, r1, r0
1000c126: 0e00         	lsrs	r0, r0, #0x18
1000c128: 900f         	str	r0, [sp, #0x3c]
1000c12a: 980f         	ldr	r0, [sp, #0x3c]
1000c12c: 2801         	cmp	r0, #0x1
1000c12e: d108         	bne	0x1000c142 <core::ptr::read_volatile::precondition_check::h9920ab0873abbb3d+0x56> @ imm = #0x10
1000c130: e7ff         	b	0x1000c132 <core::ptr::read_volatile::precondition_check::h9920ab0873abbb3d+0x46> @ imm = #-0x2
1000c132: 9803         	ldr	r0, [sp, #0xc]
1000c134: 9902         	ldr	r1, [sp, #0x8]
1000c136: 4602         	mov	r2, r0
1000c138: 9201         	str	r2, [sp, #0x4]
1000c13a: 1e49         	subs	r1, r1, #0x1
1000c13c: 4208         	tst	r0, r1
1000c13e: d00d         	beq	0x1000c15c <core::ptr::read_volatile::precondition_check::h9920ab0873abbb3d+0x70> @ imm = #0x1a
1000c140: e011         	b	0x1000c166 <core::ptr::read_volatile::precondition_check::h9920ab0873abbb3d+0x7a> @ imm = #0x22
1000c142: 480f         	ldr	r0, [pc, #0x3c]         @ 0x1000c180 <core::ptr::read_volatile::precondition_check::h9920ab0873abbb3d+0x94>
1000c144: 9005         	str	r0, [sp, #0x14]
1000c146: 2001         	movs	r0, #0x1
1000c148: 9006         	str	r0, [sp, #0x18]
1000c14a: 2000         	movs	r0, #0x0
1000c14c: 9009         	str	r0, [sp, #0x24]
1000c14e: 2104         	movs	r1, #0x4
1000c150: 9107         	str	r1, [sp, #0x1c]
1000c152: 9008         	str	r0, [sp, #0x20]
1000c154: 490f         	ldr	r1, [pc, #0x3c]         @ 0x1000c194 <core::ptr::read_volatile::precondition_check::h9920ab0873abbb3d+0xa8>
1000c156: a805         	add	r0, sp, #0x14
1000c158: f000 f910    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #0x220
1000c15c: 9804         	ldr	r0, [sp, #0x10]
1000c15e: 07c0         	lsls	r0, r0, #0x1f
1000c160: 2800         	cmp	r0, #0x0
1000c162: d105         	bne	0x1000c170 <core::ptr::read_volatile::precondition_check::h9920ab0873abbb3d+0x84> @ imm = #0xa
1000c164: e000         	b	0x1000c168 <core::ptr::read_volatile::precondition_check::h9920ab0873abbb3d+0x7c> @ imm = #0x0
1000c166: e004         	b	0x1000c172 <core::ptr::read_volatile::precondition_check::h9920ab0873abbb3d+0x86> @ imm = #0x8
1000c168: 9801         	ldr	r0, [sp, #0x4]
1000c16a: 2800         	cmp	r0, #0x0
1000c16c: d105         	bne	0x1000c17a <core::ptr::read_volatile::precondition_check::h9920ab0873abbb3d+0x8e> @ imm = #0xa
1000c16e: e000         	b	0x1000c172 <core::ptr::read_volatile::precondition_check::h9920ab0873abbb3d+0x86> @ imm = #0x0
1000c170: e003         	b	0x1000c17a <core::ptr::read_volatile::precondition_check::h9920ab0873abbb3d+0x8e> @ imm = #0x6
1000c172: 4809         	ldr	r0, [pc, #0x24]         @ 0x1000c198 <core::ptr::read_volatile::precondition_check::h9920ab0873abbb3d+0xac>
1000c174: 21e3         	movs	r1, #0xe3
1000c176: f000 f933    	bl	0x1000c3e0 <core::panicking::panic_nounwind::h6901392fec1083b6> @ imm = #0x266
1000c17a: b010         	add	sp, #0x40
1000c17c: bd80         	pop	{r7, pc}
1000c17e: 46c0         	mov	r8, r8
1000c180: 34 23 01 10  	.word	0x10012334
1000c184: 55 55 55 55  	.word	0x55555555
1000c188: 33 33 33 33  	.word	0x33333333
1000c18c: 0f 0f 0f 0f  	.word	0x0f0f0f0f
1000c190: 01 01 01 01  	.word	0x01010101
1000c194: 94 24 01 10  	.word	0x10012494
1000c198: 3c 23 01 10  	.word	0x1001233c

1000c19c <core::ptr::write_volatile::h8b17083d0b12d783>:
1000c19c: b580         	push	{r7, lr}
1000c19e: af00         	add	r7, sp, #0x0
1000c1a0: b084         	sub	sp, #0x10
1000c1a2: 9100         	str	r1, [sp]
1000c1a4: 9001         	str	r0, [sp, #0x4]
1000c1a6: 9002         	str	r0, [sp, #0x8]
1000c1a8: 9103         	str	r1, [sp, #0xc]
1000c1aa: e7ff         	b	0x1000c1ac <core::ptr::write_volatile::h8b17083d0b12d783+0x10> @ imm = #-0x2
1000c1ac: 9801         	ldr	r0, [sp, #0x4]
1000c1ae: 2104         	movs	r1, #0x4
1000c1b0: 2200         	movs	r2, #0x0
1000c1b2: f000 f807    	bl	0x1000c1c4 <core::ptr::write_volatile::precondition_check::hbdaecd3939337abf> @ imm = #0xe
1000c1b6: e7ff         	b	0x1000c1b8 <core::ptr::write_volatile::h8b17083d0b12d783+0x1c> @ imm = #-0x2
1000c1b8: 9800         	ldr	r0, [sp]
1000c1ba: 9901         	ldr	r1, [sp, #0x4]
1000c1bc: 6008         	str	r0, [r1]
1000c1be: b004         	add	sp, #0x10
1000c1c0: bd80         	pop	{r7, pc}
1000c1c2: d4d4         	bmi	0x1000c16e <core::ptr::read_volatile::precondition_check::h9920ab0873abbb3d+0x82> @ imm = #-0x58

1000c1c4 <core::ptr::write_volatile::precondition_check::hbdaecd3939337abf>:
1000c1c4: b580         	push	{r7, lr}
1000c1c6: af00         	add	r7, sp, #0x0
1000c1c8: b090         	sub	sp, #0x40
1000c1ca: 9101         	str	r1, [sp, #0x4]
1000c1cc: 9002         	str	r0, [sp, #0x8]
1000c1ce: 4613         	mov	r3, r2
1000c1d0: 9303         	str	r3, [sp, #0xc]
1000c1d2: 900a         	str	r0, [sp, #0x28]
1000c1d4: 910b         	str	r1, [sp, #0x2c]
1000c1d6: ab0c         	add	r3, sp, #0x30
1000c1d8: 701a         	strb	r2, [r3]
1000c1da: 4a1f         	ldr	r2, [pc, #0x7c]         @ 0x1000c258 <core::ptr::write_volatile::precondition_check::hbdaecd3939337abf+0x94>
1000c1dc: 920d         	str	r2, [sp, #0x34]
1000c1de: 900e         	str	r0, [sp, #0x38]
1000c1e0: 0848         	lsrs	r0, r1, #0x1
1000c1e2: 4a1e         	ldr	r2, [pc, #0x78]         @ 0x1000c25c <core::ptr::write_volatile::precondition_check::hbdaecd3939337abf+0x98>
1000c1e4: 4010         	ands	r0, r2
1000c1e6: 1a09         	subs	r1, r1, r0
1000c1e8: 4a1d         	ldr	r2, [pc, #0x74]         @ 0x1000c260 <core::ptr::write_volatile::precondition_check::hbdaecd3939337abf+0x9c>
1000c1ea: 4608         	mov	r0, r1
1000c1ec: 4010         	ands	r0, r2
1000c1ee: 0889         	lsrs	r1, r1, #0x2
1000c1f0: 4011         	ands	r1, r2
1000c1f2: 1840         	adds	r0, r0, r1
1000c1f4: 0901         	lsrs	r1, r0, #0x4
1000c1f6: 1841         	adds	r1, r0, r1
1000c1f8: 481a         	ldr	r0, [pc, #0x68]         @ 0x1000c264 <core::ptr::write_volatile::precondition_check::hbdaecd3939337abf+0xa0>
1000c1fa: 4001         	ands	r1, r0
1000c1fc: 481a         	ldr	r0, [pc, #0x68]         @ 0x1000c268 <core::ptr::write_volatile::precondition_check::hbdaecd3939337abf+0xa4>
1000c1fe: 4348         	muls	r0, r1, r0
1000c200: 0e00         	lsrs	r0, r0, #0x18
1000c202: 900f         	str	r0, [sp, #0x3c]
1000c204: 980f         	ldr	r0, [sp, #0x3c]
1000c206: 2801         	cmp	r0, #0x1
1000c208: d108         	bne	0x1000c21c <core::ptr::write_volatile::precondition_check::hbdaecd3939337abf+0x58> @ imm = #0x10
1000c20a: e7ff         	b	0x1000c20c <core::ptr::write_volatile::precondition_check::hbdaecd3939337abf+0x48> @ imm = #-0x2
1000c20c: 9802         	ldr	r0, [sp, #0x8]
1000c20e: 9901         	ldr	r1, [sp, #0x4]
1000c210: 4602         	mov	r2, r0
1000c212: 9200         	str	r2, [sp]
1000c214: 1e49         	subs	r1, r1, #0x1
1000c216: 4208         	tst	r0, r1
1000c218: d00d         	beq	0x1000c236 <core::ptr::write_volatile::precondition_check::hbdaecd3939337abf+0x72> @ imm = #0x1a
1000c21a: e011         	b	0x1000c240 <core::ptr::write_volatile::precondition_check::hbdaecd3939337abf+0x7c> @ imm = #0x22
1000c21c: 480e         	ldr	r0, [pc, #0x38]         @ 0x1000c258 <core::ptr::write_volatile::precondition_check::hbdaecd3939337abf+0x94>
1000c21e: 9004         	str	r0, [sp, #0x10]
1000c220: 2001         	movs	r0, #0x1
1000c222: 9005         	str	r0, [sp, #0x14]
1000c224: 2000         	movs	r0, #0x0
1000c226: 9008         	str	r0, [sp, #0x20]
1000c228: 2104         	movs	r1, #0x4
1000c22a: 9106         	str	r1, [sp, #0x18]
1000c22c: 9007         	str	r0, [sp, #0x1c]
1000c22e: 490f         	ldr	r1, [pc, #0x3c]         @ 0x1000c26c <core::ptr::write_volatile::precondition_check::hbdaecd3939337abf+0xa8>
1000c230: a804         	add	r0, sp, #0x10
1000c232: f000 f8a3    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #0x146
1000c236: 9803         	ldr	r0, [sp, #0xc]
1000c238: 07c0         	lsls	r0, r0, #0x1f
1000c23a: 2800         	cmp	r0, #0x0
1000c23c: d105         	bne	0x1000c24a <core::ptr::write_volatile::precondition_check::hbdaecd3939337abf+0x86> @ imm = #0xa
1000c23e: e000         	b	0x1000c242 <core::ptr::write_volatile::precondition_check::hbdaecd3939337abf+0x7e> @ imm = #0x0
1000c240: e004         	b	0x1000c24c <core::ptr::write_volatile::precondition_check::hbdaecd3939337abf+0x88> @ imm = #0x8
1000c242: 9800         	ldr	r0, [sp]
1000c244: 2800         	cmp	r0, #0x0
1000c246: d105         	bne	0x1000c254 <core::ptr::write_volatile::precondition_check::hbdaecd3939337abf+0x90> @ imm = #0xa
1000c248: e000         	b	0x1000c24c <core::ptr::write_volatile::precondition_check::hbdaecd3939337abf+0x88> @ imm = #0x0
1000c24a: e003         	b	0x1000c254 <core::ptr::write_volatile::precondition_check::hbdaecd3939337abf+0x90> @ imm = #0x6
1000c24c: 4808         	ldr	r0, [pc, #0x20]         @ 0x1000c270 <core::ptr::write_volatile::precondition_check::hbdaecd3939337abf+0xac>
1000c24e: 21e4         	movs	r1, #0xe4
1000c250: f000 f8c6    	bl	0x1000c3e0 <core::panicking::panic_nounwind::h6901392fec1083b6> @ imm = #0x18c
1000c254: b010         	add	sp, #0x40
1000c256: bd80         	pop	{r7, pc}
1000c258: 34 23 01 10  	.word	0x10012334
1000c25c: 55 55 55 55  	.word	0x55555555
1000c260: 33 33 33 33  	.word	0x33333333
1000c264: 0f 0f 0f 0f  	.word	0x0f0f0f0f
1000c268: 01 01 01 01  	.word	0x01010101
1000c26c: 94 24 01 10  	.word	0x10012494
1000c270: a4 24 01 10  	.word	0x100124a4

1000c274 <__cpsid>:
1000c274: b672         	cpsid i
1000c276: 4770         	bx	lr

1000c278 <__cpsie>:
1000c278: b662         	cpsie i
1000c27a: 4770         	bx	lr

1000c27c <__delay>:
1000c27c: 0840         	lsrs	r0, r0, #0x1
1000c27e: 1c40         	adds	r0, r0, #0x1
1000c280: 3801         	subs	r0, #0x1
1000c282: d1fd         	bne	0x1000c280 <__delay+0x4> @ imm = #-0x6
1000c284: 4770         	bx	lr

1000c286 <__nop>:
1000c286: bf00         	nop
1000c288: 4770         	bx	lr

1000c28a <__primask_r>:
1000c28a: f3ef 8010    	mrs	r0, primask
1000c28e: 4770         	bx	lr

1000c290 <__udf>:
1000c290: de00         	udf	#0x0
1000c292: defe         	trap

1000c294 <core::fmt::Arguments::new_const::h8662ab33becb49fc>:
1000c294: b580         	push	{r7, lr}
1000c296: af00         	add	r7, sp, #0x0
1000c298: b082         	sub	sp, #0x8
1000c29a: 9100         	str	r1, [sp]
1000c29c: 4601         	mov	r1, r0
1000c29e: 9800         	ldr	r0, [sp]
1000c2a0: 9001         	str	r0, [sp, #0x4]
1000c2a2: 6008         	str	r0, [r1]
1000c2a4: 2001         	movs	r0, #0x1
1000c2a6: 6048         	str	r0, [r1, #0x4]
1000c2a8: 2000         	movs	r0, #0x0
1000c2aa: 6108         	str	r0, [r1, #0x10]
1000c2ac: 2204         	movs	r2, #0x4
1000c2ae: 608a         	str	r2, [r1, #0x8]
1000c2b0: 60c8         	str	r0, [r1, #0xc]
1000c2b2: b002         	add	sp, #0x8
1000c2b4: bd80         	pop	{r7, pc}

1000c2b6 <bare_metal::CriticalSection::new::h22725cac2bd2d9c1>:
1000c2b6: b580         	push	{r7, lr}
1000c2b8: af00         	add	r7, sp, #0x0
1000c2ba: bd80         	pop	{r7, pc}

1000c2bc <core::option::unwrap_failed::h7bc9e3204bd3622c>:
1000c2bc: b580         	push	{r7, lr}
1000c2be: af00         	add	r7, sp, #0x0
1000c2c0: 4602         	mov	r2, r0
1000c2c2: 4802         	ldr	r0, [pc, #0x8]          @ 0x1000c2cc <core::option::unwrap_failed::h7bc9e3204bd3622c+0x10>
1000c2c4: 212b         	movs	r1, #0x2b
1000c2c6: f000 f878    	bl	0x1000c3ba <core::panicking::panic::h8206ba60402e7bb2> @ imm = #0xf0
1000c2ca: 46c0         	mov	r8, r8
1000c2cc: 61 26 01 10  	.word	0x10012661

1000c2d0 <<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h9f8f508eae04db1a>:
1000c2d0: b5f0         	push	{r4, r5, r6, r7, lr}
1000c2d2: af03         	add	r7, sp, #0xc
1000c2d4: b08f         	sub	sp, #0x3c
1000c2d6: 4605         	mov	r5, r0
1000c2d8: 69cc         	ldr	r4, [r1, #0x1c]
1000c2da: 6a0e         	ldr	r6, [r1, #0x20]
1000c2dc: 68f3         	ldr	r3, [r6, #0xc]
1000c2de: 4922         	ldr	r1, [pc, #0x88]         @ 0x1000c368 <<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h9f8f508eae04db1a+0x98>
1000c2e0: 220c         	movs	r2, #0xc
1000c2e2: 4620         	mov	r0, r4
1000c2e4: 9302         	str	r3, [sp, #0x8]
1000c2e6: 4798         	blx	r3
1000c2e8: 2101         	movs	r1, #0x1
1000c2ea: 2800         	cmp	r0, #0x0
1000c2ec: d11f         	bne	0x1000c32e <<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h9f8f508eae04db1a+0x5e> @ imm = #0x3e
1000c2ee: 9101         	str	r1, [sp, #0x4]
1000c2f0: 9500         	str	r5, [sp]
1000c2f2: 6868         	ldr	r0, [r5, #0x4]
1000c2f4: 2100         	movs	r1, #0x0
1000c2f6: 9107         	str	r1, [sp, #0x1c]
1000c2f8: 2103         	movs	r1, #0x3
1000c2fa: 9104         	str	r1, [sp, #0x10]
1000c2fc: 4a1b         	ldr	r2, [pc, #0x6c]         @ 0x1000c36c <<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h9f8f508eae04db1a+0x9c>
1000c2fe: 9203         	str	r2, [sp, #0xc]
1000c300: 9106         	str	r1, [sp, #0x18]
1000c302: a909         	add	r1, sp, #0x24
1000c304: 9105         	str	r1, [sp, #0x14]
1000c306: 491a         	ldr	r1, [pc, #0x68]         @ 0x1000c370 <<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h9f8f508eae04db1a+0xa0>
1000c308: 910e         	str	r1, [sp, #0x38]
1000c30a: 4602         	mov	r2, r0
1000c30c: 320c         	adds	r2, #0xc
1000c30e: 920d         	str	r2, [sp, #0x34]
1000c310: 910c         	str	r1, [sp, #0x30]
1000c312: 4601         	mov	r1, r0
1000c314: 3108         	adds	r1, #0x8
1000c316: 910b         	str	r1, [sp, #0x2c]
1000c318: 4916         	ldr	r1, [pc, #0x58]         @ 0x1000c374 <<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h9f8f508eae04db1a+0xa4>
1000c31a: 910a         	str	r1, [sp, #0x28]
1000c31c: 9009         	str	r0, [sp, #0x24]
1000c31e: aa03         	add	r2, sp, #0xc
1000c320: 4620         	mov	r0, r4
1000c322: 4631         	mov	r1, r6
1000c324: f000 faca    	bl	0x1000c8bc <core::fmt::write::h7bf3e0e265c649d5> @ imm = #0x594
1000c328: 2800         	cmp	r0, #0x0
1000c32a: d003         	beq	0x1000c334 <<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h9f8f508eae04db1a+0x64> @ imm = #0x6
1000c32c: 9901         	ldr	r1, [sp, #0x4]
1000c32e: 4608         	mov	r0, r1
1000c330: b00f         	add	sp, #0x3c
1000c332: bdf0         	pop	{r4, r5, r6, r7, pc}
1000c334: 4635         	mov	r5, r6
1000c336: 4910         	ldr	r1, [pc, #0x40]         @ 0x1000c378 <<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h9f8f508eae04db1a+0xa8>
1000c338: 2202         	movs	r2, #0x2
1000c33a: 4620         	mov	r0, r4
1000c33c: 9b02         	ldr	r3, [sp, #0x8]
1000c33e: 4798         	blx	r3
1000c340: 2800         	cmp	r0, #0x0
1000c342: 9901         	ldr	r1, [sp, #0x4]
1000c344: d1f3         	bne	0x1000c32e <<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h9f8f508eae04db1a+0x5e> @ imm = #-0x1a
1000c346: 9800         	ldr	r0, [sp]
1000c348: 6802         	ldr	r2, [r0]
1000c34a: a909         	add	r1, sp, #0x24
1000c34c: 9102         	str	r1, [sp, #0x8]
1000c34e: ca49         	ldm	r2!, {r0, r3, r6}
1000c350: c149         	stm	r1!, {r0, r3, r6}
1000c352: ca49         	ldm	r2!, {r0, r3, r6}
1000c354: c149         	stm	r1!, {r0, r3, r6}
1000c356: 4620         	mov	r0, r4
1000c358: 4629         	mov	r1, r5
1000c35a: 9a02         	ldr	r2, [sp, #0x8]
1000c35c: f000 faae    	bl	0x1000c8bc <core::fmt::write::h7bf3e0e265c649d5> @ imm = #0x55c
1000c360: 4601         	mov	r1, r0
1000c362: 4608         	mov	r0, r1
1000c364: b00f         	add	sp, #0x3c
1000c366: bdf0         	pop	{r4, r5, r6, r7, pc}
1000c368: a4 26 01 10  	.word	0x100126a4
1000c36c: 8c 26 01 10  	.word	0x1001268c
1000c370: bd d5 00 10  	.word	0x1000d5bd
1000c374: d9 d6 00 10  	.word	0x1000d6d9
1000c378: b0 26 01 10  	.word	0x100126b0

1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b>:
1000c37c: b580         	push	{r7, lr}
1000c37e: af00         	add	r7, sp, #0x0
1000c380: b084         	sub	sp, #0x10
1000c382: aa01         	add	r2, sp, #0x4
1000c384: 2301         	movs	r3, #0x1
1000c386: 8113         	strh	r3, [r2, #0x8]
1000c388: 9102         	str	r1, [sp, #0x8]
1000c38a: 9001         	str	r0, [sp, #0x4]
1000c38c: 4610         	mov	r0, r2
1000c38e: f7f8 fb0d    	bl	0x100049ac <rust_begin_unwind> @ imm = #-0x79e6

1000c392 <core::panicking::panic_nounwind_fmt::h5bcc606a506cd473>:
1000c392: b580         	push	{r7, lr}
1000c394: af00         	add	r7, sp, #0x0
1000c396: b08a         	sub	sp, #0x28
1000c398: 9200         	str	r2, [sp]
1000c39a: 460a         	mov	r2, r1
1000c39c: a901         	add	r1, sp, #0x4
1000c39e: 460c         	mov	r4, r1
1000c3a0: c868         	ldm	r0!, {r3, r5, r6}
1000c3a2: c468         	stm	r4!, {r3, r5, r6}
1000c3a4: c868         	ldm	r0!, {r3, r5, r6}
1000c3a6: c468         	stm	r4!, {r3, r5, r6}
1000c3a8: a807         	add	r0, sp, #0x1c
1000c3aa: 7242         	strb	r2, [r0, #0x9]
1000c3ac: 2200         	movs	r2, #0x0
1000c3ae: 7202         	strb	r2, [r0, #0x8]
1000c3b0: 9a00         	ldr	r2, [sp]
1000c3b2: 9208         	str	r2, [sp, #0x20]
1000c3b4: 9107         	str	r1, [sp, #0x1c]
1000c3b6: f7f8 faf9    	bl	0x100049ac <rust_begin_unwind> @ imm = #-0x7a0e

1000c3ba <core::panicking::panic::h8206ba60402e7bb2>:
1000c3ba: b580         	push	{r7, lr}
1000c3bc: af00         	add	r7, sp, #0x0
1000c3be: b088         	sub	sp, #0x20
1000c3c0: 2300         	movs	r3, #0x0
1000c3c2: 9304         	str	r3, [sp, #0x10]
1000c3c4: 2401         	movs	r4, #0x1
1000c3c6: 9401         	str	r4, [sp, #0x4]
1000c3c8: ac06         	add	r4, sp, #0x18
1000c3ca: 9400         	str	r4, [sp]
1000c3cc: 9303         	str	r3, [sp, #0xc]
1000c3ce: 2304         	movs	r3, #0x4
1000c3d0: 9302         	str	r3, [sp, #0x8]
1000c3d2: 9107         	str	r1, [sp, #0x1c]
1000c3d4: 9006         	str	r0, [sp, #0x18]
1000c3d6: 4668         	mov	r0, sp
1000c3d8: 4611         	mov	r1, r2
1000c3da: f7ff ffcf    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #-0x62
1000c3de: d4d4         	bmi	0x1000c38a <core::panicking::panic_fmt::hef29a1a23a0fad7b+0xe> @ imm = #-0x58

1000c3e0 <core::panicking::panic_nounwind::h6901392fec1083b6>:
1000c3e0: b580         	push	{r7, lr}
1000c3e2: af00         	add	r7, sp, #0x0
1000c3e4: b088         	sub	sp, #0x20
1000c3e6: 460a         	mov	r2, r1
1000c3e8: 2100         	movs	r1, #0x0
1000c3ea: 9104         	str	r1, [sp, #0x10]
1000c3ec: 2301         	movs	r3, #0x1
1000c3ee: 9301         	str	r3, [sp, #0x4]
1000c3f0: ab06         	add	r3, sp, #0x18
1000c3f2: 9300         	str	r3, [sp]
1000c3f4: 9103         	str	r1, [sp, #0xc]
1000c3f6: 2304         	movs	r3, #0x4
1000c3f8: 9302         	str	r3, [sp, #0x8]
1000c3fa: 9207         	str	r2, [sp, #0x1c]
1000c3fc: 9006         	str	r0, [sp, #0x18]
1000c3fe: 4668         	mov	r0, sp
1000c400: 4a01         	ldr	r2, [pc, #0x4]          @ 0x1000c408 <core::panicking::panic_nounwind::h6901392fec1083b6+0x28>
1000c402: f7ff ffc6    	bl	0x1000c392 <core::panicking::panic_nounwind_fmt::h5bcc606a506cd473> @ imm = #-0x74
1000c406: 46c0         	mov	r8, r8
1000c408: d0 26 01 10  	.word	0x100126d0

1000c40c <core::panicking::panic_explicit::hab1f90333547f2f9>:
1000c40c: b580         	push	{r7, lr}
1000c40e: af00         	add	r7, sp, #0x0
1000c410: b088         	sub	sp, #0x20
1000c412: 4601         	mov	r1, r0
1000c414: 2000         	movs	r0, #0x0
1000c416: 9004         	str	r0, [sp, #0x10]
1000c418: 2001         	movs	r0, #0x1
1000c41a: 9001         	str	r0, [sp, #0x4]
1000c41c: 4a05         	ldr	r2, [pc, #0x14]         @ 0x1000c434 <core::panicking::panic_explicit::hab1f90333547f2f9+0x28>
1000c41e: 9200         	str	r2, [sp]
1000c420: 9003         	str	r0, [sp, #0xc]
1000c422: a806         	add	r0, sp, #0x18
1000c424: 9002         	str	r0, [sp, #0x8]
1000c426: 4804         	ldr	r0, [pc, #0x10]         @ 0x1000c438 <core::panicking::panic_explicit::hab1f90333547f2f9+0x2c>
1000c428: 9007         	str	r0, [sp, #0x1c]
1000c42a: 4804         	ldr	r0, [pc, #0x10]         @ 0x1000c43c <core::panicking::panic_explicit::hab1f90333547f2f9+0x30>
1000c42c: 9006         	str	r0, [sp, #0x18]
1000c42e: 4668         	mov	r0, sp
1000c430: f7ff ffa4    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #-0xb8
1000c434: 98 22 01 10  	.word	0x10012298
1000c438: d9 d6 00 10  	.word	0x1000d6d9
1000c43c: f0 26 01 10  	.word	0x100126f0

1000c440 <core::panicking::panic_bounds_check::h3284fb1898f65d86>:
1000c440: b580         	push	{r7, lr}
1000c442: af00         	add	r7, sp, #0x0
1000c444: b08c         	sub	sp, #0x30
1000c446: 9101         	str	r1, [sp, #0x4]
1000c448: 9000         	str	r0, [sp]
1000c44a: 2000         	movs	r0, #0x0
1000c44c: 9006         	str	r0, [sp, #0x18]
1000c44e: 2002         	movs	r0, #0x2
1000c450: 9003         	str	r0, [sp, #0xc]
1000c452: 4908         	ldr	r1, [pc, #0x20]         @ 0x1000c474 <core::panicking::panic_bounds_check::h3284fb1898f65d86+0x34>
1000c454: 9102         	str	r1, [sp, #0x8]
1000c456: 9005         	str	r0, [sp, #0x14]
1000c458: a808         	add	r0, sp, #0x20
1000c45a: 9004         	str	r0, [sp, #0x10]
1000c45c: 4806         	ldr	r0, [pc, #0x18]         @ 0x1000c478 <core::panicking::panic_bounds_check::h3284fb1898f65d86+0x38>
1000c45e: 900b         	str	r0, [sp, #0x2c]
1000c460: 4669         	mov	r1, sp
1000c462: 910a         	str	r1, [sp, #0x28]
1000c464: 9009         	str	r0, [sp, #0x24]
1000c466: a801         	add	r0, sp, #0x4
1000c468: 9008         	str	r0, [sp, #0x20]
1000c46a: a802         	add	r0, sp, #0x8
1000c46c: 4611         	mov	r1, r2
1000c46e: f7ff ff85    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #-0xf6
1000c472: 46c0         	mov	r8, r8
1000c474: 0c 27 01 10  	.word	0x1001270c
1000c478: bd d5 00 10  	.word	0x1000d5bd

1000c47c <core::panicking::panic_null_pointer_dereference::hbb12e6a8f55b3514>:
1000c47c: b5fe         	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1000c47e: af06         	add	r7, sp, #0x18
1000c480: 4602         	mov	r2, r0
1000c482: 2100         	movs	r1, #0x0
1000c484: 9104         	str	r1, [sp, #0x10]
1000c486: 2001         	movs	r0, #0x1
1000c488: 9001         	str	r0, [sp, #0x4]
1000c48a: 4804         	ldr	r0, [pc, #0x10]         @ 0x1000c49c <core::panicking::panic_null_pointer_dereference::hbb12e6a8f55b3514+0x20>
1000c48c: 9000         	str	r0, [sp]
1000c48e: 9103         	str	r1, [sp, #0xc]
1000c490: 2004         	movs	r0, #0x4
1000c492: 9002         	str	r0, [sp, #0x8]
1000c494: 4668         	mov	r0, sp
1000c496: f7ff ff7c    	bl	0x1000c392 <core::panicking::panic_nounwind_fmt::h5bcc606a506cd473> @ imm = #-0x108
1000c49a: 46c0         	mov	r8, r8
1000c49c: 40 27 01 10  	.word	0x10012740

1000c4a0 <core::result::unwrap_failed::hc39ba1cc7ce86577>:
1000c4a0: b580         	push	{r7, lr}
1000c4a2: af00         	add	r7, sp, #0x0
1000c4a4: b08e         	sub	sp, #0x38
1000c4a6: 9101         	str	r1, [sp, #0x4]
1000c4a8: 9000         	str	r0, [sp]
1000c4aa: 9303         	str	r3, [sp, #0xc]
1000c4ac: 9202         	str	r2, [sp, #0x8]
1000c4ae: 2000         	movs	r0, #0x0
1000c4b0: 9008         	str	r0, [sp, #0x20]
1000c4b2: 2002         	movs	r0, #0x2
1000c4b4: 9005         	str	r0, [sp, #0x14]
1000c4b6: 4908         	ldr	r1, [pc, #0x20]         @ 0x1000c4d8 <core::result::unwrap_failed::hc39ba1cc7ce86577+0x38>
1000c4b8: 9104         	str	r1, [sp, #0x10]
1000c4ba: 9007         	str	r0, [sp, #0x1c]
1000c4bc: a80a         	add	r0, sp, #0x28
1000c4be: 9006         	str	r0, [sp, #0x18]
1000c4c0: 4806         	ldr	r0, [pc, #0x18]         @ 0x1000c4dc <core::result::unwrap_failed::hc39ba1cc7ce86577+0x3c>
1000c4c2: 900d         	str	r0, [sp, #0x34]
1000c4c4: a802         	add	r0, sp, #0x8
1000c4c6: 900c         	str	r0, [sp, #0x30]
1000c4c8: 4805         	ldr	r0, [pc, #0x14]         @ 0x1000c4e0 <core::result::unwrap_failed::hc39ba1cc7ce86577+0x40>
1000c4ca: 900b         	str	r0, [sp, #0x2c]
1000c4cc: 4668         	mov	r0, sp
1000c4ce: 900a         	str	r0, [sp, #0x28]
1000c4d0: a804         	add	r0, sp, #0x10
1000c4d2: 68b9         	ldr	r1, [r7, #0x8]
1000c4d4: f7ff ff52    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #-0x15c
1000c4d8: 4c 27 01 10  	.word	0x1001274c
1000c4dc: c9 d6 00 10  	.word	0x1000d6c9
1000c4e0: d9 d6 00 10  	.word	0x1000d6d9

1000c4e4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec>:
1000c4e4: b5f0         	push	{r4, r5, r6, r7, lr}
1000c4e6: af03         	add	r7, sp, #0xc
1000c4e8: b093         	sub	sp, #0x4c
1000c4ea: 2301         	movs	r3, #0x1
1000c4ec: 9306         	str	r3, [sp, #0x18]
1000c4ee: 1a9b         	subs	r3, r3, r2
1000c4f0: 9302         	str	r3, [sp, #0x8]
1000c4f2: 2302         	movs	r3, #0x2
1000c4f4: 1a9b         	subs	r3, r3, r2
1000c4f6: 9301         	str	r3, [sp, #0x4]
1000c4f8: 4253         	rsbs	r3, r2, #0
1000c4fa: 9305         	str	r3, [sp, #0x14]
1000c4fc: 910e         	str	r1, [sp, #0x38]
1000c4fe: 1e49         	subs	r1, r1, #0x1
1000c500: 9103         	str	r1, [sp, #0xc]
1000c502: 6801         	ldr	r1, [r0]
1000c504: 9108         	str	r1, [sp, #0x20]
1000c506: 6841         	ldr	r1, [r0, #0x4]
1000c508: 9107         	str	r1, [sp, #0x1c]
1000c50a: 6880         	ldr	r0, [r0, #0x8]
1000c50c: 900d         	str	r0, [sp, #0x34]
1000c50e: 2500         	movs	r5, #0x0
1000c510: 462b         	mov	r3, r5
1000c512: 4629         	mov	r1, r5
1000c514: 9500         	str	r5, [sp]
1000c516: 920a         	str	r2, [sp, #0x28]
1000c518: e012         	b	0x1000c540 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x5c> @ imm = #0x24
1000c51a: 9803         	ldr	r0, [sp, #0xc]
1000c51c: 5d01         	ldrb	r1, [r0, r4]
1000c51e: 390a         	subs	r1, #0xa
1000c520: 4248         	rsbs	r0, r1, #0
1000c522: 4148         	adcs	r0, r1
1000c524: 990e         	ldr	r1, [sp, #0x38]
1000c526: 18c9         	adds	r1, r1, r3
1000c528: 9b0d         	ldr	r3, [sp, #0x34]
1000c52a: 7018         	strb	r0, [r3]
1000c52c: 9807         	ldr	r0, [sp, #0x1c]
1000c52e: 68c3         	ldr	r3, [r0, #0xc]
1000c530: 9808         	ldr	r0, [sp, #0x20]
1000c532: 4798         	blx	r3
1000c534: 2800         	cmp	r0, #0x0
1000c536: 4633         	mov	r3, r6
1000c538: 9a0a         	ldr	r2, [sp, #0x28]
1000c53a: 9910         	ldr	r1, [sp, #0x40]
1000c53c: d000         	beq	0x1000c540 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x5c> @ imm = #0x0
1000c53e: e100         	b	0x1000c742 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x25e> @ imm = #0x200
1000c540: 07e8         	lsls	r0, r5, #0x1f
1000c542: d000         	beq	0x1000c546 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x62> @ imm = #0x0
1000c544: e0fa         	b	0x1000c73c <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x258> @ imm = #0x1f4
1000c546: 428a         	cmp	r2, r1
1000c548: 930f         	str	r3, [sp, #0x3c]
1000c54a: d200         	bhs	0x1000c54e <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x6a> @ imm = #0x0
1000c54c: e0dc         	b	0x1000c708 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x224> @ imm = #0x1b8
1000c54e: 980e         	ldr	r0, [sp, #0x38]
1000c550: 1844         	adds	r4, r0, r1
1000c552: 1a50         	subs	r0, r2, r1
1000c554: 2807         	cmp	r0, #0x7
1000c556: 9412         	str	r4, [sp, #0x48]
1000c558: d822         	bhi	0x1000c5a0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0xbc> @ imm = #0x44
1000c55a: 428a         	cmp	r2, r1
1000c55c: d100         	bne	0x1000c560 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x7c> @ imm = #0x0
1000c55e: e0eb         	b	0x1000c738 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x254> @ imm = #0x1d6
1000c560: 9805         	ldr	r0, [sp, #0x14]
1000c562: 460e         	mov	r6, r1
1000c564: 1841         	adds	r1, r0, r1
1000c566: 2300         	movs	r3, #0x0
1000c568: 5ce0         	ldrb	r0, [r4, r3]
1000c56a: 280a         	cmp	r0, #0xa
1000c56c: d050         	beq	0x1000c610 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x12c> @ imm = #0xa0
1000c56e: 18cd         	adds	r5, r1, r3
1000c570: 1c68         	adds	r0, r5, #0x1
1000c572: d300         	blo	0x1000c576 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x92> @ imm = #0x0
1000c574: e0c6         	b	0x1000c704 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x220> @ imm = #0x18c
1000c576: 18e4         	adds	r4, r4, r3
1000c578: 7860         	ldrb	r0, [r4, #0x1]
1000c57a: 280a         	cmp	r0, #0xa
1000c57c: d04e         	beq	0x1000c61c <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x138> @ imm = #0x9c
1000c57e: 1ca8         	adds	r0, r5, #0x2
1000c580: d100         	bne	0x1000c584 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0xa0> @ imm = #0x0
1000c582: e0bf         	b	0x1000c704 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x220> @ imm = #0x17e
1000c584: 78a0         	ldrb	r0, [r4, #0x2]
1000c586: 280a         	cmp	r0, #0xa
1000c588: d04b         	beq	0x1000c622 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x13e> @ imm = #0x96
1000c58a: 1ce8         	adds	r0, r5, #0x3
1000c58c: d100         	bne	0x1000c590 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0xac> @ imm = #0x0
1000c58e: e0b9         	b	0x1000c704 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x220> @ imm = #0x172
1000c590: 78e0         	ldrb	r0, [r4, #0x3]
1000c592: 280a         	cmp	r0, #0xa
1000c594: d048         	beq	0x1000c628 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x144> @ imm = #0x90
1000c596: 1d1b         	adds	r3, r3, #0x4
1000c598: 18c8         	adds	r0, r1, r3
1000c59a: 9c12         	ldr	r4, [sp, #0x48]
1000c59c: d1e4         	bne	0x1000c568 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x84> @ imm = #-0x38
1000c59e: e0b1         	b	0x1000c704 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x220> @ imm = #0x162
1000c5a0: 900c         	str	r0, [sp, #0x30]
1000c5a2: 1ce6         	adds	r6, r4, #0x3
1000c5a4: 2003         	movs	r0, #0x3
1000c5a6: 9004         	str	r0, [sp, #0x10]
1000c5a8: 4386         	bics	r6, r0
1000c5aa: 1b32         	subs	r2, r6, r4
1000c5ac: d026         	beq	0x1000c5fc <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x118> @ imm = #0x4c
1000c5ae: 43e3         	mvns	r3, r4
1000c5b0: 4620         	mov	r0, r4
1000c5b2: 199c         	adds	r4, r3, r6
1000c5b4: 1a33         	subs	r3, r6, r0
1000c5b6: 1e98         	subs	r0, r3, #0x2
1000c5b8: 9011         	str	r0, [sp, #0x44]
1000c5ba: 1ed8         	subs	r0, r3, #0x3
1000c5bc: 9010         	str	r0, [sp, #0x40]
1000c5be: 2300         	movs	r3, #0x0
1000c5c0: 9812         	ldr	r0, [sp, #0x48]
1000c5c2: 5cc0         	ldrb	r0, [r0, r3]
1000c5c4: 280a         	cmp	r0, #0xa
1000c5c6: d100         	bne	0x1000c5ca <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0xe6> @ imm = #0x0
1000c5c8: e08d         	b	0x1000c6e6 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x202> @ imm = #0x11a
1000c5ca: 429c         	cmp	r4, r3
1000c5cc: d01b         	beq	0x1000c606 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x122> @ imm = #0x36
1000c5ce: 9812         	ldr	r0, [sp, #0x48]
1000c5d0: 18c5         	adds	r5, r0, r3
1000c5d2: 7868         	ldrb	r0, [r5, #0x1]
1000c5d4: 280a         	cmp	r0, #0xa
1000c5d6: d02a         	beq	0x1000c62e <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x14a> @ imm = #0x54
1000c5d8: 9811         	ldr	r0, [sp, #0x44]
1000c5da: 4298         	cmp	r0, r3
1000c5dc: d013         	beq	0x1000c606 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x122> @ imm = #0x26
1000c5de: 78a8         	ldrb	r0, [r5, #0x2]
1000c5e0: 280a         	cmp	r0, #0xa
1000c5e2: d026         	beq	0x1000c632 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x14e> @ imm = #0x4c
1000c5e4: 9810         	ldr	r0, [sp, #0x40]
1000c5e6: 4298         	cmp	r0, r3
1000c5e8: d00d         	beq	0x1000c606 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x122> @ imm = #0x1a
1000c5ea: 78e8         	ldrb	r0, [r5, #0x3]
1000c5ec: 280a         	cmp	r0, #0xa
1000c5ee: d022         	beq	0x1000c636 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x152> @ imm = #0x44
1000c5f0: 1d1b         	adds	r3, r3, #0x4
1000c5f2: 9812         	ldr	r0, [sp, #0x48]
1000c5f4: 5cc0         	ldrb	r0, [r0, r3]
1000c5f6: 280a         	cmp	r0, #0xa
1000c5f8: d1e7         	bne	0x1000c5ca <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0xe6> @ imm = #-0x32
1000c5fa: e074         	b	0x1000c6e6 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x202> @ imm = #0xe8
1000c5fc: 9110         	str	r1, [sp, #0x40]
1000c5fe: 980c         	ldr	r0, [sp, #0x30]
1000c600: 3808         	subs	r0, #0x8
1000c602: 9011         	str	r0, [sp, #0x44]
1000c604: e01d         	b	0x1000c642 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x15e> @ imm = #0x3a
1000c606: 9110         	str	r1, [sp, #0x40]
1000c608: 980c         	ldr	r0, [sp, #0x30]
1000c60a: 3808         	subs	r0, #0x8
1000c60c: 9011         	str	r0, [sp, #0x44]
1000c60e: e02b         	b	0x1000c668 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x184> @ imm = #0x56
1000c610: 4631         	mov	r1, r6
1000c612: 1858         	adds	r0, r3, r1
1000c614: 1c41         	adds	r1, r0, #0x1
1000c616: 4290         	cmp	r0, r2
1000c618: d36b         	blo	0x1000c6f2 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x20e> @ imm = #0xd6
1000c61a: e00e         	b	0x1000c63a <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x156> @ imm = #0x1c
1000c61c: 1c5b         	adds	r3, r3, #0x1
1000c61e: 4631         	mov	r1, r6
1000c620: e062         	b	0x1000c6e8 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x204> @ imm = #0xc4
1000c622: 1c9b         	adds	r3, r3, #0x2
1000c624: 4631         	mov	r1, r6
1000c626: e05f         	b	0x1000c6e8 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x204> @ imm = #0xbe
1000c628: 1cdb         	adds	r3, r3, #0x3
1000c62a: 4631         	mov	r1, r6
1000c62c: e05c         	b	0x1000c6e8 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x204> @ imm = #0xb8
1000c62e: 1c5b         	adds	r3, r3, #0x1
1000c630: e059         	b	0x1000c6e6 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x202> @ imm = #0xb2
1000c632: 1c9b         	adds	r3, r3, #0x2
1000c634: e057         	b	0x1000c6e6 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x202> @ imm = #0xae
1000c636: 1cdb         	adds	r3, r3, #0x3
1000c638: e055         	b	0x1000c6e6 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x202> @ imm = #0xaa
1000c63a: 4291         	cmp	r1, r2
1000c63c: 9b0f         	ldr	r3, [sp, #0x3c]
1000c63e: d986         	bls	0x1000c54e <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x6a> @ imm = #-0xf4
1000c640: e062         	b	0x1000c708 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x224> @ imm = #0xc4
1000c642: ce30         	ldm	r6!, {r4, r5}
1000c644: 4941         	ldr	r1, [pc, #0x104]        @ 0x1000c74c <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x268>
1000c646: 404d         	eors	r5, r1
1000c648: 4b3f         	ldr	r3, [pc, #0xfc]         @ 0x1000c748 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x264>
1000c64a: 1b58         	subs	r0, r3, r5
1000c64c: 4328         	orrs	r0, r5
1000c64e: 4625         	mov	r5, r4
1000c650: 404d         	eors	r5, r1
1000c652: 1b5d         	subs	r5, r3, r5
1000c654: 4325         	orrs	r5, r4
1000c656: 493e         	ldr	r1, [pc, #0xf8]         @ 0x1000c750 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x26c>
1000c658: 400d         	ands	r5, r1
1000c65a: 4005         	ands	r5, r0
1000c65c: 3e08         	subs	r6, #0x8
1000c65e: 428d         	cmp	r5, r1
1000c660: d104         	bne	0x1000c66c <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x188> @ imm = #0x8
1000c662: 3608         	adds	r6, #0x8
1000c664: 3208         	adds	r2, #0x8
1000c666: 9811         	ldr	r0, [sp, #0x44]
1000c668: 4282         	cmp	r2, r0
1000c66a: d9ea         	bls	0x1000c642 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x15e> @ imm = #-0x2c
1000c66c: 980c         	ldr	r0, [sp, #0x30]
1000c66e: 1a80         	subs	r0, r0, r2
1000c670: 900b         	str	r0, [sp, #0x2c]
1000c672: d046         	beq	0x1000c702 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x21e> @ imm = #0x8c
1000c674: 9812         	ldr	r0, [sp, #0x48]
1000c676: 1885         	adds	r5, r0, r2
1000c678: 9805         	ldr	r0, [sp, #0x14]
1000c67a: 1880         	adds	r0, r0, r2
1000c67c: 9910         	ldr	r1, [sp, #0x40]
1000c67e: 1840         	adds	r0, r0, r1
1000c680: 9009         	str	r0, [sp, #0x24]
1000c682: 9802         	ldr	r0, [sp, #0x8]
1000c684: 1880         	adds	r0, r0, r2
1000c686: 1840         	adds	r0, r0, r1
1000c688: 9011         	str	r0, [sp, #0x44]
1000c68a: 9801         	ldr	r0, [sp, #0x4]
1000c68c: 1880         	adds	r0, r0, r2
1000c68e: 1840         	adds	r0, r0, r1
1000c690: 900c         	str	r0, [sp, #0x30]
1000c692: 9e04         	ldr	r6, [sp, #0x10]
1000c694: 19ab         	adds	r3, r5, r6
1000c696: 1ed8         	subs	r0, r3, #0x3
1000c698: 7800         	ldrb	r0, [r0]
1000c69a: 280a         	cmp	r0, #0xa
1000c69c: d01d         	beq	0x1000c6da <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x1f6> @ imm = #0x3a
1000c69e: 9811         	ldr	r0, [sp, #0x44]
1000c6a0: 1980         	adds	r0, r0, r6
1000c6a2: 2803         	cmp	r0, #0x3
1000c6a4: d02d         	beq	0x1000c702 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x21e> @ imm = #0x5a
1000c6a6: 4634         	mov	r4, r6
1000c6a8: 1e98         	subs	r0, r3, #0x2
1000c6aa: 7800         	ldrb	r0, [r0]
1000c6ac: 280a         	cmp	r0, #0xa
1000c6ae: d016         	beq	0x1000c6de <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x1fa> @ imm = #0x2c
1000c6b0: 980c         	ldr	r0, [sp, #0x30]
1000c6b2: 1900         	adds	r0, r0, r4
1000c6b4: 2803         	cmp	r0, #0x3
1000c6b6: d024         	beq	0x1000c702 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x21e> @ imm = #0x48
1000c6b8: 1e58         	subs	r0, r3, #0x1
1000c6ba: 7800         	ldrb	r0, [r0]
1000c6bc: 280a         	cmp	r0, #0xa
1000c6be: d010         	beq	0x1000c6e2 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x1fe> @ imm = #0x20
1000c6c0: 980b         	ldr	r0, [sp, #0x2c]
1000c6c2: 42a0         	cmp	r0, r4
1000c6c4: d01d         	beq	0x1000c702 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x21e> @ imm = #0x3a
1000c6c6: 4626         	mov	r6, r4
1000c6c8: 5d28         	ldrb	r0, [r5, r4]
1000c6ca: 280a         	cmp	r0, #0xa
1000c6cc: d00a         	beq	0x1000c6e4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x200> @ imm = #0x14
1000c6ce: 1d36         	adds	r6, r6, #0x4
1000c6d0: 9809         	ldr	r0, [sp, #0x24]
1000c6d2: 1980         	adds	r0, r0, r6
1000c6d4: 2803         	cmp	r0, #0x3
1000c6d6: d1dd         	bne	0x1000c694 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x1b0> @ imm = #-0x46
1000c6d8: e013         	b	0x1000c702 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x21e> @ imm = #0x26
1000c6da: 1ef6         	subs	r6, r6, #0x3
1000c6dc: e002         	b	0x1000c6e4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x200> @ imm = #0x4
1000c6de: 1ea6         	subs	r6, r4, #0x2
1000c6e0: e000         	b	0x1000c6e4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x200> @ imm = #0x0
1000c6e2: 1e66         	subs	r6, r4, #0x1
1000c6e4: 18b3         	adds	r3, r6, r2
1000c6e6: 9a0a         	ldr	r2, [sp, #0x28]
1000c6e8: 9c12         	ldr	r4, [sp, #0x48]
1000c6ea: 1858         	adds	r0, r3, r1
1000c6ec: 1c41         	adds	r1, r0, #0x1
1000c6ee: 4290         	cmp	r0, r2
1000c6f0: d2a3         	bhs	0x1000c63a <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x156> @ imm = #-0xba
1000c6f2: 5ce0         	ldrb	r0, [r4, r3]
1000c6f4: 280a         	cmp	r0, #0xa
1000c6f6: d1a0         	bne	0x1000c63a <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x156> @ imm = #-0xc0
1000c6f8: 2500         	movs	r5, #0x0
1000c6fa: 460e         	mov	r6, r1
1000c6fc: 460c         	mov	r4, r1
1000c6fe: 9b0f         	ldr	r3, [sp, #0x3c]
1000c700: e007         	b	0x1000c712 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x22e> @ imm = #0xe
1000c702: 9a0a         	ldr	r2, [sp, #0x28]
1000c704: 4611         	mov	r1, r2
1000c706: 9b0f         	ldr	r3, [sp, #0x3c]
1000c708: 429a         	cmp	r2, r3
1000c70a: 4614         	mov	r4, r2
1000c70c: 461e         	mov	r6, r3
1000c70e: 9d06         	ldr	r5, [sp, #0x18]
1000c710: d014         	beq	0x1000c73c <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x258> @ imm = #0x28
1000c712: 9110         	str	r1, [sp, #0x40]
1000c714: 980d         	ldr	r0, [sp, #0x34]
1000c716: 7800         	ldrb	r0, [r0]
1000c718: 2800         	cmp	r0, #0x0
1000c71a: d008         	beq	0x1000c72e <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x24a> @ imm = #0x10
1000c71c: 9807         	ldr	r0, [sp, #0x1c]
1000c71e: 68c3         	ldr	r3, [r0, #0xc]
1000c720: 2204         	movs	r2, #0x4
1000c722: 9808         	ldr	r0, [sp, #0x20]
1000c724: 490b         	ldr	r1, [pc, #0x2c]         @ 0x1000c754 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x270>
1000c726: 4798         	blx	r3
1000c728: 9b0f         	ldr	r3, [sp, #0x3c]
1000c72a: 2800         	cmp	r0, #0x0
1000c72c: d109         	bne	0x1000c742 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x25e> @ imm = #0x12
1000c72e: 1ae2         	subs	r2, r4, r3
1000c730: d000         	beq	0x1000c734 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x250> @ imm = #0x0
1000c732: e6f2         	b	0x1000c51a <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x36> @ imm = #-0x21c
1000c734: 2000         	movs	r0, #0x0
1000c736: e6f5         	b	0x1000c524 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x40> @ imm = #-0x216
1000c738: 4611         	mov	r1, r2
1000c73a: e7e5         	b	0x1000c708 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec+0x224> @ imm = #-0x36
1000c73c: 9800         	ldr	r0, [sp]
1000c73e: b013         	add	sp, #0x4c
1000c740: bdf0         	pop	{r4, r5, r6, r7, pc}
1000c742: 9806         	ldr	r0, [sp, #0x18]
1000c744: b013         	add	sp, #0x4c
1000c746: bdf0         	pop	{r4, r5, r6, r7, pc}
1000c748: 00 01 01 01  	.word	0x01010100
1000c74c: 0a 0a 0a 0a  	.word	0x0a0a0a0a
1000c750: 80 80 80 80  	.word	0x80808080
1000c754: 78 e6 00 10  	.word	0x1000e678

1000c758 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_char::hb03e8c80b409deab>:
1000c758: b5f0         	push	{r4, r5, r6, r7, lr}
1000c75a: af03         	add	r7, sp, #0xc
1000c75c: b081         	sub	sp, #0x4
1000c75e: c870         	ldm	r0!, {r4, r5, r6}
1000c760: 7830         	ldrb	r0, [r6]
1000c762: 2800         	cmp	r0, #0x0
1000c764: d00b         	beq	0x1000c77e <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_char::hb03e8c80b409deab+0x26> @ imm = #0x16
1000c766: 68eb         	ldr	r3, [r5, #0xc]
1000c768: 2204         	movs	r2, #0x4
1000c76a: 4620         	mov	r0, r4
1000c76c: 9100         	str	r1, [sp]
1000c76e: 4909         	ldr	r1, [pc, #0x24]         @ 0x1000c794 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_char::hb03e8c80b409deab+0x3c>
1000c770: 4798         	blx	r3
1000c772: 9900         	ldr	r1, [sp]
1000c774: 2800         	cmp	r0, #0x0
1000c776: d002         	beq	0x1000c77e <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_char::hb03e8c80b409deab+0x26> @ imm = #0x4
1000c778: 2001         	movs	r0, #0x1
1000c77a: b001         	add	sp, #0x4
1000c77c: bdf0         	pop	{r4, r5, r6, r7, pc}
1000c77e: 4608         	mov	r0, r1
1000c780: 380a         	subs	r0, #0xa
1000c782: 4242         	rsbs	r2, r0, #0
1000c784: 4142         	adcs	r2, r0
1000c786: 7032         	strb	r2, [r6]
1000c788: 692a         	ldr	r2, [r5, #0x10]
1000c78a: 4620         	mov	r0, r4
1000c78c: 4790         	blx	r2
1000c78e: b001         	add	sp, #0x4
1000c790: bdf0         	pop	{r4, r5, r6, r7, pc}
1000c792: 46c0         	mov	r8, r8
1000c794: 78 e6 00 10  	.word	0x1000e678

1000c798 <core::fmt::builders::DebugStruct::field::h97b122c0b0f76323>:
1000c798: b5f0         	push	{r4, r5, r6, r7, lr}
1000c79a: af03         	add	r7, sp, #0xc
1000c79c: b093         	sub	sp, #0x4c
1000c79e: 9304         	str	r3, [sp, #0x10]
1000c7a0: 9105         	str	r1, [sp, #0x14]
1000c7a2: 4604         	mov	r4, r0
1000c7a4: 7900         	ldrb	r0, [r0, #0x4]
1000c7a6: 2501         	movs	r5, #0x1
1000c7a8: 2800         	cmp	r0, #0x0
1000c7aa: 4628         	mov	r0, r5
1000c7ac: d16b         	bne	0x1000c886 <core::fmt::builders::DebugStruct::field::h97b122c0b0f76323+0xee> @ imm = #0xd6
1000c7ae: 68b8         	ldr	r0, [r7, #0x8]
1000c7b0: 9002         	str	r0, [sp, #0x8]
1000c7b2: 7961         	ldrb	r1, [r4, #0x5]
1000c7b4: 6826         	ldr	r6, [r4]
1000c7b6: 7d30         	ldrb	r0, [r6, #0x14]
1000c7b8: 0740         	lsls	r0, r0, #0x1d
1000c7ba: 9203         	str	r2, [sp, #0xc]
1000c7bc: d406         	bmi	0x1000c7cc <core::fmt::builders::DebugStruct::field::h97b122c0b0f76323+0x34> @ imm = #0xc
1000c7be: 2003         	movs	r0, #0x3
1000c7c0: 2202         	movs	r2, #0x2
1000c7c2: 2900         	cmp	r1, #0x0
1000c7c4: d136         	bne	0x1000c834 <core::fmt::builders::DebugStruct::field::h97b122c0b0f76323+0x9c> @ imm = #0x6c
1000c7c6: 4937         	ldr	r1, [pc, #0xdc]         @ 0x1000c8a4 <core::fmt::builders::DebugStruct::field::h97b122c0b0f76323+0x10c>
1000c7c8: d036         	beq	0x1000c838 <core::fmt::builders::DebugStruct::field::h97b122c0b0f76323+0xa0> @ imm = #0x6c
1000c7ca: e036         	b	0x1000c83a <core::fmt::builders::DebugStruct::field::h97b122c0b0f76323+0xa2> @ imm = #0x6c
1000c7cc: 2900         	cmp	r1, #0x0
1000c7ce: d108         	bne	0x1000c7e2 <core::fmt::builders::DebugStruct::field::h97b122c0b0f76323+0x4a> @ imm = #0x10
1000c7d0: 69f0         	ldr	r0, [r6, #0x1c]
1000c7d2: 6a31         	ldr	r1, [r6, #0x20]
1000c7d4: 68cb         	ldr	r3, [r1, #0xc]
1000c7d6: 492e         	ldr	r1, [pc, #0xb8]         @ 0x1000c890 <core::fmt::builders::DebugStruct::field::h97b122c0b0f76323+0xf8>
1000c7d8: 2203         	movs	r2, #0x3
1000c7da: 4798         	blx	r3
1000c7dc: 2800         	cmp	r0, #0x0
1000c7de: 4628         	mov	r0, r5
1000c7e0: d151         	bne	0x1000c886 <core::fmt::builders::DebugStruct::field::h97b122c0b0f76323+0xee> @ imm = #0xa2
1000c7e2: 9501         	str	r5, [sp, #0x4]
1000c7e4: a809         	add	r0, sp, #0x24
1000c7e6: 2101         	movs	r1, #0x1
1000c7e8: 7001         	strb	r1, [r0]
1000c7ea: 9008         	str	r0, [sp, #0x20]
1000c7ec: 69f0         	ldr	r0, [r6, #0x1c]
1000c7ee: 6a31         	ldr	r1, [r6, #0x20]
1000c7f0: 9107         	str	r1, [sp, #0x1c]
1000c7f2: 9006         	str	r0, [sp, #0x18]
1000c7f4: a80a         	add	r0, sp, #0x28
1000c7f6: ce0e         	ldm	r6!, {r1, r2, r3}
1000c7f8: c00e         	stm	r0!, {r1, r2, r3}
1000c7fa: ce2e         	ldm	r6!, {r1, r2, r3, r5}
1000c7fc: c02e         	stm	r0!, {r1, r2, r3, r5}
1000c7fe: 4825         	ldr	r0, [pc, #0x94]         @ 0x1000c894 <core::fmt::builders::DebugStruct::field::h97b122c0b0f76323+0xfc>
1000c800: 9012         	str	r0, [sp, #0x48]
1000c802: a806         	add	r0, sp, #0x18
1000c804: 9011         	str	r0, [sp, #0x44]
1000c806: 9905         	ldr	r1, [sp, #0x14]
1000c808: 9a03         	ldr	r2, [sp, #0xc]
1000c80a: f7ff fe6b    	bl	0x1000c4e4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec> @ imm = #-0x32a
1000c80e: 2800         	cmp	r0, #0x0
1000c810: d10d         	bne	0x1000c82e <core::fmt::builders::DebugStruct::field::h97b122c0b0f76323+0x96> @ imm = #0x1a
1000c812: a806         	add	r0, sp, #0x18
1000c814: 4920         	ldr	r1, [pc, #0x80]         @ 0x1000c898 <core::fmt::builders::DebugStruct::field::h97b122c0b0f76323+0x100>
1000c816: 2202         	movs	r2, #0x2
1000c818: f7ff fe64    	bl	0x1000c4e4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::hbefbce97493136ec> @ imm = #-0x338
1000c81c: 2800         	cmp	r0, #0x0
1000c81e: d106         	bne	0x1000c82e <core::fmt::builders::DebugStruct::field::h97b122c0b0f76323+0x96> @ imm = #0xc
1000c820: 9802         	ldr	r0, [sp, #0x8]
1000c822: 68c2         	ldr	r2, [r0, #0xc]
1000c824: a90a         	add	r1, sp, #0x28
1000c826: 9804         	ldr	r0, [sp, #0x10]
1000c828: 4790         	blx	r2
1000c82a: 2800         	cmp	r0, #0x0
1000c82c: d024         	beq	0x1000c878 <core::fmt::builders::DebugStruct::field::h97b122c0b0f76323+0xe0> @ imm = #0x48
1000c82e: 9d01         	ldr	r5, [sp, #0x4]
1000c830: 4628         	mov	r0, r5
1000c832: e028         	b	0x1000c886 <core::fmt::builders::DebugStruct::field::h97b122c0b0f76323+0xee> @ imm = #0x50
1000c834: 491a         	ldr	r1, [pc, #0x68]         @ 0x1000c8a0 <core::fmt::builders::DebugStruct::field::h97b122c0b0f76323+0x108>
1000c836: d100         	bne	0x1000c83a <core::fmt::builders::DebugStruct::field::h97b122c0b0f76323+0xa2> @ imm = #0x0
1000c838: 4602         	mov	r2, r0
1000c83a: 69f0         	ldr	r0, [r6, #0x1c]
1000c83c: 6a33         	ldr	r3, [r6, #0x20]
1000c83e: 68db         	ldr	r3, [r3, #0xc]
1000c840: 4798         	blx	r3
1000c842: 2800         	cmp	r0, #0x0
1000c844: 4628         	mov	r0, r5
1000c846: 9a03         	ldr	r2, [sp, #0xc]
1000c848: d11d         	bne	0x1000c886 <core::fmt::builders::DebugStruct::field::h97b122c0b0f76323+0xee> @ imm = #0x3a
1000c84a: 69f0         	ldr	r0, [r6, #0x1c]
1000c84c: 6a31         	ldr	r1, [r6, #0x20]
1000c84e: 68cb         	ldr	r3, [r1, #0xc]
1000c850: 9905         	ldr	r1, [sp, #0x14]
1000c852: 4798         	blx	r3
1000c854: 2800         	cmp	r0, #0x0
1000c856: 4628         	mov	r0, r5
1000c858: d115         	bne	0x1000c886 <core::fmt::builders::DebugStruct::field::h97b122c0b0f76323+0xee> @ imm = #0x2a
1000c85a: 69f0         	ldr	r0, [r6, #0x1c]
1000c85c: 6a31         	ldr	r1, [r6, #0x20]
1000c85e: 68cb         	ldr	r3, [r1, #0xc]
1000c860: 490d         	ldr	r1, [pc, #0x34]         @ 0x1000c898 <core::fmt::builders::DebugStruct::field::h97b122c0b0f76323+0x100>
1000c862: 2202         	movs	r2, #0x2
1000c864: 4798         	blx	r3
1000c866: 2800         	cmp	r0, #0x0
1000c868: 4628         	mov	r0, r5
1000c86a: d10c         	bne	0x1000c886 <core::fmt::builders::DebugStruct::field::h97b122c0b0f76323+0xee> @ imm = #0x18
1000c86c: 9802         	ldr	r0, [sp, #0x8]
1000c86e: 68c2         	ldr	r2, [r0, #0xc]
1000c870: 9804         	ldr	r0, [sp, #0x10]
1000c872: 4631         	mov	r1, r6
1000c874: 4790         	blx	r2
1000c876: e006         	b	0x1000c886 <core::fmt::builders::DebugStruct::field::h97b122c0b0f76323+0xee> @ imm = #0xc
1000c878: 9812         	ldr	r0, [sp, #0x48]
1000c87a: 68c3         	ldr	r3, [r0, #0xc]
1000c87c: 9811         	ldr	r0, [sp, #0x44]
1000c87e: 4907         	ldr	r1, [pc, #0x1c]         @ 0x1000c89c <core::fmt::builders::DebugStruct::field::h97b122c0b0f76323+0x104>
1000c880: 2202         	movs	r2, #0x2
1000c882: 4798         	blx	r3
1000c884: 9d01         	ldr	r5, [sp, #0x4]
1000c886: 7165         	strb	r5, [r4, #0x5]
1000c888: 7120         	strb	r0, [r4, #0x4]
1000c88a: 4620         	mov	r0, r4
1000c88c: b013         	add	sp, #0x4c
1000c88e: bdf0         	pop	{r4, r5, r6, r7, pc}
1000c890: 79 27 01 10  	.word	0x10012779
1000c894: 5c 27 01 10  	.word	0x1001275c
1000c898: 48 27 01 10  	.word	0x10012748
1000c89c: 7c 27 01 10  	.word	0x1001277c
1000c8a0: 77 27 01 10  	.word	0x10012777
1000c8a4: 74 27 01 10  	.word	0x10012774

1000c8a8 <core::fmt::Write::write_fmt::h7339962e150f6bf6>:
1000c8a8: b580         	push	{r7, lr}
1000c8aa: af00         	add	r7, sp, #0x0
1000c8ac: 460a         	mov	r2, r1
1000c8ae: 4902         	ldr	r1, [pc, #0x8]          @ 0x1000c8b8 <core::fmt::Write::write_fmt::h7339962e150f6bf6+0x10>
1000c8b0: f000 f804    	bl	0x1000c8bc <core::fmt::write::h7bf3e0e265c649d5> @ imm = #0x8
1000c8b4: bd80         	pop	{r7, pc}
1000c8b6: 46c0         	mov	r8, r8
1000c8b8: 5c 27 01 10  	.word	0x1001275c

1000c8bc <core::fmt::write::h7bf3e0e265c649d5>:
1000c8bc: b5f0         	push	{r4, r5, r6, r7, lr}
1000c8be: af03         	add	r7, sp, #0xc
1000c8c0: b08f         	sub	sp, #0x3c
1000c8c2: ac06         	add	r4, sp, #0x18
1000c8c4: 2303         	movs	r3, #0x3
1000c8c6: 7623         	strb	r3, [r4, #0x18]
1000c8c8: 910e         	str	r1, [sp, #0x38]
1000c8ca: 900d         	str	r0, [sp, #0x34]
1000c8cc: 2100         	movs	r1, #0x0
1000c8ce: 910b         	str	r1, [sp, #0x2c]
1000c8d0: 2020         	movs	r0, #0x20
1000c8d2: 900a         	str	r0, [sp, #0x28]
1000c8d4: 9108         	str	r1, [sp, #0x20]
1000c8d6: 9106         	str	r1, [sp, #0x18]
1000c8d8: 6915         	ldr	r5, [r2, #0x10]
1000c8da: 2d00         	cmp	r5, #0x0
1000c8dc: d05c         	beq	0x1000c998 <core::fmt::write::h7bf3e0e265c649d5+0xdc> @ imm = #0xb8
1000c8de: 6950         	ldr	r0, [r2, #0x14]
1000c8e0: 2800         	cmp	r0, #0x0
1000c8e2: d07d         	beq	0x1000c9e0 <core::fmt::write::h7bf3e0e265c649d5+0x124> @ imm = #0xfa
1000c8e4: 211f         	movs	r1, #0x1f
1000c8e6: 06c9         	lsls	r1, r1, #0x1b
1000c8e8: 1e43         	subs	r3, r0, #0x1
1000c8ea: 438b         	bics	r3, r1
1000c8ec: 1c59         	adds	r1, r3, #0x1
1000c8ee: 9100         	str	r1, [sp]
1000c8f0: 0140         	lsls	r0, r0, #0x5
1000c8f2: 9003         	str	r0, [sp, #0xc]
1000c8f4: 6890         	ldr	r0, [r2, #0x8]
1000c8f6: 9005         	str	r0, [sp, #0x14]
1000c8f8: 9201         	str	r2, [sp, #0x4]
1000c8fa: 6814         	ldr	r4, [r2]
1000c8fc: 2600         	movs	r6, #0x0
1000c8fe: 9504         	str	r5, [sp, #0x10]
1000c900: 6862         	ldr	r2, [r4, #0x4]
1000c902: 2a00         	cmp	r2, #0x0
1000c904: d006         	beq	0x1000c914 <core::fmt::write::h7bf3e0e265c649d5+0x58> @ imm = #0xc
1000c906: 980e         	ldr	r0, [sp, #0x38]
1000c908: 68c3         	ldr	r3, [r0, #0xc]
1000c90a: 6821         	ldr	r1, [r4]
1000c90c: 980d         	ldr	r0, [sp, #0x34]
1000c90e: 4798         	blx	r3
1000c910: 2800         	cmp	r0, #0x0
1000c912: d173         	bne	0x1000c9fc <core::fmt::write::h7bf3e0e265c649d5+0x140> @ imm = #0xe6
1000c914: 19a8         	adds	r0, r5, r6
1000c916: 7f01         	ldrb	r1, [r0, #0x1c]
1000c918: aa06         	add	r2, sp, #0x18
1000c91a: 7611         	strb	r1, [r2, #0x18]
1000c91c: 6901         	ldr	r1, [r0, #0x10]
1000c91e: 910a         	str	r1, [sp, #0x28]
1000c920: 6981         	ldr	r1, [r0, #0x18]
1000c922: 910b         	str	r1, [sp, #0x2c]
1000c924: 68c2         	ldr	r2, [r0, #0xc]
1000c926: 6883         	ldr	r3, [r0, #0x8]
1000c928: 2100         	movs	r1, #0x0
1000c92a: 2b00         	cmp	r3, #0x0
1000c92c: d00b         	beq	0x1000c946 <core::fmt::write::h7bf3e0e265c649d5+0x8a> @ imm = #0x16
1000c92e: 2b01         	cmp	r3, #0x1
1000c930: 460b         	mov	r3, r1
1000c932: d109         	bne	0x1000c948 <core::fmt::write::h7bf3e0e265c649d5+0x8c> @ imm = #0x12
1000c934: 00d5         	lsls	r5, r2, #0x3
1000c936: 9a05         	ldr	r2, [sp, #0x14]
1000c938: 5952         	ldr	r2, [r2, r5]
1000c93a: 2a00         	cmp	r2, #0x0
1000c93c: 460b         	mov	r3, r1
1000c93e: d103         	bne	0x1000c948 <core::fmt::write::h7bf3e0e265c649d5+0x8c> @ imm = #0x6
1000c940: 9a05         	ldr	r2, [sp, #0x14]
1000c942: 1952         	adds	r2, r2, r5
1000c944: 6852         	ldr	r2, [r2, #0x4]
1000c946: 2301         	movs	r3, #0x1
1000c948: 9207         	str	r2, [sp, #0x1c]
1000c94a: 9306         	str	r3, [sp, #0x18]
1000c94c: 9d04         	ldr	r5, [sp, #0x10]
1000c94e: 59ab         	ldr	r3, [r5, r6]
1000c950: 2b02         	cmp	r3, #0x2
1000c952: d00d         	beq	0x1000c970 <core::fmt::write::h7bf3e0e265c649d5+0xb4> @ imm = #0x1a
1000c954: 6842         	ldr	r2, [r0, #0x4]
1000c956: 2b01         	cmp	r3, #0x1
1000c958: d10b         	bne	0x1000c972 <core::fmt::write::h7bf3e0e265c649d5+0xb6> @ imm = #0x16
1000c95a: 00d2         	lsls	r2, r2, #0x3
1000c95c: 9b05         	ldr	r3, [sp, #0x14]
1000c95e: 9202         	str	r2, [sp, #0x8]
1000c960: 589a         	ldr	r2, [r3, r2]
1000c962: 2a00         	cmp	r2, #0x0
1000c964: d107         	bne	0x1000c976 <core::fmt::write::h7bf3e0e265c649d5+0xba> @ imm = #0xe
1000c966: 9902         	ldr	r1, [sp, #0x8]
1000c968: 1859         	adds	r1, r3, r1
1000c96a: 684a         	ldr	r2, [r1, #0x4]
1000c96c: 2101         	movs	r1, #0x1
1000c96e: e002         	b	0x1000c976 <core::fmt::write::h7bf3e0e265c649d5+0xba> @ imm = #0x4
1000c970: e000         	b	0x1000c974 <core::fmt::write::h7bf3e0e265c649d5+0xb8> @ imm = #0x0
1000c972: 2101         	movs	r1, #0x1
1000c974: 9b05         	ldr	r3, [sp, #0x14]
1000c976: 9209         	str	r2, [sp, #0x24]
1000c978: 9108         	str	r1, [sp, #0x20]
1000c97a: 6940         	ldr	r0, [r0, #0x14]
1000c97c: 00c1         	lsls	r1, r0, #0x3
1000c97e: 5858         	ldr	r0, [r3, r1]
1000c980: 1859         	adds	r1, r3, r1
1000c982: 684a         	ldr	r2, [r1, #0x4]
1000c984: a906         	add	r1, sp, #0x18
1000c986: 4790         	blx	r2
1000c988: 2800         	cmp	r0, #0x0
1000c98a: d137         	bne	0x1000c9fc <core::fmt::write::h7bf3e0e265c649d5+0x140> @ imm = #0x6e
1000c98c: 3408         	adds	r4, #0x8
1000c98e: 3620         	adds	r6, #0x20
1000c990: 9803         	ldr	r0, [sp, #0xc]
1000c992: 42b0         	cmp	r0, r6
1000c994: d1b4         	bne	0x1000c900 <core::fmt::write::h7bf3e0e265c649d5+0x44> @ imm = #-0x98
1000c996: e021         	b	0x1000c9dc <core::fmt::write::h7bf3e0e265c649d5+0x120> @ imm = #0x42
1000c998: 68d0         	ldr	r0, [r2, #0xc]
1000c99a: 2800         	cmp	r0, #0x0
1000c99c: d020         	beq	0x1000c9e0 <core::fmt::write::h7bf3e0e265c649d5+0x124> @ imm = #0x40
1000c99e: 6894         	ldr	r4, [r2, #0x8]
1000c9a0: 00c1         	lsls	r1, r0, #0x3
1000c9a2: 1865         	adds	r5, r4, r1
1000c9a4: 2107         	movs	r1, #0x7
1000c9a6: 0749         	lsls	r1, r1, #0x1d
1000c9a8: 1e40         	subs	r0, r0, #0x1
1000c9aa: 4388         	bics	r0, r1
1000c9ac: 1c40         	adds	r0, r0, #0x1
1000c9ae: 9000         	str	r0, [sp]
1000c9b0: 9201         	str	r2, [sp, #0x4]
1000c9b2: 6816         	ldr	r6, [r2]
1000c9b4: 6872         	ldr	r2, [r6, #0x4]
1000c9b6: 2a00         	cmp	r2, #0x0
1000c9b8: d006         	beq	0x1000c9c8 <core::fmt::write::h7bf3e0e265c649d5+0x10c> @ imm = #0xc
1000c9ba: 980e         	ldr	r0, [sp, #0x38]
1000c9bc: 68c3         	ldr	r3, [r0, #0xc]
1000c9be: 6831         	ldr	r1, [r6]
1000c9c0: 980d         	ldr	r0, [sp, #0x34]
1000c9c2: 4798         	blx	r3
1000c9c4: 2800         	cmp	r0, #0x0
1000c9c6: d119         	bne	0x1000c9fc <core::fmt::write::h7bf3e0e265c649d5+0x140> @ imm = #0x32
1000c9c8: cc05         	ldm	r4!, {r0, r2}
1000c9ca: a906         	add	r1, sp, #0x18
1000c9cc: 3c08         	subs	r4, #0x8
1000c9ce: 4790         	blx	r2
1000c9d0: 2800         	cmp	r0, #0x0
1000c9d2: d113         	bne	0x1000c9fc <core::fmt::write::h7bf3e0e265c649d5+0x140> @ imm = #0x26
1000c9d4: 3608         	adds	r6, #0x8
1000c9d6: 3408         	adds	r4, #0x8
1000c9d8: 42ac         	cmp	r4, r5
1000c9da: d1eb         	bne	0x1000c9b4 <core::fmt::write::h7bf3e0e265c649d5+0xf8> @ imm = #-0x2a
1000c9dc: 9a01         	ldr	r2, [sp, #0x4]
1000c9de: 9900         	ldr	r1, [sp]
1000c9e0: 6850         	ldr	r0, [r2, #0x4]
1000c9e2: 4281         	cmp	r1, r0
1000c9e4: d20d         	bhs	0x1000ca02 <core::fmt::write::h7bf3e0e265c649d5+0x146> @ imm = #0x1a
1000c9e6: 00c8         	lsls	r0, r1, #0x3
1000c9e8: 6812         	ldr	r2, [r2]
1000c9ea: 5811         	ldr	r1, [r2, r0]
1000c9ec: 1810         	adds	r0, r2, r0
1000c9ee: 6842         	ldr	r2, [r0, #0x4]
1000c9f0: 980e         	ldr	r0, [sp, #0x38]
1000c9f2: 68c3         	ldr	r3, [r0, #0xc]
1000c9f4: 980d         	ldr	r0, [sp, #0x34]
1000c9f6: 4798         	blx	r3
1000c9f8: 2800         	cmp	r0, #0x0
1000c9fa: d002         	beq	0x1000ca02 <core::fmt::write::h7bf3e0e265c649d5+0x146> @ imm = #0x4
1000c9fc: 2001         	movs	r0, #0x1
1000c9fe: b00f         	add	sp, #0x3c
1000ca00: bdf0         	pop	{r4, r5, r6, r7, pc}
1000ca02: 2000         	movs	r0, #0x0
1000ca04: b00f         	add	sp, #0x3c
1000ca06: bdf0         	pop	{r4, r5, r6, r7, pc}

1000ca08 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7>:
1000ca08: b5f0         	push	{r4, r5, r6, r7, lr}
1000ca0a: af03         	add	r7, sp, #0xc
1000ca0c: b08b         	sub	sp, #0x2c
1000ca0e: 9309         	str	r3, [sp, #0x24]
1000ca10: 4615         	mov	r5, r2
1000ca12: 68fb         	ldr	r3, [r7, #0xc]
1000ca14: 2900         	cmp	r1, #0x0
1000ca16: d006         	beq	0x1000ca26 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x1e> @ imm = #0xc
1000ca18: 4604         	mov	r4, r0
1000ca1a: 6946         	ldr	r6, [r0, #0x14]
1000ca1c: 2101         	movs	r1, #0x1
1000ca1e: 4031         	ands	r1, r6
1000ca20: d037         	beq	0x1000ca92 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x8a> @ imm = #0x6e
1000ca22: 222b         	movs	r2, #0x2b
1000ca24: e037         	b	0x1000ca96 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x8e> @ imm = #0x6e
1000ca26: 6946         	ldr	r6, [r0, #0x14]
1000ca28: 1c5a         	adds	r2, r3, #0x1
1000ca2a: 212d         	movs	r1, #0x2d
1000ca2c: 9108         	str	r1, [sp, #0x20]
1000ca2e: 9605         	str	r6, [sp, #0x14]
1000ca30: 0771         	lsls	r1, r6, #0x1d
1000ca32: 9307         	str	r3, [sp, #0x1c]
1000ca34: d536         	bpl	0x1000caa4 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x9c> @ imm = #0x6c
1000ca36: 9206         	str	r2, [sp, #0x18]
1000ca38: 9909         	ldr	r1, [sp, #0x24]
1000ca3a: 2910         	cmp	r1, #0x10
1000ca3c: d24b         	bhs	0x1000cad6 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0xce> @ imm = #0x96
1000ca3e: 2900         	cmp	r1, #0x0
1000ca40: d050         	beq	0x1000cae4 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0xdc> @ imm = #0xa0
1000ca42: 9003         	str	r0, [sp, #0xc]
1000ca44: 2203         	movs	r2, #0x3
1000ca46: 4608         	mov	r0, r1
1000ca48: 920a         	str	r2, [sp, #0x28]
1000ca4a: 4010         	ands	r0, r2
1000ca4c: 9004         	str	r0, [sp, #0x10]
1000ca4e: 2904         	cmp	r1, #0x4
1000ca50: d300         	blo	0x1000ca54 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x4c> @ imm = #0x0
1000ca52: e091         	b	0x1000cb78 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x170> @ imm = #0x122
1000ca54: 2100         	movs	r1, #0x0
1000ca56: 460b         	mov	r3, r1
1000ca58: 9804         	ldr	r0, [sp, #0x10]
1000ca5a: 2800         	cmp	r0, #0x0
1000ca5c: 9803         	ldr	r0, [sp, #0xc]
1000ca5e: d042         	beq	0x1000cae6 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0xde> @ imm = #0x84
1000ca60: 56e8         	ldrsb	r0, [r5, r3]
1000ca62: 2240         	movs	r2, #0x40
1000ca64: 43d2         	mvns	r2, r2
1000ca66: 4290         	cmp	r0, r2
1000ca68: dd00         	ble	0x1000ca6c <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x64> @ imm = #0x0
1000ca6a: 1c49         	adds	r1, r1, #0x1
1000ca6c: 9804         	ldr	r0, [sp, #0x10]
1000ca6e: 2801         	cmp	r0, #0x1
1000ca70: d00d         	beq	0x1000ca8e <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x86> @ imm = #0x1a
1000ca72: 18eb         	adds	r3, r5, r3
1000ca74: 2001         	movs	r0, #0x1
1000ca76: 5618         	ldrsb	r0, [r3, r0]
1000ca78: 4290         	cmp	r0, r2
1000ca7a: dd00         	ble	0x1000ca7e <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x76> @ imm = #0x0
1000ca7c: 1c49         	adds	r1, r1, #0x1
1000ca7e: 9804         	ldr	r0, [sp, #0x10]
1000ca80: 2802         	cmp	r0, #0x2
1000ca82: d004         	beq	0x1000ca8e <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x86> @ imm = #0x8
1000ca84: 2002         	movs	r0, #0x2
1000ca86: 5618         	ldrsb	r0, [r3, r0]
1000ca88: 4290         	cmp	r0, r2
1000ca8a: dd00         	ble	0x1000ca8e <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x86> @ imm = #0x0
1000ca8c: 1c49         	adds	r1, r1, #0x1
1000ca8e: 9803         	ldr	r0, [sp, #0xc]
1000ca90: e029         	b	0x1000cae6 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0xde> @ imm = #0x52
1000ca92: 2211         	movs	r2, #0x11
1000ca94: 0412         	lsls	r2, r2, #0x10
1000ca96: 9208         	str	r2, [sp, #0x20]
1000ca98: 18ca         	adds	r2, r1, r3
1000ca9a: 4620         	mov	r0, r4
1000ca9c: 9605         	str	r6, [sp, #0x14]
1000ca9e: 0771         	lsls	r1, r6, #0x1d
1000caa0: 9307         	str	r3, [sp, #0x1c]
1000caa2: d4c8         	bmi	0x1000ca36 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x2e> @ imm = #-0x70
1000caa4: 2500         	movs	r5, #0x0
1000caa6: 68be         	ldr	r6, [r7, #0x8]
1000caa8: 6801         	ldr	r1, [r0]
1000caaa: 2900         	cmp	r1, #0x0
1000caac: d121         	bne	0x1000caf2 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0xea> @ imm = #0x42
1000caae: 69c4         	ldr	r4, [r0, #0x1c]
1000cab0: 462b         	mov	r3, r5
1000cab2: 6a05         	ldr	r5, [r0, #0x20]
1000cab4: 9809         	ldr	r0, [sp, #0x24]
1000cab6: 9000         	str	r0, [sp]
1000cab8: 4620         	mov	r0, r4
1000caba: 4629         	mov	r1, r5
1000cabc: 9a08         	ldr	r2, [sp, #0x20]
1000cabe: f000 f8d9    	bl	0x1000cc74 <core::fmt::Formatter::pad_integral::write_prefix::hfd9ab1da14fd16ef> @ imm = #0x1b2
1000cac2: 2800         	cmp	r0, #0x0
1000cac4: d000         	beq	0x1000cac8 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0xc0> @ imm = #0x0
1000cac6: e09a         	b	0x1000cbfe <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x1f6> @ imm = #0x134
1000cac8: 68eb         	ldr	r3, [r5, #0xc]
1000caca: 4620         	mov	r0, r4
1000cacc: 4631         	mov	r1, r6
1000cace: 9a07         	ldr	r2, [sp, #0x1c]
1000cad0: 4798         	blx	r3
1000cad2: b00b         	add	sp, #0x2c
1000cad4: bdf0         	pop	{r4, r5, r6, r7, pc}
1000cad6: 4604         	mov	r4, r0
1000cad8: 4628         	mov	r0, r5
1000cada: f000 fa31    	bl	0x1000cf40 <core::str::count::do_count_chars::hd88a0ac9522caafb> @ imm = #0x462
1000cade: 4601         	mov	r1, r0
1000cae0: 4620         	mov	r0, r4
1000cae2: e000         	b	0x1000cae6 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0xde> @ imm = #0x0
1000cae4: 2100         	movs	r1, #0x0
1000cae6: 9a06         	ldr	r2, [sp, #0x18]
1000cae8: 188a         	adds	r2, r1, r2
1000caea: 68be         	ldr	r6, [r7, #0x8]
1000caec: 6801         	ldr	r1, [r0]
1000caee: 2900         	cmp	r1, #0x0
1000caf0: d0dd         	beq	0x1000caae <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0xa6> @ imm = #-0x46
1000caf2: 9604         	str	r6, [sp, #0x10]
1000caf4: 6846         	ldr	r6, [r0, #0x4]
1000caf6: 4296         	cmp	r6, r2
1000caf8: 9909         	ldr	r1, [sp, #0x24]
1000cafa: d913         	bls	0x1000cb24 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x11c> @ imm = #0x26
1000cafc: 9206         	str	r2, [sp, #0x18]
1000cafe: 9a05         	ldr	r2, [sp, #0x14]
1000cb00: 0712         	lsls	r2, r2, #0x1c
1000cb02: d421         	bmi	0x1000cb48 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x140> @ imm = #0x42
1000cb04: 7e01         	ldrb	r1, [r0, #0x18]
1000cb06: 4603         	mov	r3, r0
1000cb08: 2903         	cmp	r1, #0x3
1000cb0a: d100         	bne	0x1000cb0e <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x106> @ imm = #0x0
1000cb0c: 2101         	movs	r1, #0x1
1000cb0e: 9806         	ldr	r0, [sp, #0x18]
1000cb10: 1a32         	subs	r2, r6, r0
1000cb12: 2900         	cmp	r1, #0x0
1000cb14: 9502         	str	r5, [sp, #0x8]
1000cb16: d05f         	beq	0x1000cbd8 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x1d0> @ imm = #0xbe
1000cb18: 2901         	cmp	r1, #0x1
1000cb1a: d15f         	bne	0x1000cbdc <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x1d4> @ imm = #0xbe
1000cb1c: 2000         	movs	r0, #0x0
1000cb1e: 9006         	str	r0, [sp, #0x18]
1000cb20: 4611         	mov	r1, r2
1000cb22: e05f         	b	0x1000cbe4 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x1dc> @ imm = #0xbe
1000cb24: 69c4         	ldr	r4, [r0, #0x1c]
1000cb26: 462b         	mov	r3, r5
1000cb28: 6a05         	ldr	r5, [r0, #0x20]
1000cb2a: 9100         	str	r1, [sp]
1000cb2c: 4620         	mov	r0, r4
1000cb2e: 4629         	mov	r1, r5
1000cb30: 9a08         	ldr	r2, [sp, #0x20]
1000cb32: f000 f89f    	bl	0x1000cc74 <core::fmt::Formatter::pad_integral::write_prefix::hfd9ab1da14fd16ef> @ imm = #0x13e
1000cb36: 2800         	cmp	r0, #0x0
1000cb38: d161         	bne	0x1000cbfe <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x1f6> @ imm = #0xc2
1000cb3a: 68eb         	ldr	r3, [r5, #0xc]
1000cb3c: 4620         	mov	r0, r4
1000cb3e: 9904         	ldr	r1, [sp, #0x10]
1000cb40: 9a07         	ldr	r2, [sp, #0x1c]
1000cb42: 4798         	blx	r3
1000cb44: b00b         	add	sp, #0x2c
1000cb46: bdf0         	pop	{r4, r5, r6, r7, pc}
1000cb48: 6902         	ldr	r2, [r0, #0x10]
1000cb4a: 9205         	str	r2, [sp, #0x14]
1000cb4c: 2230         	movs	r2, #0x30
1000cb4e: 6102         	str	r2, [r0, #0x10]
1000cb50: 7e02         	ldrb	r2, [r0, #0x18]
1000cb52: 9201         	str	r2, [sp, #0x4]
1000cb54: 2201         	movs	r2, #0x1
1000cb56: 920a         	str	r2, [sp, #0x28]
1000cb58: 7602         	strb	r2, [r0, #0x18]
1000cb5a: 69c4         	ldr	r4, [r0, #0x1c]
1000cb5c: 9003         	str	r0, [sp, #0xc]
1000cb5e: 462b         	mov	r3, r5
1000cb60: 6a05         	ldr	r5, [r0, #0x20]
1000cb62: 9100         	str	r1, [sp]
1000cb64: 4620         	mov	r0, r4
1000cb66: 4629         	mov	r1, r5
1000cb68: 9a08         	ldr	r2, [sp, #0x20]
1000cb6a: f000 f883    	bl	0x1000cc74 <core::fmt::Formatter::pad_integral::write_prefix::hfd9ab1da14fd16ef> @ imm = #0x106
1000cb6e: 2800         	cmp	r0, #0x0
1000cb70: d024         	beq	0x1000cbbc <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x1b4> @ imm = #0x48
1000cb72: 980a         	ldr	r0, [sp, #0x28]
1000cb74: b00b         	add	sp, #0x2c
1000cb76: bdf0         	pop	{r4, r5, r6, r7, pc}
1000cb78: 220c         	movs	r2, #0xc
1000cb7a: 400a         	ands	r2, r1
1000cb7c: 2100         	movs	r1, #0x0
1000cb7e: 460b         	mov	r3, r1
1000cb80: e003         	b	0x1000cb8a <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x182> @ imm = #0x6
1000cb82: 1d1b         	adds	r3, r3, #0x4
1000cb84: 429a         	cmp	r2, r3
1000cb86: d100         	bne	0x1000cb8a <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x182> @ imm = #0x0
1000cb88: e766         	b	0x1000ca58 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x50> @ imm = #-0x134
1000cb8a: 56ec         	ldrsb	r4, [r5, r3]
1000cb8c: 2640         	movs	r6, #0x40
1000cb8e: 43f6         	mvns	r6, r6
1000cb90: 42b4         	cmp	r4, r6
1000cb92: dd00         	ble	0x1000cb96 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x18e> @ imm = #0x0
1000cb94: 1c49         	adds	r1, r1, #0x1
1000cb96: 4628         	mov	r0, r5
1000cb98: 18ec         	adds	r4, r5, r3
1000cb9a: 2501         	movs	r5, #0x1
1000cb9c: 5765         	ldrsb	r5, [r4, r5]
1000cb9e: 42b5         	cmp	r5, r6
1000cba0: dd00         	ble	0x1000cba4 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x19c> @ imm = #0x0
1000cba2: 1c49         	adds	r1, r1, #0x1
1000cba4: 2502         	movs	r5, #0x2
1000cba6: 5765         	ldrsb	r5, [r4, r5]
1000cba8: 42b5         	cmp	r5, r6
1000cbaa: dd00         	ble	0x1000cbae <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x1a6> @ imm = #0x0
1000cbac: 1c49         	adds	r1, r1, #0x1
1000cbae: 4605         	mov	r5, r0
1000cbb0: 980a         	ldr	r0, [sp, #0x28]
1000cbb2: 5624         	ldrsb	r4, [r4, r0]
1000cbb4: 42b4         	cmp	r4, r6
1000cbb6: dde4         	ble	0x1000cb82 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x17a> @ imm = #-0x38
1000cbb8: 1c49         	adds	r1, r1, #0x1
1000cbba: e7e2         	b	0x1000cb82 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x17a> @ imm = #-0x3c
1000cbbc: 9806         	ldr	r0, [sp, #0x18]
1000cbbe: 1a30         	subs	r0, r6, r0
1000cbc0: 1c46         	adds	r6, r0, #0x1
1000cbc2: 1e76         	subs	r6, r6, #0x1
1000cbc4: d02c         	beq	0x1000cc20 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x218> @ imm = #0x58
1000cbc6: 692a         	ldr	r2, [r5, #0x10]
1000cbc8: 2130         	movs	r1, #0x30
1000cbca: 4620         	mov	r0, r4
1000cbcc: 4790         	blx	r2
1000cbce: 2800         	cmp	r0, #0x0
1000cbd0: d0f7         	beq	0x1000cbc2 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x1ba> @ imm = #-0x12
1000cbd2: 980a         	ldr	r0, [sp, #0x28]
1000cbd4: b00b         	add	sp, #0x2c
1000cbd6: bdf0         	pop	{r4, r5, r6, r7, pc}
1000cbd8: 9206         	str	r2, [sp, #0x18]
1000cbda: e003         	b	0x1000cbe4 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x1dc> @ imm = #0x6
1000cbdc: 0851         	lsrs	r1, r2, #0x1
1000cbde: 1c50         	adds	r0, r2, #0x1
1000cbe0: 0840         	lsrs	r0, r0, #0x1
1000cbe2: 9006         	str	r0, [sp, #0x18]
1000cbe4: 1c4e         	adds	r6, r1, #0x1
1000cbe6: 6918         	ldr	r0, [r3, #0x10]
1000cbe8: 900a         	str	r0, [sp, #0x28]
1000cbea: 69dc         	ldr	r4, [r3, #0x1c]
1000cbec: 6a1d         	ldr	r5, [r3, #0x20]
1000cbee: 1e76         	subs	r6, r6, #0x1
1000cbf0: d008         	beq	0x1000cc04 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x1fc> @ imm = #0x10
1000cbf2: 692a         	ldr	r2, [r5, #0x10]
1000cbf4: 4620         	mov	r0, r4
1000cbf6: 990a         	ldr	r1, [sp, #0x28]
1000cbf8: 4790         	blx	r2
1000cbfa: 2800         	cmp	r0, #0x0
1000cbfc: d0f7         	beq	0x1000cbee <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x1e6> @ imm = #-0x12
1000cbfe: 2001         	movs	r0, #0x1
1000cc00: b00b         	add	sp, #0x2c
1000cc02: bdf0         	pop	{r4, r5, r6, r7, pc}
1000cc04: 9809         	ldr	r0, [sp, #0x24]
1000cc06: 9000         	str	r0, [sp]
1000cc08: 4620         	mov	r0, r4
1000cc0a: 4629         	mov	r1, r5
1000cc0c: 9a08         	ldr	r2, [sp, #0x20]
1000cc0e: 9b02         	ldr	r3, [sp, #0x8]
1000cc10: f000 f830    	bl	0x1000cc74 <core::fmt::Formatter::pad_integral::write_prefix::hfd9ab1da14fd16ef> @ imm = #0x60
1000cc14: 2601         	movs	r6, #0x1
1000cc16: 2800         	cmp	r0, #0x0
1000cc18: d010         	beq	0x1000cc3c <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x234> @ imm = #0x20
1000cc1a: 4630         	mov	r0, r6
1000cc1c: b00b         	add	sp, #0x2c
1000cc1e: bdf0         	pop	{r4, r5, r6, r7, pc}
1000cc20: 68eb         	ldr	r3, [r5, #0xc]
1000cc22: 4620         	mov	r0, r4
1000cc24: 9904         	ldr	r1, [sp, #0x10]
1000cc26: 9a07         	ldr	r2, [sp, #0x1c]
1000cc28: 4798         	blx	r3
1000cc2a: 2800         	cmp	r0, #0x0
1000cc2c: 980a         	ldr	r0, [sp, #0x28]
1000cc2e: d11f         	bne	0x1000cc70 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x268> @ imm = #0x3e
1000cc30: 9803         	ldr	r0, [sp, #0xc]
1000cc32: 9901         	ldr	r1, [sp, #0x4]
1000cc34: 7601         	strb	r1, [r0, #0x18]
1000cc36: 9905         	ldr	r1, [sp, #0x14]
1000cc38: 6101         	str	r1, [r0, #0x10]
1000cc3a: e018         	b	0x1000cc6e <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x266> @ imm = #0x30
1000cc3c: 68eb         	ldr	r3, [r5, #0xc]
1000cc3e: 4620         	mov	r0, r4
1000cc40: 9904         	ldr	r1, [sp, #0x10]
1000cc42: 9a07         	ldr	r2, [sp, #0x1c]
1000cc44: 4798         	blx	r3
1000cc46: 2800         	cmp	r0, #0x0
1000cc48: 4630         	mov	r0, r6
1000cc4a: d111         	bne	0x1000cc70 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x268> @ imm = #0x22
1000cc4c: 2600         	movs	r6, #0x0
1000cc4e: 9906         	ldr	r1, [sp, #0x18]
1000cc50: 42b1         	cmp	r1, r6
1000cc52: d009         	beq	0x1000cc68 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x260> @ imm = #0x12
1000cc54: 692a         	ldr	r2, [r5, #0x10]
1000cc56: 4620         	mov	r0, r4
1000cc58: 990a         	ldr	r1, [sp, #0x28]
1000cc5a: 4790         	blx	r2
1000cc5c: 1c76         	adds	r6, r6, #0x1
1000cc5e: 2800         	cmp	r0, #0x0
1000cc60: d0f5         	beq	0x1000cc4e <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x246> @ imm = #-0x16
1000cc62: 1e70         	subs	r0, r6, #0x1
1000cc64: 9906         	ldr	r1, [sp, #0x18]
1000cc66: e000         	b	0x1000cc6a <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x262> @ imm = #0x0
1000cc68: 4608         	mov	r0, r1
1000cc6a: 4288         	cmp	r0, r1
1000cc6c: d3c7         	blo	0x1000cbfe <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7+0x1f6> @ imm = #-0x72
1000cc6e: 2000         	movs	r0, #0x0
1000cc70: b00b         	add	sp, #0x2c
1000cc72: bdf0         	pop	{r4, r5, r6, r7, pc}

1000cc74 <core::fmt::Formatter::pad_integral::write_prefix::hfd9ab1da14fd16ef>:
1000cc74: b5f0         	push	{r4, r5, r6, r7, lr}
1000cc76: af03         	add	r7, sp, #0xc
1000cc78: b081         	sub	sp, #0x4
1000cc7a: 461c         	mov	r4, r3
1000cc7c: 460d         	mov	r5, r1
1000cc7e: 2111         	movs	r1, #0x11
1000cc80: 0409         	lsls	r1, r1, #0x10
1000cc82: 428a         	cmp	r2, r1
1000cc84: d00a         	beq	0x1000cc9c <core::fmt::Formatter::pad_integral::write_prefix::hfd9ab1da14fd16ef+0x28> @ imm = #0x14
1000cc86: 692b         	ldr	r3, [r5, #0x10]
1000cc88: 4606         	mov	r6, r0
1000cc8a: 4611         	mov	r1, r2
1000cc8c: 4798         	blx	r3
1000cc8e: 4601         	mov	r1, r0
1000cc90: 4630         	mov	r0, r6
1000cc92: 2900         	cmp	r1, #0x0
1000cc94: d002         	beq	0x1000cc9c <core::fmt::Formatter::pad_integral::write_prefix::hfd9ab1da14fd16ef+0x28> @ imm = #0x4
1000cc96: 2001         	movs	r0, #0x1
1000cc98: b001         	add	sp, #0x4
1000cc9a: bdf0         	pop	{r4, r5, r6, r7, pc}
1000cc9c: 2c00         	cmp	r4, #0x0
1000cc9e: d005         	beq	0x1000ccac <core::fmt::Formatter::pad_integral::write_prefix::hfd9ab1da14fd16ef+0x38> @ imm = #0xa
1000cca0: 68ba         	ldr	r2, [r7, #0x8]
1000cca2: 68eb         	ldr	r3, [r5, #0xc]
1000cca4: 4621         	mov	r1, r4
1000cca6: 4798         	blx	r3
1000cca8: b001         	add	sp, #0x4
1000ccaa: bdf0         	pop	{r4, r5, r6, r7, pc}
1000ccac: 2000         	movs	r0, #0x0
1000ccae: b001         	add	sp, #0x4
1000ccb0: bdf0         	pop	{r4, r5, r6, r7, pc}

1000ccb2 <core::fmt::Formatter::pad::h513e98eba890bd87>:
1000ccb2: b5f0         	push	{r4, r5, r6, r7, lr}
1000ccb4: af03         	add	r7, sp, #0xc
1000ccb6: b087         	sub	sp, #0x1c
1000ccb8: 460e         	mov	r6, r1
1000ccba: 6804         	ldr	r4, [r0]
1000ccbc: 6881         	ldr	r1, [r0, #0x8]
1000ccbe: 4623         	mov	r3, r4
1000ccc0: 430b         	orrs	r3, r1
1000ccc2: d073         	beq	0x1000cdac <core::fmt::Formatter::pad::h513e98eba890bd87+0xfa> @ imm = #0xe6
1000ccc4: 07c9         	lsls	r1, r1, #0x1f
1000ccc6: d041         	beq	0x1000cd4c <core::fmt::Formatter::pad::h513e98eba890bd87+0x9a> @ imm = #0x82
1000ccc8: 9406         	str	r4, [sp, #0x18]
1000ccca: 9204         	str	r2, [sp, #0x10]
1000cccc: 18b3         	adds	r3, r6, r2
1000ccce: 68c4         	ldr	r4, [r0, #0xc]
1000ccd0: 2c00         	cmp	r4, #0x0
1000ccd2: 9603         	str	r6, [sp, #0xc]
1000ccd4: d018         	beq	0x1000cd08 <core::fmt::Formatter::pad::h513e98eba890bd87+0x56> @ imm = #0x30
1000ccd6: 2100         	movs	r1, #0x0
1000ccd8: e004         	b	0x1000cce4 <core::fmt::Formatter::pad::h513e98eba890bd87+0x32> @ imm = #0x8
1000ccda: 1c6e         	adds	r6, r5, #0x1
1000ccdc: 1b75         	subs	r5, r6, r5
1000ccde: 1869         	adds	r1, r5, r1
1000cce0: 1e64         	subs	r4, r4, #0x1
1000cce2: d012         	beq	0x1000cd0a <core::fmt::Formatter::pad::h513e98eba890bd87+0x58> @ imm = #0x24
1000cce4: 429e         	cmp	r6, r3
1000cce6: d025         	beq	0x1000cd34 <core::fmt::Formatter::pad::h513e98eba890bd87+0x82> @ imm = #0x4a
1000cce8: 4635         	mov	r5, r6
1000ccea: 2600         	movs	r6, #0x0
1000ccec: 57ae         	ldrsb	r6, [r5, r6]
1000ccee: 2e00         	cmp	r6, #0x0
1000ccf0: d5f3         	bpl	0x1000ccda <core::fmt::Formatter::pad::h513e98eba890bd87+0x28> @ imm = #-0x1a
1000ccf2: b2f6         	uxtb	r6, r6
1000ccf4: 2ee0         	cmp	r6, #0xe0
1000ccf6: d303         	blo	0x1000cd00 <core::fmt::Formatter::pad::h513e98eba890bd87+0x4e> @ imm = #0x6
1000ccf8: 2ef0         	cmp	r6, #0xf0
1000ccfa: d303         	blo	0x1000cd04 <core::fmt::Formatter::pad::h513e98eba890bd87+0x52> @ imm = #0x6
1000ccfc: 1d2e         	adds	r6, r5, #0x4
1000ccfe: e7ed         	b	0x1000ccdc <core::fmt::Formatter::pad::h513e98eba890bd87+0x2a> @ imm = #-0x26
1000cd00: 1cae         	adds	r6, r5, #0x2
1000cd02: e7eb         	b	0x1000ccdc <core::fmt::Formatter::pad::h513e98eba890bd87+0x2a> @ imm = #-0x2a
1000cd04: 1cee         	adds	r6, r5, #0x3
1000cd06: e7e9         	b	0x1000ccdc <core::fmt::Formatter::pad::h513e98eba890bd87+0x2a> @ imm = #-0x2e
1000cd08: 2100         	movs	r1, #0x0
1000cd0a: 429e         	cmp	r6, r3
1000cd0c: d012         	beq	0x1000cd34 <core::fmt::Formatter::pad::h513e98eba890bd87+0x82> @ imm = #0x24
1000cd0e: 2300         	movs	r3, #0x0
1000cd10: 56f4         	ldrsb	r4, [r6, r3]
1000cd12: 2c00         	cmp	r4, #0x0
1000cd14: d501         	bpl	0x1000cd1a <core::fmt::Formatter::pad::h513e98eba890bd87+0x68> @ imm = #0x2
1000cd16: b2e4         	uxtb	r4, r4
1000cd18: 2ce0         	cmp	r4, #0xe0
1000cd1a: 2900         	cmp	r1, #0x0
1000cd1c: 9a04         	ldr	r2, [sp, #0x10]
1000cd1e: 9e03         	ldr	r6, [sp, #0xc]
1000cd20: d00d         	beq	0x1000cd3e <core::fmt::Formatter::pad::h513e98eba890bd87+0x8c> @ imm = #0x1a
1000cd22: 4291         	cmp	r1, r2
1000cd24: d20a         	bhs	0x1000cd3c <core::fmt::Formatter::pad::h513e98eba890bd87+0x8a> @ imm = #0x14
1000cd26: 5674         	ldrsb	r4, [r6, r1]
1000cd28: 253f         	movs	r5, #0x3f
1000cd2a: 43ed         	mvns	r5, r5
1000cd2c: 42ac         	cmp	r4, r5
1000cd2e: 9a04         	ldr	r2, [sp, #0x10]
1000cd30: da05         	bge	0x1000cd3e <core::fmt::Formatter::pad::h513e98eba890bd87+0x8c> @ imm = #0xa
1000cd32: e005         	b	0x1000cd40 <core::fmt::Formatter::pad::h513e98eba890bd87+0x8e> @ imm = #0xa
1000cd34: 9a04         	ldr	r2, [sp, #0x10]
1000cd36: 9e03         	ldr	r6, [sp, #0xc]
1000cd38: 9c06         	ldr	r4, [sp, #0x18]
1000cd3a: e007         	b	0x1000cd4c <core::fmt::Formatter::pad::h513e98eba890bd87+0x9a> @ imm = #0xe
1000cd3c: d100         	bne	0x1000cd40 <core::fmt::Formatter::pad::h513e98eba890bd87+0x8e> @ imm = #0x0
1000cd3e: 4633         	mov	r3, r6
1000cd40: 2b00         	cmp	r3, #0x0
1000cd42: d000         	beq	0x1000cd46 <core::fmt::Formatter::pad::h513e98eba890bd87+0x94> @ imm = #0x0
1000cd44: 461e         	mov	r6, r3
1000cd46: 9c06         	ldr	r4, [sp, #0x18]
1000cd48: d000         	beq	0x1000cd4c <core::fmt::Formatter::pad::h513e98eba890bd87+0x9a> @ imm = #0x0
1000cd4a: 460a         	mov	r2, r1
1000cd4c: 2c00         	cmp	r4, #0x0
1000cd4e: d02d         	beq	0x1000cdac <core::fmt::Formatter::pad::h513e98eba890bd87+0xfa> @ imm = #0x5a
1000cd50: 6841         	ldr	r1, [r0, #0x4]
1000cd52: 2a10         	cmp	r2, #0x10
1000cd54: 9204         	str	r2, [sp, #0x10]
1000cd56: 9102         	str	r1, [sp, #0x8]
1000cd58: d230         	bhs	0x1000cdbc <core::fmt::Formatter::pad::h513e98eba890bd87+0x10a> @ imm = #0x60
1000cd5a: 2a00         	cmp	r2, #0x0
1000cd5c: d046         	beq	0x1000cdec <core::fmt::Formatter::pad::h513e98eba890bd87+0x13a> @ imm = #0x8c
1000cd5e: 2303         	movs	r3, #0x3
1000cd60: 4611         	mov	r1, r2
1000cd62: 9306         	str	r3, [sp, #0x18]
1000cd64: 4019         	ands	r1, r3
1000cd66: 9101         	str	r1, [sp, #0x4]
1000cd68: 2a04         	cmp	r2, #0x4
1000cd6a: d273         	bhs	0x1000ce54 <core::fmt::Formatter::pad::h513e98eba890bd87+0x1a2> @ imm = #0xe6
1000cd6c: 2100         	movs	r1, #0x0
1000cd6e: 460b         	mov	r3, r1
1000cd70: 9a01         	ldr	r2, [sp, #0x4]
1000cd72: 2a00         	cmp	r2, #0x0
1000cd74: d029         	beq	0x1000cdca <core::fmt::Formatter::pad::h513e98eba890bd87+0x118> @ imm = #0x52
1000cd76: 56f4         	ldrsb	r4, [r6, r3]
1000cd78: 2240         	movs	r2, #0x40
1000cd7a: 43d2         	mvns	r2, r2
1000cd7c: 4294         	cmp	r4, r2
1000cd7e: dd00         	ble	0x1000cd82 <core::fmt::Formatter::pad::h513e98eba890bd87+0xd0> @ imm = #0x0
1000cd80: 1c49         	adds	r1, r1, #0x1
1000cd82: 9c01         	ldr	r4, [sp, #0x4]
1000cd84: 2c01         	cmp	r4, #0x1
1000cd86: d020         	beq	0x1000cdca <core::fmt::Formatter::pad::h513e98eba890bd87+0x118> @ imm = #0x40
1000cd88: 18f3         	adds	r3, r6, r3
1000cd8a: 2401         	movs	r4, #0x1
1000cd8c: 571c         	ldrsb	r4, [r3, r4]
1000cd8e: 4294         	cmp	r4, r2
1000cd90: dd00         	ble	0x1000cd94 <core::fmt::Formatter::pad::h513e98eba890bd87+0xe2> @ imm = #0x0
1000cd92: 1c49         	adds	r1, r1, #0x1
1000cd94: 9c01         	ldr	r4, [sp, #0x4]
1000cd96: 2c02         	cmp	r4, #0x2
1000cd98: d017         	beq	0x1000cdca <core::fmt::Formatter::pad::h513e98eba890bd87+0x118> @ imm = #0x2e
1000cd9a: 2402         	movs	r4, #0x2
1000cd9c: 571b         	ldrsb	r3, [r3, r4]
1000cd9e: 4293         	cmp	r3, r2
1000cda0: dd13         	ble	0x1000cdca <core::fmt::Formatter::pad::h513e98eba890bd87+0x118> @ imm = #0x26
1000cda2: 1c49         	adds	r1, r1, #0x1
1000cda4: 9b02         	ldr	r3, [sp, #0x8]
1000cda6: 428b         	cmp	r3, r1
1000cda8: d812         	bhi	0x1000cdd0 <core::fmt::Formatter::pad::h513e98eba890bd87+0x11e> @ imm = #0x24
1000cdaa: e023         	b	0x1000cdf4 <core::fmt::Formatter::pad::h513e98eba890bd87+0x142> @ imm = #0x46
1000cdac: 69c1         	ldr	r1, [r0, #0x1c]
1000cdae: 6a00         	ldr	r0, [r0, #0x20]
1000cdb0: 68c3         	ldr	r3, [r0, #0xc]
1000cdb2: 4608         	mov	r0, r1
1000cdb4: 4631         	mov	r1, r6
1000cdb6: 4798         	blx	r3
1000cdb8: b007         	add	sp, #0x1c
1000cdba: bdf0         	pop	{r4, r5, r6, r7, pc}
1000cdbc: 4611         	mov	r1, r2
1000cdbe: 4604         	mov	r4, r0
1000cdc0: 4630         	mov	r0, r6
1000cdc2: f000 f8bd    	bl	0x1000cf40 <core::str::count::do_count_chars::hd88a0ac9522caafb> @ imm = #0x17a
1000cdc6: 4601         	mov	r1, r0
1000cdc8: 4620         	mov	r0, r4
1000cdca: 9b02         	ldr	r3, [sp, #0x8]
1000cdcc: 428b         	cmp	r3, r1
1000cdce: d911         	bls	0x1000cdf4 <core::fmt::Formatter::pad::h513e98eba890bd87+0x142> @ imm = #0x22
1000cdd0: 7e02         	ldrb	r2, [r0, #0x18]
1000cdd2: 2a03         	cmp	r2, #0x3
1000cdd4: d100         	bne	0x1000cdd8 <core::fmt::Formatter::pad::h513e98eba890bd87+0x126> @ imm = #0x0
1000cdd6: 2200         	movs	r2, #0x0
1000cdd8: 1a59         	subs	r1, r3, r1
1000cdda: 2a00         	cmp	r2, #0x0
1000cddc: 9603         	str	r6, [sp, #0xc]
1000cdde: d015         	beq	0x1000ce0c <core::fmt::Formatter::pad::h513e98eba890bd87+0x15a> @ imm = #0x2a
1000cde0: 2a01         	cmp	r2, #0x1
1000cde2: d110         	bne	0x1000ce06 <core::fmt::Formatter::pad::h513e98eba890bd87+0x154> @ imm = #0x20
1000cde4: 2200         	movs	r2, #0x0
1000cde6: 9205         	str	r2, [sp, #0x14]
1000cde8: 460a         	mov	r2, r1
1000cdea: e010         	b	0x1000ce0e <core::fmt::Formatter::pad::h513e98eba890bd87+0x15c> @ imm = #0x20
1000cdec: 2100         	movs	r1, #0x0
1000cdee: 9b02         	ldr	r3, [sp, #0x8]
1000cdf0: 428b         	cmp	r3, r1
1000cdf2: d8ed         	bhi	0x1000cdd0 <core::fmt::Formatter::pad::h513e98eba890bd87+0x11e> @ imm = #-0x26
1000cdf4: 69c1         	ldr	r1, [r0, #0x1c]
1000cdf6: 6a00         	ldr	r0, [r0, #0x20]
1000cdf8: 68c3         	ldr	r3, [r0, #0xc]
1000cdfa: 4608         	mov	r0, r1
1000cdfc: 4631         	mov	r1, r6
1000cdfe: 9a04         	ldr	r2, [sp, #0x10]
1000ce00: 4798         	blx	r3
1000ce02: b007         	add	sp, #0x1c
1000ce04: bdf0         	pop	{r4, r5, r6, r7, pc}
1000ce06: 084a         	lsrs	r2, r1, #0x1
1000ce08: 1c49         	adds	r1, r1, #0x1
1000ce0a: 0849         	lsrs	r1, r1, #0x1
1000ce0c: 9105         	str	r1, [sp, #0x14]
1000ce0e: 1c56         	adds	r6, r2, #0x1
1000ce10: 6901         	ldr	r1, [r0, #0x10]
1000ce12: 9106         	str	r1, [sp, #0x18]
1000ce14: 69c4         	ldr	r4, [r0, #0x1c]
1000ce16: 6a05         	ldr	r5, [r0, #0x20]
1000ce18: 1e76         	subs	r6, r6, #0x1
1000ce1a: d006         	beq	0x1000ce2a <core::fmt::Formatter::pad::h513e98eba890bd87+0x178> @ imm = #0xc
1000ce1c: 692a         	ldr	r2, [r5, #0x10]
1000ce1e: 4620         	mov	r0, r4
1000ce20: 9906         	ldr	r1, [sp, #0x18]
1000ce22: 4790         	blx	r2
1000ce24: 2800         	cmp	r0, #0x0
1000ce26: d0f7         	beq	0x1000ce18 <core::fmt::Formatter::pad::h513e98eba890bd87+0x166> @ imm = #-0x12
1000ce28: e03d         	b	0x1000cea6 <core::fmt::Formatter::pad::h513e98eba890bd87+0x1f4> @ imm = #0x7a
1000ce2a: 68eb         	ldr	r3, [r5, #0xc]
1000ce2c: 4620         	mov	r0, r4
1000ce2e: 9903         	ldr	r1, [sp, #0xc]
1000ce30: 9a04         	ldr	r2, [sp, #0x10]
1000ce32: 4798         	blx	r3
1000ce34: 2800         	cmp	r0, #0x0
1000ce36: d136         	bne	0x1000cea6 <core::fmt::Formatter::pad::h513e98eba890bd87+0x1f4> @ imm = #0x6c
1000ce38: 2600         	movs	r6, #0x0
1000ce3a: 9905         	ldr	r1, [sp, #0x14]
1000ce3c: 42b1         	cmp	r1, r6
1000ce3e: d02c         	beq	0x1000ce9a <core::fmt::Formatter::pad::h513e98eba890bd87+0x1e8> @ imm = #0x58
1000ce40: 692a         	ldr	r2, [r5, #0x10]
1000ce42: 4620         	mov	r0, r4
1000ce44: 9906         	ldr	r1, [sp, #0x18]
1000ce46: 4790         	blx	r2
1000ce48: 1c76         	adds	r6, r6, #0x1
1000ce4a: 2800         	cmp	r0, #0x0
1000ce4c: d0f5         	beq	0x1000ce3a <core::fmt::Formatter::pad::h513e98eba890bd87+0x188> @ imm = #-0x16
1000ce4e: 1e70         	subs	r0, r6, #0x1
1000ce50: 9905         	ldr	r1, [sp, #0x14]
1000ce52: e023         	b	0x1000ce9c <core::fmt::Formatter::pad::h513e98eba890bd87+0x1ea> @ imm = #0x46
1000ce54: 210c         	movs	r1, #0xc
1000ce56: 4011         	ands	r1, r2
1000ce58: 9105         	str	r1, [sp, #0x14]
1000ce5a: 2100         	movs	r1, #0x0
1000ce5c: 460b         	mov	r3, r1
1000ce5e: e003         	b	0x1000ce68 <core::fmt::Formatter::pad::h513e98eba890bd87+0x1b6> @ imm = #0x6
1000ce60: 1d1b         	adds	r3, r3, #0x4
1000ce62: 9a05         	ldr	r2, [sp, #0x14]
1000ce64: 429a         	cmp	r2, r3
1000ce66: d083         	beq	0x1000cd70 <core::fmt::Formatter::pad::h513e98eba890bd87+0xbe> @ imm = #-0xfa
1000ce68: 56f4         	ldrsb	r4, [r6, r3]
1000ce6a: 2540         	movs	r5, #0x40
1000ce6c: 43ed         	mvns	r5, r5
1000ce6e: 42ac         	cmp	r4, r5
1000ce70: dd00         	ble	0x1000ce74 <core::fmt::Formatter::pad::h513e98eba890bd87+0x1c2> @ imm = #0x0
1000ce72: 1c49         	adds	r1, r1, #0x1
1000ce74: 4632         	mov	r2, r6
1000ce76: 18f4         	adds	r4, r6, r3
1000ce78: 2601         	movs	r6, #0x1
1000ce7a: 57a6         	ldrsb	r6, [r4, r6]
1000ce7c: 42ae         	cmp	r6, r5
1000ce7e: dd00         	ble	0x1000ce82 <core::fmt::Formatter::pad::h513e98eba890bd87+0x1d0> @ imm = #0x0
1000ce80: 1c49         	adds	r1, r1, #0x1
1000ce82: 2602         	movs	r6, #0x2
1000ce84: 57a6         	ldrsb	r6, [r4, r6]
1000ce86: 42ae         	cmp	r6, r5
1000ce88: dd00         	ble	0x1000ce8c <core::fmt::Formatter::pad::h513e98eba890bd87+0x1da> @ imm = #0x0
1000ce8a: 1c49         	adds	r1, r1, #0x1
1000ce8c: 4616         	mov	r6, r2
1000ce8e: 9a06         	ldr	r2, [sp, #0x18]
1000ce90: 56a4         	ldrsb	r4, [r4, r2]
1000ce92: 42ac         	cmp	r4, r5
1000ce94: dde4         	ble	0x1000ce60 <core::fmt::Formatter::pad::h513e98eba890bd87+0x1ae> @ imm = #-0x38
1000ce96: 1c49         	adds	r1, r1, #0x1
1000ce98: e7e2         	b	0x1000ce60 <core::fmt::Formatter::pad::h513e98eba890bd87+0x1ae> @ imm = #-0x3c
1000ce9a: 4608         	mov	r0, r1
1000ce9c: 4288         	cmp	r0, r1
1000ce9e: d302         	blo	0x1000cea6 <core::fmt::Formatter::pad::h513e98eba890bd87+0x1f4> @ imm = #0x4
1000cea0: 2000         	movs	r0, #0x0
1000cea2: b007         	add	sp, #0x1c
1000cea4: bdf0         	pop	{r4, r5, r6, r7, pc}
1000cea6: 2001         	movs	r0, #0x1
1000cea8: b007         	add	sp, #0x1c
1000ceaa: bdf0         	pop	{r4, r5, r6, r7, pc}

1000ceac <core::fmt::Formatter::debug_struct_field2_finish::h52a203d28ffdee01>:
1000ceac: b5b0         	push	{r4, r5, r7, lr}
1000ceae: af02         	add	r7, sp, #0x8
1000ceb0: b084         	sub	sp, #0x10
1000ceb2: 461c         	mov	r4, r3
1000ceb4: 4605         	mov	r5, r0
1000ceb6: 69c0         	ldr	r0, [r0, #0x1c]
1000ceb8: 6a2b         	ldr	r3, [r5, #0x20]
1000ceba: 68db         	ldr	r3, [r3, #0xc]
1000cebc: 4798         	blx	r3
1000cebe: 4601         	mov	r1, r0
1000cec0: a802         	add	r0, sp, #0x8
1000cec2: 2200         	movs	r2, #0x0
1000cec4: 7142         	strb	r2, [r0, #0x5]
1000cec6: 7101         	strb	r1, [r0, #0x4]
1000cec8: 9502         	str	r5, [sp, #0x8]
1000ceca: 6939         	ldr	r1, [r7, #0x10]
1000cecc: 9100         	str	r1, [sp]
1000cece: 68ba         	ldr	r2, [r7, #0x8]
1000ced0: 68fb         	ldr	r3, [r7, #0xc]
1000ced2: 4621         	mov	r1, r4
1000ced4: f7ff fc60    	bl	0x1000c798 <core::fmt::builders::DebugStruct::field::h97b122c0b0f76323> @ imm = #-0x740
1000ced8: 6a39         	ldr	r1, [r7, #0x20]
1000ceda: 9100         	str	r1, [sp]
1000cedc: 463b         	mov	r3, r7
1000cede: 3314         	adds	r3, #0x14
1000cee0: cb0e         	ldm	r3, {r1, r2, r3}
1000cee2: f7ff fc59    	bl	0x1000c798 <core::fmt::builders::DebugStruct::field::h97b122c0b0f76323> @ imm = #-0x74e
1000cee6: 7940         	ldrb	r0, [r0, #0x5]
1000cee8: 9903         	ldr	r1, [sp, #0xc]
1000ceea: 43c2         	mvns	r2, r0
1000ceec: 430a         	orrs	r2, r1
1000ceee: 07d2         	lsls	r2, r2, #0x1f
1000cef0: d001         	beq	0x1000cef6 <core::fmt::Formatter::debug_struct_field2_finish::h52a203d28ffdee01+0x4a> @ imm = #0x2
1000cef2: 4308         	orrs	r0, r1
1000cef4: e00f         	b	0x1000cf16 <core::fmt::Formatter::debug_struct_field2_finish::h52a203d28ffdee01+0x6a> @ imm = #0x1e
1000cef6: 9902         	ldr	r1, [sp, #0x8]
1000cef8: 7d08         	ldrb	r0, [r1, #0x14]
1000cefa: 0740         	lsls	r0, r0, #0x1d
1000cefc: d405         	bmi	0x1000cf0a <core::fmt::Formatter::debug_struct_field2_finish::h52a203d28ffdee01+0x5e> @ imm = #0xa
1000cefe: 69c8         	ldr	r0, [r1, #0x1c]
1000cf00: 6a09         	ldr	r1, [r1, #0x20]
1000cf02: 68cb         	ldr	r3, [r1, #0xc]
1000cf04: 4907         	ldr	r1, [pc, #0x1c]         @ 0x1000cf24 <core::fmt::Formatter::debug_struct_field2_finish::h52a203d28ffdee01+0x78>
1000cf06: 2202         	movs	r2, #0x2
1000cf08: e004         	b	0x1000cf14 <core::fmt::Formatter::debug_struct_field2_finish::h52a203d28ffdee01+0x68> @ imm = #0x8
1000cf0a: 69c8         	ldr	r0, [r1, #0x1c]
1000cf0c: 6a09         	ldr	r1, [r1, #0x20]
1000cf0e: 68cb         	ldr	r3, [r1, #0xc]
1000cf10: 4903         	ldr	r1, [pc, #0xc]          @ 0x1000cf20 <core::fmt::Formatter::debug_struct_field2_finish::h52a203d28ffdee01+0x74>
1000cf12: 2201         	movs	r2, #0x1
1000cf14: 4798         	blx	r3
1000cf16: 2101         	movs	r1, #0x1
1000cf18: 4001         	ands	r1, r0
1000cf1a: 4608         	mov	r0, r1
1000cf1c: b004         	add	sp, #0x10
1000cf1e: bdb0         	pop	{r4, r5, r7, pc}
1000cf20: 7e 27 01 10  	.word	0x1001277e
1000cf24: 7f 27 01 10  	.word	0x1001277f

1000cf28 <core::slice::index::slice_start_index_len_fail::hb969d35d0a5d5e22>:
1000cf28: b580         	push	{r7, lr}
1000cf2a: af00         	add	r7, sp, #0x0
1000cf2c: f000 fbdc    	bl	0x1000d6e8 <core::slice::index::slice_start_index_len_fail::do_panic::runtime::hc44bb91a4cf937c1> @ imm = #0x7b8

1000cf30 <core::slice::index::slice_end_index_len_fail::h7a57dff6cef359c9>:
1000cf30: b580         	push	{r7, lr}
1000cf32: af00         	add	r7, sp, #0x0
1000cf34: f000 fbf6    	bl	0x1000d724 <core::slice::index::slice_end_index_len_fail::do_panic::runtime::hbe6bdd220e1bf080> @ imm = #0x7ec

1000cf38 <core::slice::index::slice_index_order_fail::h1916bdd21c84665e>:
1000cf38: b580         	push	{r7, lr}
1000cf3a: af00         	add	r7, sp, #0x0
1000cf3c: f000 fc10    	bl	0x1000d760 <core::slice::index::slice_index_order_fail::do_panic::runtime::he15c09cd55079292> @ imm = #0x820

1000cf40 <core::str::count::do_count_chars::hd88a0ac9522caafb>:
1000cf40: b5f0         	push	{r4, r5, r6, r7, lr}
1000cf42: af03         	add	r7, sp, #0xc
1000cf44: b088         	sub	sp, #0x20
1000cf46: 4602         	mov	r2, r0
1000cf48: 1cc0         	adds	r0, r0, #0x3
1000cf4a: 2403         	movs	r4, #0x3
1000cf4c: 43a0         	bics	r0, r4
1000cf4e: 9006         	str	r0, [sp, #0x18]
1000cf50: 1a86         	subs	r6, r0, r2
1000cf52: 42b1         	cmp	r1, r6
1000cf54: 9407         	str	r4, [sp, #0x1c]
1000cf56: d20c         	bhs	0x1000cf72 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x32> @ imm = #0x18
1000cf58: 2900         	cmp	r1, #0x0
1000cf5a: d100         	bne	0x1000cf5e <core::str::count::do_count_chars::hd88a0ac9522caafb+0x1e> @ imm = #0x0
1000cf5c: e19e         	b	0x1000d29c <core::str::count::do_count_chars::hd88a0ac9522caafb+0x35c> @ imm = #0x33c
1000cf5e: 4608         	mov	r0, r1
1000cf60: 4020         	ands	r0, r4
1000cf62: 9005         	str	r0, [sp, #0x14]
1000cf64: 2904         	cmp	r1, #0x4
1000cf66: 9206         	str	r2, [sp, #0x18]
1000cf68: d300         	blo	0x1000cf6c <core::str::count::do_count_chars::hd88a0ac9522caafb+0x2c> @ imm = #0x0
1000cf6a: e19a         	b	0x1000d2a2 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x362> @ imm = #0x334
1000cf6c: 2000         	movs	r0, #0x0
1000cf6e: 4604         	mov	r4, r0
1000cf70: e1c0         	b	0x1000d2f4 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x3b4> @ imm = #0x380
1000cf72: 1b8b         	subs	r3, r1, r6
1000cf74: 0898         	lsrs	r0, r3, #0x2
1000cf76: 9003         	str	r0, [sp, #0xc]
1000cf78: d0ee         	beq	0x1000cf58 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x18> @ imm = #-0x24
1000cf7a: 9302         	str	r3, [sp, #0x8]
1000cf7c: 4618         	mov	r0, r3
1000cf7e: 4020         	ands	r0, r4
1000cf80: 9004         	str	r0, [sp, #0x10]
1000cf82: 2300         	movs	r3, #0x0
1000cf84: 9806         	ldr	r0, [sp, #0x18]
1000cf86: 4290         	cmp	r0, r2
1000cf88: 9305         	str	r3, [sp, #0x14]
1000cf8a: d01f         	beq	0x1000cfcc <core::str::count::do_count_chars::hd88a0ac9522caafb+0x8c> @ imm = #0x3e
1000cf8c: 1a11         	subs	r1, r2, r0
1000cf8e: 43e3         	mvns	r3, r4
1000cf90: 4299         	cmp	r1, r3
1000cf92: d800         	bhi	0x1000cf96 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x56> @ imm = #0x0
1000cf94: e1bf         	b	0x1000d316 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x3d6> @ imm = #0x37e
1000cf96: 2300         	movs	r3, #0x0
1000cf98: 4619         	mov	r1, r3
1000cf9a: 9806         	ldr	r0, [sp, #0x18]
1000cf9c: 4290         	cmp	r0, r2
1000cf9e: 9c07         	ldr	r4, [sp, #0x1c]
1000cfa0: d014         	beq	0x1000cfcc <core::str::count::do_count_chars::hd88a0ac9522caafb+0x8c> @ imm = #0x28
1000cfa2: 5655         	ldrsb	r5, [r2, r1]
1000cfa4: 2040         	movs	r0, #0x40
1000cfa6: 43c0         	mvns	r0, r0
1000cfa8: 4285         	cmp	r5, r0
1000cfaa: dd00         	ble	0x1000cfae <core::str::count::do_count_chars::hd88a0ac9522caafb+0x6e> @ imm = #0x0
1000cfac: 1c5b         	adds	r3, r3, #0x1
1000cfae: 2e01         	cmp	r6, #0x1
1000cfb0: d00c         	beq	0x1000cfcc <core::str::count::do_count_chars::hd88a0ac9522caafb+0x8c> @ imm = #0x18
1000cfb2: 1851         	adds	r1, r2, r1
1000cfb4: 2501         	movs	r5, #0x1
1000cfb6: 574d         	ldrsb	r5, [r1, r5]
1000cfb8: 4285         	cmp	r5, r0
1000cfba: dd00         	ble	0x1000cfbe <core::str::count::do_count_chars::hd88a0ac9522caafb+0x7e> @ imm = #0x0
1000cfbc: 1c5b         	adds	r3, r3, #0x1
1000cfbe: 2e02         	cmp	r6, #0x2
1000cfc0: d004         	beq	0x1000cfcc <core::str::count::do_count_chars::hd88a0ac9522caafb+0x8c> @ imm = #0x8
1000cfc2: 2502         	movs	r5, #0x2
1000cfc4: 5749         	ldrsb	r1, [r1, r5]
1000cfc6: 4281         	cmp	r1, r0
1000cfc8: dd00         	ble	0x1000cfcc <core::str::count::do_count_chars::hd88a0ac9522caafb+0x8c> @ imm = #0x0
1000cfca: 1c5b         	adds	r3, r3, #0x1
1000cfcc: 1991         	adds	r1, r2, r6
1000cfce: 9804         	ldr	r0, [sp, #0x10]
1000cfd0: 2800         	cmp	r0, #0x0
1000cfd2: d021         	beq	0x1000d018 <core::str::count::do_count_chars::hd88a0ac9522caafb+0xd8> @ imm = #0x42
1000cfd4: 9802         	ldr	r0, [sp, #0x8]
1000cfd6: 43a0         	bics	r0, r4
1000cfd8: 460d         	mov	r5, r1
1000cfda: 1808         	adds	r0, r1, r0
1000cfdc: 2100         	movs	r1, #0x0
1000cfde: 9105         	str	r1, [sp, #0x14]
1000cfe0: 5642         	ldrsb	r2, [r0, r1]
1000cfe2: 2140         	movs	r1, #0x40
1000cfe4: 43c9         	mvns	r1, r1
1000cfe6: 428a         	cmp	r2, r1
1000cfe8: dd01         	ble	0x1000cfee <core::str::count::do_count_chars::hd88a0ac9522caafb+0xae> @ imm = #0x2
1000cfea: 2201         	movs	r2, #0x1
1000cfec: 9205         	str	r2, [sp, #0x14]
1000cfee: 9a04         	ldr	r2, [sp, #0x10]
1000cff0: 2a01         	cmp	r2, #0x1
1000cff2: d010         	beq	0x1000d016 <core::str::count::do_count_chars::hd88a0ac9522caafb+0xd6> @ imm = #0x20
1000cff4: 2201         	movs	r2, #0x1
1000cff6: 5682         	ldrsb	r2, [r0, r2]
1000cff8: 428a         	cmp	r2, r1
1000cffa: dd02         	ble	0x1000d002 <core::str::count::do_count_chars::hd88a0ac9522caafb+0xc2> @ imm = #0x4
1000cffc: 9a05         	ldr	r2, [sp, #0x14]
1000cffe: 1c52         	adds	r2, r2, #0x1
1000d000: 9205         	str	r2, [sp, #0x14]
1000d002: 9a04         	ldr	r2, [sp, #0x10]
1000d004: 2a02         	cmp	r2, #0x2
1000d006: d006         	beq	0x1000d016 <core::str::count::do_count_chars::hd88a0ac9522caafb+0xd6> @ imm = #0xc
1000d008: 2202         	movs	r2, #0x2
1000d00a: 5680         	ldrsb	r0, [r0, r2]
1000d00c: 4288         	cmp	r0, r1
1000d00e: dd02         	ble	0x1000d016 <core::str::count::do_count_chars::hd88a0ac9522caafb+0xd6> @ imm = #0x4
1000d010: 9805         	ldr	r0, [sp, #0x14]
1000d012: 1c40         	adds	r0, r0, #0x1
1000d014: 9005         	str	r0, [sp, #0x14]
1000d016: 4629         	mov	r1, r5
1000d018: 9805         	ldr	r0, [sp, #0x14]
1000d01a: 18c0         	adds	r0, r0, r3
1000d01c: 9006         	str	r0, [sp, #0x18]
1000d01e: 48e3         	ldr	r0, [pc, #0x38c]        @ 0x1000d3ac <core::str::count::do_count_chars::hd88a0ac9522caafb+0x46c>
1000d020: 9a03         	ldr	r2, [sp, #0xc]
1000d022: e014         	b	0x1000d04e <core::str::count::do_count_chars::hd88a0ac9522caafb+0x10e> @ imm = #0x28
1000d024: 2300         	movs	r3, #0x0
1000d026: 1b12         	subs	r2, r2, r4
1000d028: 1869         	adds	r1, r5, r1
1000d02a: 9104         	str	r1, [sp, #0x10]
1000d02c: 0a19         	lsrs	r1, r3, #0x8
1000d02e: 462e         	mov	r6, r5
1000d030: 4ddd         	ldr	r5, [pc, #0x374]        @ 0x1000d3a8 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x468>
1000d032: 402b         	ands	r3, r5
1000d034: 4029         	ands	r1, r5
1000d036: 18c9         	adds	r1, r1, r3
1000d038: 4bda         	ldr	r3, [pc, #0x368]        @ 0x1000d3a4 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x464>
1000d03a: 4359         	muls	r1, r3, r1
1000d03c: 0c09         	lsrs	r1, r1, #0x10
1000d03e: 9b06         	ldr	r3, [sp, #0x18]
1000d040: 18cb         	adds	r3, r1, r3
1000d042: 9904         	ldr	r1, [sp, #0x10]
1000d044: 9306         	str	r3, [sp, #0x18]
1000d046: 9d05         	ldr	r5, [sp, #0x14]
1000d048: 2d00         	cmp	r5, #0x0
1000d04a: d000         	beq	0x1000d04e <core::str::count::do_count_chars::hd88a0ac9522caafb+0x10e> @ imm = #0x0
1000d04c: e0fe         	b	0x1000d24c <core::str::count::do_count_chars::hd88a0ac9522caafb+0x30c> @ imm = #0x1fc
1000d04e: 2a00         	cmp	r2, #0x0
1000d050: d100         	bne	0x1000d054 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x114> @ imm = #0x0
1000d052: e0f8         	b	0x1000d246 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x306> @ imm = #0x1f0
1000d054: 460d         	mov	r5, r1
1000d056: 2ac0         	cmp	r2, #0xc0
1000d058: 4614         	mov	r4, r2
1000d05a: d300         	blo	0x1000d05e <core::str::count::do_count_chars::hd88a0ac9522caafb+0x11e> @ imm = #0x0
1000d05c: 24c0         	movs	r4, #0xc0
1000d05e: 4621         	mov	r1, r4
1000d060: 9b07         	ldr	r3, [sp, #0x1c]
1000d062: 4019         	ands	r1, r3
1000d064: 9105         	str	r1, [sp, #0x14]
1000d066: 00a1         	lsls	r1, r4, #0x2
1000d068: 2a04         	cmp	r2, #0x4
1000d06a: d3db         	blo	0x1000d024 <core::str::count::do_count_chars::hd88a0ac9522caafb+0xe4> @ imm = #-0x4a
1000d06c: 9402         	str	r4, [sp, #0x8]
1000d06e: 9203         	str	r2, [sp, #0xc]
1000d070: 9101         	str	r1, [sp, #0x4]
1000d072: 3910         	subs	r1, #0x10
1000d074: 090b         	lsrs	r3, r1, #0x4
1000d076: 1c5a         	adds	r2, r3, #0x1
1000d078: 2930         	cmp	r1, #0x30
1000d07a: 9500         	str	r5, [sp]
1000d07c: 9204         	str	r2, [sp, #0x10]
1000d07e: d202         	bhs	0x1000d086 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x146> @ imm = #0x4
1000d080: 2300         	movs	r3, #0x0
1000d082: 462e         	mov	r6, r5
1000d084: e077         	b	0x1000d176 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x236> @ imm = #0xee
1000d086: 4611         	mov	r1, r2
1000d088: 9a07         	ldr	r2, [sp, #0x1c]
1000d08a: 4391         	bics	r1, r2
1000d08c: 2300         	movs	r3, #0x0
1000d08e: 462e         	mov	r6, r5
1000d090: 6872         	ldr	r2, [r6, #0x4]
1000d092: 0994         	lsrs	r4, r2, #0x6
1000d094: 43d2         	mvns	r2, r2
1000d096: 09d2         	lsrs	r2, r2, #0x7
1000d098: 4322         	orrs	r2, r4
1000d09a: 4002         	ands	r2, r0
1000d09c: 6834         	ldr	r4, [r6]
1000d09e: 09a5         	lsrs	r5, r4, #0x6
1000d0a0: 43e4         	mvns	r4, r4
1000d0a2: 09e4         	lsrs	r4, r4, #0x7
1000d0a4: 432c         	orrs	r4, r5
1000d0a6: 4004         	ands	r4, r0
1000d0a8: 18e3         	adds	r3, r4, r3
1000d0aa: 18d2         	adds	r2, r2, r3
1000d0ac: 68b3         	ldr	r3, [r6, #0x8]
1000d0ae: 099c         	lsrs	r4, r3, #0x6
1000d0b0: 43db         	mvns	r3, r3
1000d0b2: 09db         	lsrs	r3, r3, #0x7
1000d0b4: 4323         	orrs	r3, r4
1000d0b6: 4003         	ands	r3, r0
1000d0b8: 189a         	adds	r2, r3, r2
1000d0ba: 68f3         	ldr	r3, [r6, #0xc]
1000d0bc: 099c         	lsrs	r4, r3, #0x6
1000d0be: 43db         	mvns	r3, r3
1000d0c0: 09db         	lsrs	r3, r3, #0x7
1000d0c2: 4323         	orrs	r3, r4
1000d0c4: 4003         	ands	r3, r0
1000d0c6: 189a         	adds	r2, r3, r2
1000d0c8: 6933         	ldr	r3, [r6, #0x10]
1000d0ca: 099c         	lsrs	r4, r3, #0x6
1000d0cc: 43db         	mvns	r3, r3
1000d0ce: 09db         	lsrs	r3, r3, #0x7
1000d0d0: 4323         	orrs	r3, r4
1000d0d2: 4003         	ands	r3, r0
1000d0d4: 189a         	adds	r2, r3, r2
1000d0d6: 6973         	ldr	r3, [r6, #0x14]
1000d0d8: 099c         	lsrs	r4, r3, #0x6
1000d0da: 43db         	mvns	r3, r3
1000d0dc: 09db         	lsrs	r3, r3, #0x7
1000d0de: 4323         	orrs	r3, r4
1000d0e0: 4003         	ands	r3, r0
1000d0e2: 189a         	adds	r2, r3, r2
1000d0e4: 69b3         	ldr	r3, [r6, #0x18]
1000d0e6: 099c         	lsrs	r4, r3, #0x6
1000d0e8: 43db         	mvns	r3, r3
1000d0ea: 09db         	lsrs	r3, r3, #0x7
1000d0ec: 4323         	orrs	r3, r4
1000d0ee: 4003         	ands	r3, r0
1000d0f0: 189a         	adds	r2, r3, r2
1000d0f2: 69f3         	ldr	r3, [r6, #0x1c]
1000d0f4: 099c         	lsrs	r4, r3, #0x6
1000d0f6: 43db         	mvns	r3, r3
1000d0f8: 09db         	lsrs	r3, r3, #0x7
1000d0fa: 4323         	orrs	r3, r4
1000d0fc: 4003         	ands	r3, r0
1000d0fe: 189a         	adds	r2, r3, r2
1000d100: 6a33         	ldr	r3, [r6, #0x20]
1000d102: 099c         	lsrs	r4, r3, #0x6
1000d104: 43db         	mvns	r3, r3
1000d106: 09db         	lsrs	r3, r3, #0x7
1000d108: 4323         	orrs	r3, r4
1000d10a: 4003         	ands	r3, r0
1000d10c: 189a         	adds	r2, r3, r2
1000d10e: 6a73         	ldr	r3, [r6, #0x24]
1000d110: 099c         	lsrs	r4, r3, #0x6
1000d112: 43db         	mvns	r3, r3
1000d114: 09db         	lsrs	r3, r3, #0x7
1000d116: 4323         	orrs	r3, r4
1000d118: 4003         	ands	r3, r0
1000d11a: 189a         	adds	r2, r3, r2
1000d11c: 6ab3         	ldr	r3, [r6, #0x28]
1000d11e: 099c         	lsrs	r4, r3, #0x6
1000d120: 43db         	mvns	r3, r3
1000d122: 09db         	lsrs	r3, r3, #0x7
1000d124: 4323         	orrs	r3, r4
1000d126: 4003         	ands	r3, r0
1000d128: 189a         	adds	r2, r3, r2
1000d12a: 6af3         	ldr	r3, [r6, #0x2c]
1000d12c: 099c         	lsrs	r4, r3, #0x6
1000d12e: 43db         	mvns	r3, r3
1000d130: 09db         	lsrs	r3, r3, #0x7
1000d132: 4323         	orrs	r3, r4
1000d134: 4003         	ands	r3, r0
1000d136: 189a         	adds	r2, r3, r2
1000d138: 6b33         	ldr	r3, [r6, #0x30]
1000d13a: 099c         	lsrs	r4, r3, #0x6
1000d13c: 43db         	mvns	r3, r3
1000d13e: 09db         	lsrs	r3, r3, #0x7
1000d140: 4323         	orrs	r3, r4
1000d142: 4003         	ands	r3, r0
1000d144: 189a         	adds	r2, r3, r2
1000d146: 6b73         	ldr	r3, [r6, #0x34]
1000d148: 099c         	lsrs	r4, r3, #0x6
1000d14a: 43db         	mvns	r3, r3
1000d14c: 09db         	lsrs	r3, r3, #0x7
1000d14e: 4323         	orrs	r3, r4
1000d150: 4003         	ands	r3, r0
1000d152: 189a         	adds	r2, r3, r2
1000d154: 6bb3         	ldr	r3, [r6, #0x38]
1000d156: 099c         	lsrs	r4, r3, #0x6
1000d158: 43db         	mvns	r3, r3
1000d15a: 09db         	lsrs	r3, r3, #0x7
1000d15c: 4323         	orrs	r3, r4
1000d15e: 4003         	ands	r3, r0
1000d160: 189a         	adds	r2, r3, r2
1000d162: 6bf3         	ldr	r3, [r6, #0x3c]
1000d164: 099c         	lsrs	r4, r3, #0x6
1000d166: 43db         	mvns	r3, r3
1000d168: 09db         	lsrs	r3, r3, #0x7
1000d16a: 4323         	orrs	r3, r4
1000d16c: 4003         	ands	r3, r0
1000d16e: 189b         	adds	r3, r3, r2
1000d170: 3640         	adds	r6, #0x40
1000d172: 1f09         	subs	r1, r1, #0x4
1000d174: d18c         	bne	0x1000d090 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x150> @ imm = #-0xe8
1000d176: 9907         	ldr	r1, [sp, #0x1c]
1000d178: 9a04         	ldr	r2, [sp, #0x10]
1000d17a: 400a         	ands	r2, r1
1000d17c: 9204         	str	r2, [sp, #0x10]
1000d17e: 9a03         	ldr	r2, [sp, #0xc]
1000d180: 9d00         	ldr	r5, [sp]
1000d182: 9c02         	ldr	r4, [sp, #0x8]
1000d184: 9901         	ldr	r1, [sp, #0x4]
1000d186: d100         	bne	0x1000d18a <core::str::count::do_count_chars::hd88a0ac9522caafb+0x24a> @ imm = #0x0
1000d188: e74d         	b	0x1000d026 <core::str::count::do_count_chars::hd88a0ac9522caafb+0xe6> @ imm = #-0x166
1000d18a: 6871         	ldr	r1, [r6, #0x4]
1000d18c: 098a         	lsrs	r2, r1, #0x6
1000d18e: 43c9         	mvns	r1, r1
1000d190: 09c9         	lsrs	r1, r1, #0x7
1000d192: 4311         	orrs	r1, r2
1000d194: 4001         	ands	r1, r0
1000d196: 6832         	ldr	r2, [r6]
1000d198: 0994         	lsrs	r4, r2, #0x6
1000d19a: 43d2         	mvns	r2, r2
1000d19c: 09d2         	lsrs	r2, r2, #0x7
1000d19e: 4322         	orrs	r2, r4
1000d1a0: 4002         	ands	r2, r0
1000d1a2: 18d2         	adds	r2, r2, r3
1000d1a4: 1889         	adds	r1, r1, r2
1000d1a6: 68b2         	ldr	r2, [r6, #0x8]
1000d1a8: 0993         	lsrs	r3, r2, #0x6
1000d1aa: 43d2         	mvns	r2, r2
1000d1ac: 09d2         	lsrs	r2, r2, #0x7
1000d1ae: 431a         	orrs	r2, r3
1000d1b0: 4002         	ands	r2, r0
1000d1b2: 1851         	adds	r1, r2, r1
1000d1b4: 68f2         	ldr	r2, [r6, #0xc]
1000d1b6: 0993         	lsrs	r3, r2, #0x6
1000d1b8: 43d2         	mvns	r2, r2
1000d1ba: 09d2         	lsrs	r2, r2, #0x7
1000d1bc: 431a         	orrs	r2, r3
1000d1be: 4002         	ands	r2, r0
1000d1c0: 1853         	adds	r3, r2, r1
1000d1c2: 9a04         	ldr	r2, [sp, #0x10]
1000d1c4: 2a01         	cmp	r2, #0x1
1000d1c6: d03a         	beq	0x1000d23e <core::str::count::do_count_chars::hd88a0ac9522caafb+0x2fe> @ imm = #0x74
1000d1c8: 6971         	ldr	r1, [r6, #0x14]
1000d1ca: 098a         	lsrs	r2, r1, #0x6
1000d1cc: 43c9         	mvns	r1, r1
1000d1ce: 09c9         	lsrs	r1, r1, #0x7
1000d1d0: 4311         	orrs	r1, r2
1000d1d2: 4001         	ands	r1, r0
1000d1d4: 6932         	ldr	r2, [r6, #0x10]
1000d1d6: 0994         	lsrs	r4, r2, #0x6
1000d1d8: 43d2         	mvns	r2, r2
1000d1da: 09d2         	lsrs	r2, r2, #0x7
1000d1dc: 4322         	orrs	r2, r4
1000d1de: 4002         	ands	r2, r0
1000d1e0: 18d2         	adds	r2, r2, r3
1000d1e2: 1889         	adds	r1, r1, r2
1000d1e4: 69b2         	ldr	r2, [r6, #0x18]
1000d1e6: 0993         	lsrs	r3, r2, #0x6
1000d1e8: 43d2         	mvns	r2, r2
1000d1ea: 09d2         	lsrs	r2, r2, #0x7
1000d1ec: 431a         	orrs	r2, r3
1000d1ee: 4002         	ands	r2, r0
1000d1f0: 1851         	adds	r1, r2, r1
1000d1f2: 69f2         	ldr	r2, [r6, #0x1c]
1000d1f4: 0993         	lsrs	r3, r2, #0x6
1000d1f6: 43d2         	mvns	r2, r2
1000d1f8: 09d2         	lsrs	r2, r2, #0x7
1000d1fa: 431a         	orrs	r2, r3
1000d1fc: 4002         	ands	r2, r0
1000d1fe: 1853         	adds	r3, r2, r1
1000d200: 9904         	ldr	r1, [sp, #0x10]
1000d202: 2902         	cmp	r1, #0x2
1000d204: d01b         	beq	0x1000d23e <core::str::count::do_count_chars::hd88a0ac9522caafb+0x2fe> @ imm = #0x36
1000d206: 6a71         	ldr	r1, [r6, #0x24]
1000d208: 098a         	lsrs	r2, r1, #0x6
1000d20a: 43c9         	mvns	r1, r1
1000d20c: 09c9         	lsrs	r1, r1, #0x7
1000d20e: 4311         	orrs	r1, r2
1000d210: 4001         	ands	r1, r0
1000d212: 6a32         	ldr	r2, [r6, #0x20]
1000d214: 0994         	lsrs	r4, r2, #0x6
1000d216: 43d2         	mvns	r2, r2
1000d218: 09d2         	lsrs	r2, r2, #0x7
1000d21a: 4322         	orrs	r2, r4
1000d21c: 4002         	ands	r2, r0
1000d21e: 18d2         	adds	r2, r2, r3
1000d220: 1889         	adds	r1, r1, r2
1000d222: 6ab2         	ldr	r2, [r6, #0x28]
1000d224: 0993         	lsrs	r3, r2, #0x6
1000d226: 43d2         	mvns	r2, r2
1000d228: 09d2         	lsrs	r2, r2, #0x7
1000d22a: 431a         	orrs	r2, r3
1000d22c: 4002         	ands	r2, r0
1000d22e: 1851         	adds	r1, r2, r1
1000d230: 6af2         	ldr	r2, [r6, #0x2c]
1000d232: 0993         	lsrs	r3, r2, #0x6
1000d234: 43d2         	mvns	r2, r2
1000d236: 09d2         	lsrs	r2, r2, #0x7
1000d238: 431a         	orrs	r2, r3
1000d23a: 4002         	ands	r2, r0
1000d23c: 1853         	adds	r3, r2, r1
1000d23e: 9a03         	ldr	r2, [sp, #0xc]
1000d240: 9c02         	ldr	r4, [sp, #0x8]
1000d242: 9901         	ldr	r1, [sp, #0x4]
1000d244: e6ef         	b	0x1000d026 <core::str::count::do_count_chars::hd88a0ac9522caafb+0xe6> @ imm = #-0x222
1000d246: 9806         	ldr	r0, [sp, #0x18]
1000d248: b008         	add	sp, #0x20
1000d24a: bdf0         	pop	{r4, r5, r6, r7, pc}
1000d24c: 21fc         	movs	r1, #0xfc
1000d24e: 400c         	ands	r4, r1
1000d250: 00a2         	lsls	r2, r4, #0x2
1000d252: 58b1         	ldr	r1, [r6, r2]
1000d254: 098b         	lsrs	r3, r1, #0x6
1000d256: 43c9         	mvns	r1, r1
1000d258: 09c9         	lsrs	r1, r1, #0x7
1000d25a: 4319         	orrs	r1, r3
1000d25c: 4001         	ands	r1, r0
1000d25e: 2d01         	cmp	r5, #0x1
1000d260: d010         	beq	0x1000d284 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x344> @ imm = #0x20
1000d262: 18b2         	adds	r2, r6, r2
1000d264: 6853         	ldr	r3, [r2, #0x4]
1000d266: 099c         	lsrs	r4, r3, #0x6
1000d268: 43db         	mvns	r3, r3
1000d26a: 09db         	lsrs	r3, r3, #0x7
1000d26c: 4323         	orrs	r3, r4
1000d26e: 4003         	ands	r3, r0
1000d270: 1859         	adds	r1, r3, r1
1000d272: 2d02         	cmp	r5, #0x2
1000d274: d006         	beq	0x1000d284 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x344> @ imm = #0xc
1000d276: 6892         	ldr	r2, [r2, #0x8]
1000d278: 0993         	lsrs	r3, r2, #0x6
1000d27a: 43d2         	mvns	r2, r2
1000d27c: 09d2         	lsrs	r2, r2, #0x7
1000d27e: 431a         	orrs	r2, r3
1000d280: 4002         	ands	r2, r0
1000d282: 1851         	adds	r1, r2, r1
1000d284: 0a08         	lsrs	r0, r1, #0x8
1000d286: 4a48         	ldr	r2, [pc, #0x120]        @ 0x1000d3a8 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x468>
1000d288: 4011         	ands	r1, r2
1000d28a: 4010         	ands	r0, r2
1000d28c: 1840         	adds	r0, r0, r1
1000d28e: 4945         	ldr	r1, [pc, #0x114]        @ 0x1000d3a4 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x464>
1000d290: 4341         	muls	r1, r0, r1
1000d292: 0c08         	lsrs	r0, r1, #0x10
1000d294: 9906         	ldr	r1, [sp, #0x18]
1000d296: 1840         	adds	r0, r0, r1
1000d298: b008         	add	sp, #0x20
1000d29a: bdf0         	pop	{r4, r5, r6, r7, pc}
1000d29c: 2000         	movs	r0, #0x0
1000d29e: b008         	add	sp, #0x20
1000d2a0: bdf0         	pop	{r4, r5, r6, r7, pc}
1000d2a2: 43a1         	bics	r1, r4
1000d2a4: 2000         	movs	r0, #0x0
1000d2a6: 4604         	mov	r4, r0
1000d2a8: e004         	b	0x1000d2b4 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x374> @ imm = #0x8
1000d2aa: 4610         	mov	r0, r2
1000d2ac: 1d24         	adds	r4, r4, #0x4
1000d2ae: 42a1         	cmp	r1, r4
1000d2b0: 9a06         	ldr	r2, [sp, #0x18]
1000d2b2: d01f         	beq	0x1000d2f4 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x3b4> @ imm = #0x3e
1000d2b4: 5716         	ldrsb	r6, [r2, r4]
1000d2b6: 2540         	movs	r5, #0x40
1000d2b8: 43ed         	mvns	r5, r5
1000d2ba: 42ae         	cmp	r6, r5
1000d2bc: dd00         	ble	0x1000d2c0 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x380> @ imm = #0x0
1000d2be: 1c40         	adds	r0, r0, #0x1
1000d2c0: 1916         	adds	r6, r2, r4
1000d2c2: 2301         	movs	r3, #0x1
1000d2c4: 56f3         	ldrsb	r3, [r6, r3]
1000d2c6: 42ab         	cmp	r3, r5
1000d2c8: dd00         	ble	0x1000d2cc <core::str::count::do_count_chars::hd88a0ac9522caafb+0x38c> @ imm = #0x0
1000d2ca: 1c40         	adds	r0, r0, #0x1
1000d2cc: 2302         	movs	r3, #0x2
1000d2ce: 56f3         	ldrsb	r3, [r6, r3]
1000d2d0: 42ab         	cmp	r3, r5
1000d2d2: dc05         	bgt	0x1000d2e0 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x3a0> @ imm = #0xa
1000d2d4: 4602         	mov	r2, r0
1000d2d6: 9807         	ldr	r0, [sp, #0x1c]
1000d2d8: 5633         	ldrsb	r3, [r6, r0]
1000d2da: 42ab         	cmp	r3, r5
1000d2dc: dde5         	ble	0x1000d2aa <core::str::count::do_count_chars::hd88a0ac9522caafb+0x36a> @ imm = #-0x36
1000d2de: e004         	b	0x1000d2ea <core::str::count::do_count_chars::hd88a0ac9522caafb+0x3aa> @ imm = #0x8
1000d2e0: 1c42         	adds	r2, r0, #0x1
1000d2e2: 9807         	ldr	r0, [sp, #0x1c]
1000d2e4: 5633         	ldrsb	r3, [r6, r0]
1000d2e6: 42ab         	cmp	r3, r5
1000d2e8: dddf         	ble	0x1000d2aa <core::str::count::do_count_chars::hd88a0ac9522caafb+0x36a> @ imm = #-0x42
1000d2ea: 1c50         	adds	r0, r2, #0x1
1000d2ec: 1d24         	adds	r4, r4, #0x4
1000d2ee: 42a1         	cmp	r1, r4
1000d2f0: 9a06         	ldr	r2, [sp, #0x18]
1000d2f2: d1df         	bne	0x1000d2b4 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x374> @ imm = #-0x42
1000d2f4: 9905         	ldr	r1, [sp, #0x14]
1000d2f6: 2900         	cmp	r1, #0x0
1000d2f8: d00b         	beq	0x1000d312 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x3d2> @ imm = #0x16
1000d2fa: 4611         	mov	r1, r2
1000d2fc: 4602         	mov	r2, r0
1000d2fe: 5708         	ldrsb	r0, [r1, r4]
1000d300: 2140         	movs	r1, #0x40
1000d302: 43c9         	mvns	r1, r1
1000d304: 4288         	cmp	r0, r1
1000d306: dc2e         	bgt	0x1000d366 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x426> @ imm = #0x5c
1000d308: 4610         	mov	r0, r2
1000d30a: 9a05         	ldr	r2, [sp, #0x14]
1000d30c: 2a01         	cmp	r2, #0x1
1000d30e: 9a06         	ldr	r2, [sp, #0x18]
1000d310: d12e         	bne	0x1000d370 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x430> @ imm = #0x5c
1000d312: b008         	add	sp, #0x20
1000d314: bdf0         	pop	{r4, r5, r6, r7, pc}
1000d316: 2300         	movs	r3, #0x0
1000d318: 4619         	mov	r1, r3
1000d31a: e003         	b	0x1000d324 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x3e4> @ imm = #0x6
1000d31c: 4626         	mov	r6, r4
1000d31e: 1d09         	adds	r1, r1, #0x4
1000d320: d100         	bne	0x1000d324 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x3e4> @ imm = #0x0
1000d322: e63a         	b	0x1000cf9a <core::str::count::do_count_chars::hd88a0ac9522caafb+0x5a> @ imm = #-0x38c
1000d324: 4634         	mov	r4, r6
1000d326: 5656         	ldrsb	r6, [r2, r1]
1000d328: 2540         	movs	r5, #0x40
1000d32a: 43ed         	mvns	r5, r5
1000d32c: 42ae         	cmp	r6, r5
1000d32e: dd00         	ble	0x1000d332 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x3f2> @ imm = #0x0
1000d330: 1c5b         	adds	r3, r3, #0x1
1000d332: 1856         	adds	r6, r2, r1
1000d334: 2001         	movs	r0, #0x1
1000d336: 5630         	ldrsb	r0, [r6, r0]
1000d338: 42a8         	cmp	r0, r5
1000d33a: dc08         	bgt	0x1000d34e <core::str::count::do_count_chars::hd88a0ac9522caafb+0x40e> @ imm = #0x10
1000d33c: 2002         	movs	r0, #0x2
1000d33e: 5630         	ldrsb	r0, [r6, r0]
1000d340: 42a8         	cmp	r0, r5
1000d342: dc09         	bgt	0x1000d358 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x418> @ imm = #0x12
1000d344: 9807         	ldr	r0, [sp, #0x1c]
1000d346: 5630         	ldrsb	r0, [r6, r0]
1000d348: 42a8         	cmp	r0, r5
1000d34a: dde7         	ble	0x1000d31c <core::str::count::do_count_chars::hd88a0ac9522caafb+0x3dc> @ imm = #-0x32
1000d34c: e009         	b	0x1000d362 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x422> @ imm = #0x12
1000d34e: 1c5b         	adds	r3, r3, #0x1
1000d350: 2002         	movs	r0, #0x2
1000d352: 5630         	ldrsb	r0, [r6, r0]
1000d354: 42a8         	cmp	r0, r5
1000d356: ddf5         	ble	0x1000d344 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x404> @ imm = #-0x16
1000d358: 1c5b         	adds	r3, r3, #0x1
1000d35a: 9807         	ldr	r0, [sp, #0x1c]
1000d35c: 5630         	ldrsb	r0, [r6, r0]
1000d35e: 42a8         	cmp	r0, r5
1000d360: dddc         	ble	0x1000d31c <core::str::count::do_count_chars::hd88a0ac9522caafb+0x3dc> @ imm = #-0x48
1000d362: 1c5b         	adds	r3, r3, #0x1
1000d364: e7da         	b	0x1000d31c <core::str::count::do_count_chars::hd88a0ac9522caafb+0x3dc> @ imm = #-0x4c
1000d366: 1c50         	adds	r0, r2, #0x1
1000d368: 9a05         	ldr	r2, [sp, #0x14]
1000d36a: 2a01         	cmp	r2, #0x1
1000d36c: 9a06         	ldr	r2, [sp, #0x18]
1000d36e: d0d0         	beq	0x1000d312 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x3d2> @ imm = #-0x60
1000d370: 4603         	mov	r3, r0
1000d372: 1912         	adds	r2, r2, r4
1000d374: 2001         	movs	r0, #0x1
1000d376: 5610         	ldrsb	r0, [r2, r0]
1000d378: 4288         	cmp	r0, r1
1000d37a: dc04         	bgt	0x1000d386 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x446> @ imm = #0x8
1000d37c: 4618         	mov	r0, r3
1000d37e: 9b05         	ldr	r3, [sp, #0x14]
1000d380: 2b02         	cmp	r3, #0x2
1000d382: d0c6         	beq	0x1000d312 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x3d2> @ imm = #-0x74
1000d384: e003         	b	0x1000d38e <core::str::count::do_count_chars::hd88a0ac9522caafb+0x44e> @ imm = #0x6
1000d386: 1c58         	adds	r0, r3, #0x1
1000d388: 9b05         	ldr	r3, [sp, #0x14]
1000d38a: 2b02         	cmp	r3, #0x2
1000d38c: d0c1         	beq	0x1000d312 <core::str::count::do_count_chars::hd88a0ac9522caafb+0x3d2> @ imm = #-0x7e
1000d38e: 4603         	mov	r3, r0
1000d390: 2002         	movs	r0, #0x2
1000d392: 5610         	ldrsb	r0, [r2, r0]
1000d394: 4288         	cmp	r0, r1
1000d396: dc02         	bgt	0x1000d39e <core::str::count::do_count_chars::hd88a0ac9522caafb+0x45e> @ imm = #0x4
1000d398: 4618         	mov	r0, r3
1000d39a: b008         	add	sp, #0x20
1000d39c: bdf0         	pop	{r4, r5, r6, r7, pc}
1000d39e: 1c58         	adds	r0, r3, #0x1
1000d3a0: b008         	add	sp, #0x20
1000d3a2: bdf0         	pop	{r4, r5, r6, r7, pc}
1000d3a4: 01 00 01 00  	.word	0x00010001
1000d3a8: ff 00 ff 00  	.word	0x00ff00ff
1000d3ac: 01 01 01 01  	.word	0x01010101

1000d3b0 <core::char::methods::encode_utf8_raw::do_panic::runtime::h924ba3dcc7dd7cd5>:
1000d3b0: b580         	push	{r7, lr}
1000d3b2: af00         	add	r7, sp, #0x0
1000d3b4: b0a8         	sub	sp, #0xa0
1000d3b6: ac01         	add	r4, sp, #0x4
1000d3b8: c407         	stm	r4!, {r0, r1, r2}
1000d3ba: 481a         	ldr	r0, [pc, #0x68]         @ 0x1000d424 <core::char::methods::encode_utf8_raw::do_panic::runtime::h924ba3dcc7dd7cd5+0x74>
1000d3bc: 900f         	str	r0, [sp, #0x3c]
1000d3be: a903         	add	r1, sp, #0xc
1000d3c0: 910e         	str	r1, [sp, #0x38]
1000d3c2: 4919         	ldr	r1, [pc, #0x64]         @ 0x1000d428 <core::char::methods::encode_utf8_raw::do_panic::runtime::h924ba3dcc7dd7cd5+0x78>
1000d3c4: 910d         	str	r1, [sp, #0x34]
1000d3c6: a901         	add	r1, sp, #0x4
1000d3c8: 910c         	str	r1, [sp, #0x30]
1000d3ca: 900b         	str	r0, [sp, #0x2c]
1000d3cc: a802         	add	r0, sp, #0x8
1000d3ce: 900a         	str	r0, [sp, #0x28]
1000d3d0: 225c         	movs	r2, #0x5c
1000d3d2: a910         	add	r1, sp, #0x40
1000d3d4: 2003         	movs	r0, #0x3
1000d3d6: 5488         	strb	r0, [r1, r2]
1000d3d8: 223c         	movs	r2, #0x3c
1000d3da: 5488         	strb	r0, [r1, r2]
1000d3dc: 7708         	strb	r0, [r1, #0x1c]
1000d3de: 2400         	movs	r4, #0x0
1000d3e0: 9426         	str	r4, [sp, #0x98]
1000d3e2: 2202         	movs	r2, #0x2
1000d3e4: 9225         	str	r2, [sp, #0x94]
1000d3e6: 2520         	movs	r5, #0x20
1000d3e8: 9524         	str	r5, [sp, #0x90]
1000d3ea: 9222         	str	r2, [sp, #0x88]
1000d3ec: 9220         	str	r2, [sp, #0x80]
1000d3ee: 2608         	movs	r6, #0x8
1000d3f0: 961e         	str	r6, [sp, #0x78]
1000d3f2: 2601         	movs	r6, #0x1
1000d3f4: 961d         	str	r6, [sp, #0x74]
1000d3f6: 951c         	str	r5, [sp, #0x70]
1000d3f8: 2604         	movs	r6, #0x4
1000d3fa: 961b         	str	r6, [sp, #0x6c]
1000d3fc: 941a         	str	r4, [sp, #0x68]
1000d3fe: 9218         	str	r2, [sp, #0x60]
1000d400: 9416         	str	r4, [sp, #0x58]
1000d402: 9415         	str	r4, [sp, #0x54]
1000d404: 9514         	str	r5, [sp, #0x50]
1000d406: 9212         	str	r2, [sp, #0x48]
1000d408: 9210         	str	r2, [sp, #0x40]
1000d40a: 9009         	str	r0, [sp, #0x24]
1000d40c: 9108         	str	r1, [sp, #0x20]
1000d40e: 9005         	str	r0, [sp, #0x14]
1000d410: 4906         	ldr	r1, [pc, #0x18]         @ 0x1000d42c <core::char::methods::encode_utf8_raw::do_panic::runtime::h924ba3dcc7dd7cd5+0x7c>
1000d412: 9104         	str	r1, [sp, #0x10]
1000d414: a90a         	add	r1, sp, #0x28
1000d416: 9106         	str	r1, [sp, #0x18]
1000d418: 9007         	str	r0, [sp, #0x1c]
1000d41a: a804         	add	r0, sp, #0x10
1000d41c: 4619         	mov	r1, r3
1000d41e: f7fe ffad    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #-0x10a6
1000d422: 46c0         	mov	r8, r8
1000d424: bd d5 00 10  	.word	0x1000d5bd
1000d428: 51 d5 00 10  	.word	0x1000d551
1000d42c: 88 28 01 10  	.word	0x10012888

1000d430 <core::panicking::panic_const::panic_const_add_overflow::h73b6e802431fc142>:
1000d430: b580         	push	{r7, lr}
1000d432: af00         	add	r7, sp, #0x0
1000d434: b086         	sub	sp, #0x18
1000d436: 4601         	mov	r1, r0
1000d438: 2000         	movs	r0, #0x0
1000d43a: 9004         	str	r0, [sp, #0x10]
1000d43c: 2201         	movs	r2, #0x1
1000d43e: 9201         	str	r2, [sp, #0x4]
1000d440: 4a03         	ldr	r2, [pc, #0xc]          @ 0x1000d450 <core::panicking::panic_const::panic_const_add_overflow::h73b6e802431fc142+0x20>
1000d442: 9200         	str	r2, [sp]
1000d444: 9003         	str	r0, [sp, #0xc]
1000d446: 2004         	movs	r0, #0x4
1000d448: 9002         	str	r0, [sp, #0x8]
1000d44a: 4668         	mov	r0, sp
1000d44c: f7fe ff96    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #-0x10d4
1000d450: a4 25 01 10  	.word	0x100125a4

1000d454 <core::panicking::panic_const::panic_const_sub_overflow::hcef9c8e46a564551>:
1000d454: b580         	push	{r7, lr}
1000d456: af00         	add	r7, sp, #0x0
1000d458: b086         	sub	sp, #0x18
1000d45a: 4601         	mov	r1, r0
1000d45c: 2000         	movs	r0, #0x0
1000d45e: 9004         	str	r0, [sp, #0x10]
1000d460: 2201         	movs	r2, #0x1
1000d462: 9201         	str	r2, [sp, #0x4]
1000d464: 4a03         	ldr	r2, [pc, #0xc]          @ 0x1000d474 <core::panicking::panic_const::panic_const_sub_overflow::hcef9c8e46a564551+0x20>
1000d466: 9200         	str	r2, [sp]
1000d468: 9003         	str	r0, [sp, #0xc]
1000d46a: 2004         	movs	r0, #0x4
1000d46c: 9002         	str	r0, [sp, #0x8]
1000d46e: 4668         	mov	r0, sp
1000d470: f7fe ff84    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #-0x10f8
1000d474: d0 25 01 10  	.word	0x100125d0

1000d478 <core::panicking::panic_const::panic_const_mul_overflow::hdb56fe2dcc791345>:
1000d478: b580         	push	{r7, lr}
1000d47a: af00         	add	r7, sp, #0x0
1000d47c: b086         	sub	sp, #0x18
1000d47e: 4601         	mov	r1, r0
1000d480: 2000         	movs	r0, #0x0
1000d482: 9004         	str	r0, [sp, #0x10]
1000d484: 2201         	movs	r2, #0x1
1000d486: 9201         	str	r2, [sp, #0x4]
1000d488: 4a03         	ldr	r2, [pc, #0xc]          @ 0x1000d498 <core::panicking::panic_const::panic_const_mul_overflow::hdb56fe2dcc791345+0x20>
1000d48a: 9200         	str	r2, [sp]
1000d48c: 9003         	str	r0, [sp, #0xc]
1000d48e: 2004         	movs	r0, #0x4
1000d490: 9002         	str	r0, [sp, #0x8]
1000d492: 4668         	mov	r0, sp
1000d494: f7fe ff72    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #-0x111c
1000d498: fc 25 01 10  	.word	0x100125fc

1000d49c <core::panicking::panic_const::panic_const_shl_overflow::h42afea46a5d11e4a>:
1000d49c: b580         	push	{r7, lr}
1000d49e: af00         	add	r7, sp, #0x0
1000d4a0: b086         	sub	sp, #0x18
1000d4a2: 4601         	mov	r1, r0
1000d4a4: 2000         	movs	r0, #0x0
1000d4a6: 9004         	str	r0, [sp, #0x10]
1000d4a8: 2201         	movs	r2, #0x1
1000d4aa: 9201         	str	r2, [sp, #0x4]
1000d4ac: 4a03         	ldr	r2, [pc, #0xc]          @ 0x1000d4bc <core::panicking::panic_const::panic_const_shl_overflow::h42afea46a5d11e4a+0x20>
1000d4ae: 9200         	str	r2, [sp]
1000d4b0: 9003         	str	r0, [sp, #0xc]
1000d4b2: 2004         	movs	r0, #0x4
1000d4b4: 9002         	str	r0, [sp, #0x8]
1000d4b6: 4668         	mov	r0, sp
1000d4b8: f7fe ff60    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #-0x1140
1000d4bc: 28 26 01 10  	.word	0x10012628

1000d4c0 <core::panicking::panic_const::panic_const_div_by_zero::ha09f740279da4cf0>:
1000d4c0: b580         	push	{r7, lr}
1000d4c2: af00         	add	r7, sp, #0x0
1000d4c4: b086         	sub	sp, #0x18
1000d4c6: 4601         	mov	r1, r0
1000d4c8: 2000         	movs	r0, #0x0
1000d4ca: 9004         	str	r0, [sp, #0x10]
1000d4cc: 2201         	movs	r2, #0x1
1000d4ce: 9201         	str	r2, [sp, #0x4]
1000d4d0: 4a03         	ldr	r2, [pc, #0xc]          @ 0x1000d4e0 <core::panicking::panic_const::panic_const_div_by_zero::ha09f740279da4cf0+0x20>
1000d4d2: 9200         	str	r2, [sp]
1000d4d4: 9003         	str	r0, [sp, #0xc]
1000d4d6: 2004         	movs	r0, #0x4
1000d4d8: 9002         	str	r0, [sp, #0x8]
1000d4da: 4668         	mov	r0, sp
1000d4dc: f7fe ff4e    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #-0x1164
1000d4e0: bc 28 01 10  	.word	0x100128bc

1000d4e4 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hb92c8b48db2d2494>:
1000d4e4: b5b0         	push	{r4, r5, r7, lr}
1000d4e6: af02         	add	r7, sp, #0x8
1000d4e8: b0a2         	sub	sp, #0x88
1000d4ea: 460c         	mov	r4, r1
1000d4ec: 6801         	ldr	r1, [r0]
1000d4ee: 2081         	movs	r0, #0x81
1000d4f0: e007         	b	0x1000d502 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hb92c8b48db2d2494+0x1e> @ imm = #0xe
1000d4f2: 3357         	adds	r3, #0x57
1000d4f4: aa02         	add	r2, sp, #0x8
1000d4f6: 1812         	adds	r2, r2, r0
1000d4f8: 1ed2         	subs	r2, r2, #0x3
1000d4fa: 7013         	strb	r3, [r2]
1000d4fc: 1e80         	subs	r0, r0, #0x2
1000d4fe: 0a09         	lsrs	r1, r1, #0x8
1000d500: d015         	beq	0x1000d52e <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hb92c8b48db2d2494+0x4a> @ imm = #0x2a
1000d502: 220f         	movs	r2, #0xf
1000d504: 460b         	mov	r3, r1
1000d506: 4013         	ands	r3, r2
1000d508: 2b0a         	cmp	r3, #0xa
1000d50a: d301         	blo	0x1000d510 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hb92c8b48db2d2494+0x2c> @ imm = #0x2
1000d50c: 3357         	adds	r3, #0x57
1000d50e: e000         	b	0x1000d512 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hb92c8b48db2d2494+0x2e> @ imm = #0x0
1000d510: 3330         	adds	r3, #0x30
1000d512: ad02         	add	r5, sp, #0x8
1000d514: 182d         	adds	r5, r5, r0
1000d516: 1ead         	subs	r5, r5, #0x2
1000d518: 702b         	strb	r3, [r5]
1000d51a: 090b         	lsrs	r3, r1, #0x4
1000d51c: d004         	beq	0x1000d528 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hb92c8b48db2d2494+0x44> @ imm = #0x8
1000d51e: 4013         	ands	r3, r2
1000d520: 2b0a         	cmp	r3, #0xa
1000d522: d2e6         	bhs	0x1000d4f2 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hb92c8b48db2d2494+0xe> @ imm = #-0x34
1000d524: 3330         	adds	r3, #0x30
1000d526: e7e5         	b	0x1000d4f4 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hb92c8b48db2d2494+0x10> @ imm = #-0x36
1000d528: 1e81         	subs	r1, r0, #0x2
1000d52a: 1e40         	subs	r0, r0, #0x1
1000d52c: e000         	b	0x1000d530 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hb92c8b48db2d2494+0x4c> @ imm = #0x0
1000d52e: 1e41         	subs	r1, r0, #0x1
1000d530: 2281         	movs	r2, #0x81
1000d532: 1a10         	subs	r0, r2, r0
1000d534: 9001         	str	r0, [sp, #0x4]
1000d536: a802         	add	r0, sp, #0x8
1000d538: 1840         	adds	r0, r0, r1
1000d53a: 9000         	str	r0, [sp]
1000d53c: 2101         	movs	r1, #0x1
1000d53e: 4a03         	ldr	r2, [pc, #0xc]          @ 0x1000d54c <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::hb92c8b48db2d2494+0x68>
1000d540: 2302         	movs	r3, #0x2
1000d542: 4620         	mov	r0, r4
1000d544: f7ff fa60    	bl	0x1000ca08 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7> @ imm = #-0xb40
1000d548: b022         	add	sp, #0x88
1000d54a: bdb0         	pop	{r4, r5, r7, pc}
1000d54c: 81 27 01 10  	.word	0x10012781

1000d550 <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::hbb67dfb2459cb522>:
1000d550: b5b0         	push	{r4, r5, r7, lr}
1000d552: af02         	add	r7, sp, #0x8
1000d554: b0a2         	sub	sp, #0x88
1000d556: 460c         	mov	r4, r1
1000d558: 6801         	ldr	r1, [r0]
1000d55a: 2081         	movs	r0, #0x81
1000d55c: e007         	b	0x1000d56e <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::hbb67dfb2459cb522+0x1e> @ imm = #0xe
1000d55e: 3337         	adds	r3, #0x37
1000d560: aa02         	add	r2, sp, #0x8
1000d562: 1812         	adds	r2, r2, r0
1000d564: 1ed2         	subs	r2, r2, #0x3
1000d566: 7013         	strb	r3, [r2]
1000d568: 1e80         	subs	r0, r0, #0x2
1000d56a: 0a09         	lsrs	r1, r1, #0x8
1000d56c: d015         	beq	0x1000d59a <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::hbb67dfb2459cb522+0x4a> @ imm = #0x2a
1000d56e: 220f         	movs	r2, #0xf
1000d570: 460b         	mov	r3, r1
1000d572: 4013         	ands	r3, r2
1000d574: 2b0a         	cmp	r3, #0xa
1000d576: d301         	blo	0x1000d57c <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::hbb67dfb2459cb522+0x2c> @ imm = #0x2
1000d578: 3337         	adds	r3, #0x37
1000d57a: e000         	b	0x1000d57e <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::hbb67dfb2459cb522+0x2e> @ imm = #0x0
1000d57c: 3330         	adds	r3, #0x30
1000d57e: ad02         	add	r5, sp, #0x8
1000d580: 182d         	adds	r5, r5, r0
1000d582: 1ead         	subs	r5, r5, #0x2
1000d584: 702b         	strb	r3, [r5]
1000d586: 090b         	lsrs	r3, r1, #0x4
1000d588: d004         	beq	0x1000d594 <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::hbb67dfb2459cb522+0x44> @ imm = #0x8
1000d58a: 4013         	ands	r3, r2
1000d58c: 2b0a         	cmp	r3, #0xa
1000d58e: d2e6         	bhs	0x1000d55e <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::hbb67dfb2459cb522+0xe> @ imm = #-0x34
1000d590: 3330         	adds	r3, #0x30
1000d592: e7e5         	b	0x1000d560 <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::hbb67dfb2459cb522+0x10> @ imm = #-0x36
1000d594: 1e81         	subs	r1, r0, #0x2
1000d596: 1e40         	subs	r0, r0, #0x1
1000d598: e000         	b	0x1000d59c <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::hbb67dfb2459cb522+0x4c> @ imm = #0x0
1000d59a: 1e41         	subs	r1, r0, #0x1
1000d59c: 2281         	movs	r2, #0x81
1000d59e: 1a10         	subs	r0, r2, r0
1000d5a0: 9001         	str	r0, [sp, #0x4]
1000d5a2: a802         	add	r0, sp, #0x8
1000d5a4: 1840         	adds	r0, r0, r1
1000d5a6: 9000         	str	r0, [sp]
1000d5a8: 2101         	movs	r1, #0x1
1000d5aa: 4a03         	ldr	r2, [pc, #0xc]          @ 0x1000d5b8 <core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::hbb67dfb2459cb522+0x68>
1000d5ac: 2302         	movs	r3, #0x2
1000d5ae: 4620         	mov	r0, r4
1000d5b0: f7ff fa2a    	bl	0x1000ca08 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7> @ imm = #-0xbac
1000d5b4: b022         	add	sp, #0x88
1000d5b6: bdb0         	pop	{r4, r5, r7, pc}
1000d5b8: 81 27 01 10  	.word	0x10012781

1000d5bc <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h7d999e7a287a22d7>:
1000d5bc: b580         	push	{r7, lr}
1000d5be: af00         	add	r7, sp, #0x0
1000d5c0: 460a         	mov	r2, r1
1000d5c2: 6800         	ldr	r0, [r0]
1000d5c4: 2101         	movs	r1, #0x1
1000d5c6: f000 f801    	bl	0x1000d5cc <core::fmt::num::imp::<impl u32>::_fmt::hd1d4b800f9863551> @ imm = #0x2
1000d5ca: bd80         	pop	{r7, pc}

1000d5cc <core::fmt::num::imp::<impl u32>::_fmt::hd1d4b800f9863551>:
1000d5cc: b5f0         	push	{r4, r5, r6, r7, lr}
1000d5ce: af03         	add	r7, sp, #0xc
1000d5d0: b08b         	sub	sp, #0x2c
1000d5d2: 9205         	str	r2, [sp, #0x14]
1000d5d4: 9104         	str	r1, [sp, #0x10]
1000d5d6: 08c1         	lsrs	r1, r0, #0x3
1000d5d8: 297d         	cmp	r1, #0x7d
1000d5da: 9003         	str	r0, [sp, #0xc]
1000d5dc: d34a         	blo	0x1000d674 <core::fmt::num::imp::<impl u32>::_fmt::hd1d4b800f9863551+0xa8> @ imm = #0x94
1000d5de: 250a         	movs	r5, #0xa
1000d5e0: 4606         	mov	r6, r0
1000d5e2: 4630         	mov	r0, r6
1000d5e4: 4c34         	ldr	r4, [pc, #0xd0]         @ 0x1000d6b8 <core::fmt::num::imp::<impl u32>::_fmt::hd1d4b800f9863551+0xec>
1000d5e6: 4621         	mov	r1, r4
1000d5e8: f000 f8d8    	bl	0x1000d79c <__aeabi_uidiv> @ imm = #0x1b0
1000d5ec: 9007         	str	r0, [sp, #0x1c]
1000d5ee: 4344         	muls	r4, r0, r4
1000d5f0: 1b30         	subs	r0, r6, r4
1000d5f2: 9006         	str	r0, [sp, #0x18]
1000d5f4: b282         	uxth	r2, r0
1000d5f6: 0892         	lsrs	r2, r2, #0x2
1000d5f8: 4830         	ldr	r0, [pc, #0xc0]         @ 0x1000d6bc <core::fmt::num::imp::<impl u32>::_fmt::hd1d4b800f9863551+0xf0>
1000d5fa: 4342         	muls	r2, r0, r2
1000d5fc: 0c53         	lsrs	r3, r2, #0x11
1000d5fe: 005c         	lsls	r4, r3, #0x1
1000d600: 482f         	ldr	r0, [pc, #0xbc]         @ 0x1000d6c0 <core::fmt::num::imp::<impl u32>::_fmt::hd1d4b800f9863551+0xf4>
1000d602: 5d00         	ldrb	r0, [r0, r4]
1000d604: aa08         	add	r2, sp, #0x20
1000d606: 1952         	adds	r2, r2, r5
1000d608: 1f11         	subs	r1, r2, #0x4
1000d60a: 7008         	strb	r0, [r1]
1000d60c: 1ed1         	subs	r1, r2, #0x3
1000d60e: 482c         	ldr	r0, [pc, #0xb0]         @ 0x1000d6c0 <core::fmt::num::imp::<impl u32>::_fmt::hd1d4b800f9863551+0xf4>
1000d610: 1904         	adds	r4, r0, r4
1000d612: 7864         	ldrb	r4, [r4, #0x1]
1000d614: 700c         	strb	r4, [r1]
1000d616: 2164         	movs	r1, #0x64
1000d618: 4359         	muls	r1, r3, r1
1000d61a: 9806         	ldr	r0, [sp, #0x18]
1000d61c: 1a40         	subs	r0, r0, r1
1000d61e: b280         	uxth	r0, r0
1000d620: 0040         	lsls	r0, r0, #0x1
1000d622: 4c27         	ldr	r4, [pc, #0x9c]         @ 0x1000d6c0 <core::fmt::num::imp::<impl u32>::_fmt::hd1d4b800f9863551+0xf4>
1000d624: 5c21         	ldrb	r1, [r4, r0]
1000d626: 1e93         	subs	r3, r2, #0x2
1000d628: 7019         	strb	r1, [r3]
1000d62a: 9b07         	ldr	r3, [sp, #0x1c]
1000d62c: 1820         	adds	r0, r4, r0
1000d62e: 7840         	ldrb	r0, [r0, #0x1]
1000d630: 1e51         	subs	r1, r2, #0x1
1000d632: 7008         	strb	r0, [r1]
1000d634: 1f2d         	subs	r5, r5, #0x4
1000d636: 4823         	ldr	r0, [pc, #0x8c]         @ 0x1000d6c4 <core::fmt::num::imp::<impl u32>::_fmt::hd1d4b800f9863551+0xf8>
1000d638: 4286         	cmp	r6, r0
1000d63a: 461e         	mov	r6, r3
1000d63c: d8d1         	bhi	0x1000d5e2 <core::fmt::num::imp::<impl u32>::_fmt::hd1d4b800f9863551+0x16> @ imm = #-0x5e
1000d63e: 2b09         	cmp	r3, #0x9
1000d640: d91c         	bls	0x1000d67c <core::fmt::num::imp::<impl u32>::_fmt::hd1d4b800f9863551+0xb0> @ imm = #0x38
1000d642: b298         	uxth	r0, r3
1000d644: 0880         	lsrs	r0, r0, #0x2
1000d646: 491d         	ldr	r1, [pc, #0x74]         @ 0x1000d6bc <core::fmt::num::imp::<impl u32>::_fmt::hd1d4b800f9863551+0xf0>
1000d648: 4341         	muls	r1, r0, r1
1000d64a: 0c4a         	lsrs	r2, r1, #0x11
1000d64c: 2064         	movs	r0, #0x64
1000d64e: 4350         	muls	r0, r2, r0
1000d650: 1a18         	subs	r0, r3, r0
1000d652: b280         	uxth	r0, r0
1000d654: 0040         	lsls	r0, r0, #0x1
1000d656: 4b1a         	ldr	r3, [pc, #0x68]         @ 0x1000d6c0 <core::fmt::num::imp::<impl u32>::_fmt::hd1d4b800f9863551+0xf4>
1000d658: 5c1c         	ldrb	r4, [r3, r0]
1000d65a: 1ea9         	subs	r1, r5, #0x2
1000d65c: 462e         	mov	r6, r5
1000d65e: ad08         	add	r5, sp, #0x20
1000d660: 546c         	strb	r4, [r5, r1]
1000d662: 19ac         	adds	r4, r5, r6
1000d664: 1e64         	subs	r4, r4, #0x1
1000d666: 1818         	adds	r0, r3, r0
1000d668: 7840         	ldrb	r0, [r0, #0x1]
1000d66a: 7020         	strb	r0, [r4]
1000d66c: 9803         	ldr	r0, [sp, #0xc]
1000d66e: 2800         	cmp	r0, #0x0
1000d670: d109         	bne	0x1000d686 <core::fmt::num::imp::<impl u32>::_fmt::hd1d4b800f9863551+0xba> @ imm = #0x12
1000d672: e00a         	b	0x1000d68a <core::fmt::num::imp::<impl u32>::_fmt::hd1d4b800f9863551+0xbe> @ imm = #0x14
1000d674: 250a         	movs	r5, #0xa
1000d676: 4603         	mov	r3, r0
1000d678: 2b09         	cmp	r3, #0x9
1000d67a: d8e2         	bhi	0x1000d642 <core::fmt::num::imp::<impl u32>::_fmt::hd1d4b800f9863551+0x76> @ imm = #-0x3c
1000d67c: 4629         	mov	r1, r5
1000d67e: 461a         	mov	r2, r3
1000d680: 9803         	ldr	r0, [sp, #0xc]
1000d682: 2800         	cmp	r0, #0x0
1000d684: d001         	beq	0x1000d68a <core::fmt::num::imp::<impl u32>::_fmt::hd1d4b800f9863551+0xbe> @ imm = #0x2
1000d686: 2a00         	cmp	r2, #0x0
1000d688: d007         	beq	0x1000d69a <core::fmt::num::imp::<impl u32>::_fmt::hd1d4b800f9863551+0xce> @ imm = #0xe
1000d68a: 0710         	lsls	r0, r2, #0x1c
1000d68c: 0ec0         	lsrs	r0, r0, #0x1b
1000d68e: 4a0c         	ldr	r2, [pc, #0x30]         @ 0x1000d6c0 <core::fmt::num::imp::<impl u32>::_fmt::hd1d4b800f9863551+0xf4>
1000d690: 1810         	adds	r0, r2, r0
1000d692: 7840         	ldrb	r0, [r0, #0x1]
1000d694: 1e49         	subs	r1, r1, #0x1
1000d696: aa08         	add	r2, sp, #0x20
1000d698: 5450         	strb	r0, [r2, r1]
1000d69a: 200a         	movs	r0, #0xa
1000d69c: 1a40         	subs	r0, r0, r1
1000d69e: 9001         	str	r0, [sp, #0x4]
1000d6a0: a808         	add	r0, sp, #0x20
1000d6a2: 1840         	adds	r0, r0, r1
1000d6a4: 9000         	str	r0, [sp]
1000d6a6: 2201         	movs	r2, #0x1
1000d6a8: 2300         	movs	r3, #0x0
1000d6aa: 9805         	ldr	r0, [sp, #0x14]
1000d6ac: 9904         	ldr	r1, [sp, #0x10]
1000d6ae: f7ff f9ab    	bl	0x1000ca08 <core::fmt::Formatter::pad_integral::h3196f7d5f32659f7> @ imm = #-0xcaa
1000d6b2: b00b         	add	sp, #0x2c
1000d6b4: bdf0         	pop	{r4, r5, r6, r7, pc}
1000d6b6: 46c0         	mov	r8, r8
1000d6b8: 10 27 00 00  	.word	0x00002710
1000d6bc: 7b 14 00 00  	.word	0x0000147b
1000d6c0: 83 27 01 10  	.word	0x10012783
1000d6c4: 7f 96 98 00  	.word	0x0098967f

1000d6c8 <<&T as core::fmt::Debug>::fmt::h4bddd40ce4f4ce96>:
1000d6c8: b580         	push	{r7, lr}
1000d6ca: af00         	add	r7, sp, #0x0
1000d6cc: 6802         	ldr	r2, [r0]
1000d6ce: 6840         	ldr	r0, [r0, #0x4]
1000d6d0: 68c3         	ldr	r3, [r0, #0xc]
1000d6d2: 4610         	mov	r0, r2
1000d6d4: 4798         	blx	r3
1000d6d6: bd80         	pop	{r7, pc}

1000d6d8 <<&T as core::fmt::Display>::fmt::h2a85b0c4372e16e3>:
1000d6d8: b580         	push	{r7, lr}
1000d6da: af00         	add	r7, sp, #0x0
1000d6dc: 460b         	mov	r3, r1
1000d6de: c806         	ldm	r0!, {r1, r2}
1000d6e0: 4618         	mov	r0, r3
1000d6e2: f7ff fae6    	bl	0x1000ccb2 <core::fmt::Formatter::pad::h513e98eba890bd87> @ imm = #-0xa34
1000d6e6: bd80         	pop	{r7, pc}

1000d6e8 <core::slice::index::slice_start_index_len_fail::do_panic::runtime::hc44bb91a4cf937c1>:
1000d6e8: b580         	push	{r7, lr}
1000d6ea: af00         	add	r7, sp, #0x0
1000d6ec: b08c         	sub	sp, #0x30
1000d6ee: 9101         	str	r1, [sp, #0x4]
1000d6f0: 9000         	str	r0, [sp]
1000d6f2: 2000         	movs	r0, #0x0
1000d6f4: 9006         	str	r0, [sp, #0x18]
1000d6f6: 2002         	movs	r0, #0x2
1000d6f8: 9003         	str	r0, [sp, #0xc]
1000d6fa: 4908         	ldr	r1, [pc, #0x20]         @ 0x1000d71c <core::slice::index::slice_start_index_len_fail::do_panic::runtime::hc44bb91a4cf937c1+0x34>
1000d6fc: 9102         	str	r1, [sp, #0x8]
1000d6fe: 9005         	str	r0, [sp, #0x14]
1000d700: a808         	add	r0, sp, #0x20
1000d702: 9004         	str	r0, [sp, #0x10]
1000d704: 4806         	ldr	r0, [pc, #0x18]         @ 0x1000d720 <core::slice::index::slice_start_index_len_fail::do_panic::runtime::hc44bb91a4cf937c1+0x38>
1000d706: 900b         	str	r0, [sp, #0x2c]
1000d708: a901         	add	r1, sp, #0x4
1000d70a: 910a         	str	r1, [sp, #0x28]
1000d70c: 9009         	str	r0, [sp, #0x24]
1000d70e: 4668         	mov	r0, sp
1000d710: 9008         	str	r0, [sp, #0x20]
1000d712: a802         	add	r0, sp, #0x8
1000d714: 4611         	mov	r1, r2
1000d716: f7fe fe31    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #-0x139e
1000d71a: 46c0         	mov	r8, r8
1000d71c: f8 28 01 10  	.word	0x100128f8
1000d720: bd d5 00 10  	.word	0x1000d5bd

1000d724 <core::slice::index::slice_end_index_len_fail::do_panic::runtime::hbe6bdd220e1bf080>:
1000d724: b580         	push	{r7, lr}
1000d726: af00         	add	r7, sp, #0x0
1000d728: b08c         	sub	sp, #0x30
1000d72a: 9101         	str	r1, [sp, #0x4]
1000d72c: 9000         	str	r0, [sp]
1000d72e: 2000         	movs	r0, #0x0
1000d730: 9006         	str	r0, [sp, #0x18]
1000d732: 2002         	movs	r0, #0x2
1000d734: 9003         	str	r0, [sp, #0xc]
1000d736: 4908         	ldr	r1, [pc, #0x20]         @ 0x1000d758 <core::slice::index::slice_end_index_len_fail::do_panic::runtime::hbe6bdd220e1bf080+0x34>
1000d738: 9102         	str	r1, [sp, #0x8]
1000d73a: 9005         	str	r0, [sp, #0x14]
1000d73c: a808         	add	r0, sp, #0x20
1000d73e: 9004         	str	r0, [sp, #0x10]
1000d740: 4806         	ldr	r0, [pc, #0x18]         @ 0x1000d75c <core::slice::index::slice_end_index_len_fail::do_panic::runtime::hbe6bdd220e1bf080+0x38>
1000d742: 900b         	str	r0, [sp, #0x2c]
1000d744: a901         	add	r1, sp, #0x4
1000d746: 910a         	str	r1, [sp, #0x28]
1000d748: 9009         	str	r0, [sp, #0x24]
1000d74a: 4668         	mov	r0, sp
1000d74c: 9008         	str	r0, [sp, #0x20]
1000d74e: a802         	add	r0, sp, #0x8
1000d750: 4611         	mov	r1, r2
1000d752: f7fe fe13    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #-0x13da
1000d756: 46c0         	mov	r8, r8
1000d758: 08 29 01 10  	.word	0x10012908
1000d75c: bd d5 00 10  	.word	0x1000d5bd

1000d760 <core::slice::index::slice_index_order_fail::do_panic::runtime::he15c09cd55079292>:
1000d760: b580         	push	{r7, lr}
1000d762: af00         	add	r7, sp, #0x0
1000d764: b08c         	sub	sp, #0x30
1000d766: 9101         	str	r1, [sp, #0x4]
1000d768: 9000         	str	r0, [sp]
1000d76a: 2000         	movs	r0, #0x0
1000d76c: 9006         	str	r0, [sp, #0x18]
1000d76e: 2002         	movs	r0, #0x2
1000d770: 9003         	str	r0, [sp, #0xc]
1000d772: 4908         	ldr	r1, [pc, #0x20]         @ 0x1000d794 <core::slice::index::slice_index_order_fail::do_panic::runtime::he15c09cd55079292+0x34>
1000d774: 9102         	str	r1, [sp, #0x8]
1000d776: 9005         	str	r0, [sp, #0x14]
1000d778: a808         	add	r0, sp, #0x20
1000d77a: 9004         	str	r0, [sp, #0x10]
1000d77c: 4806         	ldr	r0, [pc, #0x18]         @ 0x1000d798 <core::slice::index::slice_index_order_fail::do_panic::runtime::he15c09cd55079292+0x38>
1000d77e: 900b         	str	r0, [sp, #0x2c]
1000d780: a901         	add	r1, sp, #0x4
1000d782: 910a         	str	r1, [sp, #0x28]
1000d784: 9009         	str	r0, [sp, #0x24]
1000d786: 4668         	mov	r0, sp
1000d788: 9008         	str	r0, [sp, #0x20]
1000d78a: a802         	add	r0, sp, #0x8
1000d78c: 4611         	mov	r1, r2
1000d78e: f7fe fdf5    	bl	0x1000c37c <core::panicking::panic_fmt::hef29a1a23a0fad7b> @ imm = #-0x1416
1000d792: 46c0         	mov	r8, r8
1000d794: 3c 29 01 10  	.word	0x1001293c
1000d798: bd d5 00 10  	.word	0x1000d5bd

1000d79c <__aeabi_uidiv>:
1000d79c: b580         	push	{r7, lr}
1000d79e: af00         	add	r7, sp, #0x0
1000d7a0: f000 f801    	bl	0x1000d7a6 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c> @ imm = #0x2
1000d7a4: bd80         	pop	{r7, pc}

1000d7a6 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c>:
1000d7a6: b5f0         	push	{r4, r5, r6, r7, lr}
1000d7a8: af03         	add	r7, sp, #0xc
1000d7aa: b083         	sub	sp, #0xc
1000d7ac: 4602         	mov	r2, r0
1000d7ae: 4288         	cmp	r0, r1
1000d7b0: d203         	bhs	0x1000d7ba <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x14> @ imm = #0x6
1000d7b2: 2000         	movs	r0, #0x0
1000d7b4: 4611         	mov	r1, r2
1000d7b6: b003         	add	sp, #0xc
1000d7b8: bdf0         	pop	{r4, r5, r6, r7, pc}
1000d7ba: 0c13         	lsrs	r3, r2, #0x10
1000d7bc: 2501         	movs	r5, #0x1
1000d7be: 2400         	movs	r4, #0x0
1000d7c0: 4299         	cmp	r1, r3
1000d7c2: 4628         	mov	r0, r5
1000d7c4: d82e         	bhi	0x1000d824 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x7e> @ imm = #0x5c
1000d7c6: 9002         	str	r0, [sp, #0x8]
1000d7c8: 4616         	mov	r6, r2
1000d7ca: d92f         	bls	0x1000d82c <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x86> @ imm = #0x5e
1000d7cc: 0a30         	lsrs	r0, r6, #0x8
1000d7ce: 4281         	cmp	r1, r0
1000d7d0: d930         	bls	0x1000d834 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x8e> @ imm = #0x60
1000d7d2: 4628         	mov	r0, r5
1000d7d4: d831         	bhi	0x1000d83a <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x94> @ imm = #0x62
1000d7d6: 9001         	str	r0, [sp, #0x4]
1000d7d8: 0930         	lsrs	r0, r6, #0x4
1000d7da: 4281         	cmp	r1, r0
1000d7dc: d932         	bls	0x1000d844 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x9e> @ imm = #0x64
1000d7de: 462b         	mov	r3, r5
1000d7e0: d833         	bhi	0x1000d84a <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0xa4> @ imm = #0x66
1000d7e2: 08b0         	lsrs	r0, r6, #0x2
1000d7e4: 4281         	cmp	r1, r0
1000d7e6: d934         	bls	0x1000d852 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0xac> @ imm = #0x68
1000d7e8: 4628         	mov	r0, r5
1000d7ea: d835         	bhi	0x1000d858 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0xb2> @ imm = #0x6a
1000d7ec: 0876         	lsrs	r6, r6, #0x1
1000d7ee: 42b1         	cmp	r1, r6
1000d7f0: 462e         	mov	r6, r5
1000d7f2: d900         	bls	0x1000d7f6 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x50> @ imm = #0x0
1000d7f4: 4626         	mov	r6, r4
1000d7f6: 0040         	lsls	r0, r0, #0x1
1000d7f8: 9000         	str	r0, [sp]
1000d7fa: 009b         	lsls	r3, r3, #0x2
1000d7fc: 9802         	ldr	r0, [sp, #0x8]
1000d7fe: 0104         	lsls	r4, r0, #0x4
1000d800: 9801         	ldr	r0, [sp, #0x4]
1000d802: 00c0         	lsls	r0, r0, #0x3
1000d804: 1900         	adds	r0, r0, r4
1000d806: 18c0         	adds	r0, r0, r3
1000d808: 9b00         	ldr	r3, [sp]
1000d80a: 18c0         	adds	r0, r0, r3
1000d80c: 1983         	adds	r3, r0, r6
1000d80e: 409d         	lsls	r5, r3
1000d810: 460c         	mov	r4, r1
1000d812: 409c         	lsls	r4, r3
1000d814: 1b16         	subs	r6, r2, r4
1000d816: 428e         	cmp	r6, r1
1000d818: d224         	bhs	0x1000d864 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0xbe> @ imm = #0x48
1000d81a: 4632         	mov	r2, r6
1000d81c: 4628         	mov	r0, r5
1000d81e: 4611         	mov	r1, r2
1000d820: b003         	add	sp, #0xc
1000d822: bdf0         	pop	{r4, r5, r6, r7, pc}
1000d824: 4620         	mov	r0, r4
1000d826: 9002         	str	r0, [sp, #0x8]
1000d828: 4616         	mov	r6, r2
1000d82a: d8cf         	bhi	0x1000d7cc <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x26> @ imm = #-0x62
1000d82c: 461e         	mov	r6, r3
1000d82e: 0a30         	lsrs	r0, r6, #0x8
1000d830: 4281         	cmp	r1, r0
1000d832: d8ce         	bhi	0x1000d7d2 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x2c> @ imm = #-0x64
1000d834: 4606         	mov	r6, r0
1000d836: 4628         	mov	r0, r5
1000d838: d9cd         	bls	0x1000d7d6 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x30> @ imm = #-0x66
1000d83a: 4620         	mov	r0, r4
1000d83c: 9001         	str	r0, [sp, #0x4]
1000d83e: 0930         	lsrs	r0, r6, #0x4
1000d840: 4281         	cmp	r1, r0
1000d842: d8cc         	bhi	0x1000d7de <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x38> @ imm = #-0x68
1000d844: 4606         	mov	r6, r0
1000d846: 462b         	mov	r3, r5
1000d848: d9cb         	bls	0x1000d7e2 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x3c> @ imm = #-0x6a
1000d84a: 4623         	mov	r3, r4
1000d84c: 08b0         	lsrs	r0, r6, #0x2
1000d84e: 4281         	cmp	r1, r0
1000d850: d8ca         	bhi	0x1000d7e8 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x42> @ imm = #-0x6c
1000d852: 4606         	mov	r6, r0
1000d854: 4628         	mov	r0, r5
1000d856: d9c9         	bls	0x1000d7ec <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x46> @ imm = #-0x6e
1000d858: 4620         	mov	r0, r4
1000d85a: 0876         	lsrs	r6, r6, #0x1
1000d85c: 42b1         	cmp	r1, r6
1000d85e: 462e         	mov	r6, r5
1000d860: d8c8         	bhi	0x1000d7f4 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x4e> @ imm = #-0x70
1000d862: e7c8         	b	0x1000d7f6 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x50> @ imm = #-0x70
1000d864: 2c00         	cmp	r4, #0x0
1000d866: d403         	bmi	0x1000d870 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0xca> @ imm = #0x6
1000d868: 4629         	mov	r1, r5
1000d86a: 4628         	mov	r0, r5
1000d86c: 4632         	mov	r2, r6
1000d86e: e01a         	b	0x1000d8a6 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x100> @ imm = #0x34
1000d870: 1e5b         	subs	r3, r3, #0x1
1000d872: 201f         	movs	r0, #0x1f
1000d874: 4018         	ands	r0, r3
1000d876: 2201         	movs	r2, #0x1
1000d878: 4082         	lsls	r2, r0
1000d87a: 9202         	str	r2, [sp, #0x8]
1000d87c: 0864         	lsrs	r4, r4, #0x1
1000d87e: 2000         	movs	r0, #0x0
1000d880: 9001         	str	r0, [sp, #0x4]
1000d882: 1b32         	subs	r2, r6, r4
1000d884: 2a00         	cmp	r2, #0x0
1000d886: db06         	blt	0x1000d896 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0xf0> @ imm = #0xc
1000d888: 9802         	ldr	r0, [sp, #0x8]
1000d88a: db07         	blt	0x1000d89c <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0xf6> @ imm = #0xe
1000d88c: 4328         	orrs	r0, r5
1000d88e: 428a         	cmp	r2, r1
1000d890: 9902         	ldr	r1, [sp, #0x8]
1000d892: d38f         	blo	0x1000d7b4 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0xe> @ imm = #-0xe2
1000d894: e007         	b	0x1000d8a6 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x100> @ imm = #0xe
1000d896: 4632         	mov	r2, r6
1000d898: 9802         	ldr	r0, [sp, #0x8]
1000d89a: daf7         	bge	0x1000d88c <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0xe6> @ imm = #-0x12
1000d89c: 9801         	ldr	r0, [sp, #0x4]
1000d89e: 4328         	orrs	r0, r5
1000d8a0: 428a         	cmp	r2, r1
1000d8a2: 9902         	ldr	r1, [sp, #0x8]
1000d8a4: d386         	blo	0x1000d7b4 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0xe> @ imm = #-0xf4
1000d8a6: 1e49         	subs	r1, r1, #0x1
1000d8a8: 2b00         	cmp	r3, #0x0
1000d8aa: d00b         	beq	0x1000d8c4 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x11e> @ imm = #0x16
1000d8ac: 2603         	movs	r6, #0x3
1000d8ae: 401e         	ands	r6, r3
1000d8b0: d00a         	beq	0x1000d8c8 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x122> @ imm = #0x14
1000d8b2: 0055         	lsls	r5, r2, #0x1
1000d8b4: 1b2a         	subs	r2, r5, r4
1000d8b6: 1c52         	adds	r2, r2, #0x1
1000d8b8: d400         	bmi	0x1000d8bc <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x116> @ imm = #0x0
1000d8ba: 4615         	mov	r5, r2
1000d8bc: 2e01         	cmp	r6, #0x1
1000d8be: d106         	bne	0x1000d8ce <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x128> @ imm = #0xc
1000d8c0: 1e5a         	subs	r2, r3, #0x1
1000d8c2: e013         	b	0x1000d8ec <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x146> @ imm = #0x26
1000d8c4: 4615         	mov	r5, r2
1000d8c6: e013         	b	0x1000d8f0 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x14a> @ imm = #0x26
1000d8c8: 4615         	mov	r5, r2
1000d8ca: 461a         	mov	r2, r3
1000d8cc: e00e         	b	0x1000d8ec <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x146> @ imm = #0x1c
1000d8ce: 006d         	lsls	r5, r5, #0x1
1000d8d0: 1b2a         	subs	r2, r5, r4
1000d8d2: 1c52         	adds	r2, r2, #0x1
1000d8d4: d400         	bmi	0x1000d8d8 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x132> @ imm = #0x0
1000d8d6: 4615         	mov	r5, r2
1000d8d8: 2e02         	cmp	r6, #0x2
1000d8da: d101         	bne	0x1000d8e0 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x13a> @ imm = #0x2
1000d8dc: 1e9a         	subs	r2, r3, #0x2
1000d8de: e005         	b	0x1000d8ec <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x146> @ imm = #0xa
1000d8e0: 006d         	lsls	r5, r5, #0x1
1000d8e2: 1b2a         	subs	r2, r5, r4
1000d8e4: 1c52         	adds	r2, r2, #0x1
1000d8e6: d400         	bmi	0x1000d8ea <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x144> @ imm = #0x0
1000d8e8: 4615         	mov	r5, r2
1000d8ea: 1eda         	subs	r2, r3, #0x3
1000d8ec: 2b04         	cmp	r3, #0x4
1000d8ee: d20a         	bhs	0x1000d906 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x160> @ imm = #0x14
1000d8f0: 221f         	movs	r2, #0x1f
1000d8f2: 4013         	ands	r3, r2
1000d8f4: 462a         	mov	r2, r5
1000d8f6: 40da         	lsrs	r2, r3
1000d8f8: 4029         	ands	r1, r5
1000d8fa: 4308         	orrs	r0, r1
1000d8fc: 4611         	mov	r1, r2
1000d8fe: b003         	add	sp, #0xc
1000d900: bdf0         	pop	{r4, r5, r6, r7, pc}
1000d902: 1f12         	subs	r2, r2, #0x4
1000d904: d0f4         	beq	0x1000d8f0 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x14a> @ imm = #-0x18
1000d906: 006d         	lsls	r5, r5, #0x1
1000d908: 1b2e         	subs	r6, r5, r4
1000d90a: 1c76         	adds	r6, r6, #0x1
1000d90c: d50c         	bpl	0x1000d928 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x182> @ imm = #0x18
1000d90e: 006d         	lsls	r5, r5, #0x1
1000d910: 1b2e         	subs	r6, r5, r4
1000d912: 1c76         	adds	r6, r6, #0x1
1000d914: d50d         	bpl	0x1000d932 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x18c> @ imm = #0x1a
1000d916: 006d         	lsls	r5, r5, #0x1
1000d918: 1b2e         	subs	r6, r5, r4
1000d91a: 1c76         	adds	r6, r6, #0x1
1000d91c: d50e         	bpl	0x1000d93c <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x196> @ imm = #0x1c
1000d91e: 006d         	lsls	r5, r5, #0x1
1000d920: 1b2e         	subs	r6, r5, r4
1000d922: 1c76         	adds	r6, r6, #0x1
1000d924: d4ed         	bmi	0x1000d902 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x15c> @ imm = #-0x26
1000d926: e00e         	b	0x1000d946 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x1a0> @ imm = #0x1c
1000d928: 4635         	mov	r5, r6
1000d92a: 006d         	lsls	r5, r5, #0x1
1000d92c: 1b2e         	subs	r6, r5, r4
1000d92e: 1c76         	adds	r6, r6, #0x1
1000d930: d4f1         	bmi	0x1000d916 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x170> @ imm = #-0x1e
1000d932: 4635         	mov	r5, r6
1000d934: 006d         	lsls	r5, r5, #0x1
1000d936: 1b2e         	subs	r6, r5, r4
1000d938: 1c76         	adds	r6, r6, #0x1
1000d93a: d4f0         	bmi	0x1000d91e <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x178> @ imm = #-0x20
1000d93c: 4635         	mov	r5, r6
1000d93e: 006d         	lsls	r5, r5, #0x1
1000d940: 1b2e         	subs	r6, r5, r4
1000d942: 1c76         	adds	r6, r6, #0x1
1000d944: d4dd         	bmi	0x1000d902 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x15c> @ imm = #-0x46
1000d946: 4635         	mov	r5, r6
1000d948: e7db         	b	0x1000d902 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h139bd41d63085e2c+0x15c> @ imm = #-0x4a

1000d94a <__aeabi_lmul>:
1000d94a: b5f0         	push	{r4, r5, r6, r7, lr}
1000d94c: af03         	add	r7, sp, #0xc
1000d94e: b084         	sub	sp, #0x10
1000d950: 9303         	str	r3, [sp, #0xc]
1000d952: 4614         	mov	r4, r2
1000d954: 9102         	str	r1, [sp, #0x8]
1000d956: 9001         	str	r0, [sp, #0x4]
1000d958: 0c05         	lsrs	r5, r0, #0x10
1000d95a: b292         	uxth	r2, r2
1000d95c: 9200         	str	r2, [sp]
1000d95e: 4629         	mov	r1, r5
1000d960: 4351         	muls	r1, r2, r1
1000d962: b282         	uxth	r2, r0
1000d964: 0c23         	lsrs	r3, r4, #0x10
1000d966: 4616         	mov	r6, r2
1000d968: 435e         	muls	r6, r3, r6
1000d96a: 2000         	movs	r0, #0x0
1000d96c: 1871         	adds	r1, r6, r1
1000d96e: 4140         	adcs	r0, r0
1000d970: 0c0e         	lsrs	r6, r1, #0x10
1000d972: 0400         	lsls	r0, r0, #0x10
1000d974: 1986         	adds	r6, r0, r6
1000d976: 0408         	lsls	r0, r1, #0x10
1000d978: 435d         	muls	r5, r3, r5
1000d97a: 9900         	ldr	r1, [sp]
1000d97c: 434a         	muls	r2, r1, r2
1000d97e: 1810         	adds	r0, r2, r0
1000d980: 4175         	adcs	r5, r6
1000d982: 9a02         	ldr	r2, [sp, #0x8]
1000d984: 4362         	muls	r2, r4, r2
1000d986: 9903         	ldr	r1, [sp, #0xc]
1000d988: 9b01         	ldr	r3, [sp, #0x4]
1000d98a: 4359         	muls	r1, r3, r1
1000d98c: 1889         	adds	r1, r1, r2
1000d98e: 1869         	adds	r1, r5, r1
1000d990: b004         	add	sp, #0x10
1000d992: bdf0         	pop	{r4, r5, r6, r7, pc}

1000d994 <__aeabi_memcpy4>:
1000d994: b5f0         	push	{r4, r5, r6, r7, lr}
1000d996: af03         	add	r7, sp, #0xc
1000d998: b081         	sub	sp, #0x4
1000d99a: 2a04         	cmp	r2, #0x4
1000d99c: d32d         	blo	0x1000d9fa <__aeabi_memcpy4+0x66> @ imm = #0x5a
1000d99e: 1f13         	subs	r3, r2, #0x4
1000d9a0: 250c         	movs	r5, #0xc
1000d9a2: 401d         	ands	r5, r3
1000d9a4: 2d0c         	cmp	r5, #0xc
1000d9a6: d019         	beq	0x1000d9dc <__aeabi_memcpy4+0x48> @ imm = #0x32
1000d9a8: 9200         	str	r2, [sp]
1000d9aa: 460e         	mov	r6, r1
1000d9ac: c904         	ldm	r1!, {r2}
1000d9ae: 4604         	mov	r4, r0
1000d9b0: c004         	stm	r0!, {r2}
1000d9b2: 071a         	lsls	r2, r3, #0x1c
1000d9b4: 0f92         	lsrs	r2, r2, #0x1e
1000d9b6: 461a         	mov	r2, r3
1000d9b8: d010         	beq	0x1000d9dc <__aeabi_memcpy4+0x48> @ imm = #0x20
1000d9ba: 4631         	mov	r1, r6
1000d9bc: 6872         	ldr	r2, [r6, #0x4]
1000d9be: 6062         	str	r2, [r4, #0x4]
1000d9c0: 2d04         	cmp	r5, #0x4
1000d9c2: d104         	bne	0x1000d9ce <__aeabi_memcpy4+0x3a> @ imm = #0x8
1000d9c4: 9a00         	ldr	r2, [sp]
1000d9c6: 3a08         	subs	r2, #0x8
1000d9c8: 3108         	adds	r1, #0x8
1000d9ca: 3408         	adds	r4, #0x8
1000d9cc: e005         	b	0x1000d9da <__aeabi_memcpy4+0x46> @ imm = #0xa
1000d9ce: 688a         	ldr	r2, [r1, #0x8]
1000d9d0: 60a2         	str	r2, [r4, #0x8]
1000d9d2: 9a00         	ldr	r2, [sp]
1000d9d4: 3a0c         	subs	r2, #0xc
1000d9d6: 310c         	adds	r1, #0xc
1000d9d8: 340c         	adds	r4, #0xc
1000d9da: 4620         	mov	r0, r4
1000d9dc: 2b0c         	cmp	r3, #0xc
1000d9de: d30c         	blo	0x1000d9fa <__aeabi_memcpy4+0x66> @ imm = #0x18
1000d9e0: 680b         	ldr	r3, [r1]
1000d9e2: 6003         	str	r3, [r0]
1000d9e4: 684b         	ldr	r3, [r1, #0x4]
1000d9e6: 6043         	str	r3, [r0, #0x4]
1000d9e8: 688b         	ldr	r3, [r1, #0x8]
1000d9ea: 6083         	str	r3, [r0, #0x8]
1000d9ec: 68cb         	ldr	r3, [r1, #0xc]
1000d9ee: 60c3         	str	r3, [r0, #0xc]
1000d9f0: 3110         	adds	r1, #0x10
1000d9f2: 3010         	adds	r0, #0x10
1000d9f4: 3a10         	subs	r2, #0x10
1000d9f6: 2a03         	cmp	r2, #0x3
1000d9f8: d8f2         	bhi	0x1000d9e0 <__aeabi_memcpy4+0x4c> @ imm = #-0x1c
1000d9fa: f000 f802    	bl	0x1000da02 <compiler_builtins::mem::memcpy::hbd9514dbeced366c> @ imm = #0x4
1000d9fe: b001         	add	sp, #0x4
1000da00: bdf0         	pop	{r4, r5, r6, r7, pc}

1000da02 <compiler_builtins::mem::memcpy::hbd9514dbeced366c>:
1000da02: b5f0         	push	{r4, r5, r6, r7, lr}
1000da04: af03         	add	r7, sp, #0xc
1000da06: b087         	sub	sp, #0x1c
1000da08: 2a10         	cmp	r2, #0x10
1000da0a: d315         	blo	0x1000da38 <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0x36> @ imm = #0x2a
1000da0c: 9206         	str	r2, [sp, #0x18]
1000da0e: 4242         	rsbs	r2, r0, #0
1000da10: 2303         	movs	r3, #0x3
1000da12: 9305         	str	r3, [sp, #0x14]
1000da14: 401a         	ands	r2, r3
1000da16: 1885         	adds	r5, r0, r2
1000da18: 9004         	str	r0, [sp, #0x10]
1000da1a: 42a8         	cmp	r0, r5
1000da1c: d22a         	bhs	0x1000da74 <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0x72> @ imm = #0x54
1000da1e: 1e54         	subs	r4, r2, #0x1
1000da20: 2a00         	cmp	r2, #0x0
1000da22: 9804         	ldr	r0, [sp, #0x10]
1000da24: 4606         	mov	r6, r0
1000da26: 460b         	mov	r3, r1
1000da28: d016         	beq	0x1000da58 <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0x56> @ imm = #0x2c
1000da2a: 780b         	ldrb	r3, [r1]
1000da2c: 7003         	strb	r3, [r0]
1000da2e: 2a01         	cmp	r2, #0x1
1000da30: d107         	bne	0x1000da42 <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0x40> @ imm = #0xe
1000da32: 1c4b         	adds	r3, r1, #0x1
1000da34: 1c46         	adds	r6, r0, #0x1
1000da36: e00f         	b	0x1000da58 <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0x56> @ imm = #0x1e
1000da38: 4603         	mov	r3, r0
1000da3a: 189c         	adds	r4, r3, r2
1000da3c: 42a3         	cmp	r3, r4
1000da3e: d33e         	blo	0x1000dabe <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0xbc> @ imm = #0x7c
1000da40: e05f         	b	0x1000db02 <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0x100> @ imm = #0xbe
1000da42: 784b         	ldrb	r3, [r1, #0x1]
1000da44: 7043         	strb	r3, [r0, #0x1]
1000da46: 2a02         	cmp	r2, #0x2
1000da48: d102         	bne	0x1000da50 <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0x4e> @ imm = #0x4
1000da4a: 1c8b         	adds	r3, r1, #0x2
1000da4c: 1c86         	adds	r6, r0, #0x2
1000da4e: e003         	b	0x1000da58 <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0x56> @ imm = #0x6
1000da50: 788b         	ldrb	r3, [r1, #0x2]
1000da52: 7083         	strb	r3, [r0, #0x2]
1000da54: 1ccb         	adds	r3, r1, #0x3
1000da56: 1cc6         	adds	r6, r0, #0x3
1000da58: 2c03         	cmp	r4, #0x3
1000da5a: d30b         	blo	0x1000da74 <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0x72> @ imm = #0x16
1000da5c: 781c         	ldrb	r4, [r3]
1000da5e: 7034         	strb	r4, [r6]
1000da60: 785c         	ldrb	r4, [r3, #0x1]
1000da62: 7074         	strb	r4, [r6, #0x1]
1000da64: 789c         	ldrb	r4, [r3, #0x2]
1000da66: 70b4         	strb	r4, [r6, #0x2]
1000da68: 78dc         	ldrb	r4, [r3, #0x3]
1000da6a: 70f4         	strb	r4, [r6, #0x3]
1000da6c: 1d1b         	adds	r3, r3, #0x4
1000da6e: 1d36         	adds	r6, r6, #0x4
1000da70: 42ae         	cmp	r6, r5
1000da72: d1f3         	bne	0x1000da5c <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0x5a> @ imm = #-0x1a
1000da74: 9e06         	ldr	r6, [sp, #0x18]
1000da76: 1ab6         	subs	r6, r6, r2
1000da78: 9606         	str	r6, [sp, #0x18]
1000da7a: 9805         	ldr	r0, [sp, #0x14]
1000da7c: 4386         	bics	r6, r0
1000da7e: 19ab         	adds	r3, r5, r6
1000da80: 1889         	adds	r1, r1, r2
1000da82: 078c         	lsls	r4, r1, #0x1e
1000da84: d146         	bne	0x1000db14 <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0x112> @ imm = #0x8c
1000da86: 429d         	cmp	r5, r3
1000da88: d211         	bhs	0x1000daae <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0xac> @ imm = #0x22
1000da8a: 460c         	mov	r4, r1
1000da8c: 6820         	ldr	r0, [r4]
1000da8e: c501         	stm	r5!, {r0}
1000da90: 429d         	cmp	r5, r3
1000da92: d20c         	bhs	0x1000daae <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0xac> @ imm = #0x18
1000da94: 6860         	ldr	r0, [r4, #0x4]
1000da96: c501         	stm	r5!, {r0}
1000da98: 429d         	cmp	r5, r3
1000da9a: d208         	bhs	0x1000daae <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0xac> @ imm = #0x10
1000da9c: 68a0         	ldr	r0, [r4, #0x8]
1000da9e: c501         	stm	r5!, {r0}
1000daa0: 429d         	cmp	r5, r3
1000daa2: d204         	bhs	0x1000daae <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0xac> @ imm = #0x8
1000daa4: 68e0         	ldr	r0, [r4, #0xc]
1000daa6: c501         	stm	r5!, {r0}
1000daa8: 3410         	adds	r4, #0x10
1000daaa: 429d         	cmp	r5, r3
1000daac: d3ee         	blo	0x1000da8c <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0x8a> @ imm = #-0x24
1000daae: 9a06         	ldr	r2, [sp, #0x18]
1000dab0: 9805         	ldr	r0, [sp, #0x14]
1000dab2: 4002         	ands	r2, r0
1000dab4: 1989         	adds	r1, r1, r6
1000dab6: 9804         	ldr	r0, [sp, #0x10]
1000dab8: 189c         	adds	r4, r3, r2
1000daba: 42a3         	cmp	r3, r4
1000dabc: d221         	bhs	0x1000db02 <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0x100> @ imm = #0x42
1000dabe: 2503         	movs	r5, #0x3
1000dac0: 4015         	ands	r5, r2
1000dac2: 1e52         	subs	r2, r2, #0x1
1000dac4: 2d00         	cmp	r5, #0x0
1000dac6: d00e         	beq	0x1000dae6 <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0xe4> @ imm = #0x1c
1000dac8: 780e         	ldrb	r6, [r1]
1000daca: 701e         	strb	r6, [r3]
1000dacc: 2d01         	cmp	r5, #0x1
1000dace: d104         	bne	0x1000dada <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0xd8> @ imm = #0x8
1000dad0: 1c49         	adds	r1, r1, #0x1
1000dad2: 1c5b         	adds	r3, r3, #0x1
1000dad4: 2a03         	cmp	r2, #0x3
1000dad6: d208         	bhs	0x1000daea <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0xe8> @ imm = #0x10
1000dad8: e013         	b	0x1000db02 <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0x100> @ imm = #0x26
1000dada: 784e         	ldrb	r6, [r1, #0x1]
1000dadc: 705e         	strb	r6, [r3, #0x1]
1000dade: 2d02         	cmp	r5, #0x2
1000dae0: d111         	bne	0x1000db06 <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0x104> @ imm = #0x22
1000dae2: 1c89         	adds	r1, r1, #0x2
1000dae4: 1c9b         	adds	r3, r3, #0x2
1000dae6: 2a03         	cmp	r2, #0x3
1000dae8: d30b         	blo	0x1000db02 <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0x100> @ imm = #0x16
1000daea: 780a         	ldrb	r2, [r1]
1000daec: 701a         	strb	r2, [r3]
1000daee: 784a         	ldrb	r2, [r1, #0x1]
1000daf0: 705a         	strb	r2, [r3, #0x1]
1000daf2: 788a         	ldrb	r2, [r1, #0x2]
1000daf4: 709a         	strb	r2, [r3, #0x2]
1000daf6: 78ca         	ldrb	r2, [r1, #0x3]
1000daf8: 70da         	strb	r2, [r3, #0x3]
1000dafa: 1d09         	adds	r1, r1, #0x4
1000dafc: 1d1b         	adds	r3, r3, #0x4
1000dafe: 42a3         	cmp	r3, r4
1000db00: d1f3         	bne	0x1000daea <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0xe8> @ imm = #-0x1a
1000db02: b007         	add	sp, #0x1c
1000db04: bdf0         	pop	{r4, r5, r6, r7, pc}
1000db06: 788d         	ldrb	r5, [r1, #0x2]
1000db08: 709d         	strb	r5, [r3, #0x2]
1000db0a: 1cc9         	adds	r1, r1, #0x3
1000db0c: 1cdb         	adds	r3, r3, #0x3
1000db0e: 2a03         	cmp	r2, #0x3
1000db10: d2eb         	bhs	0x1000daea <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0xe8> @ imm = #-0x2a
1000db12: e7f6         	b	0x1000db02 <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0x100> @ imm = #-0x14
1000db14: 429d         	cmp	r5, r3
1000db16: d2ca         	bhs	0x1000daae <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0xac> @ imm = #-0x6c
1000db18: 00cc         	lsls	r4, r1, #0x3
1000db1a: 2018         	movs	r0, #0x18
1000db1c: 4262         	rsbs	r2, r4, #0
1000db1e: 4004         	ands	r4, r0
1000db20: 9400         	str	r4, [sp]
1000db22: 4002         	ands	r2, r0
1000db24: 9201         	str	r2, [sp, #0x4]
1000db26: 460a         	mov	r2, r1
1000db28: 9805         	ldr	r0, [sp, #0x14]
1000db2a: 4382         	bics	r2, r0
1000db2c: 6810         	ldr	r0, [r2]
1000db2e: 9002         	str	r0, [sp, #0x8]
1000db30: 3210         	adds	r2, #0x10
1000db32: 9203         	str	r2, [sp, #0xc]
1000db34: 9800         	ldr	r0, [sp]
1000db36: 9a02         	ldr	r2, [sp, #0x8]
1000db38: 40c2         	lsrs	r2, r0
1000db3a: 9202         	str	r2, [sp, #0x8]
1000db3c: 9803         	ldr	r0, [sp, #0xc]
1000db3e: 380c         	subs	r0, #0xc
1000db40: 6804         	ldr	r4, [r0]
1000db42: 4620         	mov	r0, r4
1000db44: 9a01         	ldr	r2, [sp, #0x4]
1000db46: 4090         	lsls	r0, r2
1000db48: 9a02         	ldr	r2, [sp, #0x8]
1000db4a: 4310         	orrs	r0, r2
1000db4c: c501         	stm	r5!, {r0}
1000db4e: 429d         	cmp	r5, r3
1000db50: d2ad         	bhs	0x1000daae <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0xac> @ imm = #-0xa6
1000db52: 9800         	ldr	r0, [sp]
1000db54: 40c4         	lsrs	r4, r0
1000db56: 9803         	ldr	r0, [sp, #0xc]
1000db58: 3808         	subs	r0, #0x8
1000db5a: 6800         	ldr	r0, [r0]
1000db5c: 9002         	str	r0, [sp, #0x8]
1000db5e: 9a01         	ldr	r2, [sp, #0x4]
1000db60: 4090         	lsls	r0, r2
1000db62: 4320         	orrs	r0, r4
1000db64: c501         	stm	r5!, {r0}
1000db66: 429d         	cmp	r5, r3
1000db68: d2a1         	bhs	0x1000daae <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0xac> @ imm = #-0xbe
1000db6a: 9800         	ldr	r0, [sp]
1000db6c: 9a02         	ldr	r2, [sp, #0x8]
1000db6e: 40c2         	lsrs	r2, r0
1000db70: 9202         	str	r2, [sp, #0x8]
1000db72: 9803         	ldr	r0, [sp, #0xc]
1000db74: 1f00         	subs	r0, r0, #0x4
1000db76: 6804         	ldr	r4, [r0]
1000db78: 4620         	mov	r0, r4
1000db7a: 9a01         	ldr	r2, [sp, #0x4]
1000db7c: 4090         	lsls	r0, r2
1000db7e: 9a02         	ldr	r2, [sp, #0x8]
1000db80: 4310         	orrs	r0, r2
1000db82: c501         	stm	r5!, {r0}
1000db84: 429d         	cmp	r5, r3
1000db86: d292         	bhs	0x1000daae <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0xac> @ imm = #-0xdc
1000db88: 9800         	ldr	r0, [sp]
1000db8a: 40c4         	lsrs	r4, r0
1000db8c: 9803         	ldr	r0, [sp, #0xc]
1000db8e: 6800         	ldr	r0, [r0]
1000db90: 9002         	str	r0, [sp, #0x8]
1000db92: 9a01         	ldr	r2, [sp, #0x4]
1000db94: 4090         	lsls	r0, r2
1000db96: 4320         	orrs	r0, r4
1000db98: c501         	stm	r5!, {r0}
1000db9a: 9803         	ldr	r0, [sp, #0xc]
1000db9c: 3010         	adds	r0, #0x10
1000db9e: 9003         	str	r0, [sp, #0xc]
1000dba0: 429d         	cmp	r5, r3
1000dba2: d3c7         	blo	0x1000db34 <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0x132> @ imm = #-0x72
1000dba4: e783         	b	0x1000daae <compiler_builtins::mem::memcpy::hbd9514dbeced366c+0xac> @ imm = #-0xfa

1000dba6 <__aeabi_memcpy>:
1000dba6: b580         	push	{r7, lr}
1000dba8: af00         	add	r7, sp, #0x0
1000dbaa: f7ff ff2a    	bl	0x1000da02 <compiler_builtins::mem::memcpy::hbd9514dbeced366c> @ imm = #-0x1ac
1000dbae: bd80         	pop	{r7, pc}

1000dbb0 <HardFault_>:
1000dbb0: b580         	push	{r7, lr}
1000dbb2: af00         	add	r7, sp, #0x0
1000dbb4: e7ff         	b	0x1000dbb6 <HardFault_+0x6> @ imm = #-0x2
1000dbb6: e7fe         	b	0x1000dbb6 <HardFault_+0x6> @ imm = #-0x4
